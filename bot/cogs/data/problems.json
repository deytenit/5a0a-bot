{"status": "OK", "result": {"problems": [{"contestId": 1375, "index": "I", "name": "Cubic Lattice", "type": "PROGRAMMING", "points": 4000.0, "tags": ["geometry", "math", "matrices", "number theory"]}, {"contestId": 1375, "index": "H", "name": "Set Merging", "type": "PROGRAMMING", "points": 2750.0, "tags": ["constructive algorithms", "data structures", "divide and conquer"]}, {"contestId": 1375, "index": "G", "name": "Tree Modification", "type": "PROGRAMMING", "points": 2250.0, "tags": ["brute force", "constructive algorithms", "dfs and similar", "graphs", "trees"]}, {"contestId": 1375, "index": "F", "name": "Integer Game", "type": "PROGRAMMING", "points": 2000.0, "tags": ["constructive algorithms", "games", "interactive", "math"]}, {"contestId": 1375, "index": "E", "name": "Inversion SwapSort", "type": "PROGRAMMING", "points": 2000.0, "tags": ["constructive algorithms", "greedy", "math", "sortings"]}, {"contestId": 1375, "index": "D", "name": "Replace by MEX", "type": "PROGRAMMING", "points": 1750.0, "tags": ["brute force", "constructive algorithms", "sortings"]}, {"contestId": 1375, "index": "C", "name": "Element Extermination", "type": "PROGRAMMING", "points": 1500.0, "tags": ["constructive algorithms", "data structures", "greedy"]}, {"contestId": 1375, "index": "B", "name": "Neighbor Grid", "type": "PROGRAMMING", "points": 750.0, "tags": ["constructive algorithms", "greedy"]}, {"contestId": 1375, "index": "A", "name": "Sign Flipping", "type": "PROGRAMMING", "points": 500.0, "tags": ["constructive algorithms", "math", "meet-in-the-middle"]}, {"contestId": 1374, "index": "F", "name": "Cyclic Shifts Sorting", "type": "PROGRAMMING", "rating": 2400, "tags": ["brute force", "constructive algorithms", "implementation", "sortings"]}, {"contestId": 1374, "index": "E2", "name": "Reading Books (hard version)", "type": "PROGRAMMING", "rating": 2500, "tags": ["data structures", "greedy", "implementation", "sortings", "ternary search", "two pointers"]}, {"contestId": 1374, "index": "E1", "name": "Reading Books (easy version)", "type": "PROGRAMMING", "rating": 1600, "tags": ["data structures", "greedy", "sortings"]}, {"contestId": 1374, "index": "D", "name": "Zero Remainder Array", "type": "PROGRAMMING", "rating": 1400, "tags": ["math", "sortings", "two pointers"]}, {"contestId": 1374, "index": "C", "name": "Move Brackets", "type": "PROGRAMMING", "rating": 1000, "tags": ["greedy", "strings"]}, {"contestId": 1374, "index": "B", "name": "Multiply by 2, divide by 6", "type": "PROGRAMMING", "rating": 900, "tags": ["math"]}, {"contestId": 1374, "index": "A", "name": "Required Remainder", "type": "PROGRAMMING", "rating": 800, "tags": ["math"]}, {"contestId": 1373, "index": "G", "name": "Pawns", "type": "PROGRAMMING", "rating": 2600, "tags": ["data structures", "divide and conquer", "greedy"]}, {"contestId": 1373, "index": "F", "name": "Network Coverage", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "constructive algorithms", "data structures", "greedy"]}, {"contestId": 1373, "index": "E", "name": "Sum of Digits", "type": "PROGRAMMING", "rating": 2200, "tags": ["brute force", "constructive algorithms", "dp", "greedy"]}, {"contestId": 1373, "index": "D", "name": "Maximum Sum on Even Positions", "type": "PROGRAMMING", "rating": 1600, "tags": ["divide and conquer", "dp", "greedy", "implementation"]}, {"contestId": 1373, "index": "C", "name": "Pluses and Minuses", "type": "PROGRAMMING", "rating": 1300, "tags": ["math"]}, {"contestId": 1373, "index": "B", "name": "01 Game", "type": "PROGRAMMING", "rating": 900, "tags": ["games"]}, {"contestId": 1373, "index": "A", "name": "Donut Shops", "type": "PROGRAMMING", "rating": 1000, "tags": ["greedy", "implementation", "math"]}, {"contestId": 1371, "index": "F", "name": "Raging Thunder", "type": "PROGRAMMING", "points": 3000.0, "tags": ["data structures", "divide and conquer", "implementation"]}, {"contestId": 1371, "index": "E2", "name": "Asterism (Hard Version)", "type": "PROGRAMMING", "points": 1250.0, "tags": ["binary search", "combinatorics", "dp", "math", "number theory", "sortings"]}, {"contestId": 1371, "index": "E1", "name": "Asterism (Easy Version)", "type": "PROGRAMMING", "points": 1500.0, "tags": ["binary search", "brute force", "combinatorics", "math", "number theory", "sortings"]}, {"contestId": 1371, "index": "D", "name": "Grid-00100", "type": "PROGRAMMING", "points": 1500.0, "tags": ["constructive algorithms", "greedy", "implementation"]}, {"contestId": 1371, "index": "C", "name": "A Cookie for You", "type": "PROGRAMMING", "points": 1250.0, "tags": ["greedy", "implementation", "math"]}, {"contestId": 1371, "index": "B", "name": "Magical Calendar", "type": "PROGRAMMING", "points": 1000.0, "tags": ["math"]}, {"contestId": 1371, "index": "A", "name": "Magical Sticks", "type": "PROGRAMMING", "points": 500.0, "tags": ["math"]}, {"contestId": 1370, "index": "F2", "name": "The Hidden Pair (Hard Version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 2700, "tags": ["binary search", "dfs and similar", "graphs", "interactive", "shortest paths", "trees"]}, {"contestId": 1370, "index": "F1", "name": "The Hidden Pair (Easy Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["binary search", "dfs and similar", "graphs", "interactive", "shortest paths", "trees"]}, {"contestId": 1370, "index": "E", "name": "Binary Subsequence Rotation", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["binary search", "constructive algorithms", "data structures", "greedy"]}, {"contestId": 1370, "index": "D", "name": "Odd-Even Subsequence", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["binary search", "dp", "dsu", "greedy", "implementation"]}, {"contestId": 1370, "index": "C", "name": "Number Game", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["games", "math", "number theory"]}, {"contestId": 1370, "index": "B", "name": "GCD Compression", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms", "math", "number theory"]}, {"contestId": 1370, "index": "A", "name": "Maximum GCD", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "implementation", "math", "number theory"]}, {"contestId": 1369, "index": "F", "name": "BareLee", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["dfs and similar", "dp", "games"]}, {"contestId": 1369, "index": "E", "name": "DeadLee", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures", "dfs and similar", "greedy", "implementation", "sortings"]}, {"contestId": 1369, "index": "D", "name": "TediousLee", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["dp", "graphs", "greedy", "math", "trees"]}, {"contestId": 1369, "index": "C", "name": "RationalLee", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["greedy", "math", "sortings", "two pointers"]}, {"contestId": 1369, "index": "B", "name": "AccurateLee", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["greedy", "implementation", "strings"]}, {"contestId": 1369, "index": "A", "name": "FashionabLee", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["geometry", "math"]}, {"contestId": 1368, "index": "H2", "name": "Breadboard Capacity (hard version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 3500, "tags": []}, {"contestId": 1368, "index": "H1", "name": "Breadboard Capacity (easy version)", "type": "PROGRAMMING", "points": 3000.0, "rating": 3300, "tags": ["dp", "flows", "greedy"]}, {"contestId": 1368, "index": "G", "name": "Shifting Dominoes", "type": "PROGRAMMING", "points": 3500.0, "rating": 3200, "tags": ["data structures", "geometry", "graphs", "trees"]}, {"contestId": 1368, "index": "F", "name": "Lamps on a Circle", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["games", "implementation", "interactive", "math"]}, {"contestId": 1368, "index": "E", "name": "Ski Accidents", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["constructive algorithms", "graphs", "greedy"]}, {"contestId": 1368, "index": "D", "name": "AND, OR and square sum", "type": "PROGRAMMING", "points": 1750.0, "rating": 1700, "tags": ["bitmasks", "greedy", "math"]}, {"contestId": 1368, "index": "C", "name": "Even Picture", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["constructive algorithms"]}, {"contestId": 1368, "index": "B", "name": "Codeforces Subsequences", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["brute force", "constructive algorithms", "greedy", "math", "strings"]}, {"contestId": 1368, "index": "A", "name": "C+=", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "greedy", "implementation", "math"]}, {"contestId": 1367, "index": "F2", "name": "Flying Sort (Hard Version)", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "data structures", "dp", "greedy", "sortings", "two pointers"]}, {"contestId": 1367, "index": "F1", "name": "Flying Sort (Easy Version)", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp", "greedy", "two pointers"]}, {"contestId": 1367, "index": "E", "name": "Necklace Assembly", "type": "PROGRAMMING", "rating": 1900, "tags": ["brute force", "dfs and similar", "dp", "graphs", "greedy", "number theory"]}, {"contestId": 1367, "index": "D", "name": "Task On The Board", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "greedy", "implementation", "sortings"]}, {"contestId": 1367, "index": "C", "name": "Social Distance", "type": "PROGRAMMING", "rating": 1300, "tags": ["constructive algorithms", "greedy", "math"]}, {"contestId": 1367, "index": "B", "name": "Even Array", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "math"]}, {"contestId": 1367, "index": "A", "name": "Short Substrings", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "strings"]}, {"contestId": 1366, "index": "G", "name": "Construct the String", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "dp", "strings"]}, {"contestId": 1366, "index": "F", "name": "Jog Around The Graph", "type": "PROGRAMMING", "rating": 2700, "tags": ["binary search", "dp", "geometry", "graphs"]}, {"contestId": 1366, "index": "E", "name": "Two Arrays", "type": "PROGRAMMING", "rating": 2100, "tags": ["binary search", "brute force", "combinatorics", "constructive algorithms", "dp", "two pointers"]}, {"contestId": 1366, "index": "D", "name": "Two Divisors", "type": "PROGRAMMING", "rating": 2000, "tags": ["constructive algorithms", "math", "number theory"]}, {"contestId": 1366, "index": "C", "name": "Palindromic Paths", "type": "PROGRAMMING", "rating": 1500, "tags": ["greedy", "math"]}, {"contestId": 1366, "index": "B", "name": "Shuffle", "type": "PROGRAMMING", "rating": 1300, "tags": ["math", "two pointers"]}, {"contestId": 1366, "index": "A", "name": "Shovels and Swords", "type": "PROGRAMMING", "rating": 1100, "tags": ["binary search", "greedy", "math"]}, {"contestId": 1365, "index": "G", "name": "Secure Password", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["bitmasks", "combinatorics", "constructive algorithms", "interactive", "math"]}, {"contestId": 1365, "index": "F", "name": "Swaps Again", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["constructive algorithms", "implementation", "sortings"]}, {"contestId": 1365, "index": "E", "name": "Maximum Subsequence Value", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["brute force", "constructive algorithms"]}, {"contestId": 1365, "index": "D", "name": "Solve The Maze", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["constructive algorithms", "dfs and similar", "dsu", "graphs", "greedy", "implementation", "shortest paths"]}, {"contestId": 1365, "index": "C", "name": "Rotation Matching", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["constructive algorithms", "data structures", "greedy", "implementation"]}, {"contestId": 1365, "index": "B", "name": "Trouble Sort", "type": "PROGRAMMING", "points": 750.0, "rating": 1300, "tags": ["constructive algorithms", "implementation"]}, {"contestId": 1365, "index": "A", "name": "Matrix Game", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["games", "greedy", "implementation"]}, {"contestId": 1364, "index": "E", "name": "X-OR", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["bitmasks", "constructive algorithms", "divide and conquer", "interactive", "probabilities"]}, {"contestId": 1364, "index": "D", "name": "Ehab's Last Corollary", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy", "implementation", "trees"]}, {"contestId": 1364, "index": "C", "name": "Ehab and Prefix MEXs", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["brute force", "constructive algorithms", "greedy"]}, {"contestId": 1364, "index": "B", "name": "Most socially-distanced subsequence", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["greedy", "two pointers"]}, {"contestId": 1364, "index": "A", "name": "XXXXX", "type": "PROGRAMMING", "points": 750.0, "rating": 1200, "tags": ["brute force", "data structures", "number theory", "two pointers"]}, {"contestId": 1363, "index": "F", "name": "Rotating Substrings", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["dp", "strings"]}, {"contestId": 1363, "index": "E", "name": "Tree Shuffling", "type": "PROGRAMMING", "points": 2250.0, "rating": 2000, "tags": ["dfs and similar", "dp", "greedy", "trees"]}, {"contestId": 1363, "index": "D", "name": "Guess The Maximums", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["binary search", "implementation", "interactive", "math"]}, {"contestId": 1363, "index": "C", "name": "Game On Leaves", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["games", "trees"]}, {"contestId": 1363, "index": "B", "name": "Subsequence Hate", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["implementation", "strings"]}, {"contestId": 1363, "index": "A", "name": "Odd Selection", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["brute force", "implementation", "math"]}, {"contestId": 1362, "index": "C", "name": "Johnny and Another Rating Drop", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["bitmasks", "greedy", "math"]}, {"contestId": 1362, "index": "B", "name": "Johnny and His Hobbies", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["bitmasks", "brute force"]}, {"contestId": 1362, "index": "A", "name": "Johnny and Ancient Computer", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"]}, {"contestId": 1361, "index": "F", "name": "Johnny and New Toy", "type": "PROGRAMMING", "points": 3500.0, "rating": 3300, "tags": ["data structures", "implementation", "math"]}, {"contestId": 1361, "index": "E", "name": "James and the Chase", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["dfs and similar", "graphs", "probabilities", "trees"]}, {"contestId": 1361, "index": "D", "name": "Johnny and James", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["greedy", "implementation", "math", "trees"]}, {"contestId": 1361, "index": "C", "name": "Johnny and Megan's Necklace", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["binary search", "bitmasks", "constructive algorithms", "dfs and similar", "dsu", "graphs"]}, {"contestId": 1361, "index": "B", "name": "Johnny and Grandmaster", "type": "PROGRAMMING", "points": 1250.0, "rating": 1900, "tags": ["greedy", "implementation", "math", "sortings"]}, {"contestId": 1361, "index": "A", "name": "Johnny and Contribution", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["constructive algorithms", "graphs", "greedy", "sortings"]}, {"contestId": 1360, "index": "H", "name": "Binary Median", "type": "PROGRAMMING", "rating": 2100, "tags": ["binary search", "bitmasks", "brute force", "constructive algorithms"]}, {"contestId": 1360, "index": "G", "name": "A/B Matrix", "type": "PROGRAMMING", "rating": 1900, "tags": ["constructive algorithms", "greedy", "math"]}, {"contestId": 1360, "index": "F", "name": "Spy-string", "type": "PROGRAMMING", "rating": 1700, "tags": ["bitmasks", "brute force", "constructive algorithms", "dp", "hashing", "strings"]}, {"contestId": 1360, "index": "E", "name": "Polygon", "type": "PROGRAMMING", "rating": 1300, "tags": ["dp", "graphs", "implementation", "shortest paths"]}, {"contestId": 1360, "index": "D", "name": "Buying Shovels", "type": "PROGRAMMING", "rating": 1300, "tags": ["math", "number theory"]}, {"contestId": 1360, "index": "C", "name": "Similar Pairs", "type": "PROGRAMMING", "rating": 1100, "tags": ["constructive algorithms", "graph matchings", "greedy", "sortings"]}, {"contestId": 1360, "index": "B", "name": "Honest Coach", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "sortings"]}, {"contestId": 1360, "index": "A", "name": "Minimal Square", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "math"]}, {"contestId": 1359, "index": "F", "name": "RC Kaboom Show", "type": "PROGRAMMING", "rating": 2900, "tags": ["binary search", "brute force", "data structures", "geometry", "math"]}, {"contestId": 1359, "index": "E", "name": "Modular Stability", "type": "PROGRAMMING", "rating": 2000, "tags": ["combinatorics", "math", "number theory"]}, {"contestId": 1359, "index": "D", "name": "Yet Another Yet Another Task", "type": "PROGRAMMING", "rating": 2000, "tags": ["data structures", "dp", "implementation", "two pointers"]}, {"contestId": 1359, "index": "C", "name": "Mixing Water", "type": "PROGRAMMING", "rating": 1700, "tags": ["binary search", "math"]}, {"contestId": 1359, "index": "B", "name": "New Theatre Square", "type": "PROGRAMMING", "rating": 1000, "tags": ["brute force", "dp", "greedy", "implementation", "two pointers"]}, {"contestId": 1359, "index": "A", "name": "Berland Poker", "type": "PROGRAMMING", "rating": 1000, "tags": ["brute force", "greedy", "math"]}, {"contestId": 1358, "index": "F", "name": "Tasty Cookie", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["binary search", "constructive algorithms", "greedy", "implementation"]}, {"contestId": 1358, "index": "E", "name": "Are You Fired?", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["constructive algorithms", "data structures", "greedy", "implementation"]}, {"contestId": 1358, "index": "D", "name": "The Best Vacation", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["binary search", "brute force", "greedy", "implementation", "two pointers"]}, {"contestId": 1358, "index": "C", "name": "Celex Update", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["math"]}, {"contestId": 1358, "index": "B", "name": "Maria Breaks the Self-isolation", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["greedy", "sortings"]}, {"contestId": 1358, "index": "A", "name": "Park Lighting", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "math"]}, {"contestId": 1357, "index": "E2", "name": "Root of quantum Fourier transform", "type": "PROGRAMMING", "tags": []}, {"contestId": 1357, "index": "E1", "name": "Power of quantum Fourier transform", "type": "PROGRAMMING", "tags": []}, {"contestId": 1357, "index": "D5", "name": "Quantum Classification - Dataset 7", "type": "PROGRAMMING", "tags": []}, {"contestId": 1357, "index": "D4", "name": "Quantum Classification - Dataset 6", "type": "PROGRAMMING", "tags": []}, {"contestId": 1357, "index": "D3", "name": "Quantum Classification - Dataset 5", "type": "PROGRAMMING", "tags": []}, {"contestId": 1357, "index": "D2", "name": "Quantum Classification - Dataset 4", "type": "PROGRAMMING", "tags": []}, {"contestId": 1357, "index": "D1", "name": "Quantum Classification - Dataset 3", "type": "PROGRAMMING", "tags": []}, {"contestId": 1357, "index": "C2", "name": "Prepare superposition of basis states with the same parity", "type": "PROGRAMMING", "tags": []}, {"contestId": 1357, "index": "C1", "name": "Prepare superposition of basis states with 0s", "type": "PROGRAMMING", "tags": []}, {"contestId": 1357, "index": "B2", "name": "\"Is the number divisible by 3?\" oracle", "type": "PROGRAMMING", "tags": []}, {"contestId": 1357, "index": "B1", "name": "\"Is the bit string balanced?\" oracle", "type": "PROGRAMMING", "tags": []}, {"contestId": 1357, "index": "A7", "name": "Distinguish Y, XZ, -Y and -XZ", "type": "PROGRAMMING", "tags": []}, {"contestId": 1357, "index": "A6", "name": "Distinguish four Pauli gates", "type": "PROGRAMMING", "tags": []}, {"contestId": 1357, "index": "A5", "name": "Distinguish Rz(\u03b8) from Ry(\u03b8)", "type": "PROGRAMMING", "tags": []}, {"contestId": 1357, "index": "A4", "name": "Distinguish Rz from R1", "type": "PROGRAMMING", "tags": []}, {"contestId": 1357, "index": "A3", "name": "Distinguish H from X", "type": "PROGRAMMING", "tags": []}, {"contestId": 1357, "index": "A2", "name": "Distinguish I, CNOTs and SWAP", "type": "PROGRAMMING", "tags": []}, {"contestId": 1357, "index": "A1", "name": "Figure out direction of CNOT", "type": "PROGRAMMING", "tags": []}, {"contestId": 1356, "index": "D2", "name": "Quantum Classification - 2", "type": "PROGRAMMING", "tags": ["*special"]}, {"contestId": 1356, "index": "D1", "name": "Quantum Classification - 1", "type": "PROGRAMMING", "tags": ["*special"]}, {"contestId": 1356, "index": "C", "name": "Prepare state |01\u27e9 + |10\u27e9 + |11\u27e9", "type": "PROGRAMMING", "tags": ["*special"]}, {"contestId": 1356, "index": "B2", "name": "Decrement", "type": "PROGRAMMING", "tags": ["*special"]}, {"contestId": 1356, "index": "B1", "name": "Increment", "type": "PROGRAMMING", "tags": ["*special"]}, {"contestId": 1356, "index": "A5", "name": "Distinguish Z from -Z", "type": "PROGRAMMING", "tags": ["*special"]}, {"contestId": 1356, "index": "A4", "name": "Distinguish I \u2297 X from CNOT", "type": "PROGRAMMING", "tags": ["*special"]}, {"contestId": 1356, "index": "A3", "name": "Distinguish Z from S", "type": "PROGRAMMING", "tags": ["*special"]}, {"contestId": 1356, "index": "A2", "name": "Distinguish I from Z", "type": "PROGRAMMING", "tags": ["*special"]}, {"contestId": 1356, "index": "A1", "name": "Distinguish I from X", "type": "PROGRAMMING", "tags": ["*special"]}, {"contestId": 1355, "index": "F", "name": "Guess Divisors Count", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["constructive algorithms", "interactive", "number theory"]}, {"contestId": 1355, "index": "E", "name": "Restorer Distance", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["binary search", "greedy", "math", "sortings", "ternary search"]}, {"contestId": 1355, "index": "D", "name": "Game With Array", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["constructive algorithms", "math"]}, {"contestId": 1355, "index": "C", "name": "Count Triangles", "type": "PROGRAMMING", "points": 1250.0, "rating": 1800, "tags": ["binary search", "implementation", "math", "two pointers"]}, {"contestId": 1355, "index": "B", "name": "Young Explorers", "type": "PROGRAMMING", "points": 750.0, "rating": 1200, "tags": ["dp", "greedy", "sortings"]}, {"contestId": 1355, "index": "A", "name": "Sequence with Digits", "type": "PROGRAMMING", "points": 750.0, "rating": 1200, "tags": ["brute force", "implementation", "math"]}, {"contestId": 1354, "index": "G", "name": "Find a Gift", "type": "PROGRAMMING", "rating": 2600, "tags": ["binary search", "interactive", "probabilities"]}, {"contestId": 1354, "index": "F", "name": "Summoning Minions", "type": "PROGRAMMING", "rating": 2500, "tags": ["constructive algorithms", "dp", "flows", "graph matchings", "greedy", "sortings"]}, {"contestId": 1354, "index": "E", "name": "Graph Coloring", "type": "PROGRAMMING", "rating": 2100, "tags": ["dfs and similar", "dp", "graphs"]}, {"contestId": 1354, "index": "D", "name": "Multiset", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "data structures"]}, {"contestId": 1354, "index": "C2", "name": "Not So Simple Polygon Embedding", "type": "PROGRAMMING", "rating": 2000, "tags": ["binary search", "brute force", "geometry", "math"]}, {"contestId": 1354, "index": "C1", "name": "Simple Polygon Embedding", "type": "PROGRAMMING", "rating": 1400, "tags": ["binary search", "geometry", "math", "ternary search"]}, {"contestId": 1354, "index": "B", "name": "Ternary String", "type": "PROGRAMMING", "rating": 1200, "tags": ["binary search", "dp", "implementation", "two pointers"]}, {"contestId": 1354, "index": "A", "name": "Alarm Clock", "type": "PROGRAMMING", "rating": 900, "tags": ["math"]}, {"contestId": 1353, "index": "F", "name": "Decreasing Heights", "type": "PROGRAMMING", "rating": 2200, "tags": ["brute force", "dp"]}, {"contestId": 1353, "index": "E", "name": "K-periodic Garland", "type": "PROGRAMMING", "rating": 1900, "tags": ["brute force", "dp", "greedy"]}, {"contestId": 1353, "index": "D", "name": "Constructing the Array", "type": "PROGRAMMING", "rating": 1600, "tags": ["constructive algorithms", "data structures", "sortings"]}, {"contestId": 1353, "index": "C", "name": "Board Moves", "type": "PROGRAMMING", "rating": 1000, "tags": ["math"]}, {"contestId": 1353, "index": "B", "name": "Two Arrays And Swaps", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "sortings"]}, {"contestId": 1353, "index": "A", "name": "Most Unstable Array", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms", "greedy", "math"]}, {"contestId": 1352, "index": "G", "name": "Special Permutation", "type": "PROGRAMMING", "rating": 1600, "tags": ["constructive algorithms"]}, {"contestId": 1352, "index": "F", "name": "Binary String Reconstruction", "type": "PROGRAMMING", "rating": 1500, "tags": ["constructive algorithms", "dfs and similar", "math"]}, {"contestId": 1352, "index": "E", "name": "Special Elements", "type": "PROGRAMMING", "rating": 1500, "tags": ["brute force", "implementation", "two pointers"]}, {"contestId": 1352, "index": "D", "name": "Alice, Bob and Candies", "type": "PROGRAMMING", "rating": 1300, "tags": ["implementation"]}, {"contestId": 1352, "index": "C", "name": "K-th Not Divisible by n", "type": "PROGRAMMING", "rating": 1200, "tags": ["binary search", "math"]}, {"contestId": 1352, "index": "B", "name": "Same Parity Summands", "type": "PROGRAMMING", "rating": 1200, "tags": ["constructive algorithms", "math"]}, {"contestId": 1352, "index": "A", "name": "Sum of Round Numbers", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "math"]}, {"contestId": 1351, "index": "C", "name": "Skier", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["data structures", "implementation"]}, {"contestId": 1351, "index": "B", "name": "Square?", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["brute force", "implementation", "math"]}, {"contestId": 1351, "index": "A", "name": "A+B (Trial Problem)", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 1350, "index": "B", "name": "Orac and Models", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["dp", "math", "number theory"]}, {"contestId": 1350, "index": "A", "name": "Orac and Factors", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["math"]}, {"contestId": 1349, "index": "F2", "name": "Slime and Sequences (Hard Version)", "type": "PROGRAMMING", "points": 1750.0, "rating": 3500, "tags": ["dp", "fft", "math"]}, {"contestId": 1349, "index": "F1", "name": "Slime and Sequences (Easy Version)", "type": "PROGRAMMING", "points": 1750.0, "rating": 3100, "tags": ["dp", "fft", "math"]}, {"contestId": 1349, "index": "E", "name": "Slime and Hats", "type": "PROGRAMMING", "points": 2500.0, "rating": 3500, "tags": ["constructive algorithms", "dp", "greedy"]}, {"contestId": 1349, "index": "D", "name": "Slime and Biscuits", "type": "PROGRAMMING", "points": 2000.0, "rating": 3200, "tags": ["math", "probabilities"]}, {"contestId": 1349, "index": "C", "name": "Orac and Game of Life", "type": "PROGRAMMING", "points": 1250.0, "rating": 2000, "tags": ["dfs and similar", "graphs", "implementation", "shortest paths"]}, {"contestId": 1349, "index": "B", "name": "Orac and Medians", "type": "PROGRAMMING", "points": 1250.0, "rating": 2000, "tags": ["constructive algorithms", "greedy", "math"]}, {"contestId": 1349, "index": "A", "name": "Orac and LCM", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["data structures", "math", "number theory"]}, {"contestId": 1348, "index": "F", "name": "Phoenix and Memory", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["data structures", "dfs and similar", "graphs", "greedy"]}, {"contestId": 1348, "index": "E", "name": "Phoenix and Berries", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["brute force", "dp", "greedy", "math"]}, {"contestId": 1348, "index": "D", "name": "Phoenix and Science", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["binary search", "constructive algorithms", "greedy", "implementation", "math"]}, {"contestId": 1348, "index": "C", "name": "Phoenix and Distribution", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["constructive algorithms", "greedy", "sortings", "strings"]}, {"contestId": 1348, "index": "B", "name": "Phoenix and Beauty", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["constructive algorithms", "data structures", "greedy", "sortings"]}, {"contestId": 1348, "index": "A", "name": "Phoenix and Balance", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "math"]}, {"contestId": 1346, "index": "I", "name": "Pac-Man 2.0", "type": "PROGRAMMING", "rating": 2900, "tags": ["*special", "dp"]}, {"contestId": 1346, "index": "H", "name": "Game with Segments", "type": "PROGRAMMING", "rating": 2700, "tags": ["*special", "data structures", "games"]}, {"contestId": 1346, "index": "G", "name": "Two IP Cameras", "type": "PROGRAMMING", "rating": 2300, "tags": ["*special", "math", "number theory"]}, {"contestId": 1346, "index": "F", "name": "Dune II: Battle For Arrakis", "type": "PROGRAMMING", "rating": 2000, "tags": ["*special", "data structures", "greedy", "math"]}, {"contestId": 1346, "index": "E", "name": "Magic Tricks", "type": "PROGRAMMING", "rating": 1700, "tags": ["*special", "dp", "graphs"]}, {"contestId": 1346, "index": "D", "name": "Constructing the Dungeon", "type": "PROGRAMMING", "rating": 1600, "tags": ["*special", "graphs", "greedy"]}, {"contestId": 1346, "index": "C", "name": "Spring Cleaning", "type": "PROGRAMMING", "rating": 1600, "tags": ["*special", "greedy", "sortings"]}, {"contestId": 1346, "index": "B", "name": "Boot Camp", "type": "PROGRAMMING", "rating": 1400, "tags": ["*special", "greedy"]}, {"contestId": 1346, "index": "A", "name": "Color Revolution", "type": "PROGRAMMING", "rating": 1000, "tags": ["*special", "math"]}, {"contestId": 1345, "index": "B", "name": "Card Constructions", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["binary search", "brute force", "dp", "math"]}, {"contestId": 1345, "index": "A", "name": "Puzzle Pieces", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math"]}, {"contestId": 1344, "index": "F", "name": "Piet's Palette", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["matrices"]}, {"contestId": 1344, "index": "E", "name": "Train Tracks", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["data structures", "trees"]}, {"contestId": 1344, "index": "D", "name": "R\u00e9sum\u00e9 Review", "type": "PROGRAMMING", "points": 1750.0, "rating": 2700, "tags": ["binary search", "greedy", "math"]}, {"contestId": 1344, "index": "C", "name": "Quantifier Question", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["dfs and similar", "dp", "graphs", "math"]}, {"contestId": 1344, "index": "B", "name": "Monopole Magnets", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["constructive algorithms", "dfs and similar", "dsu", "graphs"]}, {"contestId": 1344, "index": "A", "name": "Hilbert's Hotel", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["math", "number theory", "sortings"]}, {"contestId": 1343, "index": "F", "name": "Restore the Permutation by Sorted Segments", "type": "PROGRAMMING", "rating": 2400, "tags": ["brute force", "constructive algorithms", "data structures", "greedy", "implementation"]}, {"contestId": 1343, "index": "E", "name": "Weights Distributing", "type": "PROGRAMMING", "rating": 2100, "tags": ["brute force", "graphs", "greedy", "shortest paths", "sortings"]}, {"contestId": 1343, "index": "D", "name": "Constant Palindrome Sum", "type": "PROGRAMMING", "rating": 1700, "tags": ["brute force", "data structures", "greedy", "two pointers"]}, {"contestId": 1343, "index": "C", "name": "Alternating Subsequence", "type": "PROGRAMMING", "rating": 1200, "tags": ["dp", "greedy", "two pointers"]}, {"contestId": 1343, "index": "B", "name": "Balanced Array", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms", "math"]}, {"contestId": 1343, "index": "A", "name": "Candies", "type": "PROGRAMMING", "rating": 900, "tags": ["brute force", "math"]}, {"contestId": 1342, "index": "F", "name": "Make It Ascending", "type": "PROGRAMMING", "rating": 3000, "tags": ["bitmasks", "brute force", "dp"]}, {"contestId": 1342, "index": "E", "name": "Placing Rooks", "type": "PROGRAMMING", "rating": 2300, "tags": ["combinatorics", "fft", "math"]}, {"contestId": 1342, "index": "D", "name": "Multiple Testcases", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "constructive algorithms", "data structures", "greedy", "sortings", "two pointers"]}, {"contestId": 1342, "index": "C", "name": "Yet Another Counting Problem", "type": "PROGRAMMING", "rating": 1600, "tags": ["math", "number theory"]}, {"contestId": 1342, "index": "B", "name": "Binary Period", "type": "PROGRAMMING", "rating": 1100, "tags": ["constructive algorithms", "strings"]}, {"contestId": 1342, "index": "A", "name": "Road To Zero", "type": "PROGRAMMING", "rating": 1000, "tags": ["greedy", "math"]}, {"contestId": 1341, "index": "B", "name": "Nastya and Door", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["greedy", "implementation"]}, {"contestId": 1341, "index": "A", "name": "Nastya and Rice", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["math"]}, {"contestId": 1340, "index": "F", "name": "Nastya and CBS", "type": "PROGRAMMING", "points": 3000.0, "rating": 3300, "tags": ["brute force", "data structures", "hashing"]}, {"contestId": 1340, "index": "E", "name": "Nastya and Bees", "type": "PROGRAMMING", "points": 2250.0, "rating": 3000, "tags": ["graphs", "interactive", "probabilities"]}, {"contestId": 1340, "index": "D", "name": "Nastya and Time Machine", "type": "PROGRAMMING", "points": 1750.0, "rating": 2600, "tags": ["constructive algorithms", "dfs and similar", "graphs", "trees"]}, {"contestId": 1340, "index": "C", "name": "Nastya and Unexpected Guest", "type": "PROGRAMMING", "points": 1250.0, "rating": 2400, "tags": ["dfs and similar", "dp", "graphs", "shortest paths"]}, {"contestId": 1340, "index": "B", "name": "Nastya and Scoreboard", "type": "PROGRAMMING", "points": 750.0, "rating": 1700, "tags": ["bitmasks", "dp", "graphs", "greedy"]}, {"contestId": 1340, "index": "A", "name": "Nastya and Strange Generator", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["brute force", "data structures", "greedy", "implementation"]}, {"contestId": 1339, "index": "B", "name": "Sorted Adjacent Differences", "type": "PROGRAMMING", "points": 750.0, "rating": 1200, "tags": ["constructive algorithms", "sortings"]}, {"contestId": 1339, "index": "A", "name": "Filling Diamonds", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["brute force", "dp", "implementation", "math"]}, {"contestId": 1338, "index": "E", "name": "JYPnation", "type": "PROGRAMMING", "points": 2750.0, "rating": 3500, "tags": ["graphs"]}, {"contestId": 1338, "index": "D", "name": "Nested Rubber Bands", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["constructive algorithms", "dfs and similar", "dp", "math", "trees"]}, {"contestId": 1338, "index": "C", "name": "Perfect Triples", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["bitmasks", "brute force", "constructive algorithms", "divide and conquer", "math"]}, {"contestId": 1338, "index": "B", "name": "Edge Weight Assignment", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["bitmasks", "constructive algorithms", "dfs and similar", "greedy", "math", "trees"]}, {"contestId": 1338, "index": "A", "name": "Powered Addition", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["greedy", "math"]}, {"contestId": 1337, "index": "B", "name": "Kana and Dragon Quest game", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["greedy", "implementation", "math"]}, {"contestId": 1337, "index": "A", "name": "Ichihime and Triangle", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "math"]}, {"contestId": 1336, "index": "F", "name": "Journey", "type": "PROGRAMMING", "points": 3250.0, "rating": 3500, "tags": ["data structures", "divide and conquer", "graphs", "trees"]}, {"contestId": 1336, "index": "E2", "name": "Chiori and Doll Picking (hard version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 3500, "tags": ["bitmasks", "brute force", "combinatorics", "math"]}, {"contestId": 1336, "index": "E1", "name": "Chiori and Doll Picking (easy version)", "type": "PROGRAMMING", "points": 1750.0, "rating": 2700, "tags": ["bitmasks", "brute force", "combinatorics", "math"]}, {"contestId": 1336, "index": "D", "name": "Yui and Mahjong Set", "type": "PROGRAMMING", "points": 2250.0, "rating": 3200, "tags": ["constructive algorithms", "interactive"]}, {"contestId": 1336, "index": "C", "name": "Kaavi and Magic Spell", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["dp", "strings"]}, {"contestId": 1336, "index": "B", "name": "Xenia and Colorful Gems", "type": "PROGRAMMING", "points": 750.0, "rating": 1700, "tags": ["binary search", "greedy", "math", "sortings", "two pointers"]}, {"contestId": 1336, "index": "A", "name": "Linova and Kingdom", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["dfs and similar", "dp", "greedy", "sortings", "trees"]}, {"contestId": 1335, "index": "F", "name": "Robots on a Grid", "type": "PROGRAMMING", "rating": 2200, "tags": ["data structures", "dfs and similar", "dsu", "graphs", "greedy", "matrices"]}, {"contestId": 1335, "index": "E2", "name": "Three Blocks Palindrome (hard version)", "type": "PROGRAMMING", "rating": 1800, "tags": ["brute force", "data structures", "dp", "two pointers"]}, {"contestId": 1335, "index": "E1", "name": "Three Blocks Palindrome (easy version)", "type": "PROGRAMMING", "rating": 1700, "tags": ["binary search", "brute force", "data structures", "dp", "two pointers"]}, {"contestId": 1335, "index": "D", "name": "Anti-Sudoku", "type": "PROGRAMMING", "rating": 1300, "tags": ["constructive algorithms", "implementation"]}, {"contestId": 1335, "index": "C", "name": "Two Teams Composing", "type": "PROGRAMMING", "rating": 1100, "tags": ["binary search", "greedy", "implementation", "sortings"]}, {"contestId": 1335, "index": "B", "name": "Construct the String", "type": "PROGRAMMING", "rating": 900, "tags": ["constructive algorithms"]}, {"contestId": 1335, "index": "A", "name": "Candies and Two Sisters", "type": "PROGRAMMING", "rating": 800, "tags": ["math"]}, {"contestId": 1334, "index": "G", "name": "Substring Search", "type": "PROGRAMMING", "rating": 2900, "tags": ["bitmasks", "brute force", "fft"]}, {"contestId": 1334, "index": "F", "name": "Strange Function", "type": "PROGRAMMING", "rating": 2500, "tags": ["binary search", "data structures", "dp", "greedy"]}, {"contestId": 1334, "index": "E", "name": "Divisor Paths", "type": "PROGRAMMING", "rating": 2200, "tags": ["combinatorics", "graphs", "greedy", "math", "number theory"]}, {"contestId": 1334, "index": "D", "name": "Minimum Euler Cycle", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "graphs", "greedy", "implementation"]}, {"contestId": 1334, "index": "C", "name": "Circle of Monsters", "type": "PROGRAMMING", "rating": 1600, "tags": ["brute force", "constructive algorithms", "greedy", "math"]}, {"contestId": 1334, "index": "B", "name": "Middle Class", "type": "PROGRAMMING", "rating": 1100, "tags": ["greedy", "sortings"]}, {"contestId": 1334, "index": "A", "name": "Level Statistics", "type": "PROGRAMMING", "rating": 1200, "tags": ["implementation", "math"]}, {"contestId": 1333, "index": "F", "name": "Kate and imperfection", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["greedy", "implementation", "math", "number theory", "sortings", "two pointers"]}, {"contestId": 1333, "index": "E", "name": "Road to 1600", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["brute force", "constructive algorithms"]}, {"contestId": 1333, "index": "D", "name": "Challenges in school \u211641", "type": "PROGRAMMING", "points": 1750.0, "rating": 2100, "tags": ["brute force", "constructive algorithms", "games", "graphs", "greedy", "implementation", "sortings"]}, {"contestId": 1333, "index": "C", "name": "Eugene and an array", "type": "PROGRAMMING", "points": 1250.0, "rating": 1700, "tags": ["binary search", "data structures", "implementation", "two pointers"]}, {"contestId": 1333, "index": "B", "name": "Kind Anton", "type": "PROGRAMMING", "points": 750.0, "rating": 1100, "tags": ["greedy", "implementation"]}, {"contestId": 1333, "index": "A", "name": "Little Artem", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["constructive algorithms"]}, {"contestId": 1332, "index": "G", "name": "No Monotone Triples", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["data structures"]}, {"contestId": 1332, "index": "F", "name": "Independent Set", "type": "PROGRAMMING", "points": 2250.0, "rating": 2500, "tags": ["dfs and similar", "dp", "trees"]}, {"contestId": 1332, "index": "E", "name": "Height All the Same", "type": "PROGRAMMING", "points": 1750.0, "rating": 2100, "tags": ["combinatorics", "constructive algorithms", "math", "matrices"]}, {"contestId": 1332, "index": "D", "name": "Walk on Matrix", "type": "PROGRAMMING", "points": 1250.0, "rating": 1700, "tags": ["bitmasks", "constructive algorithms", "math"]}, {"contestId": 1332, "index": "C", "name": "K-Complete Word", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["dfs and similar", "dsu", "greedy", "implementation", "strings"]}, {"contestId": 1332, "index": "B", "name": "Composite Coloring", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["brute force", "constructive algorithms", "greedy", "math", "number theory"]}, {"contestId": 1332, "index": "A", "name": "Exercising Walk", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["greedy", "implementation", "math"]}, {"contestId": 1331, "index": "H", "name": "It's showtime", "type": "PROGRAMMING", "tags": []}, {"contestId": 1331, "index": "G", "name": "Lingua Romana", "type": "PROGRAMMING", "tags": []}, {"contestId": 1331, "index": "F", "name": "Elementary!", "type": "PROGRAMMING", "tags": ["brute force", "dp", "strings"]}, {"contestId": 1331, "index": "E", "name": "Jordan Smiley", "type": "PROGRAMMING", "tags": ["dfs and similar", "geometry", "implementation"]}, {"contestId": 1331, "index": "D", "name": "Again?", "type": "PROGRAMMING", "tags": ["implementation"]}, {"contestId": 1331, "index": "C", "name": "...And after happily lived ever they", "type": "PROGRAMMING", "tags": ["bitmasks"]}, {"contestId": 1331, "index": "B", "name": "Limericks", "type": "PROGRAMMING", "tags": ["math", "number theory"]}, {"contestId": 1331, "index": "A", "name": "Is it rated?", "type": "PROGRAMMING", "tags": []}, {"contestId": 1330, "index": "B", "name": "Dreamoon Likes Permutations", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["implementation", "math"]}, {"contestId": 1330, "index": "A", "name": "Dreamoon and Ranking Collection", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation"]}, {"contestId": 1329, "index": "E", "name": "Dreamoon Loves AA", "type": "PROGRAMMING", "points": 2500.0, "rating": 3300, "tags": ["binary search", "greedy"]}, {"contestId": 1329, "index": "D", "name": "Dreamoon Likes Strings", "type": "PROGRAMMING", "points": 2000.0, "rating": 3100, "tags": ["constructive algorithms", "data structures"]}, {"contestId": 1329, "index": "C", "name": "Drazil Likes Heap", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["constructive algorithms", "data structures", "greedy", "implementation"]}, {"contestId": 1329, "index": "B", "name": "Dreamoon Likes Sequences", "type": "PROGRAMMING", "points": 750.0, "rating": 1700, "tags": ["bitmasks", "combinatorics", "math"]}, {"contestId": 1329, "index": "A", "name": "Dreamoon Likes Coloring", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["constructive algorithms", "greedy", "implementation", "math"]}, {"contestId": 1328, "index": "F", "name": "Make k Equal", "type": "PROGRAMMING", "rating": 2200, "tags": ["greedy"]}, {"contestId": 1328, "index": "E", "name": "Tree Queries", "type": "PROGRAMMING", "rating": 1900, "tags": ["dfs and similar", "graphs", "trees"]}, {"contestId": 1328, "index": "D", "name": "Carousel", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "dp", "graphs", "greedy", "math"]}, {"contestId": 1328, "index": "C", "name": "Ternary XOR", "type": "PROGRAMMING", "rating": 1200, "tags": ["greedy", "implementation"]}, {"contestId": 1328, "index": "B", "name": "K-th Beautiful String", "type": "PROGRAMMING", "rating": 1300, "tags": ["binary search", "brute force", "combinatorics", "implementation", "math"]}, {"contestId": 1328, "index": "A", "name": "Divisibility Problem", "type": "PROGRAMMING", "rating": 800, "tags": ["math"]}, {"contestId": 1327, "index": "G", "name": "Letters and Question Marks", "type": "PROGRAMMING", "rating": 2800, "tags": ["bitmasks", "dp", "string suffix structures"]}, {"contestId": 1327, "index": "F", "name": "AND Segments", "type": "PROGRAMMING", "rating": 2500, "tags": ["bitmasks", "combinatorics", "data structures", "dp", "two pointers"]}, {"contestId": 1327, "index": "E", "name": "Count The Blocks", "type": "PROGRAMMING", "rating": 1800, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 1327, "index": "D", "name": "Infinite Path", "type": "PROGRAMMING", "rating": 2200, "tags": ["brute force", "dfs and similar", "graphs", "math", "number theory"]}, {"contestId": 1327, "index": "C", "name": "Game with Chips", "type": "PROGRAMMING", "rating": 1600, "tags": ["constructive algorithms", "implementation"]}, {"contestId": 1327, "index": "B", "name": "Princesses and Princes", "type": "PROGRAMMING", "rating": 1200, "tags": ["brute force", "graphs", "greedy"]}, {"contestId": 1327, "index": "A", "name": "Sum of Odd Integers", "type": "PROGRAMMING", "rating": 1100, "tags": ["math"]}, {"contestId": 1326, "index": "G", "name": "Spiderweb Trees", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["dp", "geometry", "trees"]}, {"contestId": 1326, "index": "F2", "name": "Wise Men (Hard Version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 3200, "tags": ["bitmasks", "dp", "math"]}, {"contestId": 1326, "index": "F1", "name": "Wise Men (Easy Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["bitmasks", "brute force", "dp", "meet-in-the-middle"]}, {"contestId": 1326, "index": "E", "name": "Bombs", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures", "two pointers"]}, {"contestId": 1326, "index": "D2", "name": "Prefix-Suffix Palindrome (Hard version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["binary search", "greedy", "hashing", "string suffix structures", "strings"]}, {"contestId": 1326, "index": "D1", "name": "Prefix-Suffix Palindrome (Easy version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["hashing", "string suffix structures", "strings"]}, {"contestId": 1326, "index": "C", "name": "Permutation Partitions", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["combinatorics", "greedy", "math"]}, {"contestId": 1326, "index": "B", "name": "Maximums", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["implementation", "math"]}, {"contestId": 1326, "index": "A", "name": "Bad Ugly Numbers", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["constructive algorithms", "number theory"]}, {"contestId": 1325, "index": "F", "name": "Ehab's Last Theorem", "type": "PROGRAMMING", "points": 2750.0, "rating": 2500, "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy"]}, {"contestId": 1325, "index": "E", "name": "Ehab's REAL Number Theory Problem", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["brute force", "dfs and similar", "graphs", "number theory", "shortest paths"]}, {"contestId": 1325, "index": "D", "name": "Ehab the Xorcist", "type": "PROGRAMMING", "points": 1750.0, "rating": 1700, "tags": ["bitmasks", "constructive algorithms", "greedy", "number theory"]}, {"contestId": 1325, "index": "C", "name": "Ehab and Path-etic MEXs", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["constructive algorithms", "dfs and similar", "greedy", "trees"]}, {"contestId": 1325, "index": "B", "name": "CopyCopyCopyCopyCopy", "type": "PROGRAMMING", "points": 750.0, "rating": 800, "tags": ["greedy", "implementation"]}, {"contestId": 1325, "index": "A", "name": "EhAb AnD gCd", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "greedy", "number theory"]}, {"contestId": 1324, "index": "F", "name": "Maximum White Subtree", "type": "PROGRAMMING", "rating": 1800, "tags": ["dfs and similar", "dp", "graphs", "trees"]}, {"contestId": 1324, "index": "E", "name": "Sleeping Schedule", "type": "PROGRAMMING", "rating": 1700, "tags": ["dp", "implementation"]}, {"contestId": 1324, "index": "D", "name": "Pair of Topics", "type": "PROGRAMMING", "rating": 1400, "tags": ["binary search", "data structures", "sortings", "two pointers"]}, {"contestId": 1324, "index": "C", "name": "Frog Jumps", "type": "PROGRAMMING", "rating": 1100, "tags": ["binary search", "data structures", "dfs and similar", "greedy", "implementation"]}, {"contestId": 1324, "index": "B", "name": "Yet Another Palindrome Problem", "type": "PROGRAMMING", "rating": 1100, "tags": ["brute force", "strings"]}, {"contestId": 1324, "index": "A", "name": "Yet Another Tetris Problem", "type": "PROGRAMMING", "rating": 900, "tags": ["implementation", "number theory"]}, {"contestId": 1323, "index": "B", "name": "Count Subrectangles", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["binary search", "greedy", "implementation"]}, {"contestId": 1323, "index": "A", "name": "Even Subset Sum Problem", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "dp", "greedy", "implementation"]}, {"contestId": 1322, "index": "F", "name": "Assigning Fares", "type": "PROGRAMMING", "points": 3000.0, "rating": 3500, "tags": ["dp", "trees"]}, {"contestId": 1322, "index": "E", "name": "Median Mountain Range", "type": "PROGRAMMING", "points": 2500.0, "rating": 3300, "tags": ["data structures"]}, {"contestId": 1322, "index": "D", "name": "Reality Show", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["bitmasks", "dp"]}, {"contestId": 1322, "index": "C", "name": "Instant Noodles", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["graphs", "hashing", "math", "number theory"]}, {"contestId": 1322, "index": "B", "name": "Present", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["binary search", "bitmasks", "constructive algorithms", "data structures", "math", "sortings"]}, {"contestId": 1322, "index": "A", "name": "Unusual Competitions", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["greedy"]}, {"contestId": 1321, "index": "C", "name": "Remove Adjacent", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["brute force", "constructive algorithms", "greedy", "strings"]}, {"contestId": 1321, "index": "A", "name": "Contest for Robots", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["greedy"]}, {"contestId": 1320, "index": "F", "name": "Blocks and Sensors", "type": "PROGRAMMING", "points": 2500.0, "rating": 3500, "tags": ["brute force"]}, {"contestId": 1320, "index": "E", "name": "Treeland and Viruses", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["data structures", "dfs and similar", "dp", "shortest paths", "trees"]}, {"contestId": 1320, "index": "D", "name": "Reachable Strings", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["data structures", "hashing", "strings"]}, {"contestId": 1320, "index": "C", "name": "World of Darkraft: Battle for Azathoth", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["brute force", "data structures", "sortings"]}, {"contestId": 1320, "index": "B", "name": "Navigation System", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["dfs and similar", "graphs", "shortest paths"]}, {"contestId": 1320, "index": "A", "name": "Journey Planning", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["data structures", "dp", "greedy", "math", "sortings"]}, {"contestId": 1316, "index": "F", "name": "Battalion Strength", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["data structures", "divide and conquer", "probabilities"]}, {"contestId": 1316, "index": "E", "name": "Team Building", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["bitmasks", "dp", "greedy", "sortings"]}, {"contestId": 1316, "index": "D", "name": "Nash Matrix", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["constructive algorithms", "dfs and similar", "graphs", "implementation"]}, {"contestId": 1316, "index": "C", "name": "Primitive Primes", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["constructive algorithms", "math", "ternary search"]}, {"contestId": 1316, "index": "B", "name": "String Modification", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["brute force", "constructive algorithms", "implementation", "sortings", "strings"]}, {"contestId": 1316, "index": "A", "name": "Grade Allocation", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 1315, "index": "C", "name": "Restoring Permutation", "type": "PROGRAMMING", "points": 1500.0, "rating": 1200, "tags": ["greedy"]}, {"contestId": 1315, "index": "B", "name": "Homecoming", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["binary search", "dp", "greedy", "strings"]}, {"contestId": 1315, "index": "A", "name": "Dead Pixel", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 1313, "index": "E", "name": "Concatenation with intersection", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["data structures", "hashing", "strings", "two pointers"]}, {"contestId": 1313, "index": "D", "name": "Happy New Year", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["bitmasks", "dp", "implementation"]}, {"contestId": 1313, "index": "C2", "name": "Skyscrapers (hard version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["data structures", "dp", "greedy"]}, {"contestId": 1313, "index": "C1", "name": "Skyscrapers (easy version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["brute force", "data structures", "dp", "greedy"]}, {"contestId": 1313, "index": "B", "name": "Different Rules", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["constructive algorithms", "greedy", "implementation", "math"]}, {"contestId": 1313, "index": "A", "name": "Fast Food Restaurant", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["brute force", "greedy", "implementation"]}, {"contestId": 1312, "index": "G", "name": "Autocompletion", "type": "PROGRAMMING", "rating": 2600, "tags": ["data structures", "dfs and similar", "dp"]}, {"contestId": 1312, "index": "F", "name": "Attack on Red Kingdom", "type": "PROGRAMMING", "rating": 2500, "tags": ["games", "two pointers"]}, {"contestId": 1312, "index": "E", "name": "Array Shrinking", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp", "greedy"]}, {"contestId": 1312, "index": "D", "name": "Count the Arrays", "type": "PROGRAMMING", "rating": 1700, "tags": ["combinatorics", "math"]}, {"contestId": 1312, "index": "C", "name": "Adding Powers", "type": "PROGRAMMING", "rating": 1400, "tags": ["bitmasks", "greedy", "implementation", "math", "number theory", "ternary search"]}, {"contestId": 1312, "index": "B", "name": "Bogosort", "type": "PROGRAMMING", "rating": 1000, "tags": ["constructive algorithms", "sortings"]}, {"contestId": 1312, "index": "A", "name": "Two Regular Polygons", "type": "PROGRAMMING", "rating": 800, "tags": ["geometry", "greedy", "math", "number theory"]}, {"contestId": 1311, "index": "F", "name": "Moving Points", "type": "PROGRAMMING", "rating": 1900, "tags": ["data structures", "divide and conquer", "implementation", "sortings"]}, {"contestId": 1311, "index": "E", "name": "Construct the Binary Tree", "type": "PROGRAMMING", "rating": 2200, "tags": ["brute force", "constructive algorithms", "trees"]}, {"contestId": 1311, "index": "D", "name": "Three Integers", "type": "PROGRAMMING", "rating": 2000, "tags": ["brute force", "math"]}, {"contestId": 1311, "index": "C", "name": "Perform the Combo", "type": "PROGRAMMING", "rating": 1300, "tags": ["brute force"]}, {"contestId": 1311, "index": "B", "name": "WeirdSort", "type": "PROGRAMMING", "rating": 1200, "tags": ["dfs and similar", "sortings"]}, {"contestId": 1311, "index": "A", "name": "Add Odd or Subtract Even", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "implementation", "math"]}, {"contestId": 1310, "index": "F", "name": "Bad Cryptography", "type": "PROGRAMMING", "points": 3500.0, "rating": 3400, "tags": ["math", "number theory"]}, {"contestId": 1310, "index": "E", "name": "Strange Function", "type": "PROGRAMMING", "points": 2250.0, "rating": 2900, "tags": ["dp"]}, {"contestId": 1310, "index": "D", "name": "Tourism", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["dp", "graphs", "probabilities"]}, {"contestId": 1310, "index": "C", "name": "Au Pont Rouge", "type": "PROGRAMMING", "points": 1500.0, "rating": 2800, "tags": ["binary search", "dp", "strings"]}, {"contestId": 1310, "index": "B", "name": "Double Elimination", "type": "PROGRAMMING", "points": 1000.0, "rating": 2500, "tags": ["dp", "implementation"]}, {"contestId": 1310, "index": "A", "name": "Recommendations", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["data structures", "greedy", "sortings"]}, {"contestId": 1307, "index": "G", "name": "Cow and Exercise", "type": "PROGRAMMING", "points": 3500.0, "rating": 3100, "tags": ["flows", "graphs", "shortest paths"]}, {"contestId": 1307, "index": "F", "name": "Cow and Vacation", "type": "PROGRAMMING", "points": 3000.0, "rating": 3300, "tags": ["dfs and similar", "dsu", "trees"]}, {"contestId": 1307, "index": "E", "name": "Cow and Treats", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["binary search", "combinatorics", "dp", "greedy", "implementation", "math"]}, {"contestId": 1307, "index": "D", "name": "Cow and Fields", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["binary search", "data structures", "dfs and similar", "graphs", "greedy", "shortest paths", "sortings"]}, {"contestId": 1307, "index": "C", "name": "Cow and Message", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["brute force", "dp", "math", "strings"]}, {"contestId": 1307, "index": "B", "name": "Cow and Friend", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["geometry", "greedy", "math"]}, {"contestId": 1307, "index": "A", "name": "Cow and Haybales", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "implementation"]}, {"contestId": 1305, "index": "H", "name": "Kuroni the Private Tutor", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["binary search", "greedy"]}, {"contestId": 1305, "index": "G", "name": "Kuroni and Antihype", "type": "PROGRAMMING", "points": 3250.0, "rating": 3500, "tags": ["bitmasks", "brute force", "dp", "dsu", "graphs"]}, {"contestId": 1305, "index": "F", "name": "Kuroni and the Punishment", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["math", "number theory", "probabilities"]}, {"contestId": 1305, "index": "E", "name": "Kuroni and the Score Distribution", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["constructive algorithms", "greedy", "implementation", "math"]}, {"contestId": 1305, "index": "D", "name": "Kuroni and the Celebration", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["constructive algorithms", "dfs and similar", "interactive", "trees"]}, {"contestId": 1305, "index": "C", "name": "Kuroni and Impossible Calculation", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["brute force", "combinatorics", "math", "number theory"]}, {"contestId": 1305, "index": "B", "name": "Kuroni and Simple Strings", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "greedy", "strings", "two pointers"]}, {"contestId": 1305, "index": "A", "name": "Kuroni and the Gifts", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "constructive algorithms", "greedy", "sortings"]}, {"contestId": 1304, "index": "F2", "name": "Animal Observation (hard version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2400, "tags": ["data structures", "dp", "greedy"]}, {"contestId": 1304, "index": "F1", "name": "Animal Observation (easy version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["data structures", "dp"]}, {"contestId": 1304, "index": "E", "name": "1-Trees and Queries", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["data structures", "dfs and similar", "shortest paths", "trees"]}, {"contestId": 1304, "index": "D", "name": "Shortest and Longest LIS", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["constructive algorithms", "graphs", "greedy", "two pointers"]}, {"contestId": 1304, "index": "C", "name": "Air Conditioner", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["dp", "greedy", "implementation", "sortings", "two pointers"]}, {"contestId": 1304, "index": "B", "name": "Longest Palindrome", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["brute force", "constructive algorithms", "greedy", "implementation", "strings"]}, {"contestId": 1304, "index": "A", "name": "Two Rabbits", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math"]}, {"contestId": 1303, "index": "G", "name": "Sum of Prefix Sums", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "divide and conquer", "geometry", "trees"]}, {"contestId": 1303, "index": "F", "name": "Number of Components", "type": "PROGRAMMING", "rating": 2800, "tags": ["dsu", "implementation"]}, {"contestId": 1303, "index": "E", "name": "Erase Subsequences", "type": "PROGRAMMING", "rating": 2200, "tags": ["dp", "strings"]}, {"contestId": 1303, "index": "D", "name": "Fill The Bag", "type": "PROGRAMMING", "rating": 1900, "tags": ["bitmasks", "greedy"]}, {"contestId": 1303, "index": "C", "name": "Perfect Keyboard", "type": "PROGRAMMING", "rating": 1600, "tags": ["dfs and similar", "greedy", "implementation"]}, {"contestId": 1303, "index": "B", "name": "National Project", "type": "PROGRAMMING", "rating": 1400, "tags": ["math"]}, {"contestId": 1303, "index": "A", "name": "Erasing Zeroes", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "strings"]}, {"contestId": 1302, "index": "J", "name": "Keep talking and nobody explodes -- hard", "type": "PROGRAMMING", "tags": []}, {"contestId": 1302, "index": "I", "name": "Deja vu", "type": "PROGRAMMING", "tags": []}, {"contestId": 1302, "index": "H", "name": "Who needs suffix structures?", "type": "PROGRAMMING", "tags": []}, {"contestId": 1302, "index": "G", "name": "Keep talking and nobody explodes -- medium", "type": "PROGRAMMING", "tags": []}, {"contestId": 1302, "index": "F", "name": "Keep talking and nobody explodes -- easy", "type": "PROGRAMMING", "tags": ["bitmasks", "brute force", "expression parsing"]}, {"contestId": 1302, "index": "E", "name": "Amazing bitset", "type": "PROGRAMMING", "tags": []}, {"contestId": 1302, "index": "D", "name": "Dijkstra", "type": "PROGRAMMING", "tags": []}, {"contestId": 1302, "index": "C", "name": "Segment tree or Fenwick?", "type": "PROGRAMMING", "tags": ["data structures"]}, {"contestId": 1302, "index": "B", "name": "DAG", "type": "PROGRAMMING", "tags": ["constructive algorithms"]}, {"contestId": 1302, "index": "A", "name": "Nash equilibrium", "type": "PROGRAMMING", "tags": []}, {"contestId": 1301, "index": "F", "name": "Super Jaber", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["dfs and similar", "graphs", "implementation", "shortest paths"]}, {"contestId": 1301, "index": "E", "name": "Nanosoft", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["binary search", "data structures", "dp", "implementation"]}, {"contestId": 1301, "index": "D", "name": "Time to Run", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["constructive algorithms", "graphs", "implementation"]}, {"contestId": 1301, "index": "C", "name": "Ayoub's function", "type": "PROGRAMMING", "points": 1250.0, "rating": 1700, "tags": ["binary search", "combinatorics", "greedy", "math", "strings"]}, {"contestId": 1301, "index": "B", "name": "Motarack's Birthday", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["binary search", "greedy", "ternary search"]}, {"contestId": 1301, "index": "A", "name": "Three Strings", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "strings"]}, {"contestId": 1300, "index": "B", "name": "Assigning to Classes", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["greedy", "implementation", "sortings"]}, {"contestId": 1300, "index": "A", "name": "Non-zero", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "math"]}, {"contestId": 1299, "index": "E", "name": "So Mean", "type": "PROGRAMMING", "points": 2250.0, "rating": 3400, "tags": ["interactive", "math"]}, {"contestId": 1299, "index": "D", "name": "Around the World", "type": "PROGRAMMING", "points": 1750.0, "rating": 3000, "tags": ["bitmasks", "combinatorics", "dfs and similar", "dp", "graphs", "graphs", "math", "trees"]}, {"contestId": 1299, "index": "C", "name": "Water Balance", "type": "PROGRAMMING", "points": 1250.0, "rating": 2100, "tags": ["data structures", "geometry", "greedy"]}, {"contestId": 1299, "index": "B", "name": "Aerodynamic", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["geometry"]}, {"contestId": 1299, "index": "A", "name": "Anu Has a Function", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["brute force", "greedy", "math"]}, {"contestId": 1297, "index": "I", "name": "Falling Blocks", "type": "PROGRAMMING", "tags": ["*special", "data structures"]}, {"contestId": 1297, "index": "H", "name": "Paint the String", "type": "PROGRAMMING", "tags": ["*special", "dp", "strings"]}, {"contestId": 1297, "index": "G", "name": "M-numbers", "type": "PROGRAMMING", "tags": ["*special", "dp", "math"]}, {"contestId": 1297, "index": "F", "name": "Movie Fan", "type": "PROGRAMMING", "tags": ["*special", "data structures", "greedy", "implementation", "sortings"]}, {"contestId": 1297, "index": "E", "name": "Modernization of Treeland", "type": "PROGRAMMING", "tags": ["*special", "dfs and similar", "trees"]}, {"contestId": 1297, "index": "D", "name": "Bonus Distribution ", "type": "PROGRAMMING", "tags": ["*special", "binary search", "greedy", "sortings"]}, {"contestId": 1297, "index": "C", "name": "Dream Team", "type": "PROGRAMMING", "tags": ["*special", "greedy"]}, {"contestId": 1297, "index": "B", "name": "Cartoons", "type": "PROGRAMMING", "tags": ["*special", "implementation", "sortings"]}, {"contestId": 1297, "index": "A", "name": "Likes Display", "type": "PROGRAMMING", "tags": ["*special", "implementation"]}, {"contestId": 1296, "index": "F", "name": "Berland Beauty", "type": "PROGRAMMING", "rating": 2100, "tags": ["constructive algorithms", "dfs and similar", "greedy", "sortings", "trees"]}, {"contestId": 1296, "index": "E2", "name": "String Coloring (hard version)", "type": "PROGRAMMING", "rating": 2000, "tags": ["data structures", "dp"]}, {"contestId": 1296, "index": "E1", "name": "String Coloring (easy version)", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "dp", "graphs", "greedy", "sortings"]}, {"contestId": 1296, "index": "D", "name": "Fight with Monsters", "type": "PROGRAMMING", "rating": 1500, "tags": ["greedy", "sortings"]}, {"contestId": 1296, "index": "C", "name": "Yet Another Walking Robot", "type": "PROGRAMMING", "rating": 1500, "tags": ["data structures", "implementation"]}, {"contestId": 1296, "index": "B", "name": "Food Buying", "type": "PROGRAMMING", "rating": 900, "tags": ["math"]}, {"contestId": 1296, "index": "A", "name": "Array with Odd Sum", "type": "PROGRAMMING", "rating": 800, "tags": ["math"]}, {"contestId": 1295, "index": "F", "name": "Good Contest", "type": "PROGRAMMING", "rating": 2700, "tags": ["combinatorics", "dp", "probabilities"]}, {"contestId": 1295, "index": "E", "name": "Permutation Separation", "type": "PROGRAMMING", "rating": 2200, "tags": ["data structures", "divide and conquer"]}, {"contestId": 1295, "index": "D", "name": "Same GCDs", "type": "PROGRAMMING", "rating": 1800, "tags": ["math", "number theory"]}, {"contestId": 1295, "index": "C", "name": "Obtain The String", "type": "PROGRAMMING", "rating": 1600, "tags": ["dp", "greedy", "strings"]}, {"contestId": 1295, "index": "B", "name": "Infinite Prefixes", "type": "PROGRAMMING", "rating": 1700, "tags": ["math", "strings"]}, {"contestId": 1295, "index": "A", "name": "Display The Number", "type": "PROGRAMMING", "rating": 900, "tags": ["greedy"]}, {"contestId": 1294, "index": "F", "name": "Three Paths on a Tree", "type": "PROGRAMMING", "rating": 2000, "tags": ["dfs and similar", "dp", "greedy", "trees"]}, {"contestId": 1294, "index": "E", "name": "Obtain a Permutation", "type": "PROGRAMMING", "rating": 1900, "tags": ["greedy", "implementation", "math"]}, {"contestId": 1294, "index": "D", "name": "MEX maximizing", "type": "PROGRAMMING", "rating": 1600, "tags": ["data structures", "greedy", "implementation", "math"]}, {"contestId": 1294, "index": "C", "name": "Product of Three Numbers", "type": "PROGRAMMING", "rating": 1300, "tags": ["greedy", "math", "number theory"]}, {"contestId": 1294, "index": "B", "name": "Collecting Packages", "type": "PROGRAMMING", "rating": 1200, "tags": ["implementation", "sortings"]}, {"contestId": 1294, "index": "A", "name": "Collecting Coins", "type": "PROGRAMMING", "rating": 800, "tags": ["math"]}, {"contestId": 1293, "index": "B", "name": "JOE is on TV!", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["combinatorics", "greedy", "math"]}, {"contestId": 1293, "index": "A", "name": "ConneR and the A.R.C. Markland-N", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["binary search", "brute force", "implementation"]}, {"contestId": 1292, "index": "F", "name": "Nora's Toy Boxes", "type": "PROGRAMMING", "points": 2750.0, "rating": 3500, "tags": ["bitmasks", "combinatorics", "dp"]}, {"contestId": 1292, "index": "E", "name": "Rin and The Unknown Flower", "type": "PROGRAMMING", "points": 2250.0, "rating": 3500, "tags": ["constructive algorithms", "greedy", "interactive", "math"]}, {"contestId": 1292, "index": "D", "name": "Chaotic V.", "type": "PROGRAMMING", "points": 1750.0, "rating": 2700, "tags": ["dp", "graphs", "greedy", "math", "number theory", "trees"]}, {"contestId": 1292, "index": "C", "name": "Xenon's Attack on the Gangs", "type": "PROGRAMMING", "points": 1250.0, "rating": 2300, "tags": ["combinatorics", "dfs and similar", "dp", "greedy", "trees"]}, {"contestId": 1292, "index": "B", "name": "Aroma's Search", "type": "PROGRAMMING", "points": 750.0, "rating": 1700, "tags": ["brute force", "constructive algorithms", "geometry", "greedy", "implementation"]}, {"contestId": 1292, "index": "A", "name": "NEKO's Maze Game", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["data structures", "dsu", "implementation"]}, {"contestId": 1291, "index": "F", "name": "Coffee Varieties (easy version)", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["graphs", "interactive"]}, {"contestId": 1291, "index": "B", "name": "Array Sharpening", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["greedy", "implementation"]}, {"contestId": 1291, "index": "A", "name": "Even But Not Even", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["greedy", "math", "strings"]}, {"contestId": 1290, "index": "F", "name": "Making Shapes", "type": "PROGRAMMING", "points": 3250.0, "rating": 3500, "tags": ["dp"]}, {"contestId": 1290, "index": "E", "name": "Cartesian Tree ", "type": "PROGRAMMING", "points": 3000.0, "rating": 3300, "tags": ["data structures"]}, {"contestId": 1290, "index": "D", "name": "Coffee Varieties (hard version)", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["constructive algorithms", "graphs", "interactive"]}, {"contestId": 1290, "index": "C", "name": "Prefix Enlightenment", "type": "PROGRAMMING", "points": 1750.0, "rating": 2400, "tags": ["dfs and similar", "dsu", "graphs"]}, {"contestId": 1290, "index": "B", "name": "Irreducible Anagrams", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["binary search", "constructive algorithms", "data structures", "strings", "two pointers"]}, {"contestId": 1290, "index": "A", "name": "Mind Control", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["brute force", "data structures", "implementation"]}, {"contestId": 1288, "index": "F", "name": "Red-Blue Graph", "type": "PROGRAMMING", "rating": 2900, "tags": ["constructive algorithms", "flows"]}, {"contestId": 1288, "index": "E", "name": "Messenger Simulator", "type": "PROGRAMMING", "rating": 2000, "tags": ["data structures"]}, {"contestId": 1288, "index": "D", "name": "Minimax Problem", "type": "PROGRAMMING", "rating": 2000, "tags": ["binary search", "bitmasks", "dp"]}, {"contestId": 1288, "index": "C", "name": "Two Arrays", "type": "PROGRAMMING", "rating": 1600, "tags": ["combinatorics", "dp"]}, {"contestId": 1288, "index": "B", "name": "Yet Another Meme Problem", "type": "PROGRAMMING", "rating": 1100, "tags": ["math"]}, {"contestId": 1288, "index": "A", "name": "Deadline", "type": "PROGRAMMING", "rating": 1100, "tags": ["binary search", "brute force", "math", "ternary search"]}, {"contestId": 1287, "index": "B", "name": "Hyperset", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["brute force", "data structures", "implementation"]}, {"contestId": 1287, "index": "A", "name": "Angry Students", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "implementation"]}, {"contestId": 1286, "index": "F", "name": "Harry The Potter", "type": "PROGRAMMING", "points": 2750.0, "rating": 3100, "tags": ["brute force", "constructive algorithms", "dp", "fft", "implementation", "math"]}, {"contestId": 1286, "index": "E", "name": "Fedya the Potter Strikes Back", "type": "PROGRAMMING", "points": 2250.0, "rating": 3200, "tags": ["data structures", "strings"]}, {"contestId": 1286, "index": "D", "name": "LCC", "type": "PROGRAMMING", "points": 1750.0, "rating": 3100, "tags": ["data structures", "math", "matrices", "probabilities"]}, {"contestId": 1286, "index": "C2", "name": "Madhouse (Hard version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2800, "tags": ["brute force", "constructive algorithms", "hashing", "interactive", "math"]}, {"contestId": 1286, "index": "C1", "name": "Madhouse (Easy version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2400, "tags": ["brute force", "constructive algorithms", "interactive", "math"]}, {"contestId": 1286, "index": "B", "name": "Numbers on Tree", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["constructive algorithms", "data structures", "dfs and similar", "graphs", "greedy", "trees"]}, {"contestId": 1286, "index": "A", "name": "Garland", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["dp", "greedy", "sortings"]}, {"contestId": 1285, "index": "F", "name": "Classical?", "type": "PROGRAMMING", "points": 3000.0, "rating": 2900, "tags": ["binary search", "combinatorics", "number theory"]}, {"contestId": 1285, "index": "E", "name": "Delete a Segment", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["brute force", "constructive algorithms", "data structures", "dp", "graphs", "sortings", "trees", "two pointers"]}, {"contestId": 1285, "index": "D", "name": "Dr. Evil Underscores", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["bitmasks", "brute force", "dfs and similar", "divide and conquer", "dp", "greedy", "strings", "trees"]}, {"contestId": 1285, "index": "C", "name": "Fadi and LCM", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["brute force", "math", "number theory"]}, {"contestId": 1285, "index": "B", "name": "Just Eat It!", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["dp", "greedy", "implementation"]}, {"contestId": 1285, "index": "A", "name": "Mezo Playing Zoma", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math"]}, {"contestId": 1284, "index": "G", "name": "Seollal", "type": "PROGRAMMING", "points": 4000.0, "rating": 3300, "tags": ["graphs"]}, {"contestId": 1284, "index": "F", "name": "New Year and Social Network", "type": "PROGRAMMING", "points": 4000.0, "rating": 3200, "tags": ["data structures", "graph matchings", "graphs", "math", "trees"]}, {"contestId": 1284, "index": "E", "name": "New Year and Castle Construction", "type": "PROGRAMMING", "points": 2750.0, "rating": 2500, "tags": ["combinatorics", "geometry", "math", "sortings"]}, {"contestId": 1284, "index": "D", "name": "New Year and Conference", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["binary search", "data structures", "hashing", "sortings"]}, {"contestId": 1284, "index": "C", "name": "New Year and Permutation", "type": "PROGRAMMING", "points": 1750.0, "rating": 1600, "tags": ["combinatorics", "math"]}, {"contestId": 1284, "index": "B", "name": "New Year and Ascent Sequence", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["binary search", "combinatorics", "data structures", "dp", "implementation", "sortings"]}, {"contestId": 1284, "index": "A", "name": "New Year and Naming", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "strings"]}, {"contestId": 1283, "index": "F", "name": "DIY Garland", "type": "PROGRAMMING", "rating": 2200, "tags": ["constructive algorithms", "greedy", "trees"]}, {"contestId": 1283, "index": "E", "name": "New Year Parties", "type": "PROGRAMMING", "rating": 1800, "tags": ["dp", "greedy"]}, {"contestId": 1283, "index": "D", "name": "Christmas Trees", "type": "PROGRAMMING", "rating": 1800, "tags": ["graphs", "greedy", "shortest paths"]}, {"contestId": 1283, "index": "C", "name": "Friends and Gifts", "type": "PROGRAMMING", "rating": 1500, "tags": ["constructive algorithms", "data structures", "math"]}, {"contestId": 1283, "index": "B", "name": "Candies Division", "type": "PROGRAMMING", "rating": 900, "tags": ["math"]}, {"contestId": 1283, "index": "A", "name": "Minutes Before the New Year", "type": "PROGRAMMING", "rating": 800, "tags": ["math"]}, {"contestId": 1282, "index": "E", "name": "The Cake Is a Lie", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["constructive algorithms", "data structures", "dfs and similar", "graphs"]}, {"contestId": 1282, "index": "D", "name": "Enchanted Artifact", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["constructive algorithms", "interactive", "strings"]}, {"contestId": 1282, "index": "C", "name": "Petya and Exam", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["greedy", "sortings", "two pointers"]}, {"contestId": 1282, "index": "B2", "name": "K for the Price of One (Hard Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["dp", "greedy", "sortings"]}, {"contestId": 1282, "index": "B1", "name": "K for the Price of One (Easy Version)", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["dp", "greedy", "sortings"]}, {"contestId": 1282, "index": "A", "name": "Temporarily unavailable", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation", "math"]}, {"contestId": 1281, "index": "B", "name": "Azamon Web Services", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["greedy"]}, {"contestId": 1281, "index": "A", "name": "Suffix Three", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 1280, "index": "F", "name": "Intergalactic Sliding Puzzle", "type": "PROGRAMMING", "points": 3000.0, "rating": 3400, "tags": ["combinatorics", "constructive algorithms", "math"]}, {"contestId": 1280, "index": "E", "name": "Kirchhoff's Current Loss", "type": "PROGRAMMING", "points": 2250.0, "rating": 2900, "tags": ["math"]}, {"contestId": 1280, "index": "D", "name": "Miss Punyverse", "type": "PROGRAMMING", "points": 1750.0, "rating": 2500, "tags": ["dp", "greedy", "trees"]}, {"contestId": 1280, "index": "C", "name": "Jeremy Bearimy", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["dfs and similar", "graphs", "greedy", "trees"]}, {"contestId": 1280, "index": "B", "name": "Beingawesomeism", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["implementation", "math"]}, {"contestId": 1280, "index": "A", "name": "Cut and Paste", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["implementation", "math"]}, {"contestId": 1279, "index": "F", "name": "New Year and Handle Change", "type": "PROGRAMMING", "rating": 2800, "tags": ["binary search", "dp"]}, {"contestId": 1279, "index": "E", "name": "New Year Permutations", "type": "PROGRAMMING", "rating": 2700, "tags": ["combinatorics", "dp"]}, {"contestId": 1279, "index": "D", "name": "Santa's Bot", "type": "PROGRAMMING", "rating": 1700, "tags": ["combinatorics", "math", "probabilities"]}, {"contestId": 1279, "index": "C", "name": "Stack of Presents", "type": "PROGRAMMING", "rating": 1400, "tags": ["data structures", "implementation"]}, {"contestId": 1279, "index": "B", "name": "Verse For Santa", "type": "PROGRAMMING", "rating": 1300, "tags": ["binary search", "brute force", "implementation"]}, {"contestId": 1279, "index": "A", "name": "New Year Garland", "type": "PROGRAMMING", "rating": 900, "tags": ["math"]}, {"contestId": 1278, "index": "F", "name": "Cards", "type": "PROGRAMMING", "rating": 2600, "tags": ["combinatorics", "dp", "math", "number theory", "probabilities"]}, {"contestId": 1278, "index": "E", "name": "Tests for problem D", "type": "PROGRAMMING", "rating": 2200, "tags": ["constructive algorithms", "dfs and similar", "divide and conquer", "trees"]}, {"contestId": 1278, "index": "D", "name": "Segment Tree", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "dsu", "graphs", "trees"]}, {"contestId": 1278, "index": "C", "name": "Berry Jam", "type": "PROGRAMMING", "rating": 1700, "tags": ["data structures", "dp", "greedy", "implementation"]}, {"contestId": 1278, "index": "B", "name": "A and B", "type": "PROGRAMMING", "rating": 1500, "tags": ["greedy", "math"]}, {"contestId": 1278, "index": "A", "name": "Shuffle Hashing", "type": "PROGRAMMING", "rating": 1000, "tags": ["brute force", "implementation", "strings"]}, {"contestId": 1277, "index": "D", "name": "Let's Play the Words?", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["data structures", "hashing", "implementation", "math"]}, {"contestId": 1277, "index": "B", "name": "Make Them Odd", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["greedy", "number theory"]}, {"contestId": 1277, "index": "A", "name": "Happy Birthday, Polycarp!", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"]}, {"contestId": 1276, "index": "F", "name": "Asterisk Substrings", "type": "PROGRAMMING", "points": 3000.0, "rating": 3400, "tags": ["string suffix structures"]}, {"contestId": 1276, "index": "E", "name": "Four Stones", "type": "PROGRAMMING", "points": 2250.0, "rating": 3500, "tags": ["constructive algorithms"]}, {"contestId": 1276, "index": "D", "name": "Tree Elimination", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["dp", "trees"]}, {"contestId": 1276, "index": "C", "name": "Beautiful Rectangle", "type": "PROGRAMMING", "points": 1250.0, "rating": 2300, "tags": ["brute force", "combinatorics", "constructive algorithms", "data structures", "greedy", "math"]}, {"contestId": 1276, "index": "B", "name": "Two Fairs", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["combinatorics", "dfs and similar", "dsu", "graphs"]}, {"contestId": 1276, "index": "A", "name": "As Simple as One and Two", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["dp", "greedy"]}, {"contestId": 1275, "index": "F", "name": "\u0428\u0430\u0440\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u043e\u0441\u0442\u043e\u0432", "type": "PROGRAMMING", "points": 3000.0, "tags": ["*special", "binary search", "interactive"]}, {"contestId": 1275, "index": "E3", "name": "\u041a\u043e\u043d\u0442\u0440\u043e\u043b\u044c\u043d\u0430\u044f \u0441\u0443\u043c\u043c\u0430", "type": "PROGRAMMING", "points": 1000.0, "tags": ["*special"]}, {"contestId": 1275, "index": "E2", "name": "\u041a\u043e\u043d\u0442\u0440\u043e\u043b\u044c\u043d\u0430\u044f \u0441\u0443\u043c\u043c\u0430", "type": "PROGRAMMING", "points": 1000.0, "tags": ["*special"]}, {"contestId": 1275, "index": "E1", "name": "\u041a\u043e\u043d\u0442\u0440\u043e\u043b\u044c\u043d\u0430\u044f \u0441\u0443\u043c\u043c\u0430", "type": "PROGRAMMING", "points": 1000.0, "tags": ["*special"]}, {"contestId": 1275, "index": "D", "name": "Storage2", "type": "PROGRAMMING", "points": 2000.0, "tags": ["*special"]}, {"contestId": 1275, "index": "C", "name": "#define \u0417\u0430\u0434\u0430\u0447\u0430 B ...", "type": "PROGRAMMING", "points": 1000.0, "tags": ["*special"]}, {"contestId": 1275, "index": "B", "name": "Code Review", "type": "PROGRAMMING", "points": 250.0, "tags": ["*special"]}, {"contestId": 1275, "index": "A", "name": "\u0421\u043a\u0440\u044b\u0442\u044b\u0439 \u0434\u0440\u0443\u0433", "type": "PROGRAMMING", "points": 250.0, "tags": ["*special"]}, {"contestId": 1272, "index": "F", "name": "Two Bracket Sequences", "type": "PROGRAMMING", "rating": 2200, "tags": ["dp", "strings", "two pointers"]}, {"contestId": 1272, "index": "E", "name": "Nearest Opposite Parity", "type": "PROGRAMMING", "rating": 1900, "tags": ["dfs and similar", "graphs", "shortest paths"]}, {"contestId": 1272, "index": "D", "name": "Remove One Element", "type": "PROGRAMMING", "rating": 1500, "tags": ["brute force", "dp"]}, {"contestId": 1272, "index": "C", "name": "Yet Another Broken Keyboard", "type": "PROGRAMMING", "rating": 1200, "tags": ["combinatorics", "dp", "implementation"]}, {"contestId": 1272, "index": "B", "name": "Snow Walking Robot", "type": "PROGRAMMING", "rating": 1200, "tags": ["constructive algorithms", "greedy", "implementation"]}, {"contestId": 1272, "index": "A", "name": "Three Friends", "type": "PROGRAMMING", "rating": 900, "tags": ["brute force", "greedy", "math", "sortings"]}, {"contestId": 1271, "index": "F", "name": "Divide The Students", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["brute force"]}, {"contestId": 1271, "index": "E", "name": "Common Number", "type": "PROGRAMMING", "points": 2250.0, "rating": 2100, "tags": ["binary search", "combinatorics", "dp", "math"]}, {"contestId": 1271, "index": "D", "name": "Portals", "type": "PROGRAMMING", "points": 1750.0, "rating": 2100, "tags": ["data structures", "dp", "greedy", "implementation", "sortings"]}, {"contestId": 1271, "index": "C", "name": "Shawarma Tent", "type": "PROGRAMMING", "points": 1250.0, "rating": 1300, "tags": ["brute force", "geometry", "greedy", "implementation"]}, {"contestId": 1271, "index": "B", "name": "Blocks", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["greedy", "math"]}, {"contestId": 1271, "index": "A", "name": "Suits", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "greedy", "math"]}, {"contestId": 1270, "index": "I", "name": "Xor on Figures", "type": "PROGRAMMING", "points": 4500.0, "rating": 3500, "tags": ["constructive algorithms", "fft", "math"]}, {"contestId": 1270, "index": "H", "name": "Number of Components", "type": "PROGRAMMING", "points": 4000.0, "rating": 3300, "tags": ["data structures"]}, {"contestId": 1270, "index": "G", "name": "Subset with Zero Sum", "type": "PROGRAMMING", "points": 3750.0, "rating": 2700, "tags": ["constructive algorithms", "dfs and similar", "graphs", "math"]}, {"contestId": 1270, "index": "F", "name": "Awesome Substrings", "type": "PROGRAMMING", "points": 3250.0, "rating": 2600, "tags": ["math", "strings"]}, {"contestId": 1270, "index": "E", "name": "Divide Points", "type": "PROGRAMMING", "points": 2750.0, "rating": 2300, "tags": ["constructive algorithms", "geometry", "math"]}, {"contestId": 1270, "index": "D", "name": "Strange Device", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["constructive algorithms", "interactive", "math", "sortings"]}, {"contestId": 1270, "index": "C", "name": "Make Good", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["bitmasks", "constructive algorithms", "math"]}, {"contestId": 1270, "index": "B", "name": "Interesting Subarray", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "greedy", "math"]}, {"contestId": 1270, "index": "A", "name": "Card Game", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["games", "greedy", "math"]}, {"contestId": 1269, "index": "B", "name": "Modulo Equality", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["brute force", "sortings"]}, {"contestId": 1269, "index": "A", "name": "Equation", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "math"]}, {"contestId": 1268, "index": "E", "name": "Happy Cactus", "type": "PROGRAMMING", "points": 2750.0, "rating": 3400, "tags": ["dp"]}, {"contestId": 1268, "index": "D", "name": "Invertation in Tournament", "type": "PROGRAMMING", "points": 2250.0, "rating": 3200, "tags": ["brute force", "divide and conquer", "graphs", "math"]}, {"contestId": 1268, "index": "C", "name": "K Integers", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["binary search", "data structures"]}, {"contestId": 1268, "index": "B", "name": "Domino for Young", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["dp", "greedy", "math"]}, {"contestId": 1268, "index": "A", "name": "Long Beautiful Integer", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["constructive algorithms", "greedy", "implementation", "strings"]}, {"contestId": 1267, "index": "L", "name": "Lexicography", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "strings"]}, {"contestId": 1267, "index": "K", "name": "Key Storage", "type": "PROGRAMMING", "rating": 2100, "tags": ["combinatorics", "math"]}, {"contestId": 1267, "index": "J", "name": "Just Arrange the Icons", "type": "PROGRAMMING", "rating": 1800, "tags": ["greedy", "implementation", "math"]}, {"contestId": 1267, "index": "I", "name": "Intriguing Selection", "type": "PROGRAMMING", "rating": 2600, "tags": ["brute force", "constructive algorithms", "implementation", "interactive", "sortings"]}, {"contestId": 1267, "index": "H", "name": "Help BerLine", "type": "PROGRAMMING", "rating": 3200, "tags": ["constructive algorithms"]}, {"contestId": 1267, "index": "G", "name": "Game Relics", "type": "PROGRAMMING", "rating": 3000, "tags": ["math", "probabilities"]}, {"contestId": 1267, "index": "F", "name": "Foolpr\u00fcf Security", "type": "PROGRAMMING", "rating": 2600, "tags": ["graphs"]}, {"contestId": 1267, "index": "E", "name": "Elections", "type": "PROGRAMMING", "rating": 1700, "tags": ["greedy"]}, {"contestId": 1267, "index": "D", "name": "DevOps Best Practices", "type": "PROGRAMMING", "rating": 2800, "tags": ["constructive algorithms"]}, {"contestId": 1267, "index": "C", "name": "Cactus Revenge", "type": "PROGRAMMING", "rating": 3500, "tags": ["constructive algorithms"]}, {"contestId": 1267, "index": "B", "name": "Balls of Buma", "type": "PROGRAMMING", "rating": 900, "tags": []}, {"contestId": 1267, "index": "A", "name": "Apprentice Learning Trajectory", "type": "PROGRAMMING", "rating": 2400, "tags": []}, {"contestId": 1266, "index": "H", "name": "Red-Blue Graph", "type": "PROGRAMMING", "points": 4000.0, "rating": 3400, "tags": ["dp", "graphs", "math", "matrices", "meet-in-the-middle"]}, {"contestId": 1266, "index": "G", "name": "Permutation Concatenation", "type": "PROGRAMMING", "points": 3500.0, "rating": 3300, "tags": ["string suffix structures"]}, {"contestId": 1266, "index": "F", "name": "Almost Same Distance", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["dfs and similar", "graphs"]}, {"contestId": 1266, "index": "E", "name": "Spaceship Solitaire", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["data structures", "greedy", "implementation"]}, {"contestId": 1266, "index": "D", "name": "Decreasing Debts", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["constructive algorithms", "data structures", "graphs", "greedy", "implementation", "math", "two pointers"]}, {"contestId": 1266, "index": "C", "name": "Diverse Matrix", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["constructive algorithms", "greedy", "math", "number theory"]}, {"contestId": 1266, "index": "B", "name": "Dice Tower", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["constructive algorithms", "math"]}, {"contestId": 1266, "index": "A", "name": "Competitive Programmer", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["chinese remainder theorem", "math"]}, {"contestId": 1265, "index": "E", "name": "Beautiful Mirrors", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["data structures", "dp", "math", "probabilities"]}, {"contestId": 1265, "index": "B", "name": "Beautiful Numbers", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["data structures", "implementation", "math", "two pointers"]}, {"contestId": 1265, "index": "A", "name": "Beautiful String", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["constructive algorithms", "greedy"]}, {"contestId": 1264, "index": "F", "name": "Beautiful Fibonacci Problem", "type": "PROGRAMMING", "points": 3000.0, "rating": 3500, "tags": ["constructive algorithms", "number theory"]}, {"contestId": 1264, "index": "E", "name": "Beautiful League", "type": "PROGRAMMING", "points": 2250.0, "rating": 2700, "tags": ["constructive algorithms", "flows", "graph matchings"]}, {"contestId": 1264, "index": "D2", "name": "Beautiful Bracket Sequence (hard version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2900, "tags": ["combinatorics", "probabilities"]}, {"contestId": 1264, "index": "D1", "name": "Beautiful Bracket Sequence (easy version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2600, "tags": ["combinatorics", "dp", "probabilities"]}, {"contestId": 1264, "index": "C", "name": "Beautiful Mirrors with queries", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["data structures", "probabilities"]}, {"contestId": 1264, "index": "B", "name": "Beautiful Sequence", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["brute force", "constructive algorithms", "greedy"]}, {"contestId": 1264, "index": "A", "name": "Beautiful Regional Contest", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["greedy", "implementation"]}, {"contestId": 1263, "index": "F", "name": "Economic Difficulties", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["data structures", "dfs and similar", "dp", "flows", "graphs", "trees"]}, {"contestId": 1263, "index": "E", "name": "Editor", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["data structures", "implementation"]}, {"contestId": 1263, "index": "D", "name": "Secret Passwords", "type": "PROGRAMMING", "points": 1750.0, "rating": 1500, "tags": ["dfs and similar", "dsu", "graphs"]}, {"contestId": 1263, "index": "C", "name": "Everyone is a Winner!", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["binary search", "math", "meet-in-the-middle", "number theory"]}, {"contestId": 1263, "index": "B", "name": "PIN Codes", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["greedy", "implementation"]}, {"contestId": 1263, "index": "A", "name": "Sweet Problem", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["math"]}, {"contestId": 1261, "index": "F", "name": "Xor-Set", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["bitmasks", "divide and conquer", "math"]}, {"contestId": 1260, "index": "F", "name": "Colored Tree", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "trees"]}, {"contestId": 1260, "index": "E", "name": "Tournament", "type": "PROGRAMMING", "rating": 2400, "tags": ["brute force", "dp", "greedy"]}, {"contestId": 1260, "index": "D", "name": "A Game with Traps", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "dp", "greedy", "sortings"]}, {"contestId": 1260, "index": "C", "name": "Infinite Fence", "type": "PROGRAMMING", "rating": 1700, "tags": ["greedy", "math", "number theory"]}, {"contestId": 1260, "index": "B", "name": "Obtain Two Zeroes", "type": "PROGRAMMING", "rating": 1300, "tags": ["binary search", "math"]}, {"contestId": 1260, "index": "A", "name": "Heating", "type": "PROGRAMMING", "rating": 1000, "tags": ["math"]}, {"contestId": 1257, "index": "G", "name": "Divisor Set", "type": "PROGRAMMING", "rating": 2600, "tags": ["divide and conquer", "fft", "greedy", "math", "number theory"]}, {"contestId": 1257, "index": "F", "name": "Make Them Similar", "type": "PROGRAMMING", "rating": 2400, "tags": ["bitmasks", "brute force", "hashing", "meet-in-the-middle"]}, {"contestId": 1257, "index": "E", "name": "The Contest", "type": "PROGRAMMING", "rating": 2000, "tags": ["data structures", "dp", "greedy"]}, {"contestId": 1257, "index": "D", "name": "Yet Another Monster Killing Problem", "type": "PROGRAMMING", "rating": 1700, "tags": ["binary search", "data structures", "dp", "greedy", "sortings", "two pointers"]}, {"contestId": 1257, "index": "C", "name": "Dominated Subarray", "type": "PROGRAMMING", "rating": 1200, "tags": ["greedy", "implementation", "sortings", "strings", "two pointers"]}, {"contestId": 1257, "index": "B", "name": "Magic Stick", "type": "PROGRAMMING", "rating": 1000, "tags": ["math"]}, {"contestId": 1257, "index": "A", "name": "Two Rival Students", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "math"]}, {"contestId": 1256, "index": "F", "name": "Equalizing Two Strings", "type": "PROGRAMMING", "rating": 2000, "tags": ["constructive algorithms", "sortings", "strings"]}, {"contestId": 1256, "index": "E", "name": "Yet Another Division Into Teams", "type": "PROGRAMMING", "rating": 2000, "tags": ["dp", "greedy", "sortings"]}, {"contestId": 1256, "index": "D", "name": "Binary String Minimizing", "type": "PROGRAMMING", "rating": 1500, "tags": ["greedy"]}, {"contestId": 1256, "index": "C", "name": "Platforms Jumping", "type": "PROGRAMMING", "rating": 1700, "tags": ["greedy"]}, {"contestId": 1256, "index": "B", "name": "Minimize the Permutation", "type": "PROGRAMMING", "rating": 1400, "tags": ["greedy"]}, {"contestId": 1256, "index": "A", "name": "Payment Without Change", "type": "PROGRAMMING", "rating": 1000, "tags": ["math"]}, {"contestId": 1255, "index": "C", "name": "League of Leesins", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["constructive algorithms", "implementation"]}, {"contestId": 1255, "index": "B", "name": "Fridge Lockers", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["graphs", "implementation"]}, {"contestId": 1255, "index": "A", "name": "Changing Volume", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math"]}, {"contestId": 1254, "index": "E", "name": "Send Tree to Charlie", "type": "PROGRAMMING", "points": 2500.0, "rating": 3300, "tags": ["combinatorics", "dfs and similar", "dsu", "trees"]}, {"contestId": 1254, "index": "D", "name": "Tree Queries", "type": "PROGRAMMING", "points": 1750.0, "rating": 2700, "tags": ["data structures", "probabilities", "trees"]}, {"contestId": 1254, "index": "C", "name": "Point Ordering", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["constructive algorithms", "geometry", "interactive", "math"]}, {"contestId": 1254, "index": "B2", "name": "Send Boxes to Alice (Hard Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2100, "tags": ["constructive algorithms", "greedy", "math", "number theory", "ternary search", "two pointers"]}, {"contestId": 1254, "index": "B1", "name": "Send Boxes to Alice (Easy Version)", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["constructive algorithms", "greedy", "math", "number theory", "ternary search", "two pointers"]}, {"contestId": 1254, "index": "A", "name": "Feeding Chicken", "type": "PROGRAMMING", "points": 750.0, "rating": 1700, "tags": ["constructive algorithms", "greedy", "implementation"]}, {"contestId": 1253, "index": "F", "name": "Cheap Robot", "type": "PROGRAMMING", "points": 2750.0, "rating": 2500, "tags": ["binary search", "dsu", "graphs", "shortest paths", "trees"]}, {"contestId": 1253, "index": "E", "name": "Antenna Coverage", "type": "PROGRAMMING", "points": 2250.0, "rating": 2200, "tags": ["data structures", "dp", "greedy", "sortings"]}, {"contestId": 1253, "index": "D", "name": "Harmonious Graph", "type": "PROGRAMMING", "points": 1750.0, "rating": 1700, "tags": ["constructive algorithms", "dfs and similar", "dsu", "graphs", "greedy", "sortings"]}, {"contestId": 1253, "index": "C", "name": "Sweets Eating", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["dp", "greedy", "math", "sortings"]}, {"contestId": 1253, "index": "B", "name": "Silly Mistake", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["greedy", "implementation"]}, {"contestId": 1253, "index": "A", "name": "Single Push", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"]}, {"contestId": 1252, "index": "L", "name": "Road Construction", "type": "PROGRAMMING", "rating": 2300, "tags": ["flows", "graphs"]}, {"contestId": 1252, "index": "K", "name": "Addition Robot", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "math", "matrices"]}, {"contestId": 1252, "index": "J", "name": "Tiling Terrace", "type": "PROGRAMMING", "rating": 2300, "tags": ["brute force", "dp"]}, {"contestId": 1252, "index": "I", "name": "Mission Possible", "type": "PROGRAMMING", "rating": 3000, "tags": []}, {"contestId": 1252, "index": "H", "name": "Twin Buildings", "type": "PROGRAMMING", "rating": 1800, "tags": ["greedy", "implementation"]}, {"contestId": 1252, "index": "G", "name": "Performance Review", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures"]}, {"contestId": 1252, "index": "F", "name": "Regular Forestation", "type": "PROGRAMMING", "rating": 2400, "tags": ["hashing", "trees"]}, {"contestId": 1252, "index": "E", "name": "Songwriter", "type": "PROGRAMMING", "rating": 2200, "tags": ["greedy", "two pointers"]}, {"contestId": 1252, "index": "D", "name": "Find String in a Grid", "type": "PROGRAMMING", "rating": 3000, "tags": ["data structures", "dp", "strings", "trees"]}, {"contestId": 1252, "index": "C", "name": "Even Path", "type": "PROGRAMMING", "rating": 1600, "tags": ["data structures", "implementation"]}, {"contestId": 1252, "index": "B", "name": "Cleaning Robots", "type": "PROGRAMMING", "rating": 2300, "tags": ["dp", "trees"]}, {"contestId": 1252, "index": "A", "name": "Copying Homework", "type": "PROGRAMMING", "rating": 1000, "tags": []}, {"contestId": 1251, "index": "F", "name": "Red-White Fence", "type": "PROGRAMMING", "rating": 2500, "tags": ["combinatorics", "fft"]}, {"contestId": 1251, "index": "E2", "name": "Voting (Hard Version)", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "data structures", "greedy"]}, {"contestId": 1251, "index": "E1", "name": "Voting (Easy Version)", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "dp", "greedy"]}, {"contestId": 1251, "index": "D", "name": "Salary Changing", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "greedy", "sortings"]}, {"contestId": 1251, "index": "C", "name": "Minimize The Integer", "type": "PROGRAMMING", "rating": 1600, "tags": ["greedy", "two pointers"]}, {"contestId": 1251, "index": "B", "name": "Binary Palindromes", "type": "PROGRAMMING", "rating": 1400, "tags": ["greedy", "strings"]}, {"contestId": 1251, "index": "A", "name": "Broken Keyboard", "type": "PROGRAMMING", "rating": 1000, "tags": ["brute force", "strings", "two pointers"]}, {"contestId": 1250, "index": "N", "name": "Wires", "type": "PROGRAMMING", "rating": 2000, "tags": ["dfs and similar", "graphs", "greedy"]}, {"contestId": 1250, "index": "M", "name": "SmartGarden", "type": "PROGRAMMING", "rating": 2500, "tags": ["constructive algorithms", "divide and conquer"]}, {"contestId": 1250, "index": "L", "name": "Divide The Students", "type": "PROGRAMMING", "rating": 1500, "tags": ["binary search", "greedy", "math"]}, {"contestId": 1250, "index": "K", "name": "Projectors", "type": "PROGRAMMING", "rating": 3100, "tags": ["flows", "graphs"]}, {"contestId": 1250, "index": "J", "name": "The Parade", "type": "PROGRAMMING", "rating": 1800, "tags": ["binary search", "greedy"]}, {"contestId": 1250, "index": "I", "name": "Show Must Go On", "type": "PROGRAMMING", "rating": 3100, "tags": ["binary search", "brute force", "greedy", "shortest paths"]}, {"contestId": 1250, "index": "H", "name": "Happy Birthday", "type": "PROGRAMMING", "rating": 1500, "tags": ["math"]}, {"contestId": 1250, "index": "G", "name": "Discarding Game", "type": "PROGRAMMING", "rating": 2300, "tags": ["dp", "greedy", "two pointers"]}, {"contestId": 1250, "index": "F", "name": "Data Center", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "implementation"]}, {"contestId": 1250, "index": "E", "name": "The Coronation", "type": "PROGRAMMING", "rating": 2300, "tags": ["graphs", "implementation"]}, {"contestId": 1250, "index": "D", "name": "Conference Problem", "type": "PROGRAMMING", "rating": 3000, "tags": ["dp"]}, {"contestId": 1250, "index": "C", "name": "Trip to Saint Petersburg", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures"]}, {"contestId": 1250, "index": "B", "name": "The Feast and the Bus", "type": "PROGRAMMING", "rating": 1800, "tags": ["brute force", "constructive algorithms", "greedy", "math"]}, {"contestId": 1250, "index": "A", "name": "Berstagram", "type": "PROGRAMMING", "rating": 1400, "tags": ["implementation"]}, {"contestId": 1249, "index": "F", "name": "Maximum Weight Subset", "type": "PROGRAMMING", "rating": 2200, "tags": ["dp", "trees"]}, {"contestId": 1249, "index": "E", "name": "By Elevator or Stairs?", "type": "PROGRAMMING", "rating": 1700, "tags": ["dp", "shortest paths"]}, {"contestId": 1249, "index": "D2", "name": "Too Many Segments (hard version)", "type": "PROGRAMMING", "rating": 1800, "tags": ["data structures", "greedy", "sortings"]}, {"contestId": 1249, "index": "D1", "name": "Too Many Segments (easy version)", "type": "PROGRAMMING", "rating": 1800, "tags": ["greedy"]}, {"contestId": 1249, "index": "C2", "name": "Good Numbers (hard version)", "type": "PROGRAMMING", "rating": 1500, "tags": ["binary search", "greedy", "math", "meet-in-the-middle"]}, {"contestId": 1249, "index": "C1", "name": "Good Numbers (easy version)", "type": "PROGRAMMING", "rating": 1300, "tags": ["brute force", "greedy", "implementation"]}, {"contestId": 1249, "index": "B2", "name": "Books Exchange (hard version)", "type": "PROGRAMMING", "rating": 1300, "tags": ["dfs and similar", "dsu", "math"]}, {"contestId": 1249, "index": "B1", "name": "Books Exchange (easy version)", "type": "PROGRAMMING", "rating": 1000, "tags": ["dsu", "math"]}, {"contestId": 1249, "index": "A", "name": "Yet Another Dividing into Teams", "type": "PROGRAMMING", "rating": 800, "tags": ["math"]}, {"contestId": 1248, "index": "D1", "name": "The World Is Just a Programming Task (Easy Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2000, "tags": ["brute force", "dp", "greedy", "implementation"]}, {"contestId": 1248, "index": "B", "name": "Grow The Tree", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["greedy", "math", "sortings"]}, {"contestId": 1248, "index": "A", "name": "Integer Points", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["geometry", "math"]}, {"contestId": 1246, "index": "F", "name": "Cursor Distance", "type": "PROGRAMMING", "points": 3250.0, "rating": 3500, "tags": []}, {"contestId": 1245, "index": "F", "name": "Daniel and Spring Cleaning", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["bitmasks", "brute force", "combinatorics", "dp"]}, {"contestId": 1245, "index": "E", "name": "Hyakugoku and Ladders", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["dp", "probabilities", "shortest paths"]}, {"contestId": 1245, "index": "D", "name": "Shichikuji and Power Grid", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["dsu", "graphs", "greedy", "shortest paths", "trees"]}, {"contestId": 1245, "index": "C", "name": "Constanze's Machine", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["dp"]}, {"contestId": 1245, "index": "B", "name": "Restricted RPS", "type": "PROGRAMMING", "points": 750.0, "rating": 1200, "tags": ["constructive algorithms", "dp", "greedy"]}, {"contestId": 1245, "index": "A", "name": "Good ol' Numbers Coloring", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["math", "number theory"]}, {"contestId": 1244, "index": "G", "name": "Running in Pairs", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["constructive algorithms", "greedy", "math"]}, {"contestId": 1244, "index": "F", "name": "Chips", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["constructive algorithms", "implementation"]}, {"contestId": 1244, "index": "E", "name": "Minimizing Difference", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["binary search", "constructive algorithms", "greedy", "sortings", "ternary search", "two pointers"]}, {"contestId": 1244, "index": "D", "name": "Paint the Tree", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["brute force", "constructive algorithms", "dp", "graphs", "implementation", "trees"]}, {"contestId": 1244, "index": "C", "name": "The Football Season", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["brute force", "math", "number theory"]}, {"contestId": 1244, "index": "B", "name": "Rooms and Staircases", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["brute force", "implementation"]}, {"contestId": 1244, "index": "A", "name": "Pens and Pencils", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math"]}, {"contestId": 1243, "index": "B2", "name": "Character Swap (Hard Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 1600, "tags": ["strings"]}, {"contestId": 1243, "index": "B1", "name": "Character Swap (Easy Version)", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["strings"]}, {"contestId": 1243, "index": "A", "name": "Maximum Square", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 1242, "index": "E", "name": "Planar Perimeter", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["constructive algorithms", "graphs"]}, {"contestId": 1242, "index": "D", "name": "Number Discovery", "type": "PROGRAMMING", "points": 2000.0, "rating": 3400, "tags": ["math"]}, {"contestId": 1242, "index": "C", "name": "Sum Balance", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["bitmasks", "dfs and similar", "dp", "graphs"]}, {"contestId": 1242, "index": "B", "name": "0-1 MST", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["dfs and similar", "dsu", "graphs", "sortings"]}, {"contestId": 1242, "index": "A", "name": "Tile Painting", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["constructive algorithms", "math", "number theory"]}, {"contestId": 1240, "index": "F", "name": "Football", "type": "PROGRAMMING", "points": 2750.0, "rating": 3100, "tags": ["graphs"]}, {"contestId": 1239, "index": "F", "name": "Swiper, no swiping!", "type": "PROGRAMMING", "points": 3000.0, "rating": 3400, "tags": ["graphs", "implementation"]}, {"contestId": 1239, "index": "E", "name": "Turtle", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["dp", "implementation"]}, {"contestId": 1239, "index": "D", "name": "Catowice City", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["2-sat", "dfs and similar", "graph matchings", "graphs"]}, {"contestId": 1239, "index": "C", "name": "Queue in the Train", "type": "PROGRAMMING", "points": 1250.0, "rating": 2300, "tags": ["data structures", "greedy", "implementation"]}, {"contestId": 1239, "index": "B", "name": "The World Is Just a Programming Task (Hard Version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 2500, "tags": ["implementation"]}, {"contestId": 1239, "index": "A", "name": "Ivan the Fool and the Probability Theory", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 1238, "index": "G", "name": "Adilbek and the Watering System", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "greedy", "sortings"]}, {"contestId": 1238, "index": "F", "name": "The Maximum Subtree", "type": "PROGRAMMING", "rating": 2200, "tags": ["dfs and similar", "dp", "graphs", "trees"]}, {"contestId": 1238, "index": "E", "name": "Keyboard Purchase", "type": "PROGRAMMING", "rating": 2200, "tags": ["bitmasks", "dp"]}, {"contestId": 1238, "index": "D", "name": "AB-string", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "combinatorics", "dp", "strings"]}, {"contestId": 1238, "index": "C", "name": "Standard Free2play", "type": "PROGRAMMING", "rating": 1600, "tags": ["dp", "greedy", "math"]}, {"contestId": 1238, "index": "B", "name": "Kill `Em All", "type": "PROGRAMMING", "rating": 1300, "tags": ["greedy", "sortings"]}, {"contestId": 1238, "index": "A", "name": "Prime Subtraction", "type": "PROGRAMMING", "rating": 900, "tags": ["math", "number theory"]}, {"contestId": 1237, "index": "H", "name": "Balanced Reversals", "type": "PROGRAMMING", "points": 4000.0, "rating": 3300, "tags": ["constructive algorithms"]}, {"contestId": 1237, "index": "G", "name": "Balanced Distribution", "type": "PROGRAMMING", "points": 3750.0, "rating": 3500, "tags": ["data structures", "dp", "greedy"]}, {"contestId": 1237, "index": "F", "name": "Balanced Domino Placements", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["combinatorics", "dp"]}, {"contestId": 1237, "index": "E", "name": "Balanced Binary Search Trees", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["dp", "math"]}, {"contestId": 1237, "index": "D", "name": "Balanced Playlist", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["binary search", "data structures", "implementation"]}, {"contestId": 1237, "index": "C2", "name": "Balanced Removals (Harder)", "type": "PROGRAMMING", "points": 750.0, "rating": 1900, "tags": ["binary search", "constructive algorithms", "divide and conquer", "greedy", "implementation", "sortings"]}, {"contestId": 1237, "index": "C1", "name": "Balanced Removals (Easier)", "type": "PROGRAMMING", "points": 750.0, "rating": 1700, "tags": ["constructive algorithms", "geometry", "greedy"]}, {"contestId": 1237, "index": "B", "name": "Balanced Tunnel", "type": "PROGRAMMING", "points": 750.0, "rating": 1300, "tags": ["data structures", "sortings", "two pointers"]}, {"contestId": 1237, "index": "A", "name": "Balanced Rating Changes", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation", "math"]}, {"contestId": 1236, "index": "F", "name": "Alice and the Cactus", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["dfs and similar", "graphs", "math", "probabilities"]}, {"contestId": 1236, "index": "E", "name": "Alice and the Unfair Game", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["binary search", "data structures", "dp", "dsu"]}, {"contestId": 1236, "index": "D", "name": "Alice and the Doll", "type": "PROGRAMMING", "points": 1750.0, "rating": 2300, "tags": ["brute force", "data structures", "greedy", "implementation"]}, {"contestId": 1236, "index": "C", "name": "Labs", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["constructive algorithms", "greedy", "implementation"]}, {"contestId": 1236, "index": "B", "name": "Alice and the List of Presents", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["combinatorics", "math"]}, {"contestId": 1236, "index": "A", "name": "Stones", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "greedy", "math"]}, {"contestId": 1234, "index": "F", "name": "Yet Another Substring Reverse", "type": "PROGRAMMING", "rating": 2200, "tags": ["bitmasks", "dp"]}, {"contestId": 1234, "index": "E", "name": "Special Permutations", "type": "PROGRAMMING", "rating": 2000, "tags": ["math"]}, {"contestId": 1234, "index": "D", "name": "Distinct Characters Queries", "type": "PROGRAMMING", "rating": 1600, "tags": ["data structures"]}, {"contestId": 1234, "index": "C", "name": "Pipes", "type": "PROGRAMMING", "rating": 1500, "tags": ["dp", "implementation"]}, {"contestId": 1234, "index": "B2", "name": "Social Network (hard version)", "type": "PROGRAMMING", "rating": 1300, "tags": ["data structures", "implementation"]}, {"contestId": 1234, "index": "B1", "name": "Social Network (easy version)", "type": "PROGRAMMING", "rating": 1000, "tags": ["implementation"]}, {"contestId": 1234, "index": "A", "name": "Equalize Prices Again", "type": "PROGRAMMING", "rating": 800, "tags": ["math"]}, {"contestId": 1231, "index": "E", "name": "Middle-Out", "type": "PROGRAMMING", "points": 1750.0, "rating": 2200, "tags": ["constructive algorithms", "greedy", "strings"]}, {"contestId": 1231, "index": "C", "name": "Increasing Matrix", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["greedy"]}, {"contestId": 1230, "index": "B", "name": "Ania and Minimizing", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["greedy", "implementation"]}, {"contestId": 1230, "index": "A", "name": "Dawid and Bags of Candies", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "implementation"]}, {"contestId": 1228, "index": "F", "name": "One Node is Gone", "type": "PROGRAMMING", "points": 2750.0, "rating": 2500, "tags": ["constructive algorithms", "implementation", "trees"]}, {"contestId": 1228, "index": "E", "name": "Another Filling the Grid", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 1228, "index": "D", "name": "Complete Tripartite", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["brute force", "constructive algorithms", "graphs", "hashing", "implementation"]}, {"contestId": 1228, "index": "C", "name": "Primes and Multiplication", "type": "PROGRAMMING", "points": 1250.0, "rating": 1700, "tags": ["math", "number theory"]}, {"contestId": 1228, "index": "B", "name": "Filling the Grid", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["implementation", "math"]}, {"contestId": 1228, "index": "A", "name": "Distinct Digits", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "implementation"]}, {"contestId": 1227, "index": "G", "name": "Not Same", "type": "PROGRAMMING", "points": 3250.0, "rating": 2600, "tags": ["constructive algorithms"]}, {"contestId": 1227, "index": "F2", "name": "Wrong Answer on test 233 (Hard Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["combinatorics", "math"]}, {"contestId": 1227, "index": "F1", "name": "Wrong Answer on test 233 (Easy Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2200, "tags": ["dp"]}, {"contestId": 1227, "index": "E", "name": "Arson In Berland Forest", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["binary search", "graphs", "graphs", "shortest paths"]}, {"contestId": 1227, "index": "D2", "name": "Optimal Subsequences (Hard Version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["data structures", "greedy"]}, {"contestId": 1227, "index": "D1", "name": "Optimal Subsequences (Easy Version)", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["data structures", "greedy"]}, {"contestId": 1227, "index": "C", "name": "Messy", "type": "PROGRAMMING", "points": 1250.0, "rating": 1700, "tags": ["constructive algorithms"]}, {"contestId": 1227, "index": "B", "name": "Box", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms"]}, {"contestId": 1227, "index": "A", "name": "Math Problem", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["math"]}, {"contestId": 1225, "index": "G", "name": "To Make 1", "type": "PROGRAMMING", "points": 3750.0, "rating": 3100, "tags": ["bitmasks", "constructive algorithms", "dp", "greedy", "number theory"]}, {"contestId": 1225, "index": "F", "name": "Tree Factory", "type": "PROGRAMMING", "points": 3250.0, "rating": 2500, "tags": ["constructive algorithms", "greedy", "trees"]}, {"contestId": 1225, "index": "E", "name": "Rock Is Push", "type": "PROGRAMMING", "points": 2750.0, "rating": 2200, "tags": ["binary search", "dp"]}, {"contestId": 1225, "index": "D", "name": "Power Products", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["hashing", "math", "number theory"]}, {"contestId": 1225, "index": "C", "name": "p-binary", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["bitmasks", "brute force", "math"]}, {"contestId": 1225, "index": "B2", "name": "TV Subscriptions (Hard Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 1300, "tags": ["implementation", "two pointers"]}, {"contestId": 1225, "index": "B1", "name": "TV Subscriptions (Easy Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["implementation"]}, {"contestId": 1225, "index": "A", "name": "Forgetting Things", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["math"]}, {"contestId": 1223, "index": "G", "name": "Wooden Raft", "type": "PROGRAMMING", "points": 3250.0, "rating": 3200, "tags": ["binary search", "math", "number theory"]}, {"contestId": 1223, "index": "F", "name": "Stack Exterminable Arrays", "type": "PROGRAMMING", "points": 2750.0, "rating": 2600, "tags": ["data structures", "divide and conquer", "dp", "hashing"]}, {"contestId": 1223, "index": "E", "name": "Paint the Tree", "type": "PROGRAMMING", "points": 2250.0, "rating": 2100, "tags": ["dp", "sortings", "trees"]}, {"contestId": 1223, "index": "D", "name": "Sequence Sorting", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["dp", "greedy", "two pointers"]}, {"contestId": 1223, "index": "C", "name": "Save the Nature", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["binary search", "greedy"]}, {"contestId": 1223, "index": "B", "name": "Strings Equalization", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["strings"]}, {"contestId": 1223, "index": "A", "name": "CME", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math"]}, {"contestId": 1221, "index": "G", "name": "Graph And Numbers", "type": "PROGRAMMING", "rating": 2900, "tags": ["bitmasks", "brute force", "combinatorics", "dp", "meet-in-the-middle"]}, {"contestId": 1221, "index": "F", "name": "Choose a Square", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "data structures", "sortings"]}, {"contestId": 1221, "index": "E", "name": "Game With String", "type": "PROGRAMMING", "rating": 2500, "tags": ["games"]}, {"contestId": 1221, "index": "D", "name": "Make The Fence Great Again", "type": "PROGRAMMING", "rating": 1800, "tags": ["dp"]}, {"contestId": 1221, "index": "C", "name": "Perfect Team", "type": "PROGRAMMING", "rating": 1200, "tags": ["binary search", "math"]}, {"contestId": 1221, "index": "B", "name": "Knights", "type": "PROGRAMMING", "rating": 1100, "tags": ["constructive algorithms", "greedy"]}, {"contestId": 1221, "index": "A", "name": "2048 Game", "type": "PROGRAMMING", "rating": 1000, "tags": ["brute force", "greedy", "math"]}, {"contestId": 1220, "index": "G", "name": "Geolocation", "type": "PROGRAMMING", "points": 3500.0, "rating": 3400, "tags": ["geometry"]}, {"contestId": 1220, "index": "F", "name": "Gardener Alex", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["binary search", "data structures"]}, {"contestId": 1220, "index": "E", "name": "Tourism", "type": "PROGRAMMING", "points": 2750.0, "rating": 2200, "tags": ["dfs and similar", "dp", "dsu", "graphs", "greedy", "trees"]}, {"contestId": 1220, "index": "D", "name": "Alex and Julian", "type": "PROGRAMMING", "points": 2250.0, "rating": 1900, "tags": ["bitmasks", "math", "number theory"]}, {"contestId": 1220, "index": "C", "name": "Substring Game in the Lesson", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["games", "greedy", "strings"]}, {"contestId": 1220, "index": "B", "name": "Multiplication Table", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["math", "number theory"]}, {"contestId": 1220, "index": "A", "name": "Cards", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "sortings", "strings"]}, {"contestId": 1219, "index": "G", "name": "Harvester", "type": "PROGRAMMING", "rating": 2000, "tags": ["implementation"]}, {"contestId": 1219, "index": "C", "name": "Periodic integer number", "type": "PROGRAMMING", "rating": 1700, "tags": ["implementation", "strings"]}, {"contestId": 1218, "index": "I", "name": "The Light Square", "type": "PROGRAMMING", "rating": 2100, "tags": ["2-sat", "dfs and similar", "greedy"]}, {"contestId": 1218, "index": "H", "name": "Function Composition", "type": "PROGRAMMING", "rating": 2900, "tags": ["dfs and similar"]}, {"contestId": 1218, "index": "G", "name": "Alpha planetary system", "type": "PROGRAMMING", "rating": 3000, "tags": ["constructive algorithms", "graphs", "shortest paths"]}, {"contestId": 1218, "index": "F", "name": "Workout plan", "type": "PROGRAMMING", "rating": 1500, "tags": ["data structures", "greedy"]}, {"contestId": 1218, "index": "E", "name": "Product Tuples", "type": "PROGRAMMING", "rating": 2500, "tags": ["divide and conquer", "fft"]}, {"contestId": 1218, "index": "D", "name": "Xor Spanning Tree", "type": "PROGRAMMING", "rating": 2400, "tags": ["divide and conquer", "fft", "graphs"]}, {"contestId": 1218, "index": "C", "name": "Jumping Transformers", "type": "PROGRAMMING", "rating": 2600, "tags": ["dp"]}, {"contestId": 1218, "index": "B", "name": "Guarding warehouses", "type": "PROGRAMMING", "rating": 3000, "tags": ["data structures", "geometry"]}, {"contestId": 1218, "index": "A", "name": "BubbleReactor", "type": "PROGRAMMING", "rating": 2800, "tags": ["dp", "graphs"]}, {"contestId": 1217, "index": "F", "name": "Forced Online Queries Problem", "type": "PROGRAMMING", "rating": 2600, "tags": ["data structures", "divide and conquer", "dsu", "graphs", "trees"]}, {"contestId": 1217, "index": "E", "name": "Sum Queries?", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "greedy", "implementation", "math"]}, {"contestId": 1217, "index": "D", "name": "Coloring Edges", "type": "PROGRAMMING", "rating": 2100, "tags": ["constructive algorithms", "dfs and similar", "graphs"]}, {"contestId": 1217, "index": "C", "name": "The Number Of Good Substrings", "type": "PROGRAMMING", "rating": 1700, "tags": ["binary search", "bitmasks", "brute force"]}, {"contestId": 1217, "index": "B", "name": "Zmei Gorynich", "type": "PROGRAMMING", "rating": 1600, "tags": ["greedy", "math"]}, {"contestId": 1217, "index": "A", "name": "Creating a Character", "type": "PROGRAMMING", "rating": 1300, "tags": ["binary search", "math"]}, {"contestId": 1216, "index": "F", "name": "Wi-Fi", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "dp", "greedy"]}, {"contestId": 1216, "index": "E2", "name": "Numerical Sequence (hard version)", "type": "PROGRAMMING", "rating": 2200, "tags": ["binary search", "math"]}, {"contestId": 1216, "index": "E1", "name": "Numerical Sequence (easy version)", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "brute force", "math"]}, {"contestId": 1216, "index": "D", "name": "Swords", "type": "PROGRAMMING", "rating": 1300, "tags": ["math"]}, {"contestId": 1216, "index": "C", "name": "White Sheet", "type": "PROGRAMMING", "rating": 1700, "tags": ["geometry", "math"]}, {"contestId": 1216, "index": "B", "name": "Shooting", "type": "PROGRAMMING", "rating": 900, "tags": ["greedy", "implementation", "sortings"]}, {"contestId": 1216, "index": "A", "name": "Prefixes", "type": "PROGRAMMING", "rating": 800, "tags": ["strings"]}, {"contestId": 1215, "index": "F", "name": "Radio Stations", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["2-sat"]}, {"contestId": 1215, "index": "E", "name": "Marbles", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["bitmasks", "dp"]}, {"contestId": 1215, "index": "D", "name": "Ticket Game", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["games", "greedy", "math"]}, {"contestId": 1215, "index": "C", "name": "Swap Letters", "type": "PROGRAMMING", "points": 1750.0, "rating": 1500, "tags": ["constructive algorithms", "greedy"]}, {"contestId": 1215, "index": "B", "name": "The Number of Products", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["combinatorics", "dp", "implementation"]}, {"contestId": 1215, "index": "A", "name": "Yellow Cards", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["greedy", "implementation", "math"]}, {"contestId": 1214, "index": "H", "name": "Tiles Placement", "type": "PROGRAMMING", "points": 3500.0, "rating": 2800, "tags": ["constructive algorithms", "dfs and similar", "trees"]}, {"contestId": 1214, "index": "G", "name": "Feeling Good", "type": "PROGRAMMING", "points": 3500.0, "rating": 3200, "tags": ["bitmasks", "data structures"]}, {"contestId": 1214, "index": "F", "name": "Employment", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["greedy", "sortings"]}, {"contestId": 1214, "index": "E", "name": "Petya and Construction Set", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["constructive algorithms", "graphs", "math", "sortings", "trees"]}, {"contestId": 1214, "index": "D", "name": "Treasure Island", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["dfs and similar", "dp", "flows", "hashing"]}, {"contestId": 1214, "index": "C", "name": "Bad Sequence", "type": "PROGRAMMING", "points": 1500.0, "rating": 1200, "tags": ["data structures", "greedy"]}, {"contestId": 1214, "index": "B", "name": "Badges", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["brute force", "math"]}, {"contestId": 1214, "index": "A", "name": "Optimal Currency Exchange", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["brute force", "math"]}, {"contestId": 1213, "index": "G", "name": "Path Queries", "type": "PROGRAMMING", "rating": 1800, "tags": ["divide and conquer", "dsu", "graphs", "sortings", "trees"]}, {"contestId": 1213, "index": "F", "name": "Unstable String Sort", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "dfs and similar", "dsu", "graphs", "greedy", "implementation", "strings"]}, {"contestId": 1213, "index": "E", "name": "Two Small Strings", "type": "PROGRAMMING", "rating": 1900, "tags": ["brute force", "constructive algorithms"]}, {"contestId": 1213, "index": "D2", "name": "Equalizing by Division (hard version)", "type": "PROGRAMMING", "rating": 1600, "tags": ["brute force", "math", "sortings"]}, {"contestId": 1213, "index": "D1", "name": "Equalizing by Division (easy version)", "type": "PROGRAMMING", "rating": 1500, "tags": ["brute force", "implementation"]}, {"contestId": 1213, "index": "C", "name": "Book Reading", "type": "PROGRAMMING", "rating": 1200, "tags": ["math"]}, {"contestId": 1213, "index": "B", "name": "Bad Prices", "type": "PROGRAMMING", "rating": 1100, "tags": ["data structures", "implementation"]}, {"contestId": 1213, "index": "A", "name": "Chips Moving", "type": "PROGRAMMING", "rating": 900, "tags": ["math"]}, {"contestId": 1211, "index": "I", "name": "Unusual Graph", "type": "PROGRAMMING", "rating": 3000, "tags": ["*special", "graphs"]}, {"contestId": 1211, "index": "H", "name": "Road Repair in Treeland", "type": "PROGRAMMING", "rating": 3100, "tags": ["*special", "binary search", "dp", "trees"]}, {"contestId": 1211, "index": "G", "name": "King's Path", "type": "PROGRAMMING", "rating": 2500, "tags": ["*special", "math", "trees"]}, {"contestId": 1211, "index": "F", "name": "kotlinkotlinkotlinkotlin...", "type": "PROGRAMMING", "rating": 2300, "tags": ["*special", "graphs", "implementation", "strings"]}, {"contestId": 1211, "index": "E", "name": "Double Permutation Inc.", "type": "PROGRAMMING", "rating": 2000, "tags": ["*special", "binary search", "greedy"]}, {"contestId": 1211, "index": "D", "name": "Teams", "type": "PROGRAMMING", "rating": 2000, "tags": ["*special", "binary search", "greedy", "math"]}, {"contestId": 1211, "index": "C", "name": "Ice Cream", "type": "PROGRAMMING", "rating": 1700, "tags": ["*special", "greedy", "sortings"]}, {"contestId": 1211, "index": "B", "name": "Traveling Around the Golden Ring of Berland", "type": "PROGRAMMING", "rating": 1500, "tags": ["*special", "implementation"]}, {"contestId": 1211, "index": "A", "name": "Three Problems", "type": "PROGRAMMING", "rating": 1000, "tags": ["*special", "implementation"]}, {"contestId": 1210, "index": "G", "name": "Mateusz and Escape Room", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["dp"]}, {"contestId": 1210, "index": "F2", "name": "Marek and Matching (hard version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 3200, "tags": ["brute force", "probabilities"]}, {"contestId": 1210, "index": "F1", "name": "Marek and Matching (easy version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 3100, "tags": ["brute force", "probabilities"]}, {"contestId": 1210, "index": "E", "name": "Wojtek and Card Tricks", "type": "PROGRAMMING", "points": 2250.0, "rating": 2700, "tags": ["math"]}, {"contestId": 1210, "index": "D", "name": "Konrad and Company Evaluation", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["graphs"]}, {"contestId": 1210, "index": "C", "name": "Kamil and Making a Stream", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["math", "number theory", "trees"]}, {"contestId": 1210, "index": "B", "name": "Marcin and Training Camp", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["brute force", "greedy"]}, {"contestId": 1210, "index": "A", "name": "Anadi and Domino", "type": "PROGRAMMING", "points": 250.0, "rating": 1700, "tags": ["brute force", "graphs"]}, {"contestId": 1209, "index": "H", "name": "Moving Walkways", "type": "PROGRAMMING", "points": 4000.0, "rating": 3300, "tags": ["data structures", "greedy", "math"]}, {"contestId": 1209, "index": "G2", "name": "Into Blocks (hard version)", "type": "PROGRAMMING", "points": 2250.0, "rating": 3200, "tags": ["data structures"]}, {"contestId": 1209, "index": "G1", "name": "Into Blocks (easy version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["data structures", "dsu", "greedy", "implementation", "two pointers"]}, {"contestId": 1209, "index": "F", "name": "Koala and Notebook", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["data structures", "dfs and similar", "graphs", "shortest paths", "strings", "trees"]}, {"contestId": 1209, "index": "E2", "name": "Rotate Columns (hard version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["bitmasks", "dp", "greedy", "sortings"]}, {"contestId": 1209, "index": "E1", "name": "Rotate Columns (easy version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["bitmasks", "brute force", "dp", "greedy", "sortings"]}, {"contestId": 1209, "index": "D", "name": "Cow and Snacks", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["dfs and similar", "dsu", "graphs"]}, {"contestId": 1209, "index": "C", "name": "Paint the Digits", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["constructive algorithms", "greedy", "implementation"]}, {"contestId": 1209, "index": "B", "name": "Koala and Lights", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["implementation", "math", "number theory"]}, {"contestId": 1209, "index": "A", "name": "Paint the Numbers", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "implementation", "math"]}, {"contestId": 1208, "index": "H", "name": "Red Blue Tree", "type": "PROGRAMMING", "points": 3750.0, "rating": 3500, "tags": ["data structures", "implementation", "trees"]}, {"contestId": 1208, "index": "G", "name": "Polygons", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["greedy", "math", "number theory"]}, {"contestId": 1208, "index": "F", "name": "Bits And Pieces", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["bitmasks", "dfs and similar", "dp", "greedy"]}, {"contestId": 1208, "index": "E", "name": "Let Them Slide", "type": "PROGRAMMING", "points": 2250.0, "rating": 2200, "tags": ["data structures", "implementation"]}, {"contestId": 1208, "index": "D", "name": "Restore Permutation", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["binary search", "data structures", "greedy", "implementation"]}, {"contestId": 1208, "index": "C", "name": "Magic Grid", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["constructive algorithms"]}, {"contestId": 1208, "index": "B", "name": "Uniqueness", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["binary search", "brute force", "implementation", "two pointers"]}, {"contestId": 1208, "index": "A", "name": "XORinacci", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["math"]}, {"contestId": 1207, "index": "G", "name": "Indie Album", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "dfs and similar", "hashing", "string suffix structures", "strings", "trees"]}, {"contestId": 1207, "index": "F", "name": "Remainder Problem", "type": "PROGRAMMING", "rating": 2100, "tags": ["brute force", "data structures", "implementation"]}, {"contestId": 1207, "index": "E", "name": "XOR Guessing", "type": "PROGRAMMING", "rating": 1900, "tags": ["bitmasks", "interactive", "math"]}, {"contestId": 1207, "index": "D", "name": "Number Of Permutations", "type": "PROGRAMMING", "rating": 1800, "tags": ["combinatorics"]}, {"contestId": 1207, "index": "C", "name": "Gas Pipeline", "type": "PROGRAMMING", "rating": 1500, "tags": ["dp", "greedy"]}, {"contestId": 1207, "index": "B", "name": "Square Filling", "type": "PROGRAMMING", "rating": 1200, "tags": ["constructive algorithms", "greedy", "implementation"]}, {"contestId": 1207, "index": "A", "name": "There Are Two Types Of Burgers", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "greedy", "implementation", "math"]}, {"contestId": 1206, "index": "B", "name": "Make Product Equal One", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["dp", "implementation"]}, {"contestId": 1206, "index": "A", "name": "Choose Two Numbers", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math", "sortings"]}, {"contestId": 1205, "index": "F", "name": "Beauty of a Permutation", "type": "PROGRAMMING", "points": 3000.0, "rating": 3400, "tags": ["constructive algorithms", "math"]}, {"contestId": 1205, "index": "E", "name": "Expected Value Again", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["combinatorics", "strings"]}, {"contestId": 1205, "index": "D", "name": "Almost All", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["constructive algorithms", "trees"]}, {"contestId": 1205, "index": "C", "name": "Palindromic Paths", "type": "PROGRAMMING", "points": 1250.0, "rating": 2400, "tags": ["implementation", "interactive"]}, {"contestId": 1205, "index": "B", "name": "Shortest Cycle", "type": "PROGRAMMING", "points": 750.0, "rating": 1900, "tags": ["bitmasks", "brute force", "graphs", "shortest paths"]}, {"contestId": 1205, "index": "A", "name": "Almost Equal", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["constructive algorithms", "greedy", "math"]}, {"contestId": 1204, "index": "E", "name": "Natasha, Sasha and the Prefix Sums", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["combinatorics", "dp", "math", "number theory"]}, {"contestId": 1204, "index": "D2", "name": "Kirk and a Binary String (hard version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2100, "tags": ["data structures", "greedy", "math", "strings"]}, {"contestId": 1204, "index": "D1", "name": "Kirk and a Binary String (easy version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["brute force", "greedy", "strings"]}, {"contestId": 1204, "index": "C", "name": "Anna, Svyatoslav and Maps", "type": "PROGRAMMING", "points": 1250.0, "rating": 1700, "tags": ["dp", "graphs", "greedy", "shortest paths"]}, {"contestId": 1204, "index": "B", "name": "Mislove Has Lost an Array", "type": "PROGRAMMING", "points": 750.0, "rating": 900, "tags": ["greedy", "math"]}, {"contestId": 1204, "index": "A", "name": "BowWow and the Timetable", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["math"]}, {"contestId": 1203, "index": "F2", "name": "Complete the Projects (hard version)", "type": "PROGRAMMING", "rating": 2300, "tags": ["dp", "greedy"]}, {"contestId": 1203, "index": "F1", "name": "Complete the Projects (easy version)", "type": "PROGRAMMING", "rating": 2100, "tags": ["greedy"]}, {"contestId": 1203, "index": "E", "name": "Boxers", "type": "PROGRAMMING", "rating": 1500, "tags": ["greedy", "sortings"]}, {"contestId": 1203, "index": "D2", "name": "Remove the Substring (hard version)", "type": "PROGRAMMING", "rating": 1700, "tags": ["binary search", "greedy", "implementation", "two pointers"]}, {"contestId": 1203, "index": "D1", "name": "Remove the Substring (easy version)", "type": "PROGRAMMING", "rating": 1600, "tags": ["greedy", "implementation"]}, {"contestId": 1203, "index": "C", "name": "Common Divisors", "type": "PROGRAMMING", "rating": 1300, "tags": ["implementation", "math"]}, {"contestId": 1203, "index": "B", "name": "Equal Rectangles", "type": "PROGRAMMING", "rating": 1200, "tags": ["greedy", "math"]}, {"contestId": 1203, "index": "A", "name": "Circle of Students", "type": "PROGRAMMING", "rating": 1000, "tags": ["implementation"]}, {"contestId": 1202, "index": "F", "name": "You Are Given Some Letters...", "type": "PROGRAMMING", "rating": 2700, "tags": ["binary search", "implementation", "math"]}, {"contestId": 1202, "index": "E", "name": "You Are Given Some Strings...", "type": "PROGRAMMING", "rating": 2400, "tags": ["brute force", "string suffix structures", "strings"]}, {"contestId": 1202, "index": "D", "name": "Print a 1337-string...", "type": "PROGRAMMING", "rating": 1900, "tags": ["combinatorics", "constructive algorithms", "math", "strings"]}, {"contestId": 1202, "index": "C", "name": "You Are Given a WASD-string...", "type": "PROGRAMMING", "rating": 2100, "tags": ["brute force", "data structures", "dp", "greedy", "implementation", "math", "strings"]}, {"contestId": 1202, "index": "B", "name": "You Are Given a Decimal String...", "type": "PROGRAMMING", "rating": 1700, "tags": ["brute force", "dp", "shortest paths"]}, {"contestId": 1202, "index": "A", "name": "You Are Given Two Binary Strings...", "type": "PROGRAMMING", "rating": 1100, "tags": ["bitmasks", "greedy"]}, {"contestId": 1201, "index": "E2", "name": "Knightmare (hard)", "type": "PROGRAMMING", "points": 1000.0, "rating": 3000, "tags": ["graphs", "interactive", "shortest paths"]}, {"contestId": 1201, "index": "E1", "name": "Knightmare (easy)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["graphs", "interactive", "shortest paths"]}, {"contestId": 1201, "index": "D", "name": "Treasure Hunting", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["binary search", "dp", "greedy", "implementation"]}, {"contestId": 1201, "index": "C", "name": "Maximum Median", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["binary search", "greedy", "math", "sortings"]}, {"contestId": 1201, "index": "B", "name": "Zero Array", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["greedy", "math"]}, {"contestId": 1201, "index": "A", "name": "Important Exam", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation", "strings"]}, {"contestId": 1200, "index": "F", "name": "Graph Traveler", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["brute force", "data structures", "dfs and similar", "dp", "graphs", "implementation", "math", "number theory"]}, {"contestId": 1200, "index": "E", "name": "Compress Words", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["brute force", "hashing", "implementation", "string suffix structures", "strings"]}, {"contestId": 1200, "index": "D", "name": "White Lines", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["brute force", "data structures", "dp", "implementation", "two pointers"]}, {"contestId": 1200, "index": "C", "name": "Round Corridor", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["math", "number theory"]}, {"contestId": 1200, "index": "B", "name": "Block Adventure", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["dp", "greedy"]}, {"contestId": 1200, "index": "A", "name": "Hotelier", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "data structures", "implementation"]}, {"contestId": 1199, "index": "B", "name": "Water Lily", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["geometry", "math"]}, {"contestId": 1199, "index": "A", "name": "City Day", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"]}, {"contestId": 1198, "index": "F", "name": "GCD Groups 2", "type": "PROGRAMMING", "points": 2250.0, "rating": 2900, "tags": ["greedy", "number theory", "probabilities"]}, {"contestId": 1198, "index": "E", "name": "Rectangle Painting 2", "type": "PROGRAMMING", "points": 1750.0, "rating": 2500, "tags": ["flows", "graph matchings", "graphs"]}, {"contestId": 1198, "index": "D", "name": "Rectangle Painting 1", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["dp"]}, {"contestId": 1198, "index": "C", "name": "Matching vs  Independent Set", "type": "PROGRAMMING", "points": 1250.0, "rating": 2000, "tags": ["constructive algorithms", "graphs", "greedy", "sortings"]}, {"contestId": 1198, "index": "B", "name": "Welfare State", "type": "PROGRAMMING", "points": 750.0, "rating": 1600, "tags": ["binary search", "brute force", "data structures", "sortings"]}, {"contestId": 1198, "index": "A", "name": "MP3", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["sortings", "two pointers"]}, {"contestId": 1197, "index": "F", "name": "Coloring Game", "type": "PROGRAMMING", "rating": 2700, "tags": ["dp", "games", "matrices"]}, {"contestId": 1197, "index": "E", "name": "Culture Code", "type": "PROGRAMMING", "rating": 2300, "tags": ["binary search", "combinatorics", "data structures", "dp", "shortest paths", "sortings"]}, {"contestId": 1197, "index": "D", "name": "Yet Another Subarray Problem", "type": "PROGRAMMING", "rating": 1900, "tags": ["dp", "greedy", "math"]}, {"contestId": 1197, "index": "C", "name": "Array Splitting", "type": "PROGRAMMING", "rating": 1400, "tags": ["greedy", "sortings"]}, {"contestId": 1197, "index": "B", "name": "Pillars", "type": "PROGRAMMING", "rating": 1000, "tags": ["greedy", "implementation"]}, {"contestId": 1197, "index": "A", "name": "DIY Wooden Ladder", "type": "PROGRAMMING", "rating": 900, "tags": ["greedy", "math", "sortings"]}, {"contestId": 1196, "index": "F", "name": "K-th Path", "type": "PROGRAMMING", "rating": 2200, "tags": ["brute force", "constructive algorithms", "shortest paths", "sortings"]}, {"contestId": 1196, "index": "E", "name": "Connected Component on a Chessboard", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "implementation"]}, {"contestId": 1196, "index": "D2", "name": "RGB Substring (hard version)", "type": "PROGRAMMING", "rating": 1600, "tags": ["data structures", "dp", "implementation", "two pointers"]}, {"contestId": 1196, "index": "D1", "name": "RGB Substring (easy version)", "type": "PROGRAMMING", "rating": 1500, "tags": ["implementation"]}, {"contestId": 1196, "index": "C", "name": "Robot Breakout", "type": "PROGRAMMING", "rating": 1500, "tags": ["implementation"]}, {"contestId": 1196, "index": "B", "name": "Odd Sum Segments", "type": "PROGRAMMING", "rating": 1200, "tags": ["constructive algorithms", "math"]}, {"contestId": 1196, "index": "A", "name": "Three Piles of Candies", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "constructive algorithms", "math"]}, {"contestId": 1195, "index": "F", "name": "Geometers Anonymous Club", "type": "PROGRAMMING", "points": 3500.0, "rating": 2500, "tags": ["data structures", "geometry", "math", "sortings"]}, {"contestId": 1195, "index": "E", "name": "OpenStreetMap", "type": "PROGRAMMING", "points": 3000.0, "rating": 2100, "tags": ["data structures", "two pointers"]}, {"contestId": 1195, "index": "D2", "name": "Submarine in the Rybinsk Sea (hard edition)", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["combinatorics", "math", "number theory"]}, {"contestId": 1195, "index": "D1", "name": "Submarine in the Rybinsk Sea (easy edition)", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["combinatorics", "math", "number theory"]}, {"contestId": 1195, "index": "C", "name": "Basketball Exercise", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["dp"]}, {"contestId": 1195, "index": "B", "name": "Sport Mafia", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["binary search", "brute force", "math"]}, {"contestId": 1195, "index": "A", "name": "Drinks Choosing", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["greedy", "math"]}, {"contestId": 1194, "index": "G", "name": "Another Meme Problem", "type": "PROGRAMMING", "rating": 2700, "tags": ["dp"]}, {"contestId": 1194, "index": "F", "name": "Crossword Expert", "type": "PROGRAMMING", "rating": 2400, "tags": ["combinatorics", "dp", "number theory", "probabilities", "two pointers"]}, {"contestId": 1194, "index": "E", "name": "Count The Rectangles", "type": "PROGRAMMING", "rating": 2200, "tags": ["bitmasks", "brute force", "data structures", "geometry", "sortings"]}, {"contestId": 1194, "index": "D", "name": "1-2-K Game", "type": "PROGRAMMING", "rating": 1700, "tags": ["games", "math"]}, {"contestId": 1194, "index": "C", "name": "From S To T", "type": "PROGRAMMING", "rating": 1300, "tags": ["implementation", "strings"]}, {"contestId": 1194, "index": "B", "name": "Yet Another Crosses Problem", "type": "PROGRAMMING", "rating": 1300, "tags": ["implementation"]}, {"contestId": 1194, "index": "A", "name": "Remove a Progression", "type": "PROGRAMMING", "rating": 800, "tags": ["math"]}, {"contestId": 1193, "index": "C", "name": "Scissors and Tape", "type": "PROGRAMMING", "tags": ["*special", "constructive algorithms", "geometry"]}, {"contestId": 1193, "index": "B", "name": "Magic Tree", "type": "PROGRAMMING", "tags": ["*special", "data structures", "dp", "trees"]}, {"contestId": 1193, "index": "A", "name": "Amusement Park", "type": "PROGRAMMING", "tags": ["*special", "dp", "math"]}, {"contestId": 1192, "index": "C", "name": "Cubeword", "type": "PROGRAMMING", "tags": ["*special", "brute force", "dp", "meet-in-the-middle"]}, {"contestId": 1192, "index": "B", "name": "Dynamic Diameter", "type": "PROGRAMMING", "tags": ["*special", "data structures", "dfs and similar", "divide and conquer", "trees"]}, {"contestId": 1192, "index": "A", "name": "Building Skyscrapers", "type": "PROGRAMMING", "tags": ["*special"]}, {"contestId": 1191, "index": "B", "name": "Tokitsukaze and Mahjong", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["brute force", "implementation"]}, {"contestId": 1191, "index": "A", "name": "Tokitsukaze and Enhancement", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force"]}, {"contestId": 1190, "index": "F", "name": "Tokitsukaze and Powers", "type": "PROGRAMMING", "points": 2750.0, "rating": 3400, "tags": ["number theory", "probabilities"]}, {"contestId": 1190, "index": "E", "name": "Tokitsukaze and Explosion", "type": "PROGRAMMING", "points": 2250.0, "rating": 3100, "tags": ["binary search", "greedy"]}, {"contestId": 1190, "index": "D", "name": "Tokitsukaze and Strange Rectangle", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["data structures", "divide and conquer", "sortings", "two pointers"]}, {"contestId": 1190, "index": "C", "name": "Tokitsukaze and Duel", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["brute force", "games", "greedy"]}, {"contestId": 1190, "index": "B", "name": "Tokitsukaze, CSL and Stone Game", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["games"]}, {"contestId": 1190, "index": "A", "name": "Tokitsukaze and Discard Items", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["implementation", "two pointers"]}, {"contestId": 1189, "index": "C", "name": "Candies!", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["data structures", "dp", "implementation", "math"]}, {"contestId": 1189, "index": "B", "name": "Number Circle", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["greedy", "math", "sortings"]}, {"contestId": 1189, "index": "A", "name": "Keanu Reeves", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["strings"]}, {"contestId": 1188, "index": "E", "name": "Problem from Red Panda", "type": "PROGRAMMING", "points": 2500.0, "rating": 3300, "tags": ["combinatorics"]}, {"contestId": 1188, "index": "D", "name": "Make Equal", "type": "PROGRAMMING", "points": 2250.0, "rating": 3100, "tags": ["dp"]}, {"contestId": 1188, "index": "C", "name": "Array Beauty", "type": "PROGRAMMING", "points": 1750.0, "rating": 2500, "tags": ["dp"]}, {"contestId": 1188, "index": "B", "name": "Count Pairs", "type": "PROGRAMMING", "points": 1250.0, "rating": 2300, "tags": ["math", "matrices", "number theory", "two pointers"]}, {"contestId": 1188, "index": "A2", "name": "Add on a Tree: Revolution", "type": "PROGRAMMING", "points": 750.0, "rating": 2500, "tags": ["constructive algorithms", "dfs and similar", "implementation", "trees"]}, {"contestId": 1188, "index": "A1", "name": "Add on a Tree", "type": "PROGRAMMING", "points": 250.0, "rating": 1600, "tags": ["trees"]}, {"contestId": 1187, "index": "G", "name": "Gang Up", "type": "PROGRAMMING", "rating": 2500, "tags": ["flows", "graphs"]}, {"contestId": 1187, "index": "F", "name": "Expected Square Beauty", "type": "PROGRAMMING", "rating": 2500, "tags": ["dp", "math", "probabilities"]}, {"contestId": 1187, "index": "E", "name": "Tree Painting", "type": "PROGRAMMING", "rating": 2100, "tags": ["dfs and similar", "dp", "trees"]}, {"contestId": 1187, "index": "D", "name": "Subarray Sorting", "type": "PROGRAMMING", "rating": 2400, "tags": ["data structures", "sortings"]}, {"contestId": 1187, "index": "C", "name": "Vasya And Array", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "greedy", "implementation"]}, {"contestId": 1187, "index": "B", "name": "Letters Shop", "type": "PROGRAMMING", "rating": 1300, "tags": ["binary search", "implementation", "strings"]}, {"contestId": 1187, "index": "A", "name": "Stickers and Toys", "type": "PROGRAMMING", "rating": 900, "tags": ["math"]}, {"contestId": 1186, "index": "F", "name": "Vus the Cossack and a Graph", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["dfs and similar", "graphs", "greedy", "implementation"]}, {"contestId": 1186, "index": "E", "name": "Vus the Cossack and a Field", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["divide and conquer", "implementation", "math"]}, {"contestId": 1186, "index": "D", "name": "Vus the Cossack and Numbers", "type": "PROGRAMMING", "points": 1750.0, "rating": 1500, "tags": ["constructive algorithms", "greedy", "math"]}, {"contestId": 1186, "index": "C", "name": "Vus the Cossack and Strings", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["implementation", "math"]}, {"contestId": 1186, "index": "A", "name": "Vus the Cossack and a Contest", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 1185, "index": "G2", "name": "Playlist for Polycarp (hard version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2600, "tags": ["combinatorics", "dp"]}, {"contestId": 1185, "index": "G1", "name": "Playlist for Polycarp (easy version)", "type": "PROGRAMMING", "points": 2750.0, "rating": 2100, "tags": ["bitmasks", "combinatorics", "dp"]}, {"contestId": 1185, "index": "F", "name": "Two Pizzas", "type": "PROGRAMMING", "points": 2750.0, "rating": 2100, "tags": ["bitmasks", "brute force"]}, {"contestId": 1185, "index": "E", "name": "Polycarp and Snakes", "type": "PROGRAMMING", "points": 2250.0, "rating": 2000, "tags": ["brute force", "implementation"]}, {"contestId": 1185, "index": "D", "name": "Extra Element", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["implementation", "math"]}, {"contestId": 1185, "index": "C2", "name": "Exam in BerSU (hard version)", "type": "PROGRAMMING", "points": 750.0, "rating": 1700, "tags": ["brute force", "data structures", "greedy", "math"]}, {"contestId": 1185, "index": "C1", "name": "Exam in BerSU (easy version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["greedy", "sortings"]}, {"contestId": 1185, "index": "B", "name": "Email from Polycarp", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["implementation", "strings"]}, {"contestId": 1185, "index": "A", "name": "Ropewalkers", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math"]}, {"contestId": 1184, "index": "E3", "name": "Daleks' Invasion (hard)", "type": "PROGRAMMING", "rating": 2400, "tags": ["data structures", "dsu", "graphs", "trees"]}, {"contestId": 1184, "index": "E2", "name": "Daleks' Invasion (medium)", "type": "PROGRAMMING", "rating": 2100, "tags": ["dfs and similar", "graphs", "shortest paths", "trees"]}, {"contestId": 1184, "index": "E1", "name": "Daleks' Invasion (easy)", "type": "PROGRAMMING", "rating": 1900, "tags": ["graphs", "trees"]}, {"contestId": 1184, "index": "D2", "name": "Parallel Universes (Hard)", "type": "PROGRAMMING", "rating": 3100, "tags": ["math", "matrices"]}, {"contestId": 1184, "index": "D1", "name": "Parallel Universes (Easy)", "type": "PROGRAMMING", "rating": 1600, "tags": ["implementation"]}, {"contestId": 1184, "index": "C3", "name": "Heidi and the Turing Test (Hard)", "type": "PROGRAMMING", "rating": 3200, "tags": []}, {"contestId": 1184, "index": "C2", "name": "Heidi and the Turing Test (Medium)", "type": "PROGRAMMING", "rating": 2200, "tags": ["data structures"]}, {"contestId": 1184, "index": "C1", "name": "Heidi and the Turing Test (Easy)", "type": "PROGRAMMING", "rating": 1600, "tags": ["implementation"]}, {"contestId": 1184, "index": "B3", "name": "The Doctor Meets Vader (Hard)", "type": "PROGRAMMING", "rating": 2700, "tags": ["flows", "shortest paths"]}, {"contestId": 1184, "index": "B2", "name": "The Doctor Meets Vader (Medium)", "type": "PROGRAMMING", "rating": 2200, "tags": ["flows", "graph matchings", "graphs", "shortest paths", "sortings"]}, {"contestId": 1184, "index": "B1", "name": "The Doctor Meets Vader (Easy)", "type": "PROGRAMMING", "rating": 1400, "tags": ["binary search", "sortings"]}, {"contestId": 1184, "index": "A3", "name": "Heidi Learns Hashing (Hard)", "type": "PROGRAMMING", "rating": 3100, "tags": ["fft", "math", "number theory"]}, {"contestId": 1184, "index": "A2", "name": "Heidi Learns Hashing (Medium)", "type": "PROGRAMMING", "rating": 2100, "tags": ["brute force", "number theory"]}, {"contestId": 1184, "index": "A1", "name": "Heidi Learns Hashing (Easy)", "type": "PROGRAMMING", "rating": 1200, "tags": ["brute force", "math", "number theory"]}, {"contestId": 1183, "index": "H", "name": "Subsequences (hard version)", "type": "PROGRAMMING", "rating": 1900, "tags": ["dp", "strings"]}, {"contestId": 1183, "index": "G", "name": "Candy Box (hard version)", "type": "PROGRAMMING", "rating": 2000, "tags": ["greedy", "implementation", "sortings"]}, {"contestId": 1183, "index": "F", "name": "Topforces Strikes Back", "type": "PROGRAMMING", "rating": 2100, "tags": ["brute force", "math", "sortings"]}, {"contestId": 1183, "index": "E", "name": "Subsequences (easy version)", "type": "PROGRAMMING", "rating": 2000, "tags": ["dp", "graphs", "implementation", "shortest paths"]}, {"contestId": 1183, "index": "D", "name": "Candy Box (easy version)", "type": "PROGRAMMING", "rating": 1400, "tags": ["greedy", "sortings"]}, {"contestId": 1183, "index": "C", "name": "Computer Game", "type": "PROGRAMMING", "rating": 1400, "tags": ["binary search", "math"]}, {"contestId": 1183, "index": "B", "name": "Equalize Prices", "type": "PROGRAMMING", "rating": 900, "tags": ["math"]}, {"contestId": 1183, "index": "A", "name": "Nearest Interesting Number", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"]}, {"contestId": 1182, "index": "F", "name": "Maximum Sine", "type": "PROGRAMMING", "points": 2750.0, "rating": 2700, "tags": ["binary search", "data structures", "number theory"]}, {"contestId": 1182, "index": "E", "name": "Product Oriented Recurrence", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["dp", "math", "matrices", "number theory"]}, {"contestId": 1182, "index": "D", "name": "Complete Mirror", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["constructive algorithms", "dfs and similar", "dp", "hashing", "implementation", "trees"]}, {"contestId": 1182, "index": "C", "name": "Beautiful Lyrics", "type": "PROGRAMMING", "points": 1250.0, "rating": 1700, "tags": ["data structures", "greedy", "strings"]}, {"contestId": 1182, "index": "B", "name": "Plus from Picture", "type": "PROGRAMMING", "points": 750.0, "rating": 1300, "tags": ["dfs and similar", "implementation", "strings"]}, {"contestId": 1182, "index": "A", "name": "Filling Shapes", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["dp", "math"]}, {"contestId": 1181, "index": "E2", "name": "A Story of One Country (Hard)", "type": "PROGRAMMING", "points": 750.0, "rating": 3000, "tags": ["brute force", "greedy", "sortings"]}, {"contestId": 1181, "index": "E1", "name": "A Story of One Country (Easy)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["brute force", "divide and conquer", "sortings"]}, {"contestId": 1181, "index": "D", "name": "Irrigation", "type": "PROGRAMMING", "points": 1750.0, "rating": 2200, "tags": ["binary search", "data structures", "implementation", "sortings", "trees", "two pointers"]}, {"contestId": 1181, "index": "C", "name": "Flag", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["brute force", "combinatorics", "dp", "implementation"]}, {"contestId": 1181, "index": "B", "name": "Split a Number", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["greedy", "implementation", "strings"]}, {"contestId": 1181, "index": "A", "name": "Chunga-Changa", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["greedy", "math"]}, {"contestId": 1180, "index": "B", "name": "Nick and Array", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["greedy", "implementation"]}, {"contestId": 1180, "index": "A", "name": "Alex and a Rhombus", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["dp", "implementation", "math"]}, {"contestId": 1179, "index": "E", "name": "Alesya and Discrete Math", "type": "PROGRAMMING", "points": 2250.0, "rating": 3200, "tags": ["divide and conquer", "interactive"]}, {"contestId": 1179, "index": "D", "name": "Fedor Runs for President", "type": "PROGRAMMING", "points": 1750.0, "rating": 2700, "tags": ["data structures", "dp", "trees"]}, {"contestId": 1179, "index": "C", "name": "Serge and Dining Room", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["binary search", "data structures", "graph matchings", "greedy", "implementation", "math", "trees"]}, {"contestId": 1179, "index": "B", "name": "Tolik and His Uncle", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["constructive algorithms"]}, {"contestId": 1179, "index": "A", "name": "Valeriy and Deque", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["data structures", "implementation"]}, {"contestId": 1178, "index": "H", "name": "Stock Exchange", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["binary search", "flows", "graphs"]}, {"contestId": 1178, "index": "G", "name": "The Awesomest Vertex", "type": "PROGRAMMING", "points": 3250.0, "rating": 3000, "tags": ["data structures", "dfs and similar"]}, {"contestId": 1178, "index": "F2", "name": "Long Colorful Strip", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["dp"]}, {"contestId": 1178, "index": "F1", "name": "Short Colorful Strip", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["combinatorics", "dfs and similar", "dp"]}, {"contestId": 1178, "index": "E", "name": "Archaeology", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["brute force", "constructive algorithms", "greedy", "strings"]}, {"contestId": 1178, "index": "D", "name": "Prime Graph", "type": "PROGRAMMING", "points": 1750.0, "rating": 1500, "tags": ["constructive algorithms", "greedy", "math", "number theory"]}, {"contestId": 1178, "index": "C", "name": "Tiles", "type": "PROGRAMMING", "points": 1250.0, "rating": 1300, "tags": ["combinatorics", "greedy", "math"]}, {"contestId": 1178, "index": "B", "name": "WOW Factor", "type": "PROGRAMMING", "points": 750.0, "rating": 1300, "tags": ["dp", "strings"]}, {"contestId": 1178, "index": "A", "name": "Prime Minister", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy"]}, {"contestId": 1177, "index": "B", "name": "Digits Sequence (Hard Edition)", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["binary search", "divide and conquer", "implementation"]}, {"contestId": 1177, "index": "A", "name": "Digits Sequence (Easy Edition)", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"]}, {"contestId": 1176, "index": "F", "name": "Destroy it!", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp", "implementation", "sortings"]}, {"contestId": 1176, "index": "E", "name": "Cover it!", "type": "PROGRAMMING", "rating": 1700, "tags": ["dfs and similar", "dsu", "graphs", "shortest paths", "trees"]}, {"contestId": 1176, "index": "D", "name": "Recover it!", "type": "PROGRAMMING", "rating": 1800, "tags": ["dfs and similar", "graphs", "greedy", "number theory", "sortings"]}, {"contestId": 1176, "index": "C", "name": "Lose it!", "type": "PROGRAMMING", "rating": 1300, "tags": ["dp", "greedy", "implementation"]}, {"contestId": 1176, "index": "B", "name": "Merge it!", "type": "PROGRAMMING", "rating": 1100, "tags": ["math"]}, {"contestId": 1176, "index": "A", "name": "Divide it!", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "greedy", "implementation"]}, {"contestId": 1175, "index": "G", "name": "Yet Another Partiton Problem", "type": "PROGRAMMING", "rating": 3000, "tags": ["data structures", "divide and conquer", "dp", "geometry", "two pointers"]}, {"contestId": 1175, "index": "F", "name": "The Number of Subpermutations", "type": "PROGRAMMING", "rating": 2500, "tags": ["brute force", "data structures", "divide and conquer", "hashing", "math"]}, {"contestId": 1175, "index": "E", "name": "Minimal Segment Cover", "type": "PROGRAMMING", "rating": 2200, "tags": ["data structures", "dfs and similar", "divide and conquer", "dp", "greedy", "implementation", "trees"]}, {"contestId": 1175, "index": "D", "name": "Array Splitting", "type": "PROGRAMMING", "rating": 1900, "tags": ["greedy", "sortings"]}, {"contestId": 1175, "index": "C", "name": "Electrification", "type": "PROGRAMMING", "rating": 1600, "tags": ["binary search", "brute force", "greedy"]}, {"contestId": 1175, "index": "B", "name": "Catch Overflow!", "type": "PROGRAMMING", "rating": 1600, "tags": ["data structures", "expression parsing", "implementation"]}, {"contestId": 1175, "index": "A", "name": "From Hero to Zero", "type": "PROGRAMMING", "rating": 900, "tags": ["implementation", "math"]}, {"contestId": 1174, "index": "F", "name": "Ehab and the Big Finale", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["constructive algorithms", "divide and conquer", "graphs", "implementation", "interactive", "trees"]}, {"contestId": 1174, "index": "E", "name": "Ehab and the Expected GCD Problem", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["combinatorics", "dp", "math", "number theory"]}, {"contestId": 1174, "index": "D", "name": "Ehab and the Expected XOR Problem", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["bitmasks", "constructive algorithms"]}, {"contestId": 1174, "index": "C", "name": "Ehab and a Special Coloring Problem", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["constructive algorithms", "number theory"]}, {"contestId": 1174, "index": "B", "name": "Ehab Is an Odd Person", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["sortings"]}, {"contestId": 1174, "index": "A", "name": "Ehab Fails to Be Thanos", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["constructive algorithms", "greedy", "sortings"]}, {"contestId": 1173, "index": "B", "name": "Nauuo and Chess", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms", "greedy"]}, {"contestId": 1173, "index": "A", "name": "Nauuo and Votes", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy"]}, {"contestId": 1172, "index": "F", "name": "Nauuo and Bug", "type": "PROGRAMMING", "points": 2750.0, "rating": 3300, "tags": ["data structures"]}, {"contestId": 1172, "index": "E", "name": "Nauuo and ODT", "type": "PROGRAMMING", "points": 2500.0, "rating": 3300, "tags": ["data structures"]}, {"contestId": 1172, "index": "D", "name": "Nauuo and Portals", "type": "PROGRAMMING", "points": 1750.0, "rating": 2900, "tags": ["constructive algorithms"]}, {"contestId": 1172, "index": "C2", "name": "Nauuo and Pictures (hard version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2600, "tags": ["dp", "probabilities"]}, {"contestId": 1172, "index": "C1", "name": "Nauuo and Pictures (easy version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2300, "tags": ["dp", "probabilities"]}, {"contestId": 1172, "index": "B", "name": "Nauuo and Circle", "type": "PROGRAMMING", "points": 750.0, "rating": 1900, "tags": ["combinatorics", "dfs and similar", "dp", "trees"]}, {"contestId": 1172, "index": "A", "name": "Nauuo and Cards", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["greedy", "implementation"]}, {"contestId": 1170, "index": "I", "name": "Good Subsets", "type": "PROGRAMMING", "tags": ["*special", "dp"]}, {"contestId": 1170, "index": "H", "name": "Longest Saw", "type": "PROGRAMMING", "tags": ["*special", "constructive algorithms"]}, {"contestId": 1170, "index": "G", "name": "Graph Decomposition", "type": "PROGRAMMING", "tags": ["*special", "graphs"]}, {"contestId": 1170, "index": "F", "name": "Wheels", "type": "PROGRAMMING", "tags": ["*special", "binary search", "greedy"]}, {"contestId": 1170, "index": "E", "name": "Sliding Doors", "type": "PROGRAMMING", "tags": ["*special", "binary search"]}, {"contestId": 1170, "index": "D", "name": "Decoding of Integer Sequences", "type": "PROGRAMMING", "tags": ["*special", "data structures", "implementation"]}, {"contestId": 1170, "index": "C", "name": "Minus and Minus Give Plus", "type": "PROGRAMMING", "tags": ["*special", "implementation", "strings"]}, {"contestId": 1170, "index": "B", "name": "Bad Days", "type": "PROGRAMMING", "tags": ["*special", "implementation"]}, {"contestId": 1170, "index": "A", "name": "Three Integers Again", "type": "PROGRAMMING", "tags": ["*special", "math"]}, {"contestId": 1169, "index": "B", "name": "Pairs", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["graphs", "implementation"]}, {"contestId": 1169, "index": "A", "name": "Circle Metro", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation", "math"]}, {"contestId": 1168, "index": "E", "name": "Xor Permutations", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["constructive algorithms", "math"]}, {"contestId": 1168, "index": "D", "name": "Anagram Paths", "type": "PROGRAMMING", "points": 2000.0, "rating": 3000, "tags": ["dp", "implementation", "trees"]}, {"contestId": 1168, "index": "C", "name": "And Reachability", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["bitmasks", "dp"]}, {"contestId": 1168, "index": "B", "name": "Good Triple", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["brute force", "two pointers"]}, {"contestId": 1168, "index": "A", "name": "Increasing by Modulo", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["binary search", "greedy"]}, {"contestId": 1167, "index": "G", "name": "Low Budget Inception", "type": "PROGRAMMING", "rating": 3100, "tags": ["brute force", "geometry"]}, {"contestId": 1167, "index": "F", "name": "Scalar Queries", "type": "PROGRAMMING", "rating": 2300, "tags": ["combinatorics", "data structures", "math", "sortings"]}, {"contestId": 1167, "index": "E", "name": "Range Deleting", "type": "PROGRAMMING", "rating": 2100, "tags": ["binary search", "combinatorics", "data structures", "two pointers"]}, {"contestId": 1167, "index": "D", "name": "Bicolored RBS", "type": "PROGRAMMING", "rating": 1500, "tags": ["constructive algorithms", "greedy"]}, {"contestId": 1167, "index": "C", "name": "News Distribution", "type": "PROGRAMMING", "rating": 1400, "tags": ["dfs and similar", "dsu", "graphs"]}, {"contestId": 1167, "index": "B", "name": "Lost Numbers", "type": "PROGRAMMING", "rating": 1400, "tags": ["brute force", "divide and conquer", "interactive", "math"]}, {"contestId": 1167, "index": "A", "name": "Telephone Number", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "greedy", "strings"]}, {"contestId": 1166, "index": "F", "name": "Vicky's Delivery Service", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["data structures", "dsu", "graphs", "hashing"]}, {"contestId": 1166, "index": "E", "name": "The LCMs Must be Large", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["bitmasks", "brute force", "constructive algorithms", "math", "number theory"]}, {"contestId": 1166, "index": "D", "name": "Cute Sequences", "type": "PROGRAMMING", "points": 2250.0, "rating": 2200, "tags": ["binary search", "brute force", "greedy", "math"]}, {"contestId": 1166, "index": "C", "name": "A Tale of Two Lands", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["binary search", "sortings", "two pointers"]}, {"contestId": 1166, "index": "B", "name": "All the Vowels Please", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms", "math", "number theory"]}, {"contestId": 1166, "index": "A", "name": "Silent Classroom", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["combinatorics", "greedy"]}, {"contestId": 1165, "index": "F2", "name": "Microtransactions (hard version)", "type": "PROGRAMMING", "rating": 2000, "tags": ["binary search", "greedy", "implementation"]}, {"contestId": 1165, "index": "F1", "name": "Microtransactions (easy version)", "type": "PROGRAMMING", "rating": 2000, "tags": ["binary search", "greedy"]}, {"contestId": 1165, "index": "E", "name": "Two Arrays and Sum of Functions", "type": "PROGRAMMING", "rating": 1600, "tags": ["greedy", "math", "sortings"]}, {"contestId": 1165, "index": "D", "name": "Almost All Divisors", "type": "PROGRAMMING", "rating": 1600, "tags": ["math", "number theory"]}, {"contestId": 1165, "index": "C", "name": "Good String", "type": "PROGRAMMING", "rating": 1300, "tags": ["greedy"]}, {"contestId": 1165, "index": "B", "name": "Polycarp Training", "type": "PROGRAMMING", "rating": 1000, "tags": ["data structures", "greedy", "sortings"]}, {"contestId": 1165, "index": "A", "name": "Remainder", "type": "PROGRAMMING", "rating": 1100, "tags": ["implementation", "math"]}, {"contestId": 1163, "index": "F", "name": "Indecisive Taxi Fee", "type": "PROGRAMMING", "points": 3250.0, "rating": 3000, "tags": ["data structures", "graphs", "shortest paths"]}, {"contestId": 1163, "index": "E", "name": "Magical Permutation", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["bitmasks", "brute force", "constructive algorithms", "data structures", "graphs", "math"]}, {"contestId": 1163, "index": "D", "name": "Mysterious Code", "type": "PROGRAMMING", "points": 2250.0, "rating": 2100, "tags": ["dp", "strings"]}, {"contestId": 1163, "index": "C2", "name": "Power Transmission (Hard Edition)", "type": "PROGRAMMING", "points": 750.0, "rating": 1900, "tags": ["data structures", "geometry", "implementation", "math"]}, {"contestId": 1163, "index": "C1", "name": "Power Transmission (Easy Edition)", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["brute force", "geometry"]}, {"contestId": 1163, "index": "B2", "name": "Cat Party (Hard Edition)", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["data structures", "implementation"]}, {"contestId": 1163, "index": "B1", "name": "Cat Party (Easy Edition)", "type": "PROGRAMMING", "points": 750.0, "rating": 1500, "tags": ["data structures", "implementation"]}, {"contestId": 1163, "index": "A", "name": "Eating Soup", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["greedy", "math"]}, {"contestId": 1162, "index": "B", "name": "Double Matrix", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["brute force", "greedy"]}, {"contestId": 1162, "index": "A", "name": "Zoning Restrictions Again", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 1160, "index": "A2", "name": "Collaboration", "type": "PROGRAMMING", "tags": ["*special"]}, {"contestId": 1159, "index": "B", "name": "Expansion coefficient of the array", "type": "PROGRAMMING", "points": 750.0, "rating": 1300, "tags": ["implementation", "math"]}, {"contestId": 1159, "index": "A", "name": "A pile of stones", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "math"]}, {"contestId": 1158, "index": "F", "name": "Density of subarrays", "type": "PROGRAMMING", "points": 2750.0, "rating": 3500, "tags": ["dp", "math"]}, {"contestId": 1158, "index": "E", "name": "Strange device", "type": "PROGRAMMING", "points": 2250.0, "rating": 3400, "tags": ["binary search", "interactive", "math", "trees"]}, {"contestId": 1158, "index": "D", "name": "Winding polygonal line", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["constructive algorithms", "geometry", "greedy", "math"]}, {"contestId": 1158, "index": "C", "name": "Permutation recovery", "type": "PROGRAMMING", "points": 1250.0, "rating": 2100, "tags": ["constructive algorithms", "data structures", "dfs and similar", "graphs", "greedy", "math", "sortings"]}, {"contestId": 1158, "index": "B", "name": "The minimal unique substring", "type": "PROGRAMMING", "points": 1000.0, "rating": 2200, "tags": ["constructive algorithms", "math", "strings"]}, {"contestId": 1158, "index": "A", "name": "The Party and Sweets", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["binary search", "constructive algorithms", "greedy", "implementation", "math", "sortings", "two pointers"]}, {"contestId": 1157, "index": "G", "name": "Inverse of Rows and Columns", "type": "PROGRAMMING", "rating": 2200, "tags": ["brute force", "constructive algorithms"]}, {"contestId": 1157, "index": "F", "name": "Maximum Balanced Circle", "type": "PROGRAMMING", "rating": 2000, "tags": ["constructive algorithms", "dp", "greedy", "two pointers"]}, {"contestId": 1157, "index": "E", "name": "Minimum Array", "type": "PROGRAMMING", "rating": 1700, "tags": ["binary search", "data structures", "greedy"]}, {"contestId": 1157, "index": "D", "name": "N Problems During K Days", "type": "PROGRAMMING", "rating": 1900, "tags": ["constructive algorithms", "greedy", "math"]}, {"contestId": 1157, "index": "C2", "name": "Increasing Subsequence (hard version)", "type": "PROGRAMMING", "rating": 1700, "tags": ["greedy"]}, {"contestId": 1157, "index": "C1", "name": "Increasing Subsequence (easy version)", "type": "PROGRAMMING", "rating": 1300, "tags": ["greedy"]}, {"contestId": 1157, "index": "B", "name": "Long Number", "type": "PROGRAMMING", "rating": 1300, "tags": ["greedy"]}, {"contestId": 1157, "index": "A", "name": "Reachable Numbers", "type": "PROGRAMMING", "rating": 1100, "tags": ["implementation"]}, {"contestId": 1156, "index": "G", "name": "Optimizer", "type": "PROGRAMMING", "rating": 2700, "tags": ["graphs", "greedy", "hashing", "implementation"]}, {"contestId": 1156, "index": "F", "name": "Card Bag", "type": "PROGRAMMING", "rating": 2300, "tags": ["dp", "math", "probabilities"]}, {"contestId": 1156, "index": "E", "name": "Special Segments of Permutation", "type": "PROGRAMMING", "rating": 2200, "tags": ["data structures", "divide and conquer", "dsu", "two pointers"]}, {"contestId": 1156, "index": "D", "name": "0-1-Tree", "type": "PROGRAMMING", "rating": 2200, "tags": ["dfs and similar", "divide and conquer", "dp", "dsu", "trees"]}, {"contestId": 1156, "index": "C", "name": "Match Points", "type": "PROGRAMMING", "rating": 2000, "tags": ["binary search", "greedy", "sortings", "ternary search", "two pointers"]}, {"contestId": 1156, "index": "B", "name": "Ugly Pairs", "type": "PROGRAMMING", "rating": 1800, "tags": ["dfs and similar", "greedy", "implementation", "sortings", "strings"]}, {"contestId": 1156, "index": "A", "name": "Inscribed Figures", "type": "PROGRAMMING", "rating": 1400, "tags": ["geometry"]}, {"contestId": 1155, "index": "F", "name": "Delivery Oligopoly", "type": "PROGRAMMING", "rating": 2800, "tags": ["brute force", "dp", "graphs"]}, {"contestId": 1155, "index": "E", "name": "Guess the Root", "type": "PROGRAMMING", "rating": 2200, "tags": ["brute force", "interactive", "math"]}, {"contestId": 1155, "index": "D", "name": "Beautiful Array", "type": "PROGRAMMING", "rating": 1900, "tags": ["brute force", "data structures", "divide and conquer", "dp", "greedy"]}, {"contestId": 1155, "index": "C", "name": "Alarm Clocks Everywhere", "type": "PROGRAMMING", "rating": 1300, "tags": ["math", "number theory"]}, {"contestId": 1155, "index": "B", "name": "Game with Telephone Numbers", "type": "PROGRAMMING", "rating": 1200, "tags": ["games", "greedy", "implementation"]}, {"contestId": 1155, "index": "A", "name": "Reverse a Substring", "type": "PROGRAMMING", "rating": 1000, "tags": ["implementation", "sortings", "strings"]}, {"contestId": 1154, "index": "G", "name": "Minimum Possible LCM", "type": "PROGRAMMING", "rating": 2200, "tags": ["brute force", "greedy", "math", "number theory"]}, {"contestId": 1154, "index": "F", "name": "Shovels Shop", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp", "greedy", "sortings"]}, {"contestId": 1154, "index": "E", "name": "Two Teams", "type": "PROGRAMMING", "rating": 1800, "tags": ["data structures", "implementation", "sortings"]}, {"contestId": 1154, "index": "D", "name": "Walking Robot", "type": "PROGRAMMING", "rating": 1500, "tags": ["greedy"]}, {"contestId": 1154, "index": "C", "name": "Gourmet Cat", "type": "PROGRAMMING", "rating": 1400, "tags": ["implementation", "math"]}, {"contestId": 1154, "index": "B", "name": "Make Them Equal", "type": "PROGRAMMING", "rating": 1200, "tags": ["math"]}, {"contestId": 1154, "index": "A", "name": "Restoring Three Numbers", "type": "PROGRAMMING", "rating": 800, "tags": ["math"]}, {"contestId": 1153, "index": "F", "name": "Serval and Bonus Problem", "type": "PROGRAMMING", "points": 2750.0, "rating": 2600, "tags": ["combinatorics", "dp", "math", "probabilities"]}, {"contestId": 1153, "index": "E", "name": "Serval and Snake", "type": "PROGRAMMING", "points": 2250.0, "rating": 2200, "tags": ["binary search", "brute force", "interactive"]}, {"contestId": 1153, "index": "D", "name": "Serval and Rooted Tree", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["binary search", "dfs and similar", "dp", "greedy", "trees"]}, {"contestId": 1153, "index": "C", "name": "Serval and Parenthesis Sequence", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["greedy", "strings"]}, {"contestId": 1153, "index": "B", "name": "Serval and Toy Bricks", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "greedy"]}, {"contestId": 1153, "index": "A", "name": "Serval and Bus", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["brute force", "math"]}, {"contestId": 1152, "index": "F2", "name": "Neko Rules the Catniverse (Large Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 3000, "tags": ["bitmasks", "dp", "matrices"]}, {"contestId": 1152, "index": "F1", "name": "Neko Rules the Catniverse (Small Version)", "type": "PROGRAMMING", "points": 2250.0, "rating": 2800, "tags": ["bitmasks", "dp", "matrices"]}, {"contestId": 1152, "index": "E", "name": "Neko and Flashback", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["constructive algorithms", "dfs and similar", "graphs"]}, {"contestId": 1152, "index": "D", "name": "Neko and Aki's Prank", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["dp", "greedy", "trees"]}, {"contestId": 1152, "index": "C", "name": "Neko does Maths", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["brute force", "math", "number theory"]}, {"contestId": 1152, "index": "B", "name": "Neko Performs Cat Furrier Transform", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["bitmasks", "constructive algorithms", "dfs and similar", "math"]}, {"contestId": 1152, "index": "A", "name": "Neko Finds Grapes", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "implementation", "math"]}, {"contestId": 1151, "index": "F", "name": "Sonya and Informatics", "type": "PROGRAMMING", "points": 2750.0, "rating": 2300, "tags": ["combinatorics", "dp", "matrices", "probabilities"]}, {"contestId": 1151, "index": "E", "name": "Number of Components", "type": "PROGRAMMING", "points": 2250.0, "rating": 2100, "tags": ["combinatorics", "data structures", "dp", "math"]}, {"contestId": 1151, "index": "D", "name": "Stas and the Queue at the Buffet", "type": "PROGRAMMING", "points": 1750.0, "rating": 1600, "tags": ["greedy", "math", "sortings"]}, {"contestId": 1151, "index": "C", "name": "Problem for Nazar", "type": "PROGRAMMING", "points": 1250.0, "rating": 1800, "tags": ["constructive algorithms", "math"]}, {"contestId": 1151, "index": "B", "name": "Dima and a Bad XOR", "type": "PROGRAMMING", "points": 750.0, "rating": 1600, "tags": ["bitmasks", "brute force", "constructive algorithms", "dp"]}, {"contestId": 1151, "index": "A", "name": "Maxim and Biology", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["brute force", "strings"]}, {"contestId": 1150, "index": "B", "name": "Tiling Challenge", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["greedy", "implementation"]}, {"contestId": 1150, "index": "A", "name": "Stock Arbitraging", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "implementation"]}, {"contestId": 1149, "index": "E", "name": "Election Promises", "type": "PROGRAMMING", "points": 2750.0, "rating": 3200, "tags": ["games", "graphs"]}, {"contestId": 1149, "index": "D", "name": "Abandoning Roads", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["brute force", "dp", "graphs", "greedy"]}, {"contestId": 1149, "index": "C", "name": "Tree Generator\u2122", "type": "PROGRAMMING", "points": 1750.0, "rating": 2700, "tags": ["data structures", "implementation", "trees"]}, {"contestId": 1149, "index": "B", "name": "Three Religions", "type": "PROGRAMMING", "points": 1250.0, "rating": 2200, "tags": ["dp", "implementation", "strings"]}, {"contestId": 1149, "index": "A", "name": "Prefix Sum Primes", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["constructive algorithms", "greedy", "math", "number theory"]}, {"contestId": 1148, "index": "H", "name": "Holy Diver ", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["data structures"]}, {"contestId": 1148, "index": "G", "name": "Gold Experience", "type": "PROGRAMMING", "points": 4000.0, "rating": 3300, "tags": ["constructive algorithms", "graphs", "math", "number theory", "probabilities"]}, {"contestId": 1148, "index": "F", "name": "Foo Fighters", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["bitmasks", "constructive algorithms"]}, {"contestId": 1148, "index": "E", "name": "Earth Wind and Fire", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["constructive algorithms", "greedy", "math", "sortings", "two pointers"]}, {"contestId": 1148, "index": "D", "name": "Dirty Deeds Done Dirt Cheap", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["greedy", "sortings"]}, {"contestId": 1148, "index": "C", "name": "Crazy Diamond", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["constructive algorithms", "sortings"]}, {"contestId": 1148, "index": "B", "name": "Born This Way", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["binary search", "brute force", "two pointers"]}, {"contestId": 1148, "index": "A", "name": "Another One Bites The Dust", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy"]}, {"contestId": 1147, "index": "F", "name": "Zigzag Game", "type": "PROGRAMMING", "points": 3250.0, "rating": 3500, "tags": ["games", "interactive"]}, {"contestId": 1147, "index": "E", "name": "Rainbow Coins", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["interactive"]}, {"contestId": 1147, "index": "D", "name": "Palindrome XOR", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["dfs and similar", "graphs"]}, {"contestId": 1147, "index": "C", "name": "Thanos Nim", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["games"]}, {"contestId": 1147, "index": "B", "name": "Chladni Figure", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["brute force", "strings"]}, {"contestId": 1147, "index": "A", "name": "Hide and Seek", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["graphs"]}, {"contestId": 1146, "index": "H", "name": "Satanic Panic", "type": "PROGRAMMING", "points": 3750.0, "rating": 2900, "tags": ["dp", "geometry"]}, {"contestId": 1146, "index": "G", "name": "Zoning Restrictions", "type": "PROGRAMMING", "points": 3250.0, "rating": 2700, "tags": ["dp", "flows", "graphs"]}, {"contestId": 1146, "index": "F", "name": "Leaf Partition", "type": "PROGRAMMING", "points": 3250.0, "rating": 2500, "tags": ["dp", "trees"]}, {"contestId": 1146, "index": "E", "name": "Hot is Cold", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["bitmasks", "data structures", "divide and conquer", "implementation"]}, {"contestId": 1146, "index": "D", "name": "Frog Jumping", "type": "PROGRAMMING", "points": 2250.0, "rating": 2100, "tags": ["dfs and similar", "math", "number theory"]}, {"contestId": 1146, "index": "C", "name": "Tree Diameter", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["bitmasks", "graphs", "interactive"]}, {"contestId": 1146, "index": "B", "name": "Hate \"A\"", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["implementation", "strings"]}, {"contestId": 1146, "index": "A", "name": "Love \"A\"", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "strings"]}, {"contestId": 1145, "index": "G", "name": "AI Takeover", "type": "PROGRAMMING", "tags": ["interactive"]}, {"contestId": 1145, "index": "F", "name": "Neat Words", "type": "PROGRAMMING", "tags": []}, {"contestId": 1145, "index": "E", "name": "Fourier Doodles", "type": "PROGRAMMING", "tags": []}, {"contestId": 1145, "index": "D", "name": "Pigeon d'Or", "type": "PROGRAMMING", "tags": ["implementation"]}, {"contestId": 1145, "index": "C", "name": "Mystery Circuit", "type": "PROGRAMMING", "tags": ["bitmasks", "brute force"]}, {"contestId": 1145, "index": "B", "name": "Kanban Numbers", "type": "PROGRAMMING", "tags": ["brute force"]}, {"contestId": 1145, "index": "A", "name": "Thanos Sort", "type": "PROGRAMMING", "tags": ["implementation"]}, {"contestId": 1144, "index": "G", "name": "Two Merged Sequences", "type": "PROGRAMMING", "rating": 2400, "tags": ["dp", "greedy"]}, {"contestId": 1144, "index": "F", "name": "Graph Without Long Directed Paths", "type": "PROGRAMMING", "rating": 1700, "tags": ["dfs and similar", "graphs"]}, {"contestId": 1144, "index": "E", "name": "Median String", "type": "PROGRAMMING", "rating": 1900, "tags": ["bitmasks", "math", "number theory", "strings"]}, {"contestId": 1144, "index": "D", "name": "Equalize Them All", "type": "PROGRAMMING", "rating": 1400, "tags": ["constructive algorithms", "greedy"]}, {"contestId": 1144, "index": "C", "name": "Two Shuffled Sequences", "type": "PROGRAMMING", "rating": 1000, "tags": ["constructive algorithms", "sortings"]}, {"contestId": 1144, "index": "B", "name": "Parity Alternated Deletions", "type": "PROGRAMMING", "rating": 900, "tags": ["greedy", "implementation", "sortings"]}, {"contestId": 1144, "index": "A", "name": "Diverse Strings", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "strings"]}, {"contestId": 1143, "index": "C", "name": "Queen", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["dfs and similar", "trees"]}, {"contestId": 1143, "index": "B", "name": "Nirvana", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["brute force", "math", "number theory"]}, {"contestId": 1143, "index": "A", "name": "The Doors", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 1142, "index": "E", "name": "Pink Floyd", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["graphs", "interactive"]}, {"contestId": 1142, "index": "D", "name": "Foreigner", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["dp"]}, {"contestId": 1142, "index": "C", "name": "U2", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["geometry"]}, {"contestId": 1142, "index": "B", "name": "Lynyrd Skynyrd", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["data structures", "dfs and similar", "dp", "math", "trees"]}, {"contestId": 1142, "index": "A", "name": "The Beatles", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["brute force", "math"]}, {"contestId": 1141, "index": "G", "name": "Privatization of Roads in Treeland", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "constructive algorithms", "dfs and similar", "graphs", "greedy", "trees"]}, {"contestId": 1141, "index": "F2", "name": "Same Sum Blocks (Hard)", "type": "PROGRAMMING", "rating": 1900, "tags": ["data structures", "greedy"]}, {"contestId": 1141, "index": "F1", "name": "Same Sum Blocks (Easy)", "type": "PROGRAMMING", "rating": 1900, "tags": ["greedy"]}, {"contestId": 1141, "index": "E", "name": "Superhero Battle", "type": "PROGRAMMING", "rating": 1700, "tags": ["math"]}, {"contestId": 1141, "index": "D", "name": "Colored Boots", "type": "PROGRAMMING", "rating": 1500, "tags": ["greedy", "implementation"]}, {"contestId": 1141, "index": "C", "name": "Polycarp Restores Permutation", "type": "PROGRAMMING", "rating": 1500, "tags": ["math"]}, {"contestId": 1141, "index": "B", "name": "Maximal Continuous Rest", "type": "PROGRAMMING", "rating": 900, "tags": ["implementation"]}, {"contestId": 1141, "index": "A", "name": "Game 23", "type": "PROGRAMMING", "rating": 1000, "tags": ["implementation", "math"]}, {"contestId": 1140, "index": "G", "name": "Double Tree", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "divide and conquer", "shortest paths", "trees"]}, {"contestId": 1140, "index": "F", "name": "Extending Set of Points", "type": "PROGRAMMING", "rating": 2600, "tags": ["data structures", "divide and conquer", "dsu"]}, {"contestId": 1140, "index": "E", "name": "Palindrome-less Arrays", "type": "PROGRAMMING", "rating": 2200, "tags": ["combinatorics", "divide and conquer", "dp"]}, {"contestId": 1140, "index": "D", "name": "Minimum Triangulation", "type": "PROGRAMMING", "rating": 1200, "tags": ["dp", "greedy", "math"]}, {"contestId": 1140, "index": "C", "name": "Playlist", "type": "PROGRAMMING", "rating": 1600, "tags": ["brute force", "data structures", "sortings"]}, {"contestId": 1140, "index": "B", "name": "Good String", "type": "PROGRAMMING", "rating": 1200, "tags": ["implementation", "strings"]}, {"contestId": 1140, "index": "A", "name": "Detective Book", "type": "PROGRAMMING", "rating": 1000, "tags": ["implementation"]}, {"contestId": 1139, "index": "F", "name": "Dish Shopping", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["data structures", "divide and conquer"]}, {"contestId": 1139, "index": "E", "name": "Maximize Mex", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["flows", "graph matchings", "graphs"]}, {"contestId": 1139, "index": "D", "name": "Steps to One", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["dp", "math", "number theory", "probabilities"]}, {"contestId": 1139, "index": "C", "name": "Edgy Trees", "type": "PROGRAMMING", "points": 1750.0, "rating": 1500, "tags": ["dfs and similar", "dsu", "graphs", "math", "trees"]}, {"contestId": 1139, "index": "B", "name": "Chocolates", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["greedy", "implementation"]}, {"contestId": 1139, "index": "A", "name": "Even Substrings", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "strings"]}, {"contestId": 1138, "index": "B", "name": "Circus", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["brute force", "greedy", "math", "strings"]}, {"contestId": 1138, "index": "A", "name": "Sushi for Two", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["binary search", "greedy", "implementation"]}, {"contestId": 1137, "index": "F", "name": "Matches Are Not a Child's Play ", "type": "PROGRAMMING", "points": 3000.0, "rating": 3400, "tags": ["data structures", "trees"]}, {"contestId": 1137, "index": "E", "name": "Train Car Selection", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["data structures", "greedy"]}, {"contestId": 1137, "index": "D", "name": "Cooperative Game", "type": "PROGRAMMING", "points": 2250.0, "rating": 2400, "tags": ["constructive algorithms", "interactive", "number theory"]}, {"contestId": 1137, "index": "C", "name": "Museums Tour", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["dp", "graphs", "implementation"]}, {"contestId": 1137, "index": "B", "name": "Camp Schedule", "type": "PROGRAMMING", "points": 750.0, "rating": 1600, "tags": ["greedy", "hashing", "strings"]}, {"contestId": 1137, "index": "A", "name": "Skyscrapers", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["implementation", "sortings"]}, {"contestId": 1136, "index": "E", "name": "Nastya Hasn't Written a Legend", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["binary search", "data structures"]}, {"contestId": 1136, "index": "D", "name": "Nastya Is Buying Lunch", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["greedy"]}, {"contestId": 1136, "index": "C", "name": "Nastya Is Transposing Matrices", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["constructive algorithms", "sortings"]}, {"contestId": 1136, "index": "B", "name": "Nastya Is Playing Computer Games", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["constructive algorithms", "math"]}, {"contestId": 1136, "index": "A", "name": "Nastya Is Reading a Book", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 1133, "index": "F2", "name": "Spanning Tree with One Fixed Degree", "type": "PROGRAMMING", "rating": 1900, "tags": ["constructive algorithms", "dfs and similar", "dsu", "graphs", "greedy"]}, {"contestId": 1133, "index": "F1", "name": "Spanning Tree with Maximum Degree", "type": "PROGRAMMING", "rating": 1600, "tags": ["graphs"]}, {"contestId": 1133, "index": "E", "name": "K Balanced Teams", "type": "PROGRAMMING", "rating": 1800, "tags": ["dp", "sortings", "two pointers"]}, {"contestId": 1133, "index": "D", "name": "Zero Quantity Maximization", "type": "PROGRAMMING", "rating": 1500, "tags": ["hashing", "math", "number theory"]}, {"contestId": 1133, "index": "C", "name": "Balanced Team", "type": "PROGRAMMING", "rating": 1200, "tags": ["sortings", "two pointers"]}, {"contestId": 1133, "index": "B", "name": "Preparation for International Women's Day", "type": "PROGRAMMING", "rating": 1200, "tags": ["math", "number theory"]}, {"contestId": 1133, "index": "A", "name": "Middle of the Contest", "type": "PROGRAMMING", "rating": 1000, "tags": ["implementation"]}, {"contestId": 1132, "index": "G", "name": "Greedy Subsequences", "type": "PROGRAMMING", "rating": 2400, "tags": ["data structures", "dp", "trees"]}, {"contestId": 1132, "index": "F", "name": "Clear the String", "type": "PROGRAMMING", "rating": 2000, "tags": ["dp"]}, {"contestId": 1132, "index": "E", "name": "Knapsack", "type": "PROGRAMMING", "rating": 2300, "tags": ["dfs and similar", "dp", "greedy"]}, {"contestId": 1132, "index": "D", "name": "Stressful Training", "type": "PROGRAMMING", "rating": 2300, "tags": ["binary search", "greedy"]}, {"contestId": 1132, "index": "C", "name": "Painting the Fence", "type": "PROGRAMMING", "rating": 1700, "tags": ["brute force"]}, {"contestId": 1132, "index": "B", "name": "Discounts", "type": "PROGRAMMING", "rating": 900, "tags": ["greedy", "sortings"]}, {"contestId": 1132, "index": "A", "name": "Regular Bracket Sequence", "type": "PROGRAMMING", "rating": 1100, "tags": ["greedy", "implementation"]}, {"contestId": 1131, "index": "G", "name": "Most Dangerous Shark", "type": "PROGRAMMING", "points": 3500.0, "rating": 2700, "tags": ["data structures", "dp", "two pointers"]}, {"contestId": 1131, "index": "F", "name": "Asya And Kittens", "type": "PROGRAMMING", "points": 3000.0, "rating": 1700, "tags": ["constructive algorithms", "dsu"]}, {"contestId": 1131, "index": "E", "name": "String Multiplication", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["dp", "greedy", "strings"]}, {"contestId": 1131, "index": "D", "name": "Gourmet choice", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["dfs and similar", "dp", "dsu", "graphs", "greedy"]}, {"contestId": 1131, "index": "C", "name": "Birthday", "type": "PROGRAMMING", "points": 1500.0, "rating": 1200, "tags": ["binary search", "greedy", "sortings"]}, {"contestId": 1131, "index": "B", "name": "Draw!", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["greedy", "implementation"]}, {"contestId": 1131, "index": "A", "name": "Sea Battle", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math"]}, {"contestId": 1130, "index": "C", "name": "Connect", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["brute force", "dfs and similar", "dsu"]}, {"contestId": 1130, "index": "B", "name": "Two Cakes", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["greedy"]}, {"contestId": 1130, "index": "A", "name": "Be Positive", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 1129, "index": "E", "name": "Legendary Tree", "type": "PROGRAMMING", "points": 2250.0, "rating": 3100, "tags": ["binary search", "interactive", "trees"]}, {"contestId": 1129, "index": "D", "name": "Isolation", "type": "PROGRAMMING", "points": 2250.0, "rating": 2900, "tags": ["data structures", "dp"]}, {"contestId": 1129, "index": "C", "name": "Morse Code", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["binary search", "data structures", "dp", "hashing", "sortings", "string suffix structures", "strings"]}, {"contestId": 1129, "index": "B", "name": "Wrong Answer", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["constructive algorithms"]}, {"contestId": 1129, "index": "A2", "name": "Toy Train", "type": "PROGRAMMING", "points": 250.0, "rating": 1800, "tags": ["brute force", "greedy"]}, {"contestId": 1129, "index": "A1", "name": "Toy Train (Simplified)", "type": "PROGRAMMING", "points": 250.0, "rating": 1700, "tags": ["brute force", "greedy"]}, {"contestId": 1121, "index": "C", "name": "System Testing", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["implementation"]}, {"contestId": 1121, "index": "B", "name": "Mike and Children", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["brute force", "implementation"]}, {"contestId": 1121, "index": "A", "name": "Technogoblet of Fire", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["implementation", "sortings"]}, {"contestId": 1120, "index": "F", "name": "Secret Letters", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["data structures", "dp", "greedy"]}, {"contestId": 1120, "index": "E", "name": "The very same Munchhausen", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["brute force"]}, {"contestId": 1120, "index": "D", "name": "Power Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["dfs and similar", "dp", "dsu", "graphs", "greedy", "trees"]}, {"contestId": 1120, "index": "C", "name": "Compress String", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["dp", "strings"]}, {"contestId": 1120, "index": "B", "name": "Once in a casino", "type": "PROGRAMMING", "points": 1000.0, "rating": 2700, "tags": ["constructive algorithms", "greedy", "implementation", "math"]}, {"contestId": 1120, "index": "A", "name": "Diana and Liana", "type": "PROGRAMMING", "points": 500.0, "rating": 1900, "tags": ["greedy", "implementation", "two pointers"]}, {"contestId": 1119, "index": "H", "name": "Triple", "type": "PROGRAMMING", "points": 3750.0, "rating": 3200, "tags": ["fft", "math"]}, {"contestId": 1119, "index": "G", "name": "Get Ready for the Battle", "type": "PROGRAMMING", "points": 3500.0, "rating": 3100, "tags": ["constructive algorithms", "implementation"]}, {"contestId": 1119, "index": "F", "name": "Niyaz and Small Degrees", "type": "PROGRAMMING", "points": 3250.0, "rating": 3400, "tags": ["data structures", "dp", "trees"]}, {"contestId": 1119, "index": "E", "name": "Pavel and Triangles", "type": "PROGRAMMING", "points": 2500.0, "rating": 1900, "tags": ["brute force", "dp", "fft", "greedy", "ternary search"]}, {"contestId": 1119, "index": "D", "name": "Frets On Fire", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["binary search", "sortings"]}, {"contestId": 1119, "index": "C", "name": "Ramesses and Corner Inversion", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["constructive algorithms", "greedy", "implementation", "math"]}, {"contestId": 1119, "index": "B", "name": "Alyona and a Narrow Fridge", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["binary search", "flows", "greedy", "sortings"]}, {"contestId": 1119, "index": "A", "name": "Ilya and a Colorful Walk", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["greedy", "implementation"]}, {"contestId": 1118, "index": "F2", "name": "Tree Cutting (Hard Version)", "type": "PROGRAMMING", "rating": 2700, "tags": ["combinatorics", "dfs and similar", "dp", "trees"]}, {"contestId": 1118, "index": "F1", "name": "Tree Cutting (Easy Version)", "type": "PROGRAMMING", "rating": 1800, "tags": ["dfs and similar", "trees"]}, {"contestId": 1118, "index": "E", "name": "Yet Another Ball Problem", "type": "PROGRAMMING", "rating": 1700, "tags": ["constructive algorithms", "implementation"]}, {"contestId": 1118, "index": "D2", "name": "Coffee and Coursework (Hard Version)", "type": "PROGRAMMING", "rating": 1700, "tags": ["binary search", "greedy"]}, {"contestId": 1118, "index": "D1", "name": "Coffee and Coursework (Easy version)", "type": "PROGRAMMING", "rating": 1700, "tags": ["brute force", "greedy"]}, {"contestId": 1118, "index": "C", "name": "Palindromic Matrix", "type": "PROGRAMMING", "rating": 1700, "tags": ["constructive algorithms", "implementation"]}, {"contestId": 1118, "index": "B", "name": "Tanya and Candies", "type": "PROGRAMMING", "rating": 1200, "tags": ["implementation"]}, {"contestId": 1118, "index": "A", "name": "Water Buying", "type": "PROGRAMMING", "rating": 800, "tags": ["math"]}, {"contestId": 1117, "index": "G", "name": "Recursive Queries", "type": "PROGRAMMING", "rating": 2500, "tags": ["data structures"]}, {"contestId": 1117, "index": "F", "name": "Crisp String", "type": "PROGRAMMING", "rating": 2500, "tags": ["bitmasks", "dp"]}, {"contestId": 1117, "index": "E", "name": "Decypher the String", "type": "PROGRAMMING", "rating": 2200, "tags": ["bitmasks", "chinese remainder theorem", "constructive algorithms", "interactive", "math"]}, {"contestId": 1117, "index": "D", "name": "Magic Gems", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp", "math", "matrices"]}, {"contestId": 1117, "index": "C", "name": "Magic Ship", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search"]}, {"contestId": 1117, "index": "B", "name": "Emotes", "type": "PROGRAMMING", "rating": 1000, "tags": ["greedy", "math", "sortings"]}, {"contestId": 1117, "index": "A", "name": "Best Subsegment", "type": "PROGRAMMING", "rating": 1100, "tags": ["implementation", "math"]}, {"contestId": 1116, "index": "D6", "name": "Hessenberg matrix", "type": "PROGRAMMING", "tags": []}, {"contestId": 1116, "index": "D5", "name": "Creeper", "type": "PROGRAMMING", "tags": []}, {"contestId": 1116, "index": "D4", "name": "TIE fighter", "type": "PROGRAMMING", "tags": []}, {"contestId": 1116, "index": "D3", "name": "X-wing fighter", "type": "PROGRAMMING", "tags": []}, {"contestId": 1116, "index": "D2", "name": "Pattern of increasing blocks", "type": "PROGRAMMING", "tags": []}, {"contestId": 1116, "index": "D1", "name": "Block diagonal matrix", "type": "PROGRAMMING", "tags": []}, {"contestId": 1116, "index": "C3", "name": "``Is the number of ones divisible by 3?'' oracle", "type": "PROGRAMMING", "tags": []}, {"contestId": 1116, "index": "C2", "name": "``Is the bit string periodic?'' oracle", "type": "PROGRAMMING", "tags": []}, {"contestId": 1116, "index": "C1", "name": "Alternating bits oracle", "type": "PROGRAMMING", "tags": []}, {"contestId": 1116, "index": "B2", "name": "Not A, not B or not C?", "type": "PROGRAMMING", "tags": []}, {"contestId": 1116, "index": "B1", "name": "Distinguish three-qubit states", "type": "PROGRAMMING", "tags": []}, {"contestId": 1116, "index": "A2", "name": "Generate equal superposition of four basis states", "type": "PROGRAMMING", "tags": []}, {"contestId": 1116, "index": "A1", "name": "Generate state |00\u27e9 + |01\u27e9 + |10\u27e9", "type": "PROGRAMMING", "tags": []}, {"contestId": 1115, "index": "U3", "name": "Block unitary", "type": "PROGRAMMING", "rating": 1700, "tags": ["*special"]}, {"contestId": 1115, "index": "U2", "name": "Chessboard unitary", "type": "PROGRAMMING", "rating": 1600, "tags": ["*special"]}, {"contestId": 1115, "index": "U1", "name": "Anti-diagonal unitary", "type": "PROGRAMMING", "rating": 1500, "tags": ["*special"]}, {"contestId": 1115, "index": "G3", "name": "Palindrome checker oracle", "type": "PROGRAMMING", "rating": 1600, "tags": ["*special"]}, {"contestId": 1115, "index": "G2", "name": "OR oracle", "type": "PROGRAMMING", "rating": 1600, "tags": ["*special"]}, {"contestId": 1115, "index": "G1", "name": "AND oracle", "type": "PROGRAMMING", "rating": 1100, "tags": ["*special"]}, {"contestId": 1114, "index": "F", "name": "Please, another Queries on Array?", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["bitmasks", "data structures", "divide and conquer", "math", "number theory"]}, {"contestId": 1114, "index": "E", "name": "Arithmetic Progression", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["binary search", "interactive", "number theory", "probabilities"]}, {"contestId": 1114, "index": "D", "name": "Flood Fill", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["dp"]}, {"contestId": 1114, "index": "C", "name": "Trailing Loves (or L'oeufs?)", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["brute force", "implementation", "math", "number theory"]}, {"contestId": 1114, "index": "B", "name": "Yet Another Array Partitioning Task", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["constructive algorithms", "greedy", "sortings"]}, {"contestId": 1114, "index": "A", "name": "Got Any Grapes?", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "greedy", "implementation"]}, {"contestId": 1113, "index": "B", "name": "Sasha and Magnetic Machines", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["greedy", "number theory"]}, {"contestId": 1113, "index": "A", "name": "Sasha and His Trip", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["dp", "greedy", "math"]}, {"contestId": 1111, "index": "E", "name": "Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["data structures", "dfs and similar", "dp", "graphs", "trees"]}, {"contestId": 1111, "index": "D", "name": "Destroy the Colony", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 1111, "index": "C", "name": "Creative Snap", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["binary search", "brute force", "divide and conquer", "math"]}, {"contestId": 1111, "index": "B", "name": "Average Superhero Gang Power ", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["brute force", "implementation", "math"]}, {"contestId": 1111, "index": "A", "name": "Superhero Transformation", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation", "strings"]}, {"contestId": 1110, "index": "H", "name": "Modest Substrings", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["dp", "strings"]}, {"contestId": 1110, "index": "G", "name": "Tree-Tac-Toe ", "type": "PROGRAMMING", "points": 3500.0, "rating": 3100, "tags": ["constructive algorithms", "games", "trees"]}, {"contestId": 1110, "index": "F", "name": "Nearest Leaf", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["data structures", "trees"]}, {"contestId": 1110, "index": "E", "name": "Magic Stones", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["constructive algorithms", "math", "sortings"]}, {"contestId": 1110, "index": "D", "name": "Jongmah", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["dp"]}, {"contestId": 1110, "index": "C", "name": "Meaningless Operations", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["constructive algorithms", "math", "number theory"]}, {"contestId": 1110, "index": "B", "name": "Tape", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["greedy", "sortings"]}, {"contestId": 1110, "index": "A", "name": "Parity", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["math"]}, {"contestId": 1109, "index": "F", "name": "Sasha and Algorithm of Silence's Sounds", "type": "PROGRAMMING", "points": 3000.0, "rating": 3200, "tags": ["data structures", "trees"]}, {"contestId": 1109, "index": "E", "name": "Sasha and a Very Easy Test", "type": "PROGRAMMING", "points": 2250.0, "rating": 2700, "tags": ["data structures", "number theory"]}, {"contestId": 1109, "index": "D", "name": "Sasha and Interesting Fact from Graph Theory", "type": "PROGRAMMING", "points": 1750.0, "rating": 2400, "tags": ["brute force", "combinatorics", "dp", "math", "trees"]}, {"contestId": 1109, "index": "C", "name": "Sasha and a Patient Friend", "type": "PROGRAMMING", "points": 1750.0, "rating": 2800, "tags": ["binary search", "data structures", "implementation"]}, {"contestId": 1109, "index": "B", "name": "Sasha and One More Name", "type": "PROGRAMMING", "points": 1250.0, "rating": 1800, "tags": ["constructive algorithms", "hashing", "strings"]}, {"contestId": 1109, "index": "A", "name": "Sasha and a Bit of Relax", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["dp", "implementation"]}, {"contestId": 1108, "index": "F", "name": "MST Unification", "type": "PROGRAMMING", "rating": 2100, "tags": ["binary search", "dsu", "graphs", "greedy"]}, {"contestId": 1108, "index": "E2", "name": "Array and Segments (Hard version)", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "implementation"]}, {"contestId": 1108, "index": "E1", "name": "Array and Segments (Easy version)", "type": "PROGRAMMING", "rating": 1800, "tags": ["brute force", "greedy", "implementation"]}, {"contestId": 1108, "index": "D", "name": "Diverse Garland", "type": "PROGRAMMING", "rating": 1400, "tags": ["constructive algorithms", "dp", "greedy"]}, {"contestId": 1108, "index": "C", "name": "Nice Garland", "type": "PROGRAMMING", "rating": 1300, "tags": ["brute force", "greedy", "math"]}, {"contestId": 1108, "index": "B", "name": "Divisors of Two Integers", "type": "PROGRAMMING", "rating": 1100, "tags": ["brute force", "greedy", "math", "number theory"]}, {"contestId": 1108, "index": "A", "name": "Two distinct points", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"]}, {"contestId": 1107, "index": "G", "name": "Vasya and Maximum Profit", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "constructive algorithms", "data structures", "dp", "dsu"]}, {"contestId": 1107, "index": "F", "name": "Vasya and Endless Credits", "type": "PROGRAMMING", "rating": 2600, "tags": ["dp", "flows", "graph matchings", "graphs", "sortings"]}, {"contestId": 1107, "index": "E", "name": "Vasya and Binary String", "type": "PROGRAMMING", "rating": 2400, "tags": ["dp"]}, {"contestId": 1107, "index": "D", "name": "Compression", "type": "PROGRAMMING", "rating": 1800, "tags": ["dp", "implementation", "math", "number theory"]}, {"contestId": 1107, "index": "C", "name": "Brutality", "type": "PROGRAMMING", "rating": 1300, "tags": ["greedy", "sortings", "two pointers"]}, {"contestId": 1107, "index": "B", "name": "Digital root", "type": "PROGRAMMING", "rating": 1000, "tags": ["math", "number theory"]}, {"contestId": 1107, "index": "A", "name": "Digits Sequence Dividing", "type": "PROGRAMMING", "rating": 900, "tags": ["greedy", "strings"]}, {"contestId": 1106, "index": "F", "name": "Lunar New Year and a Recursive Sequence", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["math", "matrices", "number theory"]}, {"contestId": 1106, "index": "E", "name": "Lunar New Year and Red Envelopes", "type": "PROGRAMMING", "points": 2250.0, "rating": 2100, "tags": ["data structures", "dp"]}, {"contestId": 1106, "index": "D", "name": "Lunar New Year and a Wander", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["data structures", "dfs and similar", "graphs", "greedy", "shortest paths"]}, {"contestId": 1106, "index": "C", "name": "Lunar New Year and Number Division", "type": "PROGRAMMING", "points": 1250.0, "rating": 900, "tags": ["greedy", "implementation", "math", "sortings"]}, {"contestId": 1106, "index": "B", "name": "Lunar New Year and Food Ordering", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["data structures", "implementation"]}, {"contestId": 1106, "index": "A", "name": "Lunar New Year and Cross Counting", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 1105, "index": "E", "name": "Helping Hiasat ", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["bitmasks", "brute force", "dp", "meet-in-the-middle"]}, {"contestId": 1105, "index": "D", "name": "Kilani and the Game", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["dfs and similar", "graphs", "implementation", "shortest paths"]}, {"contestId": 1105, "index": "C", "name": "Ayoub and Lost Array", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 1105, "index": "B", "name": "Zuhair and Strings", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["brute force", "implementation", "strings"]}, {"contestId": 1105, "index": "A", "name": "Salem and Sticks ", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["brute force", "implementation"]}, {"contestId": 1104, "index": "B", "name": "Game with string", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["data structures", "implementation", "math"]}, {"contestId": 1104, "index": "A", "name": "Splitting into digits", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "implementation", "math"]}, {"contestId": 1103, "index": "E", "name": "Radix sum", "type": "PROGRAMMING", "points": 3500.0, "rating": 3400, "tags": ["fft", "math", "number theory"]}, {"contestId": 1103, "index": "D", "name": "Professional layer", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["bitmasks", "dp"]}, {"contestId": 1103, "index": "C", "name": "Johnny Solving", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["constructive algorithms", "dfs and similar", "graphs", "math"]}, {"contestId": 1103, "index": "B", "name": "Game with modulo", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["binary search", "constructive algorithms", "interactive"]}, {"contestId": 1103, "index": "A", "name": "Grid game", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["constructive algorithms", "implementation"]}, {"contestId": 1102, "index": "F", "name": "Elongated Matrix", "type": "PROGRAMMING", "rating": 2000, "tags": ["binary search", "bitmasks", "brute force", "dp", "graphs"]}, {"contestId": 1102, "index": "E", "name": "Monotonic Renumeration", "type": "PROGRAMMING", "rating": 1700, "tags": ["combinatorics", "sortings"]}, {"contestId": 1102, "index": "D", "name": "Balanced Ternary String", "type": "PROGRAMMING", "rating": 1500, "tags": ["greedy", "strings"]}, {"contestId": 1102, "index": "C", "name": "Doors Breaking and Repairing", "type": "PROGRAMMING", "rating": 1200, "tags": ["games"]}, {"contestId": 1102, "index": "B", "name": "Array K-Coloring", "type": "PROGRAMMING", "rating": 1400, "tags": ["greedy", "sortings"]}, {"contestId": 1102, "index": "A", "name": "Integer Sequence Dividing", "type": "PROGRAMMING", "rating": 800, "tags": ["math"]}, {"contestId": 1101, "index": "G", "name": "(Zero XOR Subset)-less", "type": "PROGRAMMING", "rating": 2300, "tags": ["math", "matrices"]}, {"contestId": 1101, "index": "F", "name": "Trucks and Cities", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "dp"]}, {"contestId": 1101, "index": "E", "name": "Polycarp's New Job", "type": "PROGRAMMING", "rating": 1500, "tags": ["implementation"]}, {"contestId": 1101, "index": "D", "name": "GCD Counting", "type": "PROGRAMMING", "rating": 2000, "tags": ["data structures", "dfs and similar", "dp", "number theory", "trees"]}, {"contestId": 1101, "index": "C", "name": "Division and Union", "type": "PROGRAMMING", "rating": 1500, "tags": ["sortings"]}, {"contestId": 1101, "index": "B", "name": "Accordion", "type": "PROGRAMMING", "rating": 1300, "tags": ["greedy", "implementation"]}, {"contestId": 1101, "index": "A", "name": "Minimum Integer", "type": "PROGRAMMING", "rating": 1000, "tags": ["math"]}, {"contestId": 1100, "index": "F", "name": "Ivan and Burgers", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["data structures", "divide and conquer", "greedy", "math"]}, {"contestId": 1100, "index": "E", "name": "Andrew and Taxi", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["binary search", "dfs and similar", "graphs"]}, {"contestId": 1100, "index": "D", "name": "Dasha and Chess", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["constructive algorithms", "games", "interactive"]}, {"contestId": 1100, "index": "C", "name": "NN and the Optical Illusion", "type": "PROGRAMMING", "points": 1500.0, "rating": 1200, "tags": ["binary search", "geometry", "math"]}, {"contestId": 1100, "index": "B", "name": "Build a Contest", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["data structures", "implementation"]}, {"contestId": 1100, "index": "A", "name": "Roman and Browser", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"]}, {"contestId": 1099, "index": "F", "name": "Cookies", "type": "PROGRAMMING", "points": 2250.0, "rating": 2400, "tags": ["binary search", "data structures", "dfs and similar", "dp", "games", "trees"]}, {"contestId": 1099, "index": "C", "name": "Postcard", "type": "PROGRAMMING", "points": 1250.0, "rating": 1200, "tags": ["constructive algorithms", "implementation"]}, {"contestId": 1099, "index": "B", "name": "Squares and Segments", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["binary search", "constructive algorithms", "math"]}, {"contestId": 1099, "index": "A", "name": "Snowball", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 1098, "index": "F", "name": "\u0416-function", "type": "PROGRAMMING", "points": 3000.0, "rating": 3500, "tags": ["string suffix structures", "strings"]}, {"contestId": 1098, "index": "E", "name": "Fedya the Potter", "type": "PROGRAMMING", "points": 2500.0, "rating": 3400, "tags": ["binary search", "implementation", "math", "number theory"]}, {"contestId": 1098, "index": "D", "name": "Eels", "type": "PROGRAMMING", "points": 1750.0, "rating": 2800, "tags": ["data structures"]}, {"contestId": 1098, "index": "C", "name": "Construct a tree", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["binary search", "constructive algorithms", "dfs and similar", "graphs", "greedy", "trees"]}, {"contestId": 1098, "index": "B", "name": "Nice table", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["brute force", "constructive algorithms", "greedy", "math"]}, {"contestId": 1098, "index": "A", "name": "Sum in the tree", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["constructive algorithms", "dfs and similar", "greedy", "trees"]}, {"contestId": 1097, "index": "H", "name": "Mateusz and an Infinite Sequence", "type": "PROGRAMMING", "points": 4000.0, "rating": 3400, "tags": ["bitmasks", "brute force", "dp", "strings"]}, {"contestId": 1097, "index": "G", "name": "Vladislav and a Great Legend", "type": "PROGRAMMING", "points": 3500.0, "rating": 3000, "tags": ["combinatorics", "dp", "trees"]}, {"contestId": 1097, "index": "F", "name": "Alex and a TV Show", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["bitmasks", "combinatorics", "number theory"]}, {"contestId": 1097, "index": "E", "name": "Egor and an RPG game", "type": "PROGRAMMING", "points": 2750.0, "rating": 3400, "tags": ["constructive algorithms", "greedy"]}, {"contestId": 1097, "index": "D", "name": "Makoto and a Blackboard", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["dp", "math", "number theory", "probabilities"]}, {"contestId": 1097, "index": "C", "name": "Yuhao and a Parenthesis", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["greedy", "implementation"]}, {"contestId": 1097, "index": "B", "name": "Petr and a Combination Lock", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["bitmasks", "brute force", "dp"]}, {"contestId": 1097, "index": "A", "name": "Gennady and a Card Game", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "implementation"]}, {"contestId": 1096, "index": "G", "name": "Lucky Tickets", "type": "PROGRAMMING", "rating": 2400, "tags": ["divide and conquer", "dp", "fft"]}, {"contestId": 1096, "index": "F", "name": "Inversion Expectation", "type": "PROGRAMMING", "rating": 2300, "tags": ["dp", "math", "probabilities"]}, {"contestId": 1096, "index": "E", "name": "The Top Scorer", "type": "PROGRAMMING", "rating": 2500, "tags": ["combinatorics", "dp", "math", "probabilities"]}, {"contestId": 1096, "index": "D", "name": "Easy Problem", "type": "PROGRAMMING", "rating": 1800, "tags": ["dp"]}, {"contestId": 1096, "index": "C", "name": "Polygon for the Angle", "type": "PROGRAMMING", "rating": 1600, "tags": ["brute force", "geometry"]}, {"contestId": 1096, "index": "B", "name": "Substring Removal", "type": "PROGRAMMING", "rating": 1300, "tags": ["combinatorics", "math", "strings"]}, {"contestId": 1096, "index": "A", "name": "Find Divisible", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "implementation", "math"]}, {"contestId": 1095, "index": "F", "name": "Make It Connected", "type": "PROGRAMMING", "rating": 1900, "tags": ["dsu", "graphs", "greedy"]}, {"contestId": 1095, "index": "E", "name": "Almost Regular Bracket Sequence", "type": "PROGRAMMING", "rating": 1900, "tags": ["implementation"]}, {"contestId": 1095, "index": "D", "name": "Circular Dance", "type": "PROGRAMMING", "rating": 1600, "tags": ["implementation"]}, {"contestId": 1095, "index": "C", "name": "Powers Of Two", "type": "PROGRAMMING", "rating": 1400, "tags": ["bitmasks", "greedy"]}, {"contestId": 1095, "index": "B", "name": "Array Stabilization", "type": "PROGRAMMING", "rating": 900, "tags": ["implementation"]}, {"contestId": 1095, "index": "A", "name": "Repeating Cipher", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"]}, {"contestId": 1093, "index": "G", "name": "Multidimensional Queries", "type": "PROGRAMMING", "rating": 2300, "tags": ["bitmasks", "data structures"]}, {"contestId": 1093, "index": "F", "name": "Vasya and Array", "type": "PROGRAMMING", "rating": 2400, "tags": ["dp"]}, {"contestId": 1093, "index": "E", "name": "Intersection of Permutations", "type": "PROGRAMMING", "rating": 2400, "tags": ["data structures"]}, {"contestId": 1093, "index": "D", "name": "Beautiful Graph", "type": "PROGRAMMING", "rating": 1700, "tags": ["dfs and similar", "graphs"]}, {"contestId": 1093, "index": "C", "name": "Mishka and the Last Exam", "type": "PROGRAMMING", "rating": 1300, "tags": ["greedy"]}, {"contestId": 1093, "index": "B", "name": "Letters Rearranging", "type": "PROGRAMMING", "rating": 900, "tags": ["constructive algorithms", "greedy", "sortings", "strings"]}, {"contestId": 1093, "index": "A", "name": "Dice Rolling", "type": "PROGRAMMING", "rating": 800, "tags": ["math"]}, {"contestId": 1092, "index": "F", "name": "Tree with Maximum Cost", "type": "PROGRAMMING", "rating": 1900, "tags": ["dfs and similar", "dp", "trees"]}, {"contestId": 1092, "index": "E", "name": "Minimal Diameter Forest", "type": "PROGRAMMING", "rating": 2000, "tags": ["constructive algorithms", "dfs and similar", "greedy", "trees"]}, {"contestId": 1092, "index": "D2", "name": "Great Vova Wall (Version 2)", "type": "PROGRAMMING", "rating": 2200, "tags": ["data structures", "implementation"]}, {"contestId": 1092, "index": "D1", "name": "Great Vova Wall (Version 1)", "type": "PROGRAMMING", "rating": 2200, "tags": ["greedy", "implementation", "math"]}, {"contestId": 1092, "index": "C", "name": "Prefixes and Suffixes", "type": "PROGRAMMING", "rating": 1700, "tags": ["strings"]}, {"contestId": 1092, "index": "B", "name": "Teams Forming", "type": "PROGRAMMING", "rating": 800, "tags": ["sortings"]}, {"contestId": 1092, "index": "A", "name": "Uniform String", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"]}, {"contestId": 1091, "index": "H", "name": "New Year and the Tricolore Recreation", "type": "PROGRAMMING", "points": 4000.0, "rating": 3200, "tags": ["games"]}, {"contestId": 1091, "index": "G", "name": "New Year and the Factorisation Collaboration", "type": "PROGRAMMING", "points": 3750.0, "rating": 3200, "tags": ["interactive", "math", "number theory"]}, {"contestId": 1091, "index": "F", "name": "New Year and the Mallard Expedition", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["constructive algorithms", "greedy"]}, {"contestId": 1091, "index": "E", "name": "New Year and the Acquaintance Estimation", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["binary search", "data structures", "graphs", "greedy", "implementation", "math", "sortings"]}, {"contestId": 1091, "index": "D", "name": "New Year and the Permutation Concatenation", "type": "PROGRAMMING", "points": 2250.0, "rating": 1700, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 1091, "index": "C", "name": "New Year and the Sphere Transmission", "type": "PROGRAMMING", "points": 1750.0, "rating": 1400, "tags": ["math", "number theory"]}, {"contestId": 1091, "index": "B", "name": "New Year and the Treasure Geolocation", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["brute force", "constructive algorithms", "greedy", "implementation"]}, {"contestId": 1091, "index": "A", "name": "New Year and the Christmas Ornament", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "implementation", "math"]}, {"contestId": 1090, "index": "M", "name": "The Pleasant Walk", "type": "PROGRAMMING", "rating": 1000, "tags": ["implementation"]}, {"contestId": 1090, "index": "L", "name": "Berland University", "type": "PROGRAMMING", "rating": 2000, "tags": ["greedy", "math"]}, {"contestId": 1090, "index": "K", "name": "Right Expansion Of The Mind", "type": "PROGRAMMING", "rating": 2000, "tags": ["math"]}, {"contestId": 1090, "index": "J", "name": "Two Prefixes", "type": "PROGRAMMING", "rating": 2600, "tags": ["strings"]}, {"contestId": 1090, "index": "I", "name": "Minimal Product", "type": "PROGRAMMING", "rating": 2000, "tags": []}, {"contestId": 1090, "index": "H", "name": "Linearization", "type": "PROGRAMMING", "rating": 2900, "tags": []}, {"contestId": 1090, "index": "G", "name": "Combostone", "type": "PROGRAMMING", "rating": 2500, "tags": ["games", "implementation"]}, {"contestId": 1090, "index": "F", "name": "How to Learn You Score", "type": "PROGRAMMING", "rating": 2600, "tags": ["constructive algorithms", "interactive"]}, {"contestId": 1090, "index": "E", "name": "Horseback Riding", "type": "PROGRAMMING", "rating": 2300, "tags": ["flows", "graphs"]}, {"contestId": 1090, "index": "D", "name": "Similar Arrays", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms"]}, {"contestId": 1090, "index": "C", "name": "New Year Presents", "type": "PROGRAMMING", "rating": 2400, "tags": ["constructive algorithms", "data structures"]}, {"contestId": 1090, "index": "B", "name": "LaTeX Expert", "type": "PROGRAMMING", "rating": 1900, "tags": []}, {"contestId": 1090, "index": "A", "name": "Company Merging", "type": "PROGRAMMING", "rating": 1300, "tags": ["greedy"]}, {"contestId": 1089, "index": "M", "name": "Minegraphed", "type": "PROGRAMMING", "rating": 2400, "tags": ["constructive algorithms", "graphs"]}, {"contestId": 1089, "index": "L", "name": "Lazyland", "type": "PROGRAMMING", "rating": 900, "tags": []}, {"contestId": 1089, "index": "K", "name": "King Kog's Reception", "type": "PROGRAMMING", "rating": 2400, "tags": ["data structures"]}, {"contestId": 1089, "index": "J", "name": "JS Minification", "type": "PROGRAMMING", "rating": 3200, "tags": ["greedy", "implementation"]}, {"contestId": 1089, "index": "I", "name": "Interval-Free Permutations", "type": "PROGRAMMING", "rating": 2600, "tags": []}, {"contestId": 1089, "index": "H", "name": "Harder Satisfiability", "type": "PROGRAMMING", "rating": 3400, "tags": ["2-sat", "dfs and similar", "graphs"]}, {"contestId": 1089, "index": "G", "name": "Guest Student", "type": "PROGRAMMING", "rating": 1500, "tags": ["math"]}, {"contestId": 1089, "index": "F", "name": "Fractions", "type": "PROGRAMMING", "rating": 1900, "tags": ["math"]}, {"contestId": 1089, "index": "E", "name": "Easy Chess", "type": "PROGRAMMING", "rating": 1700, "tags": ["constructive algorithms"]}, {"contestId": 1089, "index": "D", "name": "Distance Sum", "type": "PROGRAMMING", "rating": 3100, "tags": ["graphs"]}, {"contestId": 1089, "index": "C", "name": "Cactus Search", "type": "PROGRAMMING", "rating": 2500, "tags": ["interactive"]}, {"contestId": 1089, "index": "B", "name": "Bimatching", "type": "PROGRAMMING", "rating": 3200, "tags": ["graphs"]}, {"contestId": 1089, "index": "A", "name": "Alice the Fan", "type": "PROGRAMMING", "rating": 2200, "tags": ["dp"]}, {"contestId": 1088, "index": "F", "name": "Ehab and a weird weight formula", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["data structures", "trees"]}, {"contestId": 1088, "index": "E", "name": "Ehab and a component choosing problem", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["dp", "greedy", "math", "trees"]}, {"contestId": 1088, "index": "D", "name": "Ehab and another another xor problem", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["bitmasks", "constructive algorithms", "implementation", "interactive"]}, {"contestId": 1088, "index": "C", "name": "Ehab and a 2-operation task", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["constructive algorithms", "greedy", "math"]}, {"contestId": 1088, "index": "B", "name": "Ehab and subtraction", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["implementation", "sortings"]}, {"contestId": 1088, "index": "A", "name": "Ehab and another construction problem", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "constructive algorithms"]}, {"contestId": 1086, "index": "F", "name": "Forest Fires", "type": "PROGRAMMING", "points": 3000.0, "rating": 3500, "tags": ["math"]}, {"contestId": 1085, "index": "G", "name": "Beautiful Matrix", "type": "PROGRAMMING", "points": 3250.0, "rating": 2900, "tags": ["combinatorics", "data structures", "dp"]}, {"contestId": 1085, "index": "F", "name": "Rock-Paper-Scissors Champion", "type": "PROGRAMMING", "points": 2750.0, "rating": 2500, "tags": []}, {"contestId": 1085, "index": "E", "name": "Vasya and Templates", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["greedy", "implementation", "strings"]}, {"contestId": 1085, "index": "D", "name": "Minimum Diameter Tree", "type": "PROGRAMMING", "points": 1750.0, "rating": 1700, "tags": ["constructive algorithms", "implementation", "trees"]}, {"contestId": 1085, "index": "C", "name": "Connect Three", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["implementation", "math"]}, {"contestId": 1085, "index": "B", "name": "Div Times Mod", "type": "PROGRAMMING", "points": 750.0, "rating": 1100, "tags": ["math"]}, {"contestId": 1085, "index": "A", "name": "Right-Left Cipher", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "strings"]}, {"contestId": 1084, "index": "C", "name": "The Fair Nut and String", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["combinatorics", "dp", "implementation"]}, {"contestId": 1084, "index": "B", "name": "Kvass and the Fair Nut", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["greedy", "implementation"]}, {"contestId": 1084, "index": "A", "name": "The Fair Nut and Elevator", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["brute force", "implementation"]}, {"contestId": 1083, "index": "F", "name": "The Fair Nut and Amusing Xor", "type": "PROGRAMMING", "points": 2500.0, "rating": 3300, "tags": ["data structures"]}, {"contestId": 1083, "index": "E", "name": "The Fair Nut and Rectangles", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["data structures", "dp", "geometry"]}, {"contestId": 1083, "index": "D", "name": "The Fair Nut's getting crazy", "type": "PROGRAMMING", "points": 2000.0, "rating": 3500, "tags": ["data structures", "implementation"]}, {"contestId": 1083, "index": "C", "name": "Max Mex", "type": "PROGRAMMING", "points": 1500.0, "rating": 2900, "tags": ["data structures", "trees"]}, {"contestId": 1083, "index": "B", "name": "The Fair Nut and Strings", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["greedy", "strings"]}, {"contestId": 1083, "index": "A", "name": "The Fair Nut and the Best Path", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["data structures", "dp", "trees"]}, {"contestId": 1082, "index": "G", "name": "Petya and Graph", "type": "PROGRAMMING", "rating": 2400, "tags": ["flows", "graphs"]}, {"contestId": 1082, "index": "F", "name": "Speed Dial", "type": "PROGRAMMING", "rating": 2800, "tags": ["dp", "strings", "trees"]}, {"contestId": 1082, "index": "E", "name": "Increasing Frequency", "type": "PROGRAMMING", "rating": 2000, "tags": ["binary search", "dp", "greedy"]}, {"contestId": 1082, "index": "D", "name": "Maximum Diameter Graph", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "graphs", "implementation"]}, {"contestId": 1082, "index": "C", "name": "Multi-Subject Competition", "type": "PROGRAMMING", "rating": 1600, "tags": ["greedy", "sortings"]}, {"contestId": 1082, "index": "B", "name": "Vova and Trophies", "type": "PROGRAMMING", "rating": 1600, "tags": ["greedy"]}, {"contestId": 1082, "index": "A", "name": "Vasya and Book", "type": "PROGRAMMING", "rating": 1200, "tags": ["implementation", "math"]}, {"contestId": 1081, "index": "H", "name": "Palindromic Magic", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["data structures", "hashing", "strings"]}, {"contestId": 1081, "index": "G", "name": "Mergesort Strikes Back", "type": "PROGRAMMING", "points": 3500.0, "rating": 3200, "tags": ["math", "probabilities"]}, {"contestId": 1081, "index": "F", "name": "Tricky Interactor", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["constructive algorithms", "implementation", "interactive"]}, {"contestId": 1081, "index": "E", "name": "Missing Numbers", "type": "PROGRAMMING", "points": 2500.0, "rating": 1900, "tags": ["binary search", "constructive algorithms", "greedy", "math", "number theory"]}, {"contestId": 1081, "index": "D", "name": "Maximum Distance", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["dsu", "graphs", "shortest paths", "sortings"]}, {"contestId": 1081, "index": "C", "name": "Colorful Bricks", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 1081, "index": "B", "name": "Farewell Party", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["constructive algorithms", "implementation"]}, {"contestId": 1081, "index": "A", "name": "Definite Game", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "math"]}, {"contestId": 1080, "index": "F", "name": "Katya and Segments Sets", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures", "interactive", "sortings"]}, {"contestId": 1080, "index": "E", "name": "Sonya and Matrix Beauty", "type": "PROGRAMMING", "points": 2250.0, "rating": 2400, "tags": ["strings"]}, {"contestId": 1080, "index": "D", "name": "Olya and magical square", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["constructive algorithms", "implementation", "math"]}, {"contestId": 1080, "index": "C", "name": "Masha and two friends", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["implementation"]}, {"contestId": 1080, "index": "B", "name": "Margarite and the best present", "type": "PROGRAMMING", "points": 750.0, "rating": 900, "tags": ["math"]}, {"contestId": 1080, "index": "A", "name": "Petya and Origami", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math"]}, {"contestId": 1078, "index": "E", "name": "Negative Time Summation", "type": "PROGRAMMING", "points": 2750.0, "rating": 3400, "tags": ["constructive algorithms"]}, {"contestId": 1077, "index": "F2", "name": "Pictures with Kittens (hard version)", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "dp"]}, {"contestId": 1077, "index": "F1", "name": "Pictures with Kittens (easy version)", "type": "PROGRAMMING", "rating": 1900, "tags": ["dp"]}, {"contestId": 1077, "index": "E", "name": "Thematic Contests", "type": "PROGRAMMING", "rating": 1800, "tags": ["greedy", "sortings"]}, {"contestId": 1077, "index": "D", "name": "Cutting Out", "type": "PROGRAMMING", "rating": 1600, "tags": ["binary search", "sortings"]}, {"contestId": 1077, "index": "C", "name": "Good Array", "type": "PROGRAMMING", "rating": 1300, "tags": []}, {"contestId": 1077, "index": "B", "name": "Disturbed People", "type": "PROGRAMMING", "rating": 1000, "tags": ["greedy"]}, {"contestId": 1077, "index": "A", "name": "Frog Jumping", "type": "PROGRAMMING", "rating": 800, "tags": ["math"]}, {"contestId": 1076, "index": "G", "name": "Array Game", "type": "PROGRAMMING", "rating": 3000, "tags": ["data structures", "games"]}, {"contestId": 1076, "index": "F", "name": "Summer Practice Report", "type": "PROGRAMMING", "rating": 2500, "tags": ["dp", "greedy"]}, {"contestId": 1076, "index": "E", "name": "Vasya and a Tree", "type": "PROGRAMMING", "rating": 1900, "tags": ["data structures", "trees"]}, {"contestId": 1076, "index": "D", "name": "Edge Deletion", "type": "PROGRAMMING", "rating": 1800, "tags": ["graphs", "greedy", "shortest paths"]}, {"contestId": 1076, "index": "C", "name": "Meme Problem", "type": "PROGRAMMING", "rating": 1300, "tags": ["binary search", "math"]}, {"contestId": 1076, "index": "B", "name": "Divisor Subtraction", "type": "PROGRAMMING", "rating": 1200, "tags": ["implementation", "math", "number theory"]}, {"contestId": 1076, "index": "A", "name": "Minimizing the String", "type": "PROGRAMMING", "rating": 1200, "tags": ["greedy", "strings"]}, {"contestId": 1075, "index": "B", "name": "Taxi drivers and Lyft", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["implementation", "sortings"]}, {"contestId": 1075, "index": "A", "name": "The King's Race", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "math"]}, {"contestId": 1073, "index": "G", "name": "Yet Another LCP Problem", "type": "PROGRAMMING", "rating": 2600, "tags": ["data structures", "string suffix structures"]}, {"contestId": 1073, "index": "F", "name": "Choosing Two Paths", "type": "PROGRAMMING", "rating": 2500, "tags": ["dfs and similar", "dp", "greedy", "trees"]}, {"contestId": 1073, "index": "E", "name": "Segment Sum", "type": "PROGRAMMING", "rating": 2300, "tags": ["bitmasks", "combinatorics", "dp", "math"]}, {"contestId": 1073, "index": "D", "name": "Berland Fair", "type": "PROGRAMMING", "rating": 1700, "tags": ["binary search", "brute force", "data structures", "greedy"]}, {"contestId": 1073, "index": "C", "name": "Vasya and Robot", "type": "PROGRAMMING", "rating": 1800, "tags": ["binary search", "two pointers"]}, {"contestId": 1073, "index": "B", "name": "Vasya and Books", "type": "PROGRAMMING", "rating": 1000, "tags": ["implementation", "math"]}, {"contestId": 1073, "index": "A", "name": "Diverse Substring", "type": "PROGRAMMING", "rating": 1000, "tags": ["implementation", "strings"]}, {"contestId": 1071, "index": "E", "name": "Rain Protection", "type": "PROGRAMMING", "points": 2250.0, "rating": 3500, "tags": ["binary search", "geometry"]}, {"contestId": 1070, "index": "M", "name": "Algoland and Berland", "type": "PROGRAMMING", "rating": 3000, "tags": ["constructive algorithms", "divide and conquer", "geometry"]}, {"contestId": 1070, "index": "L", "name": "Odd Federalization", "type": "PROGRAMMING", "rating": 2600, "tags": ["constructive algorithms"]}, {"contestId": 1070, "index": "K", "name": "Video Posts", "type": "PROGRAMMING", "rating": 1100, "tags": ["implementation"]}, {"contestId": 1070, "index": "J", "name": "Streets and Avenues in Berhattan", "type": "PROGRAMMING", "rating": 2300, "tags": ["dp"]}, {"contestId": 1070, "index": "I", "name": "Privatization of Roads in Berland", "type": "PROGRAMMING", "rating": 2400, "tags": ["flows", "graphs"]}, {"contestId": 1070, "index": "H", "name": "BerOS File Suggestion", "type": "PROGRAMMING", "rating": 1500, "tags": ["brute force", "implementation"]}, {"contestId": 1070, "index": "G", "name": "Monsters and Potions", "type": "PROGRAMMING", "rating": 2300, "tags": ["brute force", "dp", "greedy", "implementation"]}, {"contestId": 1070, "index": "F", "name": "Debate", "type": "PROGRAMMING", "rating": 1500, "tags": ["greedy"]}, {"contestId": 1070, "index": "E", "name": "Getting Deals Done", "type": "PROGRAMMING", "rating": 2100, "tags": ["binary search", "data structures"]}, {"contestId": 1070, "index": "D", "name": "Garbage Disposal", "type": "PROGRAMMING", "rating": 1300, "tags": ["greedy"]}, {"contestId": 1070, "index": "C", "name": "Cloud Computing", "type": "PROGRAMMING", "rating": 2000, "tags": ["data structures", "greedy"]}, {"contestId": 1070, "index": "B", "name": "Berkomnadzor", "type": "PROGRAMMING", "rating": 2400, "tags": ["data structures", "greedy"]}, {"contestId": 1070, "index": "A", "name": "Find a Number", "type": "PROGRAMMING", "rating": 2200, "tags": ["dp", "graphs", "number theory", "shortest paths"]}, {"contestId": 1068, "index": "C", "name": "Colored Rooks", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["constructive algorithms", "graphs"]}, {"contestId": 1068, "index": "B", "name": "LCM", "type": "PROGRAMMING", "points": 1250.0, "rating": 1200, "tags": ["math", "number theory"]}, {"contestId": 1068, "index": "A", "name": "Birthday", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["math"]}, {"contestId": 1067, "index": "E", "name": "Random Forest Rank", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["dp", "graph matchings", "math", "trees"]}, {"contestId": 1067, "index": "D", "name": "Computer Game", "type": "PROGRAMMING", "points": 2250.0, "rating": 3100, "tags": ["dp", "greedy", "math", "probabilities"]}, {"contestId": 1067, "index": "C", "name": "Knights", "type": "PROGRAMMING", "points": 1750.0, "rating": 2600, "tags": ["constructive algorithms"]}, {"contestId": 1067, "index": "B", "name": "Multihedgehog", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["dfs and similar", "graphs", "shortest paths"]}, {"contestId": 1067, "index": "A", "name": "Array Without Local Maximums ", "type": "PROGRAMMING", "points": 500.0, "rating": 1900, "tags": ["dp"]}, {"contestId": 1066, "index": "F", "name": "Yet another 2D Walking", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp"]}, {"contestId": 1066, "index": "E", "name": "Binary Numbers AND Sum", "type": "PROGRAMMING", "rating": 1700, "tags": ["data structures", "implementation", "math"]}, {"contestId": 1066, "index": "D", "name": "Boxes Packing", "type": "PROGRAMMING", "rating": 1800, "tags": ["binary search", "implementation"]}, {"contestId": 1066, "index": "C", "name": "Books Queries", "type": "PROGRAMMING", "rating": 1400, "tags": ["implementation"]}, {"contestId": 1066, "index": "B", "name": "Heaters", "type": "PROGRAMMING", "rating": 1500, "tags": ["greedy", "two pointers"]}, {"contestId": 1066, "index": "A", "name": "Vova and Train", "type": "PROGRAMMING", "rating": 1100, "tags": ["math"]}, {"contestId": 1065, "index": "G", "name": "Fibonacci Suffix", "type": "PROGRAMMING", "rating": 2700, "tags": ["strings"]}, {"contestId": 1065, "index": "F", "name": "Up and Down the Tree", "type": "PROGRAMMING", "rating": 2500, "tags": ["dfs and similar", "dp", "trees"]}, {"contestId": 1065, "index": "E", "name": "Side Transmutations", "type": "PROGRAMMING", "rating": 2300, "tags": ["combinatorics", "strings"]}, {"contestId": 1065, "index": "D", "name": "Three Pieces", "type": "PROGRAMMING", "rating": 2200, "tags": ["dfs and similar", "dp", "shortest paths"]}, {"contestId": 1065, "index": "C", "name": "Make It Equal", "type": "PROGRAMMING", "rating": 1600, "tags": ["greedy"]}, {"contestId": 1065, "index": "B", "name": "Vasya and Isolated Vertices", "type": "PROGRAMMING", "rating": 1300, "tags": ["constructive algorithms", "graphs"]}, {"contestId": 1065, "index": "A", "name": "Vasya and Chocolate", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "math"]}, {"contestId": 1064, "index": "B", "name": "Equations of Mathematical Magic", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["math"]}, {"contestId": 1064, "index": "A", "name": "Make a triangle!", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "geometry", "math"]}, {"contestId": 1063, "index": "F", "name": "String Journey", "type": "PROGRAMMING", "points": 2500.0, "rating": 3300, "tags": ["data structures", "dp", "string suffix structures"]}, {"contestId": 1063, "index": "E", "name": "Lasers and Mirrors", "type": "PROGRAMMING", "points": 2000.0, "rating": 3000, "tags": ["constructive algorithms", "math"]}, {"contestId": 1063, "index": "D", "name": "Candies for Children", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["brute force", "math"]}, {"contestId": 1063, "index": "C", "name": "Dwarves, Hats and Extrasensory Abilities", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["binary search", "constructive algorithms", "geometry", "interactive"]}, {"contestId": 1063, "index": "B", "name": "Labyrinth", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["graphs", "shortest paths"]}, {"contestId": 1063, "index": "A", "name": "Oh Those Palindromes", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["constructive algorithms", "strings"]}, {"contestId": 1062, "index": "F", "name": "Upgrading Cities", "type": "PROGRAMMING", "points": 3000.0, "rating": 2900, "tags": ["dfs and similar", "graphs"]}, {"contestId": 1062, "index": "E", "name": "Company", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["binary search", "data structures", "dfs and similar", "greedy", "trees"]}, {"contestId": 1062, "index": "D", "name": "Fun with Integers", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["dfs and similar", "graphs", "implementation", "math"]}, {"contestId": 1062, "index": "C", "name": "Banh-mi", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["greedy", "implementation", "math"]}, {"contestId": 1062, "index": "B", "name": "Math", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["greedy", "math", "number theory"]}, {"contestId": 1062, "index": "A", "name": "A Prank", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["greedy", "implementation"]}, {"contestId": 1061, "index": "F", "name": "Lost Root", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["interactive", "probabilities"]}, {"contestId": 1061, "index": "E", "name": "Politics", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["flows", "graphs"]}, {"contestId": 1061, "index": "D", "name": "TV Shows", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["data structures", "greedy", "implementation", "sortings"]}, {"contestId": 1061, "index": "C", "name": "Multiplicity", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["data structures", "dp", "implementation", "math", "number theory"]}, {"contestId": 1061, "index": "B", "name": "Views Matter", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["greedy", "implementation", "sortings"]}, {"contestId": 1061, "index": "A", "name": "Coins", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "implementation", "math"]}, {"contestId": 1060, "index": "H", "name": "Sophisticated Device", "type": "PROGRAMMING", "points": 3000.0, "rating": 3300, "tags": ["constructive algorithms"]}, {"contestId": 1060, "index": "G", "name": "Balls and Pockets", "type": "PROGRAMMING", "points": 2750.0, "rating": 3400, "tags": ["data structures"]}, {"contestId": 1060, "index": "F", "name": "Shrinking Tree", "type": "PROGRAMMING", "points": 2250.0, "rating": 2900, "tags": ["combinatorics", "dp"]}, {"contestId": 1060, "index": "E", "name": "Sergey and Subway", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["dfs and similar", "dp", "trees"]}, {"contestId": 1060, "index": "D", "name": "Social Circles", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["greedy", "math"]}, {"contestId": 1060, "index": "C", "name": "Maximum Subrectangle", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["binary search", "implementation", "two pointers"]}, {"contestId": 1060, "index": "B", "name": "Maximum Sum of Digits", "type": "PROGRAMMING", "points": 750.0, "rating": 1100, "tags": ["greedy"]}, {"contestId": 1060, "index": "A", "name": "Phone Numbers", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force"]}, {"contestId": 1059, "index": "E", "name": "Split the Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["binary search", "data structures", "dp", "greedy", "trees"]}, {"contestId": 1059, "index": "D", "name": "Nature Reserve", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["binary search", "geometry", "ternary search"]}, {"contestId": 1059, "index": "C", "name": "Sequence Transformation", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["constructive algorithms", "math"]}, {"contestId": 1059, "index": "B", "name": "Forgery", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["implementation"]}, {"contestId": 1059, "index": "A", "name": "Cashier", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"]}, {"contestId": 1057, "index": "C", "name": "Tanya and Colored Candies", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["*special", "dp"]}, {"contestId": 1057, "index": "B", "name": "DDoS", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["*special", "brute force"]}, {"contestId": 1057, "index": "A", "name": "Bmail Computer Network", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["*special", "dfs and similar", "trees"]}, {"contestId": 1056, "index": "H", "name": "Detect Robots", "type": "PROGRAMMING", "points": 4000.0, "rating": 3200, "tags": ["data structures", "strings"]}, {"contestId": 1056, "index": "G", "name": "Take Metro", "type": "PROGRAMMING", "points": 3500.0, "rating": 2900, "tags": ["brute force", "data structures", "graphs"]}, {"contestId": 1056, "index": "F", "name": "Write The Contest", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["binary search", "dp", "math"]}, {"contestId": 1056, "index": "E", "name": "Check Transcription", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["brute force", "data structures", "hashing", "strings"]}, {"contestId": 1056, "index": "D", "name": "Decorate Apple Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 1600, "tags": ["constructive algorithms", "dfs and similar", "dp", "graphs", "greedy", "sortings", "trees"]}, {"contestId": 1056, "index": "C", "name": "Pick Heroes", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["greedy", "implementation", "interactive", "sortings"]}, {"contestId": 1056, "index": "B", "name": "Divide Candies", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["math", "number theory"]}, {"contestId": 1056, "index": "A", "name": "Determine Line", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 1055, "index": "G", "name": "Jellyfish Nightmare", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": []}, {"contestId": 1055, "index": "F", "name": "Tree and XOR", "type": "PROGRAMMING", "points": 3500.0, "rating": 2900, "tags": ["strings", "trees"]}, {"contestId": 1055, "index": "E", "name": "Segments on the Line", "type": "PROGRAMMING", "points": 2750.0, "rating": 2500, "tags": ["binary search", "dp"]}, {"contestId": 1055, "index": "D", "name": "Refactoring", "type": "PROGRAMMING", "points": 2250.0, "rating": 2400, "tags": ["greedy", "implementation", "strings"]}, {"contestId": 1055, "index": "C", "name": "Lucky Days", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["math", "number theory"]}, {"contestId": 1055, "index": "B", "name": "Alice and Hairdresser", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["dsu", "implementation"]}, {"contestId": 1055, "index": "A", "name": "Metro", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["graphs"]}, {"contestId": 1054, "index": "H", "name": "Epic Convolution", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["chinese remainder theorem", "fft", "math", "number theory"]}, {"contestId": 1054, "index": "G", "name": "New Road Network", "type": "PROGRAMMING", "points": 3000.0, "rating": 3300, "tags": ["constructive algorithms", "greedy", "math"]}, {"contestId": 1054, "index": "F", "name": "Electric Scheme", "type": "PROGRAMMING", "points": 2250.0, "rating": 2700, "tags": ["flows", "graph matchings"]}, {"contestId": 1054, "index": "E", "name": "Chips Puzzle", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["constructive algorithms", "implementation", "math"]}, {"contestId": 1054, "index": "D", "name": "Changing Array", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["greedy", "implementation"]}, {"contestId": 1054, "index": "C", "name": "Candies Distribution", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["constructive algorithms", "implementation"]}, {"contestId": 1054, "index": "B", "name": "Appending Mex", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["implementation"]}, {"contestId": 1054, "index": "A", "name": "Elevator or Stairs?", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 1053, "index": "E", "name": "Euler tour", "type": "PROGRAMMING", "points": 2500.0, "rating": 3500, "tags": ["constructive algorithms", "trees"]}, {"contestId": 1051, "index": "G", "name": "Distinctification", "type": "PROGRAMMING", "rating": 2900, "tags": ["data structures", "dsu", "greedy"]}, {"contestId": 1051, "index": "F", "name": "The Shortest Statement", "type": "PROGRAMMING", "rating": 2400, "tags": ["graphs", "shortest paths", "trees"]}, {"contestId": 1051, "index": "E", "name": "Vasya and Big Integers", "type": "PROGRAMMING", "rating": 2600, "tags": ["binary search", "data structures", "dp", "hashing", "strings"]}, {"contestId": 1051, "index": "D", "name": "Bicolorings", "type": "PROGRAMMING", "rating": 1700, "tags": ["bitmasks", "dp"]}, {"contestId": 1051, "index": "C", "name": "Vasya and Multisets", "type": "PROGRAMMING", "rating": 1500, "tags": ["brute force", "dp", "greedy", "implementation", "math"]}, {"contestId": 1051, "index": "B", "name": "Relatively Prime Pairs", "type": "PROGRAMMING", "rating": 1000, "tags": ["greedy", "math", "number theory"]}, {"contestId": 1051, "index": "A", "name": "Vasya And Password", "type": "PROGRAMMING", "rating": 1200, "tags": ["greedy", "implementation", "strings"]}, {"contestId": 1047, "index": "B", "name": "Cover Points", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["geometry", "math"]}, {"contestId": 1047, "index": "A", "name": "Little C Loves 3 I", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math"]}, {"contestId": 1046, "index": "I", "name": "Say Hello", "type": "PROGRAMMING", "rating": 2300, "tags": ["geometry"]}, {"contestId": 1046, "index": "F", "name": "Splitting money", "type": "PROGRAMMING", "rating": 1400, "tags": ["implementation"]}, {"contestId": 1046, "index": "C", "name": "Space Formula", "type": "PROGRAMMING", "rating": 1400, "tags": ["greedy"]}, {"contestId": 1045, "index": "J", "name": "Moonwalk challenge", "type": "PROGRAMMING", "rating": 2600, "tags": ["data structures", "strings", "trees"]}, {"contestId": 1045, "index": "I", "name": "Palindrome Pairs", "type": "PROGRAMMING", "rating": 1600, "tags": ["hashing", "strings"]}, {"contestId": 1045, "index": "H", "name": "Self-exploration", "type": "PROGRAMMING", "rating": 2400, "tags": ["math"]}, {"contestId": 1045, "index": "G", "name": "AI robots", "type": "PROGRAMMING", "rating": 2200, "tags": ["data structures"]}, {"contestId": 1045, "index": "F", "name": "Shady Lady", "type": "PROGRAMMING", "rating": 3400, "tags": ["geometry", "math"]}, {"contestId": 1045, "index": "E", "name": "Ancient civilizations", "type": "PROGRAMMING", "rating": 3200, "tags": ["constructive algorithms", "geometry"]}, {"contestId": 1045, "index": "D", "name": "Interstellar battle", "type": "PROGRAMMING", "rating": 2200, "tags": ["math", "probabilities", "trees"]}, {"contestId": 1045, "index": "C", "name": "Hyperspace Highways", "type": "PROGRAMMING", "rating": 2300, "tags": ["dfs and similar", "graphs", "trees"]}, {"contestId": 1045, "index": "B", "name": "Space Isaac", "type": "PROGRAMMING", "rating": 2400, "tags": ["hashing", "number theory"]}, {"contestId": 1045, "index": "A", "name": "Last chance", "type": "PROGRAMMING", "rating": 2500, "tags": ["data structures", "flows", "graph matchings", "graphs", "trees"]}, {"contestId": 1044, "index": "F", "name": "DFS", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["data structures"]}, {"contestId": 1044, "index": "E", "name": "Grid Sort", "type": "PROGRAMMING", "points": 2750.0, "rating": 3100, "tags": ["implementation"]}, {"contestId": 1044, "index": "D", "name": "Deduction Queries", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["data structures", "dsu"]}, {"contestId": 1044, "index": "C", "name": "Optimal Polygon Perimeter", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["dp", "geometry"]}, {"contestId": 1044, "index": "B", "name": "Intersecting Subtrees", "type": "PROGRAMMING", "points": 1250.0, "rating": 1900, "tags": ["dfs and similar", "interactive", "trees"]}, {"contestId": 1044, "index": "A", "name": "The Tower is Going Home", "type": "PROGRAMMING", "points": 750.0, "rating": 1700, "tags": ["binary search", "two pointers"]}, {"contestId": 1043, "index": "G", "name": "Speckled Band", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["data structures", "divide and conquer", "hashing", "string suffix structures", "strings"]}, {"contestId": 1043, "index": "F", "name": "Make It One", "type": "PROGRAMMING", "points": 2750.0, "rating": 2500, "tags": ["bitmasks", "combinatorics", "dp", "math", "number theory", "shortest paths"]}, {"contestId": 1043, "index": "E", "name": "Train Hard, Win Easy", "type": "PROGRAMMING", "points": 2250.0, "rating": 1900, "tags": ["constructive algorithms", "greedy", "math", "sortings"]}, {"contestId": 1043, "index": "D", "name": "Mysterious Crime", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["brute force", "combinatorics", "math", "meet-in-the-middle", "two pointers"]}, {"contestId": 1043, "index": "C", "name": "Smallest Word", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["constructive algorithms", "greedy", "implementation"]}, {"contestId": 1043, "index": "B", "name": "Lost Array", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["implementation"]}, {"contestId": 1043, "index": "A", "name": "Elections", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "math"]}, {"contestId": 1042, "index": "F", "name": "Leaf Sets", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["data structures", "dfs and similar", "dsu", "graphs", "greedy", "sortings", "trees"]}, {"contestId": 1042, "index": "E", "name": "Vasya and Magic Matrix", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["dp", "math", "probabilities"]}, {"contestId": 1042, "index": "D", "name": "Petya and Array", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["data structures", "divide and conquer", "two pointers"]}, {"contestId": 1042, "index": "C", "name": "Array Product", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["constructive algorithms", "greedy", "math"]}, {"contestId": 1042, "index": "B", "name": "Vitamins", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["bitmasks", "brute force", "dp", "implementation"]}, {"contestId": 1042, "index": "A", "name": "Benches", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["binary search", "implementation"]}, {"contestId": 1041, "index": "F", "name": "Ray in the tube", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["data structures", "divide and conquer", "dp", "math"]}, {"contestId": 1041, "index": "E", "name": "Tree Reconstruction", "type": "PROGRAMMING", "points": 2500.0, "rating": 1900, "tags": ["constructive algorithms", "data structures", "graphs", "greedy"]}, {"contestId": 1041, "index": "D", "name": "Glider", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["binary search", "data structures", "two pointers"]}, {"contestId": 1041, "index": "C", "name": "Coffee Break", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["binary search", "data structures", "greedy", "two pointers"]}, {"contestId": 1041, "index": "B", "name": "Buying a TV Set", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["math"]}, {"contestId": 1041, "index": "A", "name": "Heist", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "implementation", "sortings"]}, {"contestId": 1040, "index": "B", "name": "Shashlik Cooking", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["dp", "greedy", "math"]}, {"contestId": 1040, "index": "A", "name": "Palindrome Dance", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["greedy"]}, {"contestId": 1039, "index": "E", "name": "Summer Oenothera Exhibition", "type": "PROGRAMMING", "points": 2500.0, "rating": 3400, "tags": ["data structures"]}, {"contestId": 1039, "index": "D", "name": "You Are Given a Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["data structures", "dp", "trees"]}, {"contestId": 1039, "index": "C", "name": "Network Safety", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["dfs and similar", "dsu", "graphs", "math", "sortings"]}, {"contestId": 1039, "index": "B", "name": "Subway Pursuit", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["binary search", "interactive", "probabilities"]}, {"contestId": 1039, "index": "A", "name": "Timetable", "type": "PROGRAMMING", "points": 750.0, "rating": 2300, "tags": ["constructive algorithms", "data structures", "greedy", "math"]}, {"contestId": 1038, "index": "F", "name": "Wrap Around", "type": "PROGRAMMING", "points": 2750.0, "rating": 2900, "tags": ["dp", "strings"]}, {"contestId": 1038, "index": "E", "name": "Maximum Matching", "type": "PROGRAMMING", "points": 2250.0, "rating": 2400, "tags": ["bitmasks", "brute force", "dfs and similar", "dp", "graphs"]}, {"contestId": 1038, "index": "D", "name": "Slime", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["dp", "greedy", "implementation"]}, {"contestId": 1038, "index": "C", "name": "Gambling", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["greedy", "sortings"]}, {"contestId": 1038, "index": "B", "name": "Non-Coprime Partition", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms", "math"]}, {"contestId": 1038, "index": "A", "name": "Equality", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "strings"]}, {"contestId": 1037, "index": "H", "name": "Security", "type": "PROGRAMMING", "points": 4000.0, "rating": 3200, "tags": ["data structures", "string suffix structures"]}, {"contestId": 1037, "index": "G", "name": "A Game on Strings", "type": "PROGRAMMING", "points": 3500.0, "rating": 3200, "tags": ["games"]}, {"contestId": 1037, "index": "F", "name": "Maximum Reduction", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["combinatorics", "data structures", "math"]}, {"contestId": 1037, "index": "E", "name": "Trips", "type": "PROGRAMMING", "points": 2250.0, "rating": 2200, "tags": ["graphs"]}, {"contestId": 1037, "index": "D", "name": "Valid BFS?", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["dfs and similar", "graphs", "shortest paths", "trees"]}, {"contestId": 1037, "index": "C", "name": "Equalize", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["dp", "greedy", "strings"]}, {"contestId": 1037, "index": "B", "name": "Reach Median", "type": "PROGRAMMING", "points": 750.0, "rating": 1300, "tags": ["greedy"]}, {"contestId": 1037, "index": "A", "name": "Packets", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["constructive algorithms", "greedy", "math"]}, {"contestId": 1036, "index": "G", "name": "Sources and Sinks", "type": "PROGRAMMING", "rating": 2700, "tags": ["bitmasks", "brute force", "dfs and similar"]}, {"contestId": 1036, "index": "F", "name": "Relatively Prime Powers", "type": "PROGRAMMING", "rating": 2400, "tags": ["combinatorics", "math", "number theory"]}, {"contestId": 1036, "index": "E", "name": "Covered Points", "type": "PROGRAMMING", "rating": 2400, "tags": ["fft", "geometry", "number theory"]}, {"contestId": 1036, "index": "D", "name": "Vasya and Arrays", "type": "PROGRAMMING", "rating": 1600, "tags": ["greedy", "two pointers"]}, {"contestId": 1036, "index": "C", "name": "Classy Numbers", "type": "PROGRAMMING", "rating": 1900, "tags": ["combinatorics", "dp"]}, {"contestId": 1036, "index": "B", "name": "Diagonal Walking v.2", "type": "PROGRAMMING", "rating": 1600, "tags": ["math"]}, {"contestId": 1036, "index": "A", "name": "Function Height", "type": "PROGRAMMING", "rating": 1000, "tags": ["math"]}, {"contestId": 1034, "index": "E", "name": "Little C Loves 3 III", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["bitmasks", "dp", "math"]}, {"contestId": 1034, "index": "D", "name": "Intervals of Intervals", "type": "PROGRAMMING", "points": 2000.0, "rating": 3500, "tags": ["binary search", "data structures", "two pointers"]}, {"contestId": 1034, "index": "C", "name": "Region Separation", "type": "PROGRAMMING", "points": 1500.0, "rating": 2700, "tags": ["combinatorics", "dp", "number theory", "trees"]}, {"contestId": 1034, "index": "B", "name": "Little C Loves 3 II", "type": "PROGRAMMING", "points": 1000.0, "rating": 2200, "tags": ["brute force", "constructive algorithms", "flows", "graph matchings"]}, {"contestId": 1034, "index": "A", "name": "Enlarge GCD", "type": "PROGRAMMING", "points": 750.0, "rating": 1800, "tags": ["number theory"]}, {"contestId": 1033, "index": "G", "name": "Chip Game", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["games"]}, {"contestId": 1033, "index": "F", "name": "Boolean Computer", "type": "PROGRAMMING", "points": 3250.0, "rating": 2800, "tags": ["bitmasks", "brute force", "fft", "math"]}, {"contestId": 1033, "index": "E", "name": "Hidden Bipartite Graph", "type": "PROGRAMMING", "points": 2750.0, "rating": 2800, "tags": ["binary search", "constructive algorithms", "dfs and similar", "graphs", "interactive"]}, {"contestId": 1033, "index": "D", "name": "Divisors", "type": "PROGRAMMING", "points": 2250.0, "rating": 2000, "tags": ["interactive", "math", "number theory"]}, {"contestId": 1033, "index": "C", "name": "Permutation Game", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["brute force", "dp", "games"]}, {"contestId": 1033, "index": "B", "name": "Square Difference", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["math", "number theory"]}, {"contestId": 1033, "index": "A", "name": "King Escape", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["dfs and similar", "graphs", "implementation"]}, {"contestId": 1032, "index": "G", "name": "Chattering", "type": "PROGRAMMING", "points": 3500.0, "rating": 2900, "tags": []}, {"contestId": 1032, "index": "F", "name": "Vasya and Maximum Matching", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["dp", "trees"]}, {"contestId": 1032, "index": "E", "name": "The Unbearable Lightness of Weights", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["dp", "math"]}, {"contestId": 1032, "index": "D", "name": "Barcelonian Distance", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["geometry", "implementation"]}, {"contestId": 1032, "index": "C", "name": "Playing Piano", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["constructive algorithms", "dp"]}, {"contestId": 1032, "index": "B", "name": "Personalized Cup", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": []}, {"contestId": 1032, "index": "A", "name": "Kitchen Utensils", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": []}, {"contestId": 1031, "index": "F", "name": "Familiar Operations", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["brute force", "graphs", "math"]}, {"contestId": 1031, "index": "E", "name": "Triple Flips", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["constructive algorithms"]}, {"contestId": 1031, "index": "D", "name": "Minimum path", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["greedy"]}, {"contestId": 1031, "index": "C", "name": "Cram Time", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["greedy"]}, {"contestId": 1031, "index": "B", "name": "Curiosity Has No Limits", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": []}, {"contestId": 1031, "index": "A", "name": "Golden Plate", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "math"]}, {"contestId": 1030, "index": "G", "name": "Linear Congruential Generator", "type": "PROGRAMMING", "points": 3000.0, "rating": 2900, "tags": ["number theory"]}, {"contestId": 1030, "index": "F", "name": "Putting Boxes Together", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["data structures"]}, {"contestId": 1030, "index": "E", "name": "Vasya and Good Sequences", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["bitmasks", "dp"]}, {"contestId": 1030, "index": "D", "name": "Vasya and Triangle", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["geometry", "number theory"]}, {"contestId": 1030, "index": "C", "name": "Vasya and Golden Ticket", "type": "PROGRAMMING", "points": 750.0, "rating": 1300, "tags": ["implementation"]}, {"contestId": 1030, "index": "B", "name": "Vasya and Cornfield", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["geometry"]}, {"contestId": 1030, "index": "A", "name": "In Search of an Easy Problem", "type": "PROGRAMMING", "points": 250.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 1029, "index": "F", "name": "Multicolored Markers", "type": "PROGRAMMING", "rating": 2000, "tags": ["binary search", "brute force", "math", "number theory"]}, {"contestId": 1029, "index": "E", "name": "Tree with Small Distances", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp", "graphs", "greedy"]}, {"contestId": 1029, "index": "D", "name": "Concatenated Multiples", "type": "PROGRAMMING", "rating": 1900, "tags": ["implementation", "math"]}, {"contestId": 1029, "index": "C", "name": "Maximal Intersection", "type": "PROGRAMMING", "rating": 1600, "tags": ["greedy", "math", "sortings"]}, {"contestId": 1029, "index": "B", "name": "Creating the Contest", "type": "PROGRAMMING", "rating": 1200, "tags": ["dp", "greedy", "math"]}, {"contestId": 1029, "index": "A", "name": "Many Equal Substrings", "type": "PROGRAMMING", "rating": 1300, "tags": ["implementation", "strings"]}, {"contestId": 1028, "index": "H", "name": "Make Square", "type": "PROGRAMMING", "points": 3500.0, "rating": 2900, "tags": ["math"]}, {"contestId": 1028, "index": "G", "name": "Guess the number", "type": "PROGRAMMING", "points": 3250.0, "rating": 3000, "tags": ["dp", "interactive"]}, {"contestId": 1028, "index": "F", "name": "Make Symmetrical", "type": "PROGRAMMING", "points": 3250.0, "rating": 2900, "tags": ["brute force"]}, {"contestId": 1028, "index": "E", "name": "Restore Array", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["constructive algorithms"]}, {"contestId": 1028, "index": "D", "name": "Order book", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["combinatorics", "data structures", "greedy"]}, {"contestId": 1028, "index": "C", "name": "Rectangles", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["geometry", "implementation", "sortings"]}, {"contestId": 1028, "index": "B", "name": "Unnatural Conditions", "type": "PROGRAMMING", "points": 750.0, "rating": 1200, "tags": ["constructive algorithms", "math"]}, {"contestId": 1028, "index": "A", "name": "Find Square", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 1027, "index": "G", "name": "X-mouse in the Campus", "type": "PROGRAMMING", "rating": 2600, "tags": ["bitmasks", "math", "number theory"]}, {"contestId": 1027, "index": "F", "name": "Session in BSU", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "dfs and similar", "dsu", "graph matchings", "graphs"]}, {"contestId": 1027, "index": "E", "name": "Inverse Coloring", "type": "PROGRAMMING", "rating": 2100, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 1027, "index": "D", "name": "Mouse Hunt", "type": "PROGRAMMING", "rating": 1700, "tags": ["dfs and similar", "graphs"]}, {"contestId": 1027, "index": "C", "name": "Minimum Value Rectangle", "type": "PROGRAMMING", "rating": 1600, "tags": ["greedy"]}, {"contestId": 1027, "index": "B", "name": "Numbers on the Chessboard", "type": "PROGRAMMING", "rating": 1200, "tags": ["implementation", "math"]}, {"contestId": 1027, "index": "A", "name": "Palindromic Twist", "type": "PROGRAMMING", "rating": 1000, "tags": ["implementation", "strings"]}, {"contestId": 1025, "index": "G", "name": "Company Acquisitions", "type": "PROGRAMMING", "points": 3500.0, "rating": 3200, "tags": ["constructive algorithms", "math"]}, {"contestId": 1025, "index": "F", "name": "Disjoint Triangles", "type": "PROGRAMMING", "points": 2750.0, "rating": 2700, "tags": ["geometry"]}, {"contestId": 1025, "index": "E", "name": "Colored Cubes", "type": "PROGRAMMING", "points": 2250.0, "rating": 2700, "tags": ["constructive algorithms", "implementation", "matrices"]}, {"contestId": 1025, "index": "D", "name": "Recovering BST", "type": "PROGRAMMING", "points": 1750.0, "rating": 2100, "tags": ["brute force", "dp", "math", "number theory", "trees"]}, {"contestId": 1025, "index": "C", "name": "Plasticine zebra", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["constructive algorithms", "implementation"]}, {"contestId": 1025, "index": "B", "name": "Weakened Common Divisor", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["brute force", "greedy", "number theory"]}, {"contestId": 1025, "index": "A", "name": "Doggo Recoloring", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation", "sortings"]}, {"contestId": 1023, "index": "G", "name": "Pisces", "type": "PROGRAMMING", "points": 4000.0, "rating": 3400, "tags": ["data structures", "flows", "trees"]}, {"contestId": 1023, "index": "F", "name": "Mobile Phone Network", "type": "PROGRAMMING", "points": 3250.0, "rating": 2600, "tags": ["dfs and similar", "dsu", "graphs", "trees"]}, {"contestId": 1023, "index": "E", "name": "Down or Right", "type": "PROGRAMMING", "points": 2750.0, "rating": 2100, "tags": ["constructive algorithms", "interactive", "matrices"]}, {"contestId": 1023, "index": "D", "name": "Array Restoration", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["constructive algorithms", "data structures"]}, {"contestId": 1023, "index": "C", "name": "Bracket Subsequence", "type": "PROGRAMMING", "points": 1500.0, "rating": 1200, "tags": ["greedy"]}, {"contestId": 1023, "index": "B", "name": "Pair of Toys", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["math"]}, {"contestId": 1023, "index": "A", "name": "Single Wildcard Pattern Matching", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["brute force", "implementation", "strings"]}, {"contestId": 1020, "index": "B", "name": "Badge", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["brute force", "dfs and similar", "graphs"]}, {"contestId": 1020, "index": "A", "name": "New Building for SIS", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["math"]}, {"contestId": 1019, "index": "E", "name": "Raining season", "type": "PROGRAMMING", "points": 2250.0, "rating": 3200, "tags": ["data structures", "divide and conquer", "trees"]}, {"contestId": 1019, "index": "D", "name": "Large Triangle", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["binary search", "geometry", "sortings"]}, {"contestId": 1019, "index": "C", "name": "Sergey's problem", "type": "PROGRAMMING", "points": 1750.0, "rating": 3000, "tags": ["constructive algorithms", "graphs"]}, {"contestId": 1019, "index": "B", "name": "The hat", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["binary search", "interactive"]}, {"contestId": 1019, "index": "A", "name": "Elections", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["brute force", "greedy"]}, {"contestId": 1017, "index": "H", "name": "The Films", "type": "PROGRAMMING", "points": 3250.0, "rating": 3300, "tags": ["brute force"]}, {"contestId": 1017, "index": "G", "name": "The Tree", "type": "PROGRAMMING", "points": 3000.0, "rating": 3200, "tags": ["data structures"]}, {"contestId": 1017, "index": "F", "name": "The Neutral Zone", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["brute force", "math"]}, {"contestId": 1017, "index": "E", "name": "The Supersonic Rocket", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["geometry", "hashing", "strings"]}, {"contestId": 1017, "index": "D", "name": "The Wu", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["bitmasks", "brute force", "data structures"]}, {"contestId": 1017, "index": "C", "name": "The Phone Number", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["constructive algorithms", "greedy"]}, {"contestId": 1017, "index": "B", "name": "The Bits", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["implementation", "math"]}, {"contestId": 1017, "index": "A", "name": "The Rank", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 1016, "index": "G", "name": "Appropriate Team", "type": "PROGRAMMING", "rating": 2700, "tags": ["bitmasks", "math", "number theory"]}, {"contestId": 1016, "index": "F", "name": "Road Projects", "type": "PROGRAMMING", "rating": 2600, "tags": ["dfs and similar", "dp", "trees"]}, {"contestId": 1016, "index": "E", "name": "Rest In The Shades", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "geometry"]}, {"contestId": 1016, "index": "D", "name": "Vasya And The Matrix", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "flows", "math"]}, {"contestId": 1016, "index": "C", "name": "Vasya And The Mushrooms", "type": "PROGRAMMING", "rating": 1800, "tags": ["dp", "implementation"]}, {"contestId": 1016, "index": "B", "name": "Segment Occurrences", "type": "PROGRAMMING", "rating": 1300, "tags": ["brute force", "implementation"]}, {"contestId": 1016, "index": "A", "name": "Death Note", "type": "PROGRAMMING", "rating": 900, "tags": ["greedy", "implementation", "math"]}, {"contestId": 1015, "index": "F", "name": "Bracket Substring", "type": "PROGRAMMING", "rating": 2300, "tags": ["dp", "strings"]}, {"contestId": 1015, "index": "E2", "name": "Stars Drawing (Hard Edition)", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "dp", "greedy"]}, {"contestId": 1015, "index": "E1", "name": "Stars Drawing (Easy Edition)", "type": "PROGRAMMING", "rating": 1700, "tags": ["brute force", "dp", "greedy"]}, {"contestId": 1015, "index": "D", "name": "Walking Between Houses", "type": "PROGRAMMING", "rating": 1600, "tags": ["constructive algorithms", "greedy"]}, {"contestId": 1015, "index": "C", "name": "Songs Compression", "type": "PROGRAMMING", "rating": 1100, "tags": ["sortings"]}, {"contestId": 1015, "index": "B", "name": "Obtaining the String", "type": "PROGRAMMING", "rating": 1200, "tags": ["implementation"]}, {"contestId": 1015, "index": "A", "name": "Points in Segments", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"]}, {"contestId": 1013, "index": "B", "name": "And", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["greedy"]}, {"contestId": 1013, "index": "A", "name": "Piles With Stones", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math"]}, {"contestId": 1012, "index": "F", "name": "Passports", "type": "PROGRAMMING", "points": 2500.0, "rating": 3400, "tags": ["dp", "implementation"]}, {"contestId": 1012, "index": "E", "name": "Cycle sort", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["dsu", "math"]}, {"contestId": 1012, "index": "D", "name": "AB-Strings", "type": "PROGRAMMING", "points": 2250.0, "rating": 2800, "tags": ["constructive algorithms", "strings"]}, {"contestId": 1012, "index": "C", "name": "Hills", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["dp"]}, {"contestId": 1012, "index": "B", "name": "Chemical table", "type": "PROGRAMMING", "points": 1250.0, "rating": 1900, "tags": ["constructive algorithms", "dfs and similar", "dsu", "graphs", "matrices"]}, {"contestId": 1012, "index": "A", "name": "Photo of The Sky", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["brute force", "implementation", "math", "sortings"]}, {"contestId": 1011, "index": "B", "name": "Planning The Expedition", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["binary search", "brute force", "implementation"]}, {"contestId": 1011, "index": "A", "name": "Stages", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["greedy", "implementation", "sortings"]}, {"contestId": 1010, "index": "F", "name": "Tree", "type": "PROGRAMMING", "points": 2750.0, "rating": 3400, "tags": ["fft", "graphs", "trees"]}, {"contestId": 1010, "index": "E", "name": "Store", "type": "PROGRAMMING", "points": 2250.0, "rating": 2700, "tags": ["data structures"]}, {"contestId": 1010, "index": "D", "name": "Mars rover", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["dfs and similar", "graphs", "implementation", "trees"]}, {"contestId": 1010, "index": "C", "name": "Border", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["number theory"]}, {"contestId": 1010, "index": "B", "name": "Rocket", "type": "PROGRAMMING", "points": 750.0, "rating": 1800, "tags": ["binary search", "interactive"]}, {"contestId": 1010, "index": "A", "name": "Fly", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["binary search", "math"]}, {"contestId": 1009, "index": "G", "name": "Allowed Letters", "type": "PROGRAMMING", "rating": 2400, "tags": ["bitmasks", "flows", "graph matchings", "graphs", "greedy"]}, {"contestId": 1009, "index": "F", "name": "Dominant Indices", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "dsu", "trees"]}, {"contestId": 1009, "index": "E", "name": "Intercity Travelling", "type": "PROGRAMMING", "rating": 2000, "tags": ["combinatorics", "math", "probabilities"]}, {"contestId": 1009, "index": "D", "name": "Relatively Prime Graph", "type": "PROGRAMMING", "rating": 1700, "tags": ["brute force", "constructive algorithms", "graphs", "greedy", "math"]}, {"contestId": 1009, "index": "C", "name": "Annoying Present", "type": "PROGRAMMING", "rating": 1700, "tags": ["greedy", "math"]}, {"contestId": 1009, "index": "B", "name": "Minimum Ternary String", "type": "PROGRAMMING", "rating": 1400, "tags": ["greedy", "implementation"]}, {"contestId": 1009, "index": "A", "name": "Game Shopping", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"]}, {"contestId": 1008, "index": "B", "name": "Turn the Rectangles", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["greedy", "sortings"]}, {"contestId": 1008, "index": "A", "name": "Romaji", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation", "strings"]}, {"contestId": 1007, "index": "E", "name": "Mini Metro", "type": "PROGRAMMING", "points": 2500.0, "rating": 3400, "tags": ["dp"]}, {"contestId": 1007, "index": "D", "name": "Ants", "type": "PROGRAMMING", "points": 2250.0, "rating": 3200, "tags": ["2-sat", "data structures", "trees"]}, {"contestId": 1007, "index": "C", "name": "Guess two numbers", "type": "PROGRAMMING", "points": 1500.0, "rating": 3000, "tags": ["binary search", "interactive"]}, {"contestId": 1007, "index": "B", "name": "Pave the Parallelepiped", "type": "PROGRAMMING", "points": 1000.0, "rating": 2400, "tags": ["bitmasks", "brute force", "combinatorics", "math", "number theory"]}, {"contestId": 1007, "index": "A", "name": "Reorder the Array", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["combinatorics", "data structures", "math", "sortings", "two pointers"]}, {"contestId": 1006, "index": "F", "name": "Xor-Paths", "type": "PROGRAMMING", "rating": 2100, "tags": ["bitmasks", "brute force", "dp", "meet-in-the-middle"]}, {"contestId": 1006, "index": "E", "name": "Military Problem", "type": "PROGRAMMING", "rating": 1600, "tags": ["dfs and similar", "graphs", "trees"]}, {"contestId": 1006, "index": "D", "name": "Two Strings Swaps", "type": "PROGRAMMING", "rating": 1700, "tags": ["implementation"]}, {"contestId": 1006, "index": "C", "name": "Three Parts of the Array", "type": "PROGRAMMING", "rating": 1200, "tags": ["binary search", "data structures", "two pointers"]}, {"contestId": 1006, "index": "B", "name": "Polycarp's Practice", "type": "PROGRAMMING", "rating": 1200, "tags": ["greedy", "implementation", "sortings"]}, {"contestId": 1006, "index": "A", "name": "Adjacent Replacements", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"]}, {"contestId": 1005, "index": "F", "name": "Berland and the Shortest Paths", "type": "PROGRAMMING", "rating": 2100, "tags": ["brute force", "dfs and similar", "graphs", "shortest paths"]}, {"contestId": 1005, "index": "E2", "name": "Median on Segments (General Case Edition)", "type": "PROGRAMMING", "rating": 2400, "tags": ["sortings"]}, {"contestId": 1005, "index": "E1", "name": "Median on Segments (Permutations Edition)", "type": "PROGRAMMING", "rating": 1800, "tags": ["sortings"]}, {"contestId": 1005, "index": "D", "name": "Polycarp and Div 3", "type": "PROGRAMMING", "rating": 1500, "tags": ["dp", "greedy", "number theory"]}, {"contestId": 1005, "index": "C", "name": "Summarize to the Power of Two", "type": "PROGRAMMING", "rating": 1300, "tags": ["brute force", "greedy", "implementation"]}, {"contestId": 1005, "index": "B", "name": "Delete from the Left", "type": "PROGRAMMING", "rating": 900, "tags": ["brute force", "implementation", "strings"]}, {"contestId": 1005, "index": "A", "name": "Tanya and Stairways", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"]}, {"contestId": 1004, "index": "F", "name": "Sonya and Bitwise OR", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["bitmasks", "data structures", "divide and conquer"]}, {"contestId": 1004, "index": "E", "name": "Sonya and Ice Cream", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["binary search", "data structures", "dp", "greedy", "shortest paths", "trees"]}, {"contestId": 1004, "index": "D", "name": "Sonya and Matrix", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["brute force", "constructive algorithms", "implementation"]}, {"contestId": 1004, "index": "C", "name": "Sonya and Robots", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["constructive algorithms", "implementation"]}, {"contestId": 1004, "index": "B", "name": "Sonya and Exhibition", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["constructive algorithms", "greedy", "implementation", "math"]}, {"contestId": 1004, "index": "A", "name": "Sonya and Hotels", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation"]}, {"contestId": 1003, "index": "F", "name": "Abbreviation", "type": "PROGRAMMING", "rating": 2200, "tags": ["dp", "hashing", "strings"]}, {"contestId": 1003, "index": "E", "name": "Tree Constructing", "type": "PROGRAMMING", "rating": 2100, "tags": ["constructive algorithms", "graphs"]}, {"contestId": 1003, "index": "D", "name": "Coins and Queries", "type": "PROGRAMMING", "rating": 1600, "tags": ["greedy"]}, {"contestId": 1003, "index": "C", "name": "Intense Heat", "type": "PROGRAMMING", "rating": 1300, "tags": ["brute force", "implementation", "math"]}, {"contestId": 1003, "index": "B", "name": "Binary String Constructing", "type": "PROGRAMMING", "rating": 1300, "tags": ["constructive algorithms"]}, {"contestId": 1003, "index": "A", "name": "Polycarp's Pockets", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"]}, {"contestId": 1002, "index": "E2", "name": "Another array reconstruction algorithm", "type": "PROGRAMMING", "rating": 1900, "tags": []}, {"contestId": 1002, "index": "E1", "name": "Bernstein-Vazirani algorithm", "type": "PROGRAMMING", "rating": 1500, "tags": []}, {"contestId": 1002, "index": "D3", "name": "Oracle for majority function", "type": "PROGRAMMING", "rating": 1600, "tags": []}, {"contestId": 1002, "index": "D2", "name": "Oracle for f(x) = b * x + (1 - b) * (1 - x) mod 2", "type": "PROGRAMMING", "rating": 1300, "tags": []}, {"contestId": 1002, "index": "D1", "name": "Oracle for f(x) = b * x mod 2", "type": "PROGRAMMING", "rating": 1200, "tags": []}, {"contestId": 1002, "index": "C2", "name": "Distinguish zero state and plus state without errors", "type": "PROGRAMMING", "rating": 1800, "tags": []}, {"contestId": 1002, "index": "C1", "name": "Distinguish zero state and plus state with minimum error", "type": "PROGRAMMING", "rating": 1700, "tags": []}, {"contestId": 1002, "index": "B4", "name": "Distinguish four 2-qubit states - 2", "type": "PROGRAMMING", "rating": 1700, "tags": []}, {"contestId": 1002, "index": "B3", "name": "Distinguish four 2-qubit states", "type": "PROGRAMMING", "rating": 1600, "tags": []}, {"contestId": 1002, "index": "B2", "name": "Distinguish GHZ state and W state", "type": "PROGRAMMING", "rating": 1600, "tags": []}, {"contestId": 1002, "index": "B1", "name": "Distinguish zero state and W state", "type": "PROGRAMMING", "rating": 1300, "tags": []}, {"contestId": 1002, "index": "A4", "name": "Generate W state", "type": "PROGRAMMING", "rating": 1900, "tags": []}, {"contestId": 1002, "index": "A3", "name": "Generate superposition of two basis states", "type": "PROGRAMMING", "rating": 1500, "tags": []}, {"contestId": 1002, "index": "A2", "name": "Generate superposition of zero state and a basis state", "type": "PROGRAMMING", "rating": 1300, "tags": []}, {"contestId": 1002, "index": "A1", "name": "Generate superposition of all basis states", "type": "PROGRAMMING", "rating": 800, "tags": []}, {"contestId": 1001, "index": "I", "name": "Deutsch-Jozsa algorithm", "type": "PROGRAMMING", "rating": 1700, "tags": ["*special"]}, {"contestId": 1001, "index": "H", "name": "Oracle for f(x) = parity of the number of 1s in x", "type": "PROGRAMMING", "rating": 1200, "tags": ["*special"]}, {"contestId": 1001, "index": "G", "name": "Oracle for f(x) = k-th element of x", "type": "PROGRAMMING", "rating": 1400, "tags": ["*special"]}, {"contestId": 1001, "index": "F", "name": "Distinguish multi-qubit basis states", "type": "PROGRAMMING", "rating": 1300, "tags": ["*special"]}, {"contestId": 1001, "index": "E", "name": "Distinguish Bell states", "type": "PROGRAMMING", "rating": 1600, "tags": ["*special"]}, {"contestId": 1001, "index": "D", "name": "Distinguish plus state and minus state", "type": "PROGRAMMING", "rating": 1400, "tags": ["*special"]}, {"contestId": 1001, "index": "C", "name": "Generate GHZ state", "type": "PROGRAMMING", "rating": 1400, "tags": ["*special"]}, {"contestId": 1001, "index": "B", "name": "Generate Bell state", "type": "PROGRAMMING", "rating": 1400, "tags": ["*special"]}, {"contestId": 1001, "index": "A", "name": "Generate plus state or minus state", "type": "PROGRAMMING", "rating": 1100, "tags": ["*special"]}, {"contestId": 1000, "index": "G", "name": "Two-Paths", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "dp", "trees"]}, {"contestId": 1000, "index": "F", "name": "One Occurrence", "type": "PROGRAMMING", "rating": 2400, "tags": ["data structures", "divide and conquer"]}, {"contestId": 1000, "index": "E", "name": "We Need More Bosses", "type": "PROGRAMMING", "rating": 2100, "tags": ["dfs and similar", "graphs", "trees"]}, {"contestId": 1000, "index": "D", "name": "Yet Another Problem On a Subsequence", "type": "PROGRAMMING", "rating": 1900, "tags": ["combinatorics", "dp"]}, {"contestId": 1000, "index": "C", "name": "Covered Points Count", "type": "PROGRAMMING", "rating": 1700, "tags": ["data structures", "implementation", "sortings"]}, {"contestId": 1000, "index": "B", "name": "Light It Up", "type": "PROGRAMMING", "rating": 1500, "tags": ["greedy"]}, {"contestId": 1000, "index": "A", "name": "Codehorses T-shirts", "type": "PROGRAMMING", "rating": 1200, "tags": ["greedy", "implementation"]}, {"contestId": 999, "index": "F", "name": "Cards and Joy", "type": "PROGRAMMING", "rating": 2000, "tags": ["dp"]}, {"contestId": 999, "index": "E", "name": "Reachability from the Capital", "type": "PROGRAMMING", "rating": 2000, "tags": ["dfs and similar", "graphs", "greedy"]}, {"contestId": 999, "index": "D", "name": "Equalize the Remainders", "type": "PROGRAMMING", "rating": 1900, "tags": ["data structures", "greedy", "implementation"]}, {"contestId": 999, "index": "C", "name": "Alphabetic Removals", "type": "PROGRAMMING", "rating": 1200, "tags": ["implementation"]}, {"contestId": 999, "index": "B", "name": "Reversing Encryption", "type": "PROGRAMMING", "rating": 900, "tags": ["implementation"]}, {"contestId": 999, "index": "A", "name": "Mishka and Contest", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "implementation"]}, {"contestId": 998, "index": "B", "name": "Cutting", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["dp", "greedy", "sortings"]}, {"contestId": 998, "index": "A", "name": "Balloons", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["constructive algorithms", "implementation"]}, {"contestId": 997, "index": "E", "name": "Good Subsegments", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["data structures"]}, {"contestId": 997, "index": "D", "name": "Cycles in product", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["combinatorics", "divide and conquer", "trees"]}, {"contestId": 997, "index": "C", "name": "Sky Full of Stars", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["combinatorics", "math"]}, {"contestId": 997, "index": "B", "name": "Roman Digits", "type": "PROGRAMMING", "points": 1250.0, "rating": 2000, "tags": ["brute force", "combinatorics", "dp", "greedy", "math"]}, {"contestId": 997, "index": "A", "name": "Convert to Ones", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["brute force", "greedy", "implementation", "math"]}, {"contestId": 996, "index": "B", "name": "World Cup", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["binary search", "math"]}, {"contestId": 996, "index": "A", "name": "Hit the Lottery", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["dp", "greedy"]}, {"contestId": 995, "index": "F", "name": "Cowmpany Cowmpensation", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["combinatorics", "dp", "math", "trees"]}, {"contestId": 995, "index": "E", "name": "Number Clicker", "type": "PROGRAMMING", "points": 2250.0, "rating": 2700, "tags": ["divide and conquer", "graphs", "meet-in-the-middle", "number theory"]}, {"contestId": 995, "index": "D", "name": "Game", "type": "PROGRAMMING", "points": 1750.0, "rating": 2500, "tags": ["math"]}, {"contestId": 995, "index": "C", "name": "Leaving the Bar", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["brute force", "data structures", "geometry", "greedy", "math", "sortings"]}, {"contestId": 995, "index": "B", "name": "Suit and Tie", "type": "PROGRAMMING", "points": 750.0, "rating": 1400, "tags": ["greedy", "implementation", "math"]}, {"contestId": 995, "index": "A", "name": "Tesla", "type": "PROGRAMMING", "points": 500.0, "rating": 2100, "tags": ["constructive algorithms", "implementation"]}, {"contestId": 994, "index": "B", "name": "Knights of a Polygonal Table", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["greedy", "implementation", "sortings"]}, {"contestId": 994, "index": "A", "name": "Fingerprints", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 993, "index": "F", "name": "The Moral Dilemma", "type": "PROGRAMMING", "points": 3000.0, "rating": 3200, "tags": []}, {"contestId": 993, "index": "E", "name": "Nikita and Order Statistics", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["chinese remainder theorem", "fft", "math"]}, {"contestId": 993, "index": "D", "name": "Compute Power", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["binary search", "dp", "greedy"]}, {"contestId": 993, "index": "C", "name": "Careful Maneuvering", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["bitmasks", "brute force", "geometry"]}, {"contestId": 993, "index": "B", "name": "Open Communication", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["bitmasks", "brute force"]}, {"contestId": 993, "index": "A", "name": "Two Squares", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["geometry", "implementation"]}, {"contestId": 992, "index": "E", "name": "Nastya and King-Shamans", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["binary search", "data structures"]}, {"contestId": 992, "index": "D", "name": "Nastya and a Game", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["brute force", "implementation", "math"]}, {"contestId": 992, "index": "C", "name": "Nastya and a Wardrobe", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["math"]}, {"contestId": 992, "index": "B", "name": "Nastya Studies Informatics", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["math", "number theory"]}, {"contestId": 992, "index": "A", "name": "Nastya and an Array", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "sortings"]}, {"contestId": 991, "index": "F", "name": "Concise and clear", "type": "PROGRAMMING", "points": 2750.0, "rating": 2700, "tags": ["brute force", "greedy", "implementation", "math"]}, {"contestId": 991, "index": "E", "name": "Bus Number", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["brute force", "combinatorics", "math"]}, {"contestId": 991, "index": "D", "name": "Bishwock", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["dp", "greedy"]}, {"contestId": 991, "index": "C", "name": "Candies", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["binary search", "implementation"]}, {"contestId": 991, "index": "B", "name": "Getting an A", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["greedy", "sortings"]}, {"contestId": 991, "index": "A", "name": "If at first you don't succeed...", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"]}, {"contestId": 990, "index": "G", "name": "GCD Counting", "type": "PROGRAMMING", "rating": 2400, "tags": ["divide and conquer", "dp", "dsu", "number theory", "trees"]}, {"contestId": 990, "index": "F", "name": "Flow Control", "type": "PROGRAMMING", "rating": 2400, "tags": ["dfs and similar", "dp", "greedy", "trees"]}, {"contestId": 990, "index": "E", "name": "Post Lamps", "type": "PROGRAMMING", "rating": 2100, "tags": ["brute force", "greedy"]}, {"contestId": 990, "index": "D", "name": "Graph And Its Complement", "type": "PROGRAMMING", "rating": 1700, "tags": ["constructive algorithms", "graphs", "implementation"]}, {"contestId": 990, "index": "C", "name": "Bracket Sequences Concatenation Problem", "type": "PROGRAMMING", "rating": 1500, "tags": ["implementation"]}, {"contestId": 990, "index": "B", "name": "Micro-World", "type": "PROGRAMMING", "rating": 1200, "tags": ["greedy", "sortings"]}, {"contestId": 990, "index": "A", "name": "Commentary Boxes", "type": "PROGRAMMING", "rating": 1000, "tags": ["implementation", "math"]}, {"contestId": 989, "index": "E", "name": "A Trance of Nightfall", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["dp", "geometry", "matrices", "probabilities"]}, {"contestId": 989, "index": "D", "name": "A Shade of Moonlight", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["binary search", "geometry", "math", "sortings", "two pointers"]}, {"contestId": 989, "index": "C", "name": "A Mist of Florescence", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["constructive algorithms", "graphs"]}, {"contestId": 989, "index": "B", "name": "A Tide of Riverscape", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "strings"]}, {"contestId": 989, "index": "A", "name": "A Blend of Springtime", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation", "strings"]}, {"contestId": 988, "index": "F", "name": "Rain and Umbrellas", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp"]}, {"contestId": 988, "index": "E", "name": "Divisibility by 25", "type": "PROGRAMMING", "rating": 2100, "tags": ["brute force", "greedy"]}, {"contestId": 988, "index": "D", "name": "Points and Powers of Two", "type": "PROGRAMMING", "rating": 1800, "tags": ["brute force", "math"]}, {"contestId": 988, "index": "C", "name": "Equal Sums", "type": "PROGRAMMING", "rating": 1400, "tags": ["implementation", "sortings"]}, {"contestId": 988, "index": "B", "name": "Substrings Sort", "type": "PROGRAMMING", "rating": 1100, "tags": ["sortings", "strings"]}, {"contestId": 988, "index": "A", "name": "Diverse Team", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "implementation"]}, {"contestId": 987, "index": "C", "name": "Three displays", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["brute force", "dp", "implementation"]}, {"contestId": 987, "index": "B", "name": "High School: Become Human", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["math"]}, {"contestId": 987, "index": "A", "name": "Infinity Gauntlet", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 986, "index": "F", "name": "Oppa Funcan Style Remastered", "type": "PROGRAMMING", "points": 3000.0, "rating": 3300, "tags": ["graphs", "math", "number theory", "shortest paths"]}, {"contestId": 986, "index": "E", "name": "Prince's Problem", "type": "PROGRAMMING", "points": 2750.0, "rating": 2800, "tags": ["brute force", "data structures", "math", "number theory", "trees"]}, {"contestId": 986, "index": "D", "name": "Perfect Encoding", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["fft", "math"]}, {"contestId": 986, "index": "C", "name": "AND Graph", "type": "PROGRAMMING", "points": 1750.0, "rating": 2500, "tags": ["bitmasks", "dfs and similar", "dsu", "graphs"]}, {"contestId": 986, "index": "B", "name": "Petr and Permutations", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["combinatorics", "math"]}, {"contestId": 986, "index": "A", "name": "Fair", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["graphs", "greedy", "number theory", "shortest paths"]}, {"contestId": 985, "index": "G", "name": "Team Players", "type": "PROGRAMMING", "rating": 2700, "tags": ["combinatorics"]}, {"contestId": 985, "index": "F", "name": "Isomorphic Strings", "type": "PROGRAMMING", "rating": 2300, "tags": ["hashing", "strings"]}, {"contestId": 985, "index": "E", "name": "Pencils and Boxes", "type": "PROGRAMMING", "rating": 2100, "tags": ["binary search", "data structures", "dp", "greedy", "two pointers"]}, {"contestId": 985, "index": "D", "name": "Sand Fortress", "type": "PROGRAMMING", "rating": 2100, "tags": ["binary search", "constructive algorithms", "math"]}, {"contestId": 985, "index": "C", "name": "Liebig's Barrels", "type": "PROGRAMMING", "rating": 1500, "tags": ["greedy"]}, {"contestId": 985, "index": "B", "name": "Switches and Lamps", "type": "PROGRAMMING", "rating": 1200, "tags": ["implementation"]}, {"contestId": 985, "index": "A", "name": "Chess Placing", "type": "PROGRAMMING", "rating": 1100, "tags": ["implementation"]}, {"contestId": 984, "index": "B", "name": "Minesweeper", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["implementation"]}, {"contestId": 984, "index": "A", "name": "Game", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["sortings"]}, {"contestId": 983, "index": "E", "name": "NN country", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["binary search", "data structures", "trees"]}, {"contestId": 983, "index": "D", "name": "Arkady and Rectangles", "type": "PROGRAMMING", "points": 2250.0, "rating": 3300, "tags": ["data structures"]}, {"contestId": 983, "index": "C", "name": "Elevator", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["dp", "graphs", "shortest paths"]}, {"contestId": 983, "index": "B", "name": "XOR-pyramid", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["dp"]}, {"contestId": 983, "index": "A", "name": "Finite or not?", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["implementation", "math"]}, {"contestId": 982, "index": "F", "name": "The Meeting Place Cannot Be Changed", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["dfs and similar", "graphs"]}, {"contestId": 982, "index": "E", "name": "Billiard", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["geometry", "number theory"]}, {"contestId": 982, "index": "D", "name": "Shark", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["brute force", "data structures", "dsu", "trees"]}, {"contestId": 982, "index": "C", "name": "Cut 'em all!", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["dfs and similar", "dp", "graphs", "greedy", "trees"]}, {"contestId": 982, "index": "B", "name": "Bus of Characters", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["data structures", "greedy", "implementation"]}, {"contestId": 982, "index": "A", "name": "Row", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["brute force", "constructive algorithms"]}, {"contestId": 981, "index": "H", "name": "K Paths", "type": "PROGRAMMING", "points": 3750.0, "rating": 3100, "tags": ["combinatorics", "data structures", "dp", "fft", "math"]}, {"contestId": 981, "index": "G", "name": "Magic multisets", "type": "PROGRAMMING", "points": 3250.0, "rating": 2500, "tags": ["data structures"]}, {"contestId": 981, "index": "F", "name": "Round Marriage", "type": "PROGRAMMING", "points": 2750.0, "rating": 2500, "tags": ["binary search", "graph matchings", "greedy"]}, {"contestId": 981, "index": "E", "name": "Addition on Segments", "type": "PROGRAMMING", "points": 2250.0, "rating": 2200, "tags": ["bitmasks", "data structures", "divide and conquer", "dp"]}, {"contestId": 981, "index": "D", "name": "Bookshelves", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["bitmasks", "dp", "greedy"]}, {"contestId": 981, "index": "C", "name": "Useful Decomposition", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["implementation", "trees"]}, {"contestId": 981, "index": "B", "name": "Businessmen Problems", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["sortings"]}, {"contestId": 981, "index": "A", "name": "Antipalindrome", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["brute force", "implementation", "strings"]}, {"contestId": 980, "index": "F", "name": "Cactus to Tree", "type": "PROGRAMMING", "points": 3000.0, "rating": 2900, "tags": ["dp", "graphs", "trees"]}, {"contestId": 980, "index": "E", "name": "The Number Games", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["data structures", "greedy", "trees"]}, {"contestId": 980, "index": "D", "name": "Perfect Groups", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["dp", "math", "number theory"]}, {"contestId": 980, "index": "C", "name": "Posterized", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["games", "greedy"]}, {"contestId": 980, "index": "B", "name": "Marlin", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["constructive algorithms"]}, {"contestId": 980, "index": "A", "name": "Links and Pearls", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation", "math"]}, {"contestId": 979, "index": "E", "name": "Kuro and Topological Parity", "type": "PROGRAMMING", "points": 2250.0, "rating": 2400, "tags": ["dp"]}, {"contestId": 979, "index": "D", "name": "Kuro and GCD and XOR and SUM", "type": "PROGRAMMING", "points": 1750.0, "rating": 2200, "tags": ["binary search", "bitmasks", "brute force", "data structures", "dp", "dsu", "greedy", "math", "number theory", "strings", "trees"]}, {"contestId": 979, "index": "C", "name": "Kuro and Walking Route", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["dfs and similar", "trees"]}, {"contestId": 979, "index": "B", "name": "Treasure Hunt", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["greedy"]}, {"contestId": 979, "index": "A", "name": "Pizza, Pizza, Pizza!!!", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["math"]}, {"contestId": 978, "index": "G", "name": "Petya's Exams", "type": "PROGRAMMING", "rating": 1700, "tags": ["greedy", "implementation", "sortings"]}, {"contestId": 978, "index": "F", "name": "Mentors", "type": "PROGRAMMING", "rating": 1500, "tags": ["binary search", "data structures", "implementation"]}, {"contestId": 978, "index": "E", "name": "Bus Video System", "type": "PROGRAMMING", "rating": 1400, "tags": ["combinatorics", "math"]}, {"contestId": 978, "index": "D", "name": "Almost Arithmetic Progression", "type": "PROGRAMMING", "rating": 1500, "tags": ["brute force", "implementation", "math"]}, {"contestId": 978, "index": "C", "name": "Letters", "type": "PROGRAMMING", "rating": 1000, "tags": ["binary search", "implementation", "two pointers"]}, {"contestId": 978, "index": "B", "name": "File Name", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "strings"]}, {"contestId": 978, "index": "A", "name": "Remove Duplicates", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"]}, {"contestId": 977, "index": "F", "name": "Consecutive Subsequence", "type": "PROGRAMMING", "rating": 1700, "tags": ["dp"]}, {"contestId": 977, "index": "E", "name": "Cyclic Components", "type": "PROGRAMMING", "rating": 1500, "tags": ["dfs and similar", "dsu", "graphs"]}, {"contestId": 977, "index": "D", "name": "Divide by three, multiply by two", "type": "PROGRAMMING", "rating": 1400, "tags": ["dfs and similar", "math", "sortings"]}, {"contestId": 977, "index": "C", "name": "Less or Equal", "type": "PROGRAMMING", "rating": 1200, "tags": ["sortings"]}, {"contestId": 977, "index": "B", "name": "Two-gram", "type": "PROGRAMMING", "rating": 900, "tags": ["implementation", "strings"]}, {"contestId": 977, "index": "A", "name": "Wrong Subtraction", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"]}, {"contestId": 976, "index": "F", "name": "Minimal k-covering", "type": "PROGRAMMING", "rating": 2500, "tags": ["flows", "graphs"]}, {"contestId": 976, "index": "E", "name": "Well played!", "type": "PROGRAMMING", "rating": 2100, "tags": ["greedy", "sortings"]}, {"contestId": 976, "index": "D", "name": "Degree Set", "type": "PROGRAMMING", "rating": 2500, "tags": ["constructive algorithms", "graphs", "implementation"]}, {"contestId": 976, "index": "C", "name": "Nested Segments", "type": "PROGRAMMING", "rating": 1500, "tags": ["greedy", "implementation", "sortings"]}, {"contestId": 976, "index": "B", "name": "Lara Croft and the New Game", "type": "PROGRAMMING", "rating": 1300, "tags": ["implementation", "math"]}, {"contestId": 976, "index": "A", "name": "Minimum Binary Number", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"]}, {"contestId": 975, "index": "E", "name": "Hag's Khashba", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["geometry"]}, {"contestId": 975, "index": "D", "name": "Ghosts", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["geometry", "math"]}, {"contestId": 975, "index": "C", "name": "Valhalla Siege", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["binary search"]}, {"contestId": 975, "index": "B", "name": "Mancala", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["brute force", "implementation"]}, {"contestId": 975, "index": "A", "name": "Aramic script", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation", "strings"]}, {"contestId": 967, "index": "B", "name": "Watering System", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["math", "sortings"]}, {"contestId": 967, "index": "A", "name": "Mind the Gap", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["implementation"]}, {"contestId": 965, "index": "E", "name": "Short Code", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["data structures", "dp", "greedy", "strings", "trees"]}, {"contestId": 965, "index": "D", "name": "Single-use Stones", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["binary search", "flows", "greedy", "two pointers"]}, {"contestId": 965, "index": "C", "name": "Greedy Arkady", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["math"]}, {"contestId": 965, "index": "B", "name": "Battleship", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["implementation"]}, {"contestId": 965, "index": "A", "name": "Paper Airplanes", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math"]}, {"contestId": 964, "index": "B", "name": "Messages", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["math"]}, {"contestId": 964, "index": "A", "name": "Splits", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math"]}, {"contestId": 963, "index": "E", "name": "Circles of Waiting", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["math"]}, {"contestId": 963, "index": "D", "name": "Frequency of String", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["hashing", "string suffix structures", "strings"]}, {"contestId": 963, "index": "C", "name": "Cutting Rectangle", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["brute force", "math", "number theory"]}, {"contestId": 963, "index": "B", "name": "Destruction of a Tree", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["constructive algorithms", "dfs and similar", "dp", "greedy", "trees"]}, {"contestId": 963, "index": "A", "name": "Alternating Sum", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["math", "number theory"]}, {"contestId": 962, "index": "G", "name": "Visible Black Areas", "type": "PROGRAMMING", "rating": 2800, "tags": ["data structures", "dsu", "geometry", "trees"]}, {"contestId": 962, "index": "F", "name": "Simple Cycles Edges", "type": "PROGRAMMING", "rating": 2400, "tags": ["dfs and similar", "graphs", "trees"]}, {"contestId": 962, "index": "E", "name": "Byteland, Berland and Disputed Cities", "type": "PROGRAMMING", "rating": 2200, "tags": ["constructive algorithms", "greedy"]}, {"contestId": 962, "index": "D", "name": "Merge Equals", "type": "PROGRAMMING", "rating": 1600, "tags": ["data structures", "implementation"]}, {"contestId": 962, "index": "C", "name": "Make a Square", "type": "PROGRAMMING", "rating": 1400, "tags": ["brute force", "implementation", "math"]}, {"contestId": 962, "index": "B", "name": "Students in Railway Carriage", "type": "PROGRAMMING", "rating": 1300, "tags": ["constructive algorithms", "greedy", "implementation"]}, {"contestId": 962, "index": "A", "name": "Equator", "type": "PROGRAMMING", "rating": 1300, "tags": ["implementation"]}, {"contestId": 961, "index": "G", "name": "Partitions", "type": "PROGRAMMING", "rating": 2700, "tags": ["combinatorics", "math", "number theory"]}, {"contestId": 961, "index": "F", "name": "k-substrings", "type": "PROGRAMMING", "rating": 2700, "tags": ["binary search", "hashing", "string suffix structures"]}, {"contestId": 961, "index": "E", "name": "Tufurama", "type": "PROGRAMMING", "rating": 1900, "tags": ["data structures"]}, {"contestId": 961, "index": "D", "name": "Pair Of Lines", "type": "PROGRAMMING", "rating": 2000, "tags": ["geometry"]}, {"contestId": 961, "index": "C", "name": "Chessboard", "type": "PROGRAMMING", "rating": 1400, "tags": ["bitmasks", "brute force", "implementation"]}, {"contestId": 961, "index": "B", "name": "Lecture Sleep", "type": "PROGRAMMING", "rating": 1200, "tags": ["data structures", "dp", "implementation", "two pointers"]}, {"contestId": 961, "index": "A", "name": "Tetris", "type": "PROGRAMMING", "rating": 900, "tags": ["implementation"]}, {"contestId": 960, "index": "H", "name": "Santa's Gift", "type": "PROGRAMMING", "points": 3500.0, "rating": 3100, "tags": ["data structures", "trees"]}, {"contestId": 960, "index": "G", "name": "Bandit Blues", "type": "PROGRAMMING", "points": 3000.0, "rating": 2900, "tags": ["combinatorics", "dp", "fft", "math"]}, {"contestId": 960, "index": "F", "name": "Pathwalks", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["data structures", "dp", "graphs"]}, {"contestId": 960, "index": "E", "name": "Alternating Tree", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["combinatorics", "dfs and similar", "divide and conquer", "dp", "probabilities", "trees"]}, {"contestId": 960, "index": "D", "name": "Full Binary Tree Queries", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["brute force", "implementation", "trees"]}, {"contestId": 960, "index": "C", "name": "Subsequence Counting", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["bitmasks", "constructive algorithms", "greedy", "implementation"]}, {"contestId": 960, "index": "B", "name": "Minimize the error", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["data structures", "greedy", "sortings"]}, {"contestId": 960, "index": "A", "name": "Check the string", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["implementation"]}, {"contestId": 959, "index": "F", "name": "Mahmoud and Ehab and yet another xor task", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["bitmasks", "dp", "math", "matrices"]}, {"contestId": 959, "index": "E", "name": "Mahmoud and Ehab and the xor-MST", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["bitmasks", "dp", "graphs", "implementation", "math"]}, {"contestId": 959, "index": "D", "name": "Mahmoud and Ehab and another array construction task", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["constructive algorithms", "greedy", "math", "number theory"]}, {"contestId": 959, "index": "C", "name": "Mahmoud and Ehab and the wrong algorithm", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["constructive algorithms", "trees"]}, {"contestId": 959, "index": "B", "name": "Mahmoud and Ehab and the message", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["dsu", "greedy", "implementation"]}, {"contestId": 959, "index": "A", "name": "Mahmoud and Ehab and the even-odd game", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["games", "math"]}, {"contestId": 958, "index": "F3", "name": "Lightsabers (hard)", "type": "PROGRAMMING", "rating": 2600, "tags": ["fft"]}, {"contestId": 958, "index": "F2", "name": "Lightsabers (medium)", "type": "PROGRAMMING", "rating": 1800, "tags": ["binary search", "two pointers"]}, {"contestId": 958, "index": "F1", "name": "Lightsabers (easy)", "type": "PROGRAMMING", "rating": 1500, "tags": ["implementation"]}, {"contestId": 958, "index": "E3", "name": "Guard Duty (hard)", "type": "PROGRAMMING", "rating": 2700, "tags": ["geometry"]}, {"contestId": 958, "index": "E2", "name": "Guard Duty (medium)", "type": "PROGRAMMING", "rating": 2200, "tags": ["binary search", "dp", "greedy", "sortings"]}, {"contestId": 958, "index": "E1", "name": "Guard Duty (easy)", "type": "PROGRAMMING", "rating": 1600, "tags": ["brute force", "geometry", "greedy", "math"]}, {"contestId": 958, "index": "D2", "name": "Hyperspace Jump (hard)", "type": "PROGRAMMING", "rating": 2700, "tags": []}, {"contestId": 958, "index": "D1", "name": "Hyperspace Jump (easy)", "type": "PROGRAMMING", "rating": 1400, "tags": ["expression parsing", "math"]}, {"contestId": 958, "index": "C3", "name": "Encryption (hard)", "type": "PROGRAMMING", "rating": 2500, "tags": ["data structures", "dp"]}, {"contestId": 958, "index": "C2", "name": "Encryption (medium)", "type": "PROGRAMMING", "rating": 2000, "tags": ["dp"]}, {"contestId": 958, "index": "C1", "name": "Encryption (easy)", "type": "PROGRAMMING", "rating": 1200, "tags": ["brute force"]}, {"contestId": 958, "index": "B2", "name": "Maximum Control (medium)", "type": "PROGRAMMING", "rating": 2200, "tags": ["data structures", "dfs and similar", "graphs", "greedy", "trees"]}, {"contestId": 958, "index": "B1", "name": "Maximum Control (easy)", "type": "PROGRAMMING", "rating": 1000, "tags": ["implementation"]}, {"contestId": 958, "index": "A3", "name": "Death Stars (hard)", "type": "PROGRAMMING", "rating": 3100, "tags": []}, {"contestId": 958, "index": "A2", "name": "Death Stars (medium)", "type": "PROGRAMMING", "rating": 2000, "tags": ["hashing", "strings"]}, {"contestId": 958, "index": "A1", "name": "Death Stars (easy)", "type": "PROGRAMMING", "rating": 1400, "tags": ["implementation"]}, {"contestId": 957, "index": "A", "name": "Tritonic Iridescence", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["implementation"]}, {"contestId": 955, "index": "F", "name": "Heaps", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["dp", "trees"]}, {"contestId": 955, "index": "E", "name": "Icicles", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": []}, {"contestId": 955, "index": "D", "name": "Scissors", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["brute force", "strings"]}, {"contestId": 955, "index": "C", "name": "Sad powers", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["binary search", "math", "number theory"]}, {"contestId": 955, "index": "B", "name": "Not simply beatiful strings", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["implementation"]}, {"contestId": 955, "index": "A", "name": "Feed the cat", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["greedy", "math"]}, {"contestId": 954, "index": "I", "name": "Yet Another String Matching Problem", "type": "PROGRAMMING", "rating": 2200, "tags": ["fft", "math"]}, {"contestId": 954, "index": "H", "name": "Path Counting", "type": "PROGRAMMING", "rating": 2500, "tags": ["combinatorics", "dp"]}, {"contestId": 954, "index": "G", "name": "Castle Defense", "type": "PROGRAMMING", "rating": 2000, "tags": ["binary search", "data structures", "greedy", "two pointers"]}, {"contestId": 954, "index": "F", "name": "Runner's Problem", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp", "matrices", "sortings"]}, {"contestId": 954, "index": "E", "name": "Water Taps", "type": "PROGRAMMING", "rating": 2000, "tags": ["binary search", "greedy", "sortings"]}, {"contestId": 954, "index": "D", "name": "Fight Against Traffic", "type": "PROGRAMMING", "rating": 1600, "tags": ["dfs and similar", "graphs", "shortest paths"]}, {"contestId": 954, "index": "C", "name": "Matrix Walk", "type": "PROGRAMMING", "rating": 1700, "tags": ["implementation"]}, {"contestId": 954, "index": "B", "name": "String Typing", "type": "PROGRAMMING", "rating": 1400, "tags": ["implementation", "strings"]}, {"contestId": 954, "index": "A", "name": "Diagonal Walking", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"]}, {"contestId": 952, "index": "G", "name": "Puzzling Language", "type": "PROGRAMMING", "rating": 2200, "tags": ["constructive algorithms"]}, {"contestId": 952, "index": "F", "name": "2 + 2 != 4", "type": "PROGRAMMING", "rating": 2400, "tags": []}, {"contestId": 952, "index": "E", "name": "Cheese Board", "type": "PROGRAMMING", "rating": 2000, "tags": []}, {"contestId": 952, "index": "D", "name": "I'm Feeling Lucky!", "type": "PROGRAMMING", "rating": 1800, "tags": ["probabilities"]}, {"contestId": 952, "index": "C", "name": "Ravioli Sort", "type": "PROGRAMMING", "rating": 1600, "tags": ["implementation"]}, {"contestId": 952, "index": "B", "name": "A Map of the Cat", "type": "PROGRAMMING", "rating": 1900, "tags": ["brute force", "interactive"]}, {"contestId": 952, "index": "A", "name": "Quirky Quantifiers", "type": "PROGRAMMING", "rating": 800, "tags": ["math"]}, {"contestId": 950, "index": "B", "name": "Intercepted Message", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["greedy", "implementation"]}, {"contestId": 950, "index": "A", "name": "Left-handers, Right-handers and Ambidexters", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "math"]}, {"contestId": 949, "index": "F", "name": "Astronomy", "type": "PROGRAMMING", "points": 2500.0, "rating": 3300, "tags": ["geometry", "probabilities"]}, {"contestId": 949, "index": "E", "name": "Binary Cards", "type": "PROGRAMMING", "points": 2250.0, "rating": 2700, "tags": ["brute force"]}, {"contestId": 949, "index": "D", "name": "Curfew", "type": "PROGRAMMING", "points": 1750.0, "rating": 2300, "tags": ["binary search", "brute force", "greedy", "sortings"]}, {"contestId": 949, "index": "C", "name": "Data Center Maintenance", "type": "PROGRAMMING", "points": 1250.0, "rating": 1900, "tags": ["dfs and similar", "graphs"]}, {"contestId": 949, "index": "B", "name": "A Leapfrog in the Array", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["constructive algorithms", "math"]}, {"contestId": 949, "index": "A", "name": "Zebras", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["greedy"]}, {"contestId": 948, "index": "A", "name": "Protect Sheep", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["brute force", "dfs and similar", "graphs", "implementation"]}, {"contestId": 946, "index": "G", "name": "Almost Increasing Array", "type": "PROGRAMMING", "rating": 2500, "tags": ["data structures", "dp"]}, {"contestId": 946, "index": "F", "name": "Fibonacci String Subsequences", "type": "PROGRAMMING", "rating": 2400, "tags": ["combinatorics", "dp", "matrices"]}, {"contestId": 946, "index": "E", "name": "Largest Beautiful Number", "type": "PROGRAMMING", "rating": 2200, "tags": ["greedy", "implementation"]}, {"contestId": 946, "index": "D", "name": "Timetable", "type": "PROGRAMMING", "rating": 1800, "tags": ["dp"]}, {"contestId": 946, "index": "C", "name": "String Transformation", "type": "PROGRAMMING", "rating": 1300, "tags": ["greedy", "strings"]}, {"contestId": 946, "index": "B", "name": "Weird Subtraction Process", "type": "PROGRAMMING", "rating": 1100, "tags": ["math", "number theory"]}, {"contestId": 946, "index": "A", "name": "Partition", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy"]}, {"contestId": 940, "index": "F", "name": "Machine Learning", "type": "PROGRAMMING", "points": 2750.0, "rating": 2600, "tags": ["brute force", "data structures"]}, {"contestId": 940, "index": "E", "name": "Cashback", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["data structures", "dp", "greedy", "math"]}, {"contestId": 940, "index": "D", "name": "Alena And The Heater", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["binary search", "implementation"]}, {"contestId": 940, "index": "C", "name": "Phone Numbers", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["constructive algorithms", "implementation", "strings"]}, {"contestId": 940, "index": "B", "name": "Our Tanya is Crying Out Loud", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["dp", "greedy"]}, {"contestId": 940, "index": "A", "name": "Points on the line", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["brute force", "greedy", "sortings"]}, {"contestId": 939, "index": "F", "name": "Cutlet", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["data structures", "dp"]}, {"contestId": 939, "index": "E", "name": "Maximize!", "type": "PROGRAMMING", "points": 2500.0, "rating": 1800, "tags": ["binary search", "greedy", "ternary search", "two pointers"]}, {"contestId": 939, "index": "D", "name": "Love Rescue", "type": "PROGRAMMING", "points": 2000.0, "rating": 1600, "tags": ["dfs and similar", "dsu", "graphs", "greedy", "strings"]}, {"contestId": 939, "index": "C", "name": "Convenient For Everybody", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["binary search", "two pointers"]}, {"contestId": 939, "index": "B", "name": "Hamster Farm", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["implementation"]}, {"contestId": 939, "index": "A", "name": "Love Triangle", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["graphs"]}, {"contestId": 938, "index": "G", "name": "Shortest Path Queries", "type": "PROGRAMMING", "rating": 2900, "tags": ["bitmasks", "data structures", "dsu", "graphs"]}, {"contestId": 938, "index": "F", "name": "Erasing Substrings", "type": "PROGRAMMING", "rating": 2700, "tags": ["bitmasks", "dp", "greedy"]}, {"contestId": 938, "index": "E", "name": "Max History", "type": "PROGRAMMING", "rating": 2300, "tags": ["combinatorics", "math"]}, {"contestId": 938, "index": "D", "name": "Buy a Ticket", "type": "PROGRAMMING", "rating": 2000, "tags": ["data structures", "graphs", "shortest paths"]}, {"contestId": 938, "index": "C", "name": "Constructing Tests", "type": "PROGRAMMING", "rating": 1700, "tags": ["binary search", "brute force", "constructive algorithms"]}, {"contestId": 938, "index": "B", "name": "Run For Your Prize", "type": "PROGRAMMING", "rating": 1100, "tags": ["brute force", "greedy"]}, {"contestId": 938, "index": "A", "name": "Word Correction", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"]}, {"contestId": 937, "index": "B", "name": "Vile Grasshoppers", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["brute force", "math", "number theory"]}, {"contestId": 937, "index": "A", "name": "Olympiad", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "sortings"]}, {"contestId": 936, "index": "E", "name": "Iqea", "type": "PROGRAMMING", "points": 2500.0, "rating": 3400, "tags": ["data structures", "dfs and similar", "divide and conquer", "dsu", "shortest paths", "trees"]}, {"contestId": 936, "index": "D", "name": "World of Tank", "type": "PROGRAMMING", "points": 2000.0, "rating": 3000, "tags": ["dp", "greedy"]}, {"contestId": 936, "index": "C", "name": "Lock Puzzle", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["constructive algorithms", "implementation", "strings"]}, {"contestId": 936, "index": "B", "name": "Sleepy Game", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["dfs and similar", "dp", "games", "graphs"]}, {"contestId": 936, "index": "A", "name": "Save Energy!", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["binary search", "implementation", "math"]}, {"contestId": 935, "index": "F", "name": "Fafa and Array", "type": "PROGRAMMING", "points": 2750.0, "rating": 2600, "tags": ["data structures", "greedy"]}, {"contestId": 935, "index": "E", "name": "Fafa and Ancient Mathematics", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["dfs and similar", "dp", "trees"]}, {"contestId": 935, "index": "D", "name": "Fafa and Ancient Alphabet", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["math", "probabilities"]}, {"contestId": 935, "index": "C", "name": "Fifa and Fafa", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["geometry"]}, {"contestId": 935, "index": "B", "name": "Fafa and the Gates", "type": "PROGRAMMING", "points": 750.0, "rating": 900, "tags": ["implementation"]}, {"contestId": 935, "index": "A", "name": "Fafa and his Company", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "implementation"]}, {"contestId": 934, "index": "B", "name": "A Prosperous Lot", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "implementation"]}, {"contestId": 934, "index": "A", "name": "A Compatible Pair", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["brute force", "games"]}, {"contestId": 933, "index": "E", "name": "A Preponderant Reunion", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["constructive algorithms", "dp"]}, {"contestId": 933, "index": "D", "name": "A Creative Cutout", "type": "PROGRAMMING", "points": 2250.0, "rating": 2900, "tags": ["brute force", "combinatorics", "math"]}, {"contestId": 933, "index": "C", "name": "A Colourful Prospect", "type": "PROGRAMMING", "points": 1500.0, "rating": 2700, "tags": ["geometry", "graphs"]}, {"contestId": 933, "index": "B", "name": "A Determined Cleanup", "type": "PROGRAMMING", "points": 750.0, "rating": 2000, "tags": ["math"]}, {"contestId": 933, "index": "A", "name": "A Twisty Movement", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["dp"]}, {"contestId": 932, "index": "G", "name": "Palindrome Partition", "type": "PROGRAMMING", "points": 3000.0, "rating": 2900, "tags": ["dp", "string suffix structures", "strings"]}, {"contestId": 932, "index": "F", "name": "Escape Through Leaf", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["data structures", "dp", "geometry"]}, {"contestId": 932, "index": "E", "name": "Team Work", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 932, "index": "D", "name": "Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["binary search", "dp", "trees"]}, {"contestId": 932, "index": "C", "name": "Permutation Cycle", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["brute force", "constructive algorithms"]}, {"contestId": 932, "index": "B", "name": "Recursive Queries", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["binary search", "data structures", "dfs and similar"]}, {"contestId": 932, "index": "A", "name": "Palindromic Supersequence", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms"]}, {"contestId": 931, "index": "C", "name": "Laboratory Work", "type": "PROGRAMMING", "points": 1750.0, "rating": 1700, "tags": ["implementation", "math"]}, {"contestId": 931, "index": "B", "name": "World Cup", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "implementation"]}, {"contestId": 931, "index": "A", "name": "Friends Meeting", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "greedy", "implementation", "math"]}, {"contestId": 930, "index": "E", "name": "Coins Exhibition", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["data structures", "dp", "math"]}, {"contestId": 930, "index": "D", "name": "Game with Tokens", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["data structures", "games", "implementation"]}, {"contestId": 930, "index": "C", "name": "Teodor is not a liar!", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["data structures", "dp"]}, {"contestId": 930, "index": "B", "name": "Game with String", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["implementation", "probabilities", "strings"]}, {"contestId": 930, "index": "A", "name": "Peculiar apple-tree", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["dfs and similar", "graphs", "trees"]}, {"contestId": 929, "index": "D", "name": "\u041f\u043e\u0433\u0440\u0430\u043d\u0438\u0447\u043d\u044b\u0435 \u0432\u0440\u0430\u0442\u0430", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": []}, {"contestId": 929, "index": "C", "name": "\u041a\u0440\u0430\u0441\u0438\u0432\u0430\u044f \u043a\u043e\u043c\u0430\u043d\u0434\u0430", "type": "PROGRAMMING", "points": 1750.0, "rating": 1700, "tags": ["*special", "combinatorics", "math"]}, {"contestId": 929, "index": "B", "name": "\u041c\u0435\u0441\u0442\u0430 \u0432 \u0441\u0430\u043c\u043e\u043b\u0451\u0442\u0435", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["*special", "implementation"]}, {"contestId": 929, "index": "A", "name": "\u041f\u0440\u043e\u043a\u0430\u0442 \u0432\u0435\u043b\u043e\u0441\u0438\u043f\u0435\u0434\u043e\u0432", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["*special", "greedy", "implementation"]}, {"contestId": 928, "index": "D", "name": "Autocompletion", "type": "PROGRAMMING", "points": 2250.0, "rating": 1900, "tags": ["*special", "strings", "trees"]}, {"contestId": 928, "index": "C", "name": "Dependency management", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["*special", "graphs", "implementation"]}, {"contestId": 928, "index": "B", "name": "Chat", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["*special", "dp"]}, {"contestId": 928, "index": "A", "name": "Login Verification", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["*special", "strings"]}, {"contestId": 927, "index": "A", "name": "BuberPool Taxi Optimization", "type": "PROGRAMMING", "rating": 2900, "tags": []}, {"contestId": 926, "index": "J", "name": "Segments", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures"]}, {"contestId": 926, "index": "I", "name": "A Vital Problem", "type": "PROGRAMMING", "rating": 1700, "tags": []}, {"contestId": 926, "index": "H", "name": "Endless Roses Most Beautiful", "type": "PROGRAMMING", "rating": 2200, "tags": []}, {"contestId": 926, "index": "G", "name": "Large Bouquets", "type": "PROGRAMMING", "rating": 1500, "tags": []}, {"contestId": 926, "index": "F", "name": "Mobile Communications", "type": "PROGRAMMING", "rating": 2000, "tags": []}, {"contestId": 926, "index": "E", "name": "Merge Equal Elements", "type": "PROGRAMMING", "rating": 1900, "tags": ["constructive algorithms", "data structures"]}, {"contestId": 926, "index": "D", "name": "Choose Place", "type": "PROGRAMMING", "rating": 1600, "tags": []}, {"contestId": 926, "index": "C", "name": "Is This a Zebra?", "type": "PROGRAMMING", "rating": 1700, "tags": []}, {"contestId": 926, "index": "B", "name": "Add Points", "type": "PROGRAMMING", "rating": 1800, "tags": []}, {"contestId": 926, "index": "A", "name": "2-3-numbers", "type": "PROGRAMMING", "rating": 1300, "tags": ["implementation", "math"]}, {"contestId": 925, "index": "F", "name": "Parametric Circulation", "type": "PROGRAMMING", "points": 3250.0, "rating": 3100, "tags": ["binary search", "flows"]}, {"contestId": 925, "index": "E", "name": "May Holidays", "type": "PROGRAMMING", "points": 2750.0, "rating": 2900, "tags": ["data structures", "trees"]}, {"contestId": 925, "index": "D", "name": "Aztec Catacombs", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["constructive algorithms"]}, {"contestId": 925, "index": "C", "name": "Big Secret", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["constructive algorithms", "math"]}, {"contestId": 925, "index": "B", "name": "Resource Distribution", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["binary search", "implementation", "sortings"]}, {"contestId": 925, "index": "A", "name": "Stairs and Elevators", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["binary search"]}, {"contestId": 924, "index": "F", "name": "Minimal Subset Difference", "type": "PROGRAMMING", "points": 3000.0, "rating": 3200, "tags": ["dp"]}, {"contestId": 924, "index": "E", "name": "Wardrobe", "type": "PROGRAMMING", "points": 2250.0, "rating": 2700, "tags": []}, {"contestId": 924, "index": "D", "name": "Contact ATC", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": []}, {"contestId": 924, "index": "C", "name": "Riverside Curio", "type": "PROGRAMMING", "points": 1250.0, "rating": 1700, "tags": ["data structures", "dp", "greedy"]}, {"contestId": 924, "index": "B", "name": "Three-level Laser", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["binary search", "greedy", "two pointers"]}, {"contestId": 924, "index": "A", "name": "Mystical Mosaic", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["greedy", "implementation"]}, {"contestId": 923, "index": "F", "name": "Public Service", "type": "PROGRAMMING", "points": 3000.0, "rating": 3200, "tags": ["constructive algorithms", "graphs", "trees"]}, {"contestId": 923, "index": "E", "name": "Perpetual Subtraction", "type": "PROGRAMMING", "points": 2250.0, "rating": 3100, "tags": ["fft", "math", "matrices"]}, {"contestId": 923, "index": "D", "name": "Picking Strings", "type": "PROGRAMMING", "points": 1750.0, "rating": 2500, "tags": ["constructive algorithms", "implementation", "strings"]}, {"contestId": 923, "index": "C", "name": "Perfect Security", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["data structures", "greedy", "strings", "trees"]}, {"contestId": 923, "index": "B", "name": "Producing Snow", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["binary search", "data structures"]}, {"contestId": 923, "index": "A", "name": "Primal Sport", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["math", "number theory"]}, {"contestId": 922, "index": "F", "name": "Divisibility", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["constructive algorithms", "dp", "greedy", "number theory"]}, {"contestId": 922, "index": "E", "name": "Birds", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["dp"]}, {"contestId": 922, "index": "D", "name": "Robot Vacuum Cleaner", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["greedy", "sortings"]}, {"contestId": 922, "index": "C", "name": "Cave Painting", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["brute force", "number theory"]}, {"contestId": 922, "index": "B", "name": "Magic Forest", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["brute force"]}, {"contestId": 922, "index": "A", "name": "Cloning Toys", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["implementation"]}, {"contestId": 921, "index": "14", "name": "Labyrinth-14", "type": "PROGRAMMING", "rating": 3200, "tags": []}, {"contestId": 921, "index": "13", "name": "Labyrinth-13", "type": "PROGRAMMING", "rating": 3200, "tags": []}, {"contestId": 921, "index": "12", "name": "Labyrinth-12", "type": "PROGRAMMING", "rating": 3200, "tags": []}, {"contestId": 921, "index": "11", "name": "Labyrinth-11", "type": "PROGRAMMING", "rating": 3200, "tags": []}, {"contestId": 921, "index": "10", "name": "Labyrinth-10", "type": "PROGRAMMING", "rating": 3200, "tags": []}, {"contestId": 921, "index": "09", "name": "Labyrinth-9", "type": "PROGRAMMING", "rating": 3200, "tags": []}, {"contestId": 921, "index": "08", "name": "Labyrinth-8", "type": "PROGRAMMING", "rating": 3200, "tags": []}, {"contestId": 921, "index": "07", "name": "Labyrinth-7", "type": "PROGRAMMING", "rating": 3200, "tags": []}, {"contestId": 921, "index": "06", "name": "Labyrinth-6", "type": "PROGRAMMING", "rating": 3200, "tags": []}, {"contestId": 921, "index": "05", "name": "Labyrinth-5", "type": "PROGRAMMING", "rating": 3200, "tags": []}, {"contestId": 921, "index": "04", "name": "Labyrinth-4", "type": "PROGRAMMING", "rating": 3200, "tags": []}, {"contestId": 921, "index": "03", "name": "Labyrinth-3", "type": "PROGRAMMING", "rating": 3200, "tags": []}, {"contestId": 921, "index": "02", "name": "Labyrinth-2", "type": "PROGRAMMING", "rating": 3200, "tags": []}, {"contestId": 921, "index": "01", "name": "Labyrinth-1", "type": "PROGRAMMING", "rating": 3200, "tags": []}, {"contestId": 920, "index": "G", "name": "List Of Integers", "type": "PROGRAMMING", "rating": 2200, "tags": ["binary search", "bitmasks", "brute force", "combinatorics", "math", "number theory"]}, {"contestId": 920, "index": "F", "name": "SUM and REPLACE", "type": "PROGRAMMING", "rating": 2000, "tags": ["brute force", "data structures", "dsu", "number theory"]}, {"contestId": 920, "index": "E", "name": "Connected Components?", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "dfs and similar", "dsu", "graphs"]}, {"contestId": 920, "index": "D", "name": "Tanks", "type": "PROGRAMMING", "rating": 2400, "tags": ["dp", "greedy", "implementation"]}, {"contestId": 920, "index": "C", "name": "Swap Adjacent Elements", "type": "PROGRAMMING", "rating": 1400, "tags": ["dfs and similar", "greedy", "math", "sortings", "two pointers"]}, {"contestId": 920, "index": "B", "name": "Tea Queue", "type": "PROGRAMMING", "rating": 1200, "tags": ["implementation"]}, {"contestId": 920, "index": "A", "name": "Water The Garden", "type": "PROGRAMMING", "rating": 1000, "tags": ["implementation"]}, {"contestId": 919, "index": "F", "name": "A Game With Numbers", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["games", "graphs", "shortest paths"]}, {"contestId": 919, "index": "E", "name": "Congruence Equation", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["chinese remainder theorem", "math", "number theory"]}, {"contestId": 919, "index": "D", "name": "Substring", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["dfs and similar", "dp", "graphs"]}, {"contestId": 919, "index": "C", "name": "Seat Arrangements", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["brute force", "implementation"]}, {"contestId": 919, "index": "B", "name": "Perfect Number", "type": "PROGRAMMING", "points": 750.0, "rating": 1100, "tags": ["binary search", "brute force", "dp", "implementation", "number theory"]}, {"contestId": 919, "index": "A", "name": "Supermarket", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "greedy", "implementation"]}, {"contestId": 918, "index": "B", "name": "Radio Station", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["implementation", "strings"]}, {"contestId": 918, "index": "A", "name": "Eleven", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "implementation"]}, {"contestId": 917, "index": "E", "name": "Upside Down", "type": "PROGRAMMING", "points": 2750.0, "rating": 3400, "tags": ["data structures", "string suffix structures", "strings", "trees"]}, {"contestId": 917, "index": "D", "name": "Stranger Trees", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["dp", "math", "matrices", "trees"]}, {"contestId": 917, "index": "C", "name": "Pollywog", "type": "PROGRAMMING", "points": 1500.0, "rating": 2900, "tags": ["combinatorics", "dp", "matrices"]}, {"contestId": 917, "index": "B", "name": "MADMAX", "type": "PROGRAMMING", "points": 750.0, "rating": 1700, "tags": ["dfs and similar", "dp", "games", "graphs"]}, {"contestId": 917, "index": "A", "name": "The Monster", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["dp", "greedy", "implementation", "math"]}, {"contestId": 916, "index": "E", "name": "Jamie and Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures", "trees"]}, {"contestId": 916, "index": "D", "name": "Jamie and To-do List", "type": "PROGRAMMING", "points": 2250.0, "rating": 2200, "tags": ["data structures", "interactive", "trees"]}, {"contestId": 916, "index": "C", "name": "Jamie and Interesting Graph", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["constructive algorithms", "graphs", "shortest paths"]}, {"contestId": 916, "index": "B", "name": "Jamie and Binary Sequence (changed after round)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["bitmasks", "greedy", "math"]}, {"contestId": 916, "index": "A", "name": "Jamie and Alarm Snooze", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["brute force", "implementation", "math"]}, {"contestId": 915, "index": "G", "name": "Coprime Arrays", "type": "PROGRAMMING", "rating": 2300, "tags": ["math", "number theory"]}, {"contestId": 915, "index": "F", "name": "Imbalance Value of a Tree", "type": "PROGRAMMING", "rating": 2400, "tags": ["data structures", "dsu", "graphs", "trees"]}, {"contestId": 915, "index": "E", "name": "Physical Education Lessons", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "implementation", "sortings"]}, {"contestId": 915, "index": "D", "name": "Almost Acyclic Graph", "type": "PROGRAMMING", "rating": 2200, "tags": ["dfs and similar", "graphs"]}, {"contestId": 915, "index": "C", "name": "Permute Digits", "type": "PROGRAMMING", "rating": 1700, "tags": ["dp", "greedy"]}, {"contestId": 915, "index": "B", "name": "Browser", "type": "PROGRAMMING", "rating": 1300, "tags": ["implementation"]}, {"contestId": 915, "index": "A", "name": "Garden", "type": "PROGRAMMING", "rating": 900, "tags": ["implementation"]}, {"contestId": 914, "index": "H", "name": "Ember and Storm's Tree Game", "type": "PROGRAMMING", "points": 3750.0, "rating": 3400, "tags": ["combinatorics", "dp", "games", "trees"]}, {"contestId": 914, "index": "G", "name": "Sum the Fibonacci", "type": "PROGRAMMING", "points": 3500.0, "rating": 2600, "tags": ["bitmasks", "divide and conquer", "dp", "fft", "math"]}, {"contestId": 914, "index": "F", "name": "Substrings in a String", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["bitmasks", "brute force", "data structures", "string suffix structures", "strings"]}, {"contestId": 914, "index": "E", "name": "Palindromes in a Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["bitmasks", "data structures", "divide and conquer", "trees"]}, {"contestId": 914, "index": "D", "name": "Bash and a Tough Math Puzzle", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["data structures", "number theory"]}, {"contestId": 914, "index": "C", "name": "Travelling Salesman and Special Numbers", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["brute force", "combinatorics", "dp"]}, {"contestId": 914, "index": "B", "name": "Conan and Agasa play a Card Game", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["games", "greedy", "implementation"]}, {"contestId": 914, "index": "A", "name": "Perfect Squares", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["brute force", "implementation", "math"]}, {"contestId": 913, "index": "H", "name": "Don't Exceed", "type": "PROGRAMMING", "points": 3500.0, "rating": 3400, "tags": ["math", "probabilities"]}, {"contestId": 913, "index": "G", "name": "Power Substring", "type": "PROGRAMMING", "points": 3000.0, "rating": 3200, "tags": ["math", "number theory"]}, {"contestId": 913, "index": "F", "name": "Strongly Connected Tournament", "type": "PROGRAMMING", "points": 2250.0, "rating": 2800, "tags": ["dp", "graphs", "math", "probabilities"]}, {"contestId": 913, "index": "E", "name": "Logical Expression", "type": "PROGRAMMING", "points": 1750.0, "rating": 2400, "tags": ["bitmasks", "dp", "shortest paths"]}, {"contestId": 913, "index": "D", "name": "Too Easy Problems", "type": "PROGRAMMING", "points": 1250.0, "rating": 1800, "tags": ["binary search", "brute force", "data structures", "greedy", "sortings"]}, {"contestId": 913, "index": "C", "name": "Party Lemonade", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["bitmasks", "dp", "greedy"]}, {"contestId": 913, "index": "B", "name": "Christmas Spruce", "type": "PROGRAMMING", "points": 750.0, "rating": 1200, "tags": ["implementation", "trees"]}, {"contestId": 913, "index": "A", "name": "Modular Exponentiation", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation", "math"]}, {"contestId": 912, "index": "E", "name": "Prime Gift", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["binary search", "dfs and similar", "math", "meet-in-the-middle", "number theory", "two pointers"]}, {"contestId": 912, "index": "D", "name": "Fishes", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["data structures", "graphs", "greedy", "probabilities", "shortest paths"]}, {"contestId": 912, "index": "C", "name": "Perun, Ult!", "type": "PROGRAMMING", "points": 1750.0, "rating": 2500, "tags": ["brute force", "greedy", "sortings"]}, {"contestId": 912, "index": "B", "name": "New Year's Eve", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["bitmasks", "constructive algorithms", "number theory"]}, {"contestId": 912, "index": "A", "name": "Tricky Alchemy", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 911, "index": "G", "name": "Mass Change Queries", "type": "PROGRAMMING", "rating": 2500, "tags": ["data structures"]}, {"contestId": 911, "index": "F", "name": "Tree Destruction", "type": "PROGRAMMING", "rating": 2400, "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy", "trees"]}, {"contestId": 911, "index": "E", "name": "Stack Sorting", "type": "PROGRAMMING", "rating": 2000, "tags": ["constructive algorithms", "data structures", "greedy", "implementation"]}, {"contestId": 911, "index": "D", "name": "Inversion Counting", "type": "PROGRAMMING", "rating": 1800, "tags": ["brute force", "math"]}, {"contestId": 911, "index": "C", "name": "Three Garlands", "type": "PROGRAMMING", "rating": 1400, "tags": ["brute force", "constructive algorithms"]}, {"contestId": 911, "index": "B", "name": "Two Cakes", "type": "PROGRAMMING", "rating": 1200, "tags": ["binary search", "brute force", "implementation"]}, {"contestId": 911, "index": "A", "name": "Nearest Minimums", "type": "PROGRAMMING", "rating": 1100, "tags": ["implementation"]}, {"contestId": 910, "index": "C", "name": "Minimum Sum", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["constructive algorithms", "greedy", "math"]}, {"contestId": 910, "index": "B", "name": "Door Frames", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["greedy", "implementation"]}, {"contestId": 910, "index": "A", "name": "The Way to Home", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["dfs and similar", "dp", "greedy", "implementation"]}, {"contestId": 909, "index": "F", "name": "AND-permutations", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["constructive algorithms"]}, {"contestId": 909, "index": "E", "name": "Coprocessor", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["dfs and similar", "dp", "graphs", "greedy"]}, {"contestId": 909, "index": "D", "name": "Colorful Points", "type": "PROGRAMMING", "points": 1750.0, "rating": 2100, "tags": ["data structures", "greedy", "implementation"]}, {"contestId": 909, "index": "C", "name": "Python Indentation", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["dp"]}, {"contestId": 909, "index": "B", "name": "Segments", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["constructive algorithms", "math"]}, {"contestId": 909, "index": "A", "name": "Generate Login", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["brute force", "greedy", "sortings"]}, {"contestId": 908, "index": "H", "name": "New Year and Boolean Bridges", "type": "PROGRAMMING", "points": 3500.0, "rating": 3100, "tags": []}, {"contestId": 908, "index": "G", "name": "New Year and Original Order", "type": "PROGRAMMING", "points": 2750.0, "rating": 2800, "tags": ["dp", "math"]}, {"contestId": 908, "index": "F", "name": "New Year and Rainbow Roads", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["graphs", "greedy", "implementation"]}, {"contestId": 908, "index": "E", "name": "New Year and Entity Enumeration", "type": "PROGRAMMING", "points": 1750.0, "rating": 2500, "tags": ["bitmasks", "combinatorics", "dp", "math"]}, {"contestId": 908, "index": "D", "name": "New Year and Arbitrary Arrangement", "type": "PROGRAMMING", "points": 1750.0, "rating": 2200, "tags": ["dp", "math", "probabilities"]}, {"contestId": 908, "index": "C", "name": "New Year and Curling", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["brute force", "geometry", "implementation", "math"]}, {"contestId": 908, "index": "B", "name": "New Year and Buggy Bot", "type": "PROGRAMMING", "points": 750.0, "rating": 1200, "tags": ["brute force", "implementation"]}, {"contestId": 908, "index": "A", "name": "New Year and Counting Cards", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "implementation"]}, {"contestId": 907, "index": "B", "name": "Tic-Tac-Toe", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["implementation"]}, {"contestId": 907, "index": "A", "name": "Masha and Bears", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["brute force", "implementation"]}, {"contestId": 906, "index": "E", "name": "Reverses", "type": "PROGRAMMING", "points": 2500.0, "rating": 3300, "tags": ["dp", "string suffix structures", "strings"]}, {"contestId": 906, "index": "D", "name": "Power Tower", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["chinese remainder theorem", "math", "number theory"]}, {"contestId": 906, "index": "C", "name": "Party", "type": "PROGRAMMING", "points": 1250.0, "rating": 2400, "tags": ["bitmasks", "brute force", "dp", "graphs"]}, {"contestId": 906, "index": "B", "name": "Seating of Students", "type": "PROGRAMMING", "points": 1250.0, "rating": 2200, "tags": ["brute force", "constructive algorithms", "math"]}, {"contestId": 906, "index": "A", "name": "Shockers", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["implementation", "strings"]}, {"contestId": 903, "index": "G", "name": "Yet Another Maxflow Problem", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "flows", "graphs"]}, {"contestId": 903, "index": "F", "name": "Clear The Matrix", "type": "PROGRAMMING", "rating": 2200, "tags": ["bitmasks", "dp"]}, {"contestId": 903, "index": "E", "name": "Swapping Characters", "type": "PROGRAMMING", "rating": 2200, "tags": ["brute force", "hashing", "implementation", "strings"]}, {"contestId": 903, "index": "D", "name": "Almost Difference", "type": "PROGRAMMING", "rating": 2200, "tags": ["data structures", "math"]}, {"contestId": 903, "index": "C", "name": "Boxes Packing", "type": "PROGRAMMING", "rating": 1200, "tags": ["greedy"]}, {"contestId": 903, "index": "B", "name": "The Modcrab", "type": "PROGRAMMING", "rating": 1200, "tags": ["greedy", "implementation"]}, {"contestId": 903, "index": "A", "name": "Hungry Student Problem", "type": "PROGRAMMING", "rating": 900, "tags": ["greedy", "implementation"]}, {"contestId": 902, "index": "B", "name": "Coloring a Tree", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["dfs and similar", "dsu", "greedy"]}, {"contestId": 902, "index": "A", "name": "Visiting a Friend", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["greedy", "implementation"]}, {"contestId": 901, "index": "E", "name": "Cyclic Cipher", "type": "PROGRAMMING", "points": 2500.0, "rating": 3300, "tags": ["fft", "math"]}, {"contestId": 901, "index": "D", "name": "Weighting a Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["constructive algorithms", "dfs and similar", "graphs"]}, {"contestId": 901, "index": "C", "name": "Bipartite Segments", "type": "PROGRAMMING", "points": 1750.0, "rating": 2300, "tags": ["binary search", "data structures", "dfs and similar", "dsu", "graphs", "two pointers"]}, {"contestId": 901, "index": "B", "name": "GCD of Polynomials", "type": "PROGRAMMING", "points": 1000.0, "rating": 2200, "tags": ["constructive algorithms", "math"]}, {"contestId": 901, "index": "A", "name": "Hashing Trees", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["constructive algorithms", "trees"]}, {"contestId": 900, "index": "E", "name": "Maximum Questions", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["data structures", "dp", "strings"]}, {"contestId": 900, "index": "D", "name": "Unusual Sequences", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["bitmasks", "combinatorics", "dp", "math", "number theory"]}, {"contestId": 900, "index": "C", "name": "Remove Extra One", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["brute force", "data structures", "math"]}, {"contestId": 900, "index": "B", "name": "Position in Fraction", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["math", "number theory"]}, {"contestId": 900, "index": "A", "name": "Find Extra One", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["geometry", "implementation"]}, {"contestId": 899, "index": "F", "name": "Letters Removing", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["data structures", "strings"]}, {"contestId": 899, "index": "E", "name": "Segments Removal", "type": "PROGRAMMING", "points": 2250.0, "rating": 2000, "tags": ["data structures", "dsu", "flows", "implementation", "two pointers"]}, {"contestId": 899, "index": "D", "name": "Shovel Sale", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["constructive algorithms", "math"]}, {"contestId": 899, "index": "C", "name": "Dividing the numbers", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["constructive algorithms", "graphs", "math"]}, {"contestId": 899, "index": "B", "name": "Months and Years", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["implementation"]}, {"contestId": 899, "index": "A", "name": "Splitting in Teams", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "greedy", "math"]}, {"contestId": 898, "index": "F", "name": "Restoring the Expression", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["brute force", "hashing", "math"]}, {"contestId": 898, "index": "E", "name": "Squares and not squares", "type": "PROGRAMMING", "points": 2000.0, "rating": 1600, "tags": ["constructive algorithms", "greedy"]}, {"contestId": 898, "index": "D", "name": "Alarm Clock", "type": "PROGRAMMING", "points": 1750.0, "rating": 1600, "tags": ["greedy"]}, {"contestId": 898, "index": "C", "name": "Phone Numbers", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["implementation", "strings"]}, {"contestId": 898, "index": "B", "name": "Proper Nutrition", "type": "PROGRAMMING", "points": 750.0, "rating": 1100, "tags": ["brute force", "implementation", "number theory"]}, {"contestId": 898, "index": "A", "name": "Rounding", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "math"]}, {"contestId": 897, "index": "B", "name": "Chtholly's request", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["brute force"]}, {"contestId": 897, "index": "A", "name": "Scarborough Fair", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 896, "index": "E", "name": "Welcome home, Chtholly", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["data structures", "dsu"]}, {"contestId": 896, "index": "D", "name": "Nephren Runs a Cinema", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["chinese remainder theorem", "combinatorics", "math", "number theory"]}, {"contestId": 896, "index": "C", "name": "Willem, Chtholly and Seniorious", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["data structures", "probabilities"]}, {"contestId": 896, "index": "B", "name": "Ithea Plays With Chtholly", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["binary search", "constructive algorithms", "games", "greedy", "interactive"]}, {"contestId": 896, "index": "A", "name": "Nephren gives a riddle", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["binary search", "dfs and similar"]}, {"contestId": 895, "index": "E", "name": "Eyes Closed", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["data structures", "probabilities"]}, {"contestId": 895, "index": "D", "name": "String Mark", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["combinatorics", "math", "strings"]}, {"contestId": 895, "index": "C", "name": "Square Subsets", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["bitmasks", "combinatorics", "dp", "math"]}, {"contestId": 895, "index": "B", "name": "XK Segments", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["binary search", "math", "sortings", "two pointers"]}, {"contestId": 895, "index": "A", "name": "Pizza Separation", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["brute force", "implementation"]}, {"contestId": 894, "index": "E", "name": "Ralph and Mushrooms", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["dp", "graphs"]}, {"contestId": 894, "index": "D", "name": "Ralph And His Tour in Binary Country", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["brute force", "data structures", "trees"]}, {"contestId": 894, "index": "C", "name": "Marco and GCD Sequence", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["constructive algorithms", "math"]}, {"contestId": 894, "index": "B", "name": "Ralph And His Magic Field", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["combinatorics", "constructive algorithms", "math", "number theory"]}, {"contestId": 894, "index": "A", "name": "QAQ", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "dp"]}, {"contestId": 893, "index": "F", "name": "Subtree Minimum Query", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "trees"]}, {"contestId": 893, "index": "E", "name": "Counting Arrays", "type": "PROGRAMMING", "rating": 2000, "tags": ["combinatorics", "dp", "math", "number theory"]}, {"contestId": 893, "index": "D", "name": "Credit Card", "type": "PROGRAMMING", "rating": 1900, "tags": ["data structures", "dp", "greedy", "implementation"]}, {"contestId": 893, "index": "C", "name": "Rumor", "type": "PROGRAMMING", "rating": 1300, "tags": ["dfs and similar", "graphs", "greedy"]}, {"contestId": 893, "index": "B", "name": "Beautiful Divisors", "type": "PROGRAMMING", "rating": 1000, "tags": ["brute force", "implementation"]}, {"contestId": 893, "index": "A", "name": "Chess For Three", "type": "PROGRAMMING", "rating": 900, "tags": ["implementation"]}, {"contestId": 892, "index": "B", "name": "Wrath", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["greedy", "implementation", "two pointers"]}, {"contestId": 892, "index": "A", "name": "Greed", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["greedy", "implementation"]}, {"contestId": 891, "index": "E", "name": "Lust", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["combinatorics", "math", "matrices"]}, {"contestId": 891, "index": "D", "name": "Sloth", "type": "PROGRAMMING", "points": 2000.0, "rating": 3100, "tags": ["dfs and similar", "dp", "graph matchings", "trees"]}, {"contestId": 891, "index": "C", "name": "Envy", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["data structures", "dsu", "graphs"]}, {"contestId": 891, "index": "B", "name": "Gluttony", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["constructive algorithms", "greedy"]}, {"contestId": 891, "index": "A", "name": "Pride", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["brute force", "dp", "greedy", "math", "number theory"]}, {"contestId": 889, "index": "E", "name": "Mod Mod Mod", "type": "PROGRAMMING", "points": 2250.0, "rating": 3000, "tags": ["binary search", "dp", "math"]}, {"contestId": 888, "index": "G", "name": "Xor-MST", "type": "PROGRAMMING", "rating": 2300, "tags": ["bitmasks", "constructive algorithms", "data structures"]}, {"contestId": 888, "index": "F", "name": "Connecting Vertices", "type": "PROGRAMMING", "rating": 2500, "tags": ["dp", "graphs"]}, {"contestId": 888, "index": "E", "name": "Maximum Subsequence", "type": "PROGRAMMING", "rating": 1800, "tags": ["bitmasks", "divide and conquer", "meet-in-the-middle"]}, {"contestId": 888, "index": "D", "name": "Almost Identity Permutations", "type": "PROGRAMMING", "rating": 1600, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 888, "index": "C", "name": "K-Dominant Character", "type": "PROGRAMMING", "rating": 1400, "tags": ["binary search", "implementation", "two pointers"]}, {"contestId": 888, "index": "B", "name": "Buggy Robot", "type": "PROGRAMMING", "rating": 1000, "tags": ["greedy"]}, {"contestId": 888, "index": "A", "name": "Local Extrema", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "implementation"]}, {"contestId": 887, "index": "F", "name": "Row of Models", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["greedy", "sortings"]}, {"contestId": 887, "index": "E", "name": "Little Brother", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["binary search", "geometry", "sortings"]}, {"contestId": 887, "index": "D", "name": "Ratings and Reality Shows", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["data structures", "two pointers"]}, {"contestId": 887, "index": "C", "name": "Solution for Cube", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["brute force", "implementation"]}, {"contestId": 887, "index": "B", "name": "Cubes for Masha", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["brute force", "implementation"]}, {"contestId": 887, "index": "A", "name": "Div. 64", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"]}, {"contestId": 886, "index": "F", "name": "Symmetric Projections", "type": "PROGRAMMING", "points": 3000.0, "rating": 2900, "tags": ["geometry"]}, {"contestId": 886, "index": "E", "name": "Maximum Element", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 886, "index": "D", "name": "Restoration of string", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["constructive algorithms", "graphs", "implementation"]}, {"contestId": 886, "index": "C", "name": "Petya and Catacombs", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["dsu", "greedy", "implementation", "trees"]}, {"contestId": 886, "index": "B", "name": "Vlad and Cafes", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": []}, {"contestId": 886, "index": "A", "name": "ACM ICPC", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["brute force"]}, {"contestId": 884, "index": "F", "name": "Anti-Palindromize", "type": "PROGRAMMING", "rating": 2500, "tags": ["flows", "graphs", "greedy"]}, {"contestId": 884, "index": "E", "name": "Binary Matrix", "type": "PROGRAMMING", "rating": 2500, "tags": ["dsu"]}, {"contestId": 884, "index": "D", "name": "Boxes And Balls", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "greedy"]}, {"contestId": 884, "index": "C", "name": "Bertown Subway", "type": "PROGRAMMING", "rating": 1500, "tags": ["dfs and similar", "greedy", "math"]}, {"contestId": 884, "index": "B", "name": "Japanese Crosswords Strike Back", "type": "PROGRAMMING", "rating": 1100, "tags": ["implementation"]}, {"contestId": 884, "index": "A", "name": "Book Reading", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"]}, {"contestId": 883, "index": "M", "name": "Quadcopter Competition", "type": "PROGRAMMING", "rating": 1100, "tags": ["greedy", "math"]}, {"contestId": 883, "index": "L", "name": "Berland.Taxi", "type": "PROGRAMMING", "rating": 2500, "tags": ["data structures"]}, {"contestId": 883, "index": "K", "name": "Road Widening", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "greedy", "implementation"]}, {"contestId": 883, "index": "J", "name": "Renovation", "type": "PROGRAMMING", "rating": 2400, "tags": ["constructive algorithms", "greedy", "sortings"]}, {"contestId": 883, "index": "I", "name": "Photo Processing", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "dp"]}, {"contestId": 883, "index": "H", "name": "Palindromic Cut", "type": "PROGRAMMING", "rating": 1800, "tags": ["brute force", "implementation", "strings"]}, {"contestId": 883, "index": "G", "name": "Orientation of Edges", "type": "PROGRAMMING", "rating": 1900, "tags": ["dfs and similar", "graphs"]}, {"contestId": 883, "index": "F", "name": "Lost in Transliteration", "type": "PROGRAMMING", "rating": 1300, "tags": ["implementation"]}, {"contestId": 883, "index": "E", "name": "Field of Wonders", "type": "PROGRAMMING", "rating": 1500, "tags": ["implementation", "strings"]}, {"contestId": 883, "index": "D", "name": "Packmen Strike Back", "type": "PROGRAMMING", "rating": 2500, "tags": ["binary search", "dp", "math"]}, {"contestId": 883, "index": "C", "name": "Downloading B++", "type": "PROGRAMMING", "rating": 2300, "tags": ["binary search"]}, {"contestId": 883, "index": "B", "name": "Berland Army", "type": "PROGRAMMING", "rating": 2600, "tags": ["constructive algorithms", "graphs", "greedy"]}, {"contestId": 883, "index": "A", "name": "Automatic Door", "type": "PROGRAMMING", "rating": 2200, "tags": ["implementation"]}, {"contestId": 879, "index": "B", "name": "Table Tennis", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["data structures", "implementation"]}, {"contestId": 879, "index": "A", "name": "Borya's Diagnosis", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation"]}, {"contestId": 878, "index": "E", "name": "Numbers on the blackboard", "type": "PROGRAMMING", "points": 2500.0, "rating": 3300, "tags": ["combinatorics", "dp"]}, {"contestId": 878, "index": "D", "name": "Magic Breeding", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["bitmasks"]}, {"contestId": 878, "index": "C", "name": "Tournament", "type": "PROGRAMMING", "points": 1250.0, "rating": 2700, "tags": ["data structures", "graphs"]}, {"contestId": 878, "index": "B", "name": "Teams Formation", "type": "PROGRAMMING", "points": 1250.0, "rating": 2300, "tags": ["data structures", "implementation"]}, {"contestId": 878, "index": "A", "name": "Short Program", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["bitmasks", "constructive algorithms"]}, {"contestId": 877, "index": "F", "name": "Ann and Books", "type": "PROGRAMMING", "points": 2750.0, "rating": 2300, "tags": ["data structures", "flows", "hashing"]}, {"contestId": 877, "index": "E", "name": "Danil and a Part-time Job", "type": "PROGRAMMING", "points": 2250.0, "rating": 2000, "tags": ["bitmasks", "data structures", "trees"]}, {"contestId": 877, "index": "D", "name": "Olya and Energy Drinks", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["data structures", "dfs and similar", "graphs", "shortest paths"]}, {"contestId": 877, "index": "C", "name": "Slava and tanks", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["constructive algorithms"]}, {"contestId": 877, "index": "B", "name": "Nikita and string", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["brute force", "dp"]}, {"contestId": 877, "index": "A", "name": "Alex and broken contest", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["implementation", "strings"]}, {"contestId": 876, "index": "B", "name": "Divisiblity of Differences", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["implementation", "math", "number theory"]}, {"contestId": 876, "index": "A", "name": "Trip For Meal", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["math"]}, {"contestId": 875, "index": "F", "name": "Royal Questions", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["dsu", "graphs", "greedy"]}, {"contestId": 875, "index": "E", "name": "Delivery Club", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["binary search", "data structures", "dp"]}, {"contestId": 875, "index": "D", "name": "High Cry", "type": "PROGRAMMING", "points": 1750.0, "rating": 2200, "tags": ["binary search", "bitmasks", "combinatorics", "data structures", "divide and conquer"]}, {"contestId": 875, "index": "C", "name": "National Property", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["2-sat", "dfs and similar", "graphs", "implementation"]}, {"contestId": 875, "index": "B", "name": "Sorting the Coins", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["dsu", "implementation", "sortings", "two pointers"]}, {"contestId": 875, "index": "A", "name": "Classroom Watch", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["brute force", "math"]}, {"contestId": 873, "index": "F", "name": "Forbidden Indices", "type": "PROGRAMMING", "rating": 2400, "tags": ["dsu", "string suffix structures", "strings"]}, {"contestId": 873, "index": "E", "name": "Awards For Contestants", "type": "PROGRAMMING", "rating": 2300, "tags": ["brute force", "data structures", "dp"]}, {"contestId": 873, "index": "D", "name": "Merge Sort", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "divide and conquer"]}, {"contestId": 873, "index": "C", "name": "Strange Game On Matrix", "type": "PROGRAMMING", "rating": 1600, "tags": ["greedy", "two pointers"]}, {"contestId": 873, "index": "B", "name": "Balanced Substring", "type": "PROGRAMMING", "rating": 1500, "tags": ["dp", "implementation"]}, {"contestId": 873, "index": "A", "name": "Chores", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"]}, {"contestId": 871, "index": "E", "name": "Restore the Tree", "type": "PROGRAMMING", "points": 2250.0, "rating": 2900, "tags": ["graphs", "greedy", "trees"]}, {"contestId": 870, "index": "F", "name": "Paths", "type": "PROGRAMMING", "points": 3250.0, "rating": 2700, "tags": ["data structures", "number theory"]}, {"contestId": 870, "index": "E", "name": "Points, Lines and Ready-made Titles", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["dfs and similar", "dsu", "graphs", "trees"]}, {"contestId": 870, "index": "D", "name": "Something with XOR Queries", "type": "PROGRAMMING", "points": 2250.0, "rating": 2000, "tags": ["brute force", "interactive", "probabilities"]}, {"contestId": 870, "index": "C", "name": "Maximum splitting", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["dp", "greedy", "math", "number theory"]}, {"contestId": 870, "index": "B", "name": "Maximum of Maximums of Minimums", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["greedy"]}, {"contestId": 870, "index": "A", "name": "Search for Pretty Integers", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["brute force", "implementation"]}, {"contestId": 869, "index": "E", "name": "The Untended Antiquity", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures", "hashing"]}, {"contestId": 869, "index": "D", "name": "The Overdosing Ubiquity", "type": "PROGRAMMING", "points": 2250.0, "rating": 2800, "tags": ["brute force", "dfs and similar", "graphs"]}, {"contestId": 869, "index": "C", "name": "The Intriguing Obsession", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 869, "index": "B", "name": "The Eternal Immortality", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["math"]}, {"contestId": 869, "index": "A", "name": "The Artful Expedient", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["brute force", "implementation"]}, {"contestId": 868, "index": "G", "name": "El Toll Caves", "type": "PROGRAMMING", "points": 3500.0, "rating": 3300, "tags": ["math"]}, {"contestId": 868, "index": "F", "name": "Yet Another Minimization Problem", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["divide and conquer", "dp"]}, {"contestId": 868, "index": "E", "name": "Policeman and a Tree", "type": "PROGRAMMING", "points": 2250.0, "rating": 2700, "tags": ["dp", "graphs", "trees"]}, {"contestId": 868, "index": "D", "name": "Huge Strings", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["bitmasks", "brute force", "dp", "implementation", "strings"]}, {"contestId": 868, "index": "C", "name": "Qualification Rounds", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["bitmasks", "brute force", "constructive algorithms", "dp"]}, {"contestId": 868, "index": "B", "name": "Race Against Time", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["implementation"]}, {"contestId": 868, "index": "A", "name": "Bark to Unlock", "type": "PROGRAMMING", "points": 250.0, "rating": 900, "tags": ["brute force", "implementation", "strings"]}, {"contestId": 867, "index": "A", "name": "Between the Offices", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 865, "index": "G", "name": "Flowers and Chocolate", "type": "PROGRAMMING", "points": 3500.0, "rating": 3300, "tags": ["combinatorics", "math", "matrices"]}, {"contestId": 865, "index": "F", "name": "Egg Roulette", "type": "PROGRAMMING", "points": 3000.0, "rating": 3300, "tags": ["bitmasks", "brute force", "divide and conquer", "math", "meet-in-the-middle"]}, {"contestId": 865, "index": "E", "name": "Hex Dyslexia", "type": "PROGRAMMING", "points": 2500.0, "rating": 3300, "tags": ["bitmasks", "brute force", "dp", "graphs"]}, {"contestId": 865, "index": "D", "name": "Buy Low Sell High", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["constructive algorithms", "data structures", "greedy"]}, {"contestId": 865, "index": "C", "name": "Gotta Go Fast", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["binary search", "dp"]}, {"contestId": 865, "index": "B", "name": "Ordering Pizza", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["binary search", "sortings", "ternary search"]}, {"contestId": 865, "index": "A", "name": "Save the problem!", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["constructive algorithms"]}, {"contestId": 864, "index": "F", "name": "Cities Excursions", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["dfs and similar", "graphs", "trees"]}, {"contestId": 864, "index": "E", "name": "Fire", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["dp", "sortings"]}, {"contestId": 864, "index": "D", "name": "Make a Permutation!", "type": "PROGRAMMING", "points": 2000.0, "rating": 1500, "tags": ["greedy", "implementation", "math"]}, {"contestId": 864, "index": "C", "name": "Bus", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["greedy", "implementation", "math"]}, {"contestId": 864, "index": "B", "name": "Polycarp and Letters", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["brute force", "implementation", "strings"]}, {"contestId": 864, "index": "A", "name": "Fair Game", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation", "sortings"]}, {"contestId": 863, "index": "G", "name": "Graphic Settings", "type": "PROGRAMMING", "rating": 3200, "tags": []}, {"contestId": 863, "index": "F", "name": "Almost Permutation", "type": "PROGRAMMING", "rating": 2200, "tags": ["flows"]}, {"contestId": 863, "index": "E", "name": "Turn Off The TV", "type": "PROGRAMMING", "rating": 2000, "tags": ["data structures", "sortings"]}, {"contestId": 863, "index": "D", "name": "Yet Another Array Queries Problem", "type": "PROGRAMMING", "rating": 1800, "tags": ["data structures", "implementation"]}, {"contestId": 863, "index": "C", "name": "1-2-3", "type": "PROGRAMMING", "rating": 1800, "tags": ["graphs", "implementation"]}, {"contestId": 863, "index": "B", "name": "Kayaking", "type": "PROGRAMMING", "rating": 1500, "tags": ["brute force", "greedy", "sortings"]}, {"contestId": 863, "index": "A", "name": "Quasi-palindrome", "type": "PROGRAMMING", "rating": 900, "tags": ["brute force", "implementation"]}, {"contestId": 862, "index": "F", "name": "Mahmoud and Ehab and the final stage", "type": "PROGRAMMING", "points": 2750.0, "rating": 2900, "tags": ["data structures", "strings"]}, {"contestId": 862, "index": "E", "name": "Mahmoud and Ehab and the function", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["binary search", "data structures", "sortings"]}, {"contestId": 862, "index": "D", "name": "Mahmoud and Ehab and the binary string", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["binary search", "divide and conquer", "interactive"]}, {"contestId": 862, "index": "C", "name": "Mahmoud and Ehab and the xor", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["constructive algorithms"]}, {"contestId": 862, "index": "B", "name": "Mahmoud and Ehab and the bipartiteness", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["dfs and similar", "graphs", "trees"]}, {"contestId": 862, "index": "A", "name": "Mahmoud and Ehab and the MEX", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["greedy", "implementation"]}, {"contestId": 860, "index": "E", "name": "Arkady and a Nobody-men", "type": "PROGRAMMING", "points": 2250.0, "rating": 2700, "tags": ["data structures", "dfs and similar", "trees"]}, {"contestId": 859, "index": "G", "name": "Circle of Numbers", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["math"]}, {"contestId": 859, "index": "F", "name": "Ordering T-Shirts", "type": "PROGRAMMING", "points": 2750.0, "rating": 2800, "tags": ["greedy"]}, {"contestId": 859, "index": "E", "name": "Desk Disorder", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["combinatorics", "dfs and similar", "dsu", "graphs", "trees"]}, {"contestId": 859, "index": "D", "name": "Third Month Insanity", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["dp", "probabilities", "trees"]}, {"contestId": 859, "index": "C", "name": "Pie Rules", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["dp", "games"]}, {"contestId": 859, "index": "B", "name": "Lazy Security Guard", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["brute force", "geometry", "math"]}, {"contestId": 859, "index": "A", "name": "Declined Finalists", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "implementation"]}, {"contestId": 858, "index": "F", "name": "Wizard's Tour", "type": "PROGRAMMING", "points": 3000.0, "rating": 2300, "tags": ["constructive algorithms", "dfs and similar", "graphs"]}, {"contestId": 858, "index": "E", "name": "Tests Renumeration", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["greedy", "implementation"]}, {"contestId": 858, "index": "D", "name": "Polycarp's phone book", "type": "PROGRAMMING", "points": 2000.0, "rating": 1600, "tags": ["data structures", "implementation", "sortings"]}, {"contestId": 858, "index": "C", "name": "Did you mean...", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["dp", "greedy", "implementation"]}, {"contestId": 858, "index": "B", "name": "Which floor?", "type": "PROGRAMMING", "points": 750.0, "rating": 1500, "tags": ["brute force", "implementation"]}, {"contestId": 858, "index": "A", "name": "k-rounding", "type": "PROGRAMMING", "points": 750.0, "rating": 1100, "tags": ["brute force", "math", "number theory"]}, {"contestId": 856, "index": "F", "name": "To Play or not to Play", "type": "PROGRAMMING", "rating": 3000, "tags": ["greedy"]}, {"contestId": 856, "index": "E", "name": "Satellites", "type": "PROGRAMMING", "rating": 3100, "tags": []}, {"contestId": 856, "index": "D", "name": "Masha and Cactus", "type": "PROGRAMMING", "rating": 2400, "tags": ["dp", "trees"]}, {"contestId": 856, "index": "C", "name": "Eleventh Birthday", "type": "PROGRAMMING", "rating": 2400, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 856, "index": "B", "name": "Similar Words", "type": "PROGRAMMING", "rating": 2300, "tags": ["dp", "strings"]}, {"contestId": 856, "index": "A", "name": "Set Theory", "type": "PROGRAMMING", "rating": 1600, "tags": ["brute force", "constructive algorithms"]}, {"contestId": 855, "index": "G", "name": "Harry Vs Voldemort", "type": "PROGRAMMING", "points": 3500.0, "rating": 3300, "tags": ["dfs and similar", "dp", "graphs", "trees"]}, {"contestId": 855, "index": "F", "name": "Nagini", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["binary search", "data structures"]}, {"contestId": 855, "index": "E", "name": "Salazar Slytherin's Locket", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["bitmasks", "dp"]}, {"contestId": 855, "index": "D", "name": "Rowena Ravenclaw's Diadem", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["trees"]}, {"contestId": 855, "index": "C", "name": "Helga Hufflepuff's Cup", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["dp", "trees"]}, {"contestId": 855, "index": "B", "name": "Marvolo Gaunt's Ring", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["brute force", "data structures", "dp"]}, {"contestId": 855, "index": "A", "name": "Tom Riddle's Diary", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "implementation", "strings"]}, {"contestId": 854, "index": "B", "name": "Maxim Buys an Apartment", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "math"]}, {"contestId": 854, "index": "A", "name": "Fraction", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "constructive algorithms", "math"]}, {"contestId": 853, "index": "E", "name": "Lada Malina", "type": "PROGRAMMING", "points": 2500.0, "rating": 3400, "tags": ["data structures", "geometry"]}, {"contestId": 853, "index": "D", "name": "Michael and Charging Stations", "type": "PROGRAMMING", "points": 1750.0, "rating": 2400, "tags": ["binary search", "dp", "greedy"]}, {"contestId": 853, "index": "C", "name": "Boredom", "type": "PROGRAMMING", "points": 1750.0, "rating": 2100, "tags": ["data structures"]}, {"contestId": 853, "index": "B", "name": "Jury Meeting", "type": "PROGRAMMING", "points": 750.0, "rating": 1800, "tags": ["greedy", "sortings", "two pointers"]}, {"contestId": 853, "index": "A", "name": "Planning", "type": "PROGRAMMING", "points": 750.0, "rating": 1500, "tags": ["greedy"]}, {"contestId": 852, "index": "I", "name": "Dating", "type": "PROGRAMMING", "rating": 2300, "tags": ["brute force", "dfs and similar", "graphs", "trees"]}, {"contestId": 852, "index": "H", "name": "Bob and stages", "type": "PROGRAMMING", "rating": 3000, "tags": ["dp", "geometry"]}, {"contestId": 852, "index": "G", "name": "Bathroom terminal", "type": "PROGRAMMING", "rating": 1700, "tags": ["implementation"]}, {"contestId": 852, "index": "F", "name": "Product transformation", "type": "PROGRAMMING", "rating": 2200, "tags": ["combinatorics", "math", "number theory"]}, {"contestId": 852, "index": "E", "name": "Casinos and travel", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp"]}, {"contestId": 852, "index": "D", "name": "Exploration plan", "type": "PROGRAMMING", "rating": 2100, "tags": ["binary search", "flows", "graph matchings", "shortest paths"]}, {"contestId": 852, "index": "C", "name": "Property", "type": "PROGRAMMING", "rating": 2100, "tags": ["greedy", "sortings"]}, {"contestId": 852, "index": "B", "name": "Neural Network country", "type": "PROGRAMMING", "rating": 2000, "tags": ["dp", "matrices"]}, {"contestId": 852, "index": "A", "name": "Digits", "type": "PROGRAMMING", "rating": 2500, "tags": ["brute force", "implementation", "math"]}, {"contestId": 851, "index": "B", "name": "Arpa and an exam about geometry", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["geometry", "math"]}, {"contestId": 851, "index": "A", "name": "Arpa and a research in Mexican wave", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "math"]}, {"contestId": 850, "index": "F", "name": "Rainbow Balls", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["math"]}, {"contestId": 850, "index": "E", "name": "Random Elections", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["bitmasks", "brute force", "divide and conquer", "fft", "math"]}, {"contestId": 850, "index": "D", "name": "Tournament Construction", "type": "PROGRAMMING", "points": 1750.0, "rating": 2800, "tags": ["constructive algorithms", "dp", "graphs", "greedy", "math"]}, {"contestId": 850, "index": "C", "name": "Arpa and a game with Mojtaba", "type": "PROGRAMMING", "points": 1250.0, "rating": 2200, "tags": ["bitmasks", "dp", "games"]}, {"contestId": 850, "index": "B", "name": "Arpa and a list of numbers", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["implementation", "number theory"]}, {"contestId": 850, "index": "A", "name": "Five Dimensional Points", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["brute force", "geometry", "math"]}, {"contestId": 849, "index": "B", "name": "Tell Your World", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["brute force", "geometry"]}, {"contestId": 849, "index": "A", "name": "Odds and Ends", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"]}, {"contestId": 848, "index": "E", "name": "Days of Floral Colours", "type": "PROGRAMMING", "points": 2500.0, "rating": 3400, "tags": ["combinatorics", "divide and conquer", "dp", "fft", "math"]}, {"contestId": 848, "index": "D", "name": "Shake It!", "type": "PROGRAMMING", "points": 1750.0, "rating": 2900, "tags": ["combinatorics", "dp", "flows", "graphs"]}, {"contestId": 848, "index": "C", "name": "Goodbye Souvenir", "type": "PROGRAMMING", "points": 1750.0, "rating": 2600, "tags": ["data structures", "divide and conquer"]}, {"contestId": 848, "index": "B", "name": "Rooter's Song", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["constructive algorithms", "data structures", "geometry", "implementation", "sortings", "two pointers"]}, {"contestId": 848, "index": "A", "name": "From Y to Y", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["constructive algorithms"]}, {"contestId": 847, "index": "M", "name": "Weather Tomorrow", "type": "PROGRAMMING", "rating": 1000, "tags": ["implementation", "math"]}, {"contestId": 847, "index": "L", "name": "Berland SU Computer Network", "type": "PROGRAMMING", "rating": 2400, "tags": ["dfs and similar", "hashing", "trees"]}, {"contestId": 847, "index": "K", "name": "Travel Cards", "type": "PROGRAMMING", "rating": 1800, "tags": ["greedy", "implementation", "sortings"]}, {"contestId": 847, "index": "J", "name": "Students Initiation", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "flows"]}, {"contestId": 847, "index": "I", "name": "Noise Level", "type": "PROGRAMMING", "rating": 1900, "tags": ["dfs and similar", "implementation", "math"]}, {"contestId": 847, "index": "H", "name": "Load Testing", "type": "PROGRAMMING", "rating": 1600, "tags": ["greedy"]}, {"contestId": 847, "index": "G", "name": "University Classes", "type": "PROGRAMMING", "rating": 900, "tags": ["implementation"]}, {"contestId": 847, "index": "F", "name": "Berland Elections", "type": "PROGRAMMING", "rating": 2100, "tags": ["greedy", "sortings"]}, {"contestId": 847, "index": "E", "name": "Packmen", "type": "PROGRAMMING", "rating": 1800, "tags": ["binary search", "dp"]}, {"contestId": 847, "index": "D", "name": "Dog Show", "type": "PROGRAMMING", "rating": 2200, "tags": ["data structures", "greedy"]}, {"contestId": 847, "index": "C", "name": "Sum of Nestings", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms"]}, {"contestId": 847, "index": "B", "name": "Preparing for Merge Sort", "type": "PROGRAMMING", "rating": 1600, "tags": ["binary search", "data structures"]}, {"contestId": 847, "index": "A", "name": "Union of Doubly Linked Lists", "type": "PROGRAMMING", "rating": 1500, "tags": ["implementation"]}, {"contestId": 846, "index": "F", "name": "Random Query", "type": "PROGRAMMING", "rating": 1800, "tags": ["data structures", "math", "probabilities", "two pointers"]}, {"contestId": 846, "index": "E", "name": "Chemistry in Berland", "type": "PROGRAMMING", "rating": 2300, "tags": ["dfs and similar", "greedy", "trees"]}, {"contestId": 846, "index": "D", "name": "Monitor", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "data structures"]}, {"contestId": 846, "index": "C", "name": "Four Segments", "type": "PROGRAMMING", "rating": 1800, "tags": ["brute force", "data structures", "dp"]}, {"contestId": 846, "index": "B", "name": "Math Show", "type": "PROGRAMMING", "rating": 1800, "tags": ["brute force", "greedy"]}, {"contestId": 846, "index": "A", "name": "Curriculum Vitae", "type": "PROGRAMMING", "rating": 1500, "tags": ["brute force", "implementation"]}, {"contestId": 845, "index": "G", "name": "Shortest Path Problem?", "type": "PROGRAMMING", "rating": 2300, "tags": ["dfs and similar", "graphs", "math"]}, {"contestId": 845, "index": "F", "name": "Guards In The Storehouse", "type": "PROGRAMMING", "rating": 2500, "tags": ["bitmasks", "dp"]}, {"contestId": 845, "index": "E", "name": "Fire in the City", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "data structures"]}, {"contestId": 845, "index": "D", "name": "Driving Test", "type": "PROGRAMMING", "rating": 1800, "tags": ["data structures", "dp", "greedy"]}, {"contestId": 845, "index": "C", "name": "Two TVs", "type": "PROGRAMMING", "rating": 1500, "tags": ["data structures", "greedy", "sortings"]}, {"contestId": 845, "index": "B", "name": "Luba And The Ticket", "type": "PROGRAMMING", "rating": 1600, "tags": ["brute force", "greedy", "implementation"]}, {"contestId": 845, "index": "A", "name": "Chess Tourney", "type": "PROGRAMMING", "rating": 1100, "tags": ["implementation", "sortings"]}, {"contestId": 844, "index": "B", "name": "Rectangles", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["combinatorics", "math"]}, {"contestId": 844, "index": "A", "name": "Diversity", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["greedy", "implementation", "strings"]}, {"contestId": 843, "index": "E", "name": "Maximum Flow", "type": "PROGRAMMING", "points": 2250.0, "rating": 3000, "tags": ["flows", "graphs"]}, {"contestId": 843, "index": "D", "name": "Dynamic Shortest Path", "type": "PROGRAMMING", "points": 2250.0, "rating": 3400, "tags": ["graphs", "shortest paths"]}, {"contestId": 843, "index": "C", "name": "Upgrading Tree", "type": "PROGRAMMING", "points": 1750.0, "rating": 2600, "tags": ["constructive algorithms", "dfs and similar", "graphs", "math", "trees"]}, {"contestId": 843, "index": "B", "name": "Interactive LowerBound", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["brute force", "interactive", "probabilities"]}, {"contestId": 843, "index": "A", "name": "Sorting by Subsequences", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["dfs and similar", "dsu", "implementation", "math", "sortings"]}, {"contestId": 842, "index": "E", "name": "Nikita and game", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["binary search", "dfs and similar", "divide and conquer", "graphs", "trees"]}, {"contestId": 842, "index": "D", "name": "Vitya and Strange Lesson", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["binary search", "data structures"]}, {"contestId": 842, "index": "C", "name": "Ilya And The Tree", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["dfs and similar", "graphs", "math", "number theory", "trees"]}, {"contestId": 842, "index": "B", "name": "Gleb And Pizza", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["geometry"]}, {"contestId": 842, "index": "A", "name": "Kirill And The Game", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["brute force", "two pointers"]}, {"contestId": 841, "index": "B", "name": "Godsend", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["games", "math"]}, {"contestId": 841, "index": "A", "name": "Generous Kefa", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["brute force", "implementation"]}, {"contestId": 840, "index": "E", "name": "In a Trap", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["trees"]}, {"contestId": 840, "index": "D", "name": "Destiny", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["data structures", "probabilities"]}, {"contestId": 840, "index": "C", "name": "On the Bench", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["combinatorics", "dp"]}, {"contestId": 840, "index": "B", "name": "Leha and another game about graph", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["constructive algorithms", "data structures", "dfs and similar", "dp", "graphs"]}, {"contestId": 840, "index": "A", "name": "Leha and Function", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["combinatorics", "greedy", "math", "number theory", "sortings"]}, {"contestId": 839, "index": "E", "name": "Mother of Dragons", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["brute force", "graphs", "math", "meet-in-the-middle"]}, {"contestId": 839, "index": "D", "name": "Winter is here", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["combinatorics", "dp", "math", "number theory"]}, {"contestId": 839, "index": "C", "name": "Journey", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["dfs and similar", "dp", "graphs", "probabilities", "trees"]}, {"contestId": 839, "index": "B", "name": "Game of the Rows", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["brute force", "greedy", "implementation"]}, {"contestId": 839, "index": "A", "name": "Arya and Bran", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation"]}, {"contestId": 838, "index": "F", "name": "Expected Earnings", "type": "PROGRAMMING", "rating": 2800, "tags": []}, {"contestId": 838, "index": "E", "name": "Convex Countour", "type": "PROGRAMMING", "rating": 2300, "tags": ["dp"]}, {"contestId": 838, "index": "D", "name": "Airplane Arrangements", "type": "PROGRAMMING", "rating": 2700, "tags": ["math", "number theory"]}, {"contestId": 838, "index": "C", "name": "Future Failure", "type": "PROGRAMMING", "rating": 2800, "tags": ["dp", "games"]}, {"contestId": 838, "index": "B", "name": "Diverging Directions", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "dfs and similar", "trees"]}, {"contestId": 838, "index": "A", "name": "Binary Blocks", "type": "PROGRAMMING", "rating": 1400, "tags": ["brute force"]}, {"contestId": 837, "index": "G", "name": "Functions On The Segments", "type": "PROGRAMMING", "rating": 2500, "tags": ["data structures"]}, {"contestId": 837, "index": "F", "name": "Prefix Sums", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "brute force", "combinatorics", "math", "matrices"]}, {"contestId": 837, "index": "E", "name": "Vasya's Function", "type": "PROGRAMMING", "rating": 2100, "tags": ["binary search", "implementation", "math"]}, {"contestId": 837, "index": "D", "name": "Round Subset", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp", "math"]}, {"contestId": 837, "index": "C", "name": "Two Seals", "type": "PROGRAMMING", "rating": 1500, "tags": ["brute force", "implementation"]}, {"contestId": 837, "index": "B", "name": "Flag of Berland", "type": "PROGRAMMING", "rating": 1600, "tags": ["brute force", "implementation"]}, {"contestId": 837, "index": "A", "name": "Text Volume", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"]}, {"contestId": 835, "index": "F", "name": "Roads in the Kingdom", "type": "PROGRAMMING", "points": 2250.0, "rating": 2500, "tags": ["dfs and similar", "dp", "graphs", "trees"]}, {"contestId": 835, "index": "E", "name": "The penguin's game", "type": "PROGRAMMING", "points": 2250.0, "rating": 2400, "tags": ["binary search", "constructive algorithms", "interactive"]}, {"contestId": 835, "index": "D", "name": "Palindromic characteristics", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["brute force", "dp", "hashing", "strings"]}, {"contestId": 835, "index": "C", "name": "Star sky", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["dp", "implementation"]}, {"contestId": 835, "index": "B", "name": "The number on the board", "type": "PROGRAMMING", "points": 750.0, "rating": 1100, "tags": ["greedy"]}, {"contestId": 835, "index": "A", "name": "Key races", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math"]}, {"contestId": 834, "index": "B", "name": "The Festive Evening", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["data structures", "implementation"]}, {"contestId": 834, "index": "A", "name": "The Useless Toy", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation"]}, {"contestId": 833, "index": "E", "name": "Caramel Clouds", "type": "PROGRAMMING", "points": 2500.0, "rating": 3400, "tags": ["data structures", "dp", "sortings"]}, {"contestId": 833, "index": "D", "name": "Red-Black Cobweb", "type": "PROGRAMMING", "points": 2250.0, "rating": 2800, "tags": ["data structures", "divide and conquer", "implementation", "trees"]}, {"contestId": 833, "index": "C", "name": "Ever-Hungry Krakozyabra", "type": "PROGRAMMING", "points": 1500.0, "rating": 2700, "tags": ["brute force", "combinatorics", "greedy", "math"]}, {"contestId": 833, "index": "B", "name": "The Bakery", "type": "PROGRAMMING", "points": 1250.0, "rating": 2200, "tags": ["binary search", "data structures", "divide and conquer", "dp", "two pointers"]}, {"contestId": 833, "index": "A", "name": "The Meaningless Game", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["math", "number theory"]}, {"contestId": 832, "index": "E", "name": "Vasya and Shifts", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["matrices"]}, {"contestId": 832, "index": "D", "name": "Misha, Grisha and Underground", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["dfs and similar", "graphs", "trees"]}, {"contestId": 832, "index": "C", "name": "Strange Radiation", "type": "PROGRAMMING", "points": 1750.0, "rating": 2500, "tags": ["binary search", "implementation", "math"]}, {"contestId": 832, "index": "B", "name": "Petya and Exam", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["implementation", "strings"]}, {"contestId": 832, "index": "A", "name": "Sasha and Sticks", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["games", "math"]}, {"contestId": 831, "index": "C", "name": "Jury Marks", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["brute force", "constructive algorithms"]}, {"contestId": 831, "index": "B", "name": "Keyboard Layouts", "type": "PROGRAMMING", "points": 750.0, "rating": 800, "tags": ["implementation", "strings"]}, {"contestId": 831, "index": "A", "name": "Unimodal Array", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"]}, {"contestId": 830, "index": "E", "name": "Perpetual Motion Machine", "type": "PROGRAMMING", "points": 2250.0, "rating": 3100, "tags": ["constructive algorithms", "dp", "graphs", "implementation", "math", "trees"]}, {"contestId": 830, "index": "D", "name": "Singer House", "type": "PROGRAMMING", "points": 2250.0, "rating": 2800, "tags": ["combinatorics", "dp", "graphs", "trees"]}, {"contestId": 830, "index": "C", "name": "Bamboo Partition", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["brute force", "data structures", "implementation", "math", "number theory", "sortings", "two pointers"]}, {"contestId": 830, "index": "B", "name": "Cards Sorting", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["data structures", "implementation", "sortings"]}, {"contestId": 830, "index": "A", "name": "Office Keys", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["binary search", "brute force", "dp", "greedy", "sortings"]}, {"contestId": 828, "index": "B", "name": "Black Square", "type": "PROGRAMMING", "points": 750.0, "rating": 1300, "tags": ["implementation"]}, {"contestId": 828, "index": "A", "name": "Restaurant Tables", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["implementation"]}, {"contestId": 827, "index": "F", "name": "Dirty Arkady's Kitchen", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["data structures", "dp", "graphs", "shortest paths"]}, {"contestId": 827, "index": "E", "name": "Rusty String", "type": "PROGRAMMING", "points": 1750.0, "rating": 2700, "tags": ["fft", "math", "strings"]}, {"contestId": 827, "index": "D", "name": "Best Edge Weight", "type": "PROGRAMMING", "points": 1750.0, "rating": 2700, "tags": ["data structures", "dfs and similar", "graphs", "trees"]}, {"contestId": 827, "index": "C", "name": "DNA Evolution", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["data structures", "strings"]}, {"contestId": 827, "index": "B", "name": "High Load", "type": "PROGRAMMING", "points": 750.0, "rating": 1800, "tags": ["constructive algorithms", "greedy", "implementation", "trees"]}, {"contestId": 827, "index": "A", "name": "String Reconstruction", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["data structures", "greedy", "sortings", "strings"]}, {"contestId": 825, "index": "G", "name": "Tree Queries", "type": "PROGRAMMING", "rating": 2500, "tags": ["dfs and similar", "graphs", "trees"]}, {"contestId": 825, "index": "F", "name": "String Compression", "type": "PROGRAMMING", "rating": 2400, "tags": ["dp", "hashing", "string suffix structures", "strings"]}, {"contestId": 825, "index": "E", "name": "Minimal Labels", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "dfs and similar", "graphs", "greedy"]}, {"contestId": 825, "index": "D", "name": "Suitable Replacement", "type": "PROGRAMMING", "rating": 1500, "tags": ["binary search", "greedy", "implementation"]}, {"contestId": 825, "index": "C", "name": "Multi-judge Solving", "type": "PROGRAMMING", "rating": 1600, "tags": ["greedy", "implementation"]}, {"contestId": 825, "index": "B", "name": "Five-In-a-Row", "type": "PROGRAMMING", "rating": 1600, "tags": ["brute force", "implementation"]}, {"contestId": 825, "index": "A", "name": "Binary Protocol", "type": "PROGRAMMING", "rating": 1100, "tags": ["implementation"]}, {"contestId": 822, "index": "F", "name": "Madness", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["constructive algorithms", "dfs and similar", "trees"]}, {"contestId": 822, "index": "E", "name": "Liar", "type": "PROGRAMMING", "points": 2250.0, "rating": 2400, "tags": ["binary search", "dp", "hashing", "string suffix structures"]}, {"contestId": 822, "index": "D", "name": "My pretty girl Noora", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["brute force", "dp", "greedy", "math", "number theory"]}, {"contestId": 822, "index": "C", "name": "Hacker, pack your bags!", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["binary search", "greedy", "implementation", "sortings"]}, {"contestId": 822, "index": "B", "name": "Crossword solving", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["brute force", "implementation", "strings"]}, {"contestId": 822, "index": "A", "name": "I'm bored with life", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "math", "number theory"]}, {"contestId": 821, "index": "E", "name": "Okabe and El Psy Kongroo", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["dp", "matrices"]}, {"contestId": 821, "index": "D", "name": "Okabe and City", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["dfs and similar", "graphs", "shortest paths"]}, {"contestId": 821, "index": "C", "name": "Okabe and Boxes", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["data structures", "greedy", "trees"]}, {"contestId": 821, "index": "B", "name": "Okabe and Banana Trees", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["brute force", "math"]}, {"contestId": 821, "index": "A", "name": "Okabe and Future Gadget Laboratory", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 820, "index": "B", "name": "Mister B and Angle in Polygon", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["constructive algorithms", "geometry", "math"]}, {"contestId": 820, "index": "A", "name": "Mister B and Book Reading", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation"]}, {"contestId": 819, "index": "E", "name": "Mister B and Flight to the Moon", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["constructive algorithms", "graphs"]}, {"contestId": 819, "index": "D", "name": "Mister B and Astronomers", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["number theory"]}, {"contestId": 819, "index": "C", "name": "Mister B and Beacons on Field", "type": "PROGRAMMING", "points": 1500.0, "rating": 2900, "tags": ["number theory"]}, {"contestId": 819, "index": "B", "name": "Mister B and PR Shifts", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["data structures", "implementation", "math"]}, {"contestId": 819, "index": "A", "name": "Mister B and Boring Game", "type": "PROGRAMMING", "points": 500.0, "rating": 2200, "tags": ["games", "greedy"]}, {"contestId": 818, "index": "G", "name": "Four Melodies", "type": "PROGRAMMING", "rating": 2600, "tags": ["flows", "graphs"]}, {"contestId": 818, "index": "F", "name": "Level Generation", "type": "PROGRAMMING", "rating": 2100, "tags": ["binary search", "math", "ternary search"]}, {"contestId": 818, "index": "E", "name": "Card Game Again", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "data structures", "number theory", "two pointers"]}, {"contestId": 818, "index": "D", "name": "Multicolored Cars", "type": "PROGRAMMING", "rating": 1700, "tags": ["data structures", "implementation"]}, {"contestId": 818, "index": "C", "name": "Sofa Thief", "type": "PROGRAMMING", "rating": 2000, "tags": ["brute force", "implementation"]}, {"contestId": 818, "index": "B", "name": "Permutation Game", "type": "PROGRAMMING", "rating": 1600, "tags": ["implementation"]}, {"contestId": 818, "index": "A", "name": "Diplomas and Certificates", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "math"]}, {"contestId": 817, "index": "F", "name": "MEX Queries", "type": "PROGRAMMING", "rating": 2300, "tags": ["binary search", "data structures", "trees"]}, {"contestId": 817, "index": "E", "name": "Choosing The Commander", "type": "PROGRAMMING", "rating": 2000, "tags": ["bitmasks", "data structures", "trees"]}, {"contestId": 817, "index": "D", "name": "Imbalanced Array", "type": "PROGRAMMING", "rating": 1900, "tags": ["data structures", "divide and conquer", "dsu", "sortings"]}, {"contestId": 817, "index": "C", "name": "Really Big Numbers", "type": "PROGRAMMING", "rating": 1600, "tags": ["binary search", "brute force", "dp", "math"]}, {"contestId": 817, "index": "B", "name": "Makes And The Product", "type": "PROGRAMMING", "rating": 1500, "tags": ["combinatorics", "implementation", "math", "sortings"]}, {"contestId": 817, "index": "A", "name": "Treasure Hunt", "type": "PROGRAMMING", "rating": 1200, "tags": ["implementation", "math", "number theory"]}, {"contestId": 816, "index": "B", "name": "Karen and Coffee", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["binary search", "data structures", "implementation"]}, {"contestId": 816, "index": "A", "name": "Karen and Morning", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["brute force", "implementation"]}, {"contestId": 815, "index": "E", "name": "Karen and Neighborhood", "type": "PROGRAMMING", "points": 2250.0, "rating": 2900, "tags": ["binary search", "constructive algorithms", "implementation"]}, {"contestId": 815, "index": "D", "name": "Karen and Cards", "type": "PROGRAMMING", "points": 2250.0, "rating": 2800, "tags": ["binary search", "combinatorics", "data structures", "geometry"]}, {"contestId": 815, "index": "C", "name": "Karen and Supermarket", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["brute force", "dp", "trees"]}, {"contestId": 815, "index": "B", "name": "Karen and Test", "type": "PROGRAMMING", "points": 1250.0, "rating": 2200, "tags": ["brute force", "combinatorics", "constructive algorithms", "math"]}, {"contestId": 815, "index": "A", "name": "Karen and Game", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["brute force", "greedy", "implementation"]}, {"contestId": 814, "index": "E", "name": "An unavoidable detour for home", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["combinatorics", "dp", "graphs", "shortest paths"]}, {"contestId": 814, "index": "D", "name": "An overnight dance in discotheque", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["dfs and similar", "dp", "geometry", "greedy", "trees"]}, {"contestId": 814, "index": "C", "name": "An impassioned circulation of affection", "type": "PROGRAMMING", "points": 1750.0, "rating": 1600, "tags": ["brute force", "dp", "strings", "two pointers"]}, {"contestId": 814, "index": "B", "name": "An express train to reveries", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["constructive algorithms"]}, {"contestId": 814, "index": "A", "name": "An abandoned sentiment from past", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["constructive algorithms", "greedy", "implementation", "sortings"]}, {"contestId": 813, "index": "F", "name": "Bipartite Checking", "type": "PROGRAMMING", "rating": 2500, "tags": ["data structures", "dsu", "graphs"]}, {"contestId": 813, "index": "E", "name": "Army Creation", "type": "PROGRAMMING", "rating": 2200, "tags": ["binary search", "data structures"]}, {"contestId": 813, "index": "D", "name": "Two Melodies", "type": "PROGRAMMING", "rating": 2600, "tags": ["dp", "flows"]}, {"contestId": 813, "index": "C", "name": "The Tag Game", "type": "PROGRAMMING", "rating": 1700, "tags": ["dfs and similar", "graphs"]}, {"contestId": 813, "index": "B", "name": "The Golden Age", "type": "PROGRAMMING", "rating": 1800, "tags": ["brute force", "math"]}, {"contestId": 813, "index": "A", "name": "The Contest", "type": "PROGRAMMING", "rating": 1100, "tags": ["implementation"]}, {"contestId": 812, "index": "E", "name": "Sagheer and Apple Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["games", "trees"]}, {"contestId": 812, "index": "D", "name": "Sagheer and Kindergarten", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["dfs and similar", "graphs", "implementation", "trees"]}, {"contestId": 812, "index": "C", "name": "Sagheer and Nubian Market", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["binary search", "sortings"]}, {"contestId": 812, "index": "B", "name": "Sagheer, the Hausmeister", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["bitmasks", "brute force", "dp"]}, {"contestId": 812, "index": "A", "name": "Sagheer and Crossroads", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["implementation"]}, {"contestId": 811, "index": "E", "name": "Vladik and Entertaining Flags", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["data structures", "dsu", "graphs"]}, {"contestId": 811, "index": "D", "name": "Vladik and Favorite Game", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["constructive algorithms", "dfs and similar", "graphs", "interactive"]}, {"contestId": 811, "index": "C", "name": "Vladik and Memorable Trip", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["dp", "implementation"]}, {"contestId": 811, "index": "B", "name": "Vladik and Complicated Book", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["implementation", "sortings"]}, {"contestId": 811, "index": "A", "name": "Vladik and Courtesy", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "implementation"]}, {"contestId": 810, "index": "B", "name": "Summer sell-off", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["greedy", "sortings"]}, {"contestId": 810, "index": "A", "name": "Straight <<A>>", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation", "math"]}, {"contestId": 809, "index": "E", "name": "Surprise me!", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["divide and conquer", "math", "number theory", "trees"]}, {"contestId": 809, "index": "D", "name": "Hitchhiking in the Baltic States", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["data structures", "dp"]}, {"contestId": 809, "index": "C", "name": "Find a car", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["combinatorics", "divide and conquer", "dp"]}, {"contestId": 809, "index": "B", "name": "Glad to see you!", "type": "PROGRAMMING", "points": 1000.0, "rating": 2200, "tags": ["binary search", "interactive"]}, {"contestId": 809, "index": "A", "name": "Do you want a date?", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["implementation", "math", "sortings"]}, {"contestId": 808, "index": "G", "name": "Anthem of Berland", "type": "PROGRAMMING", "rating": 2300, "tags": ["dp", "strings"]}, {"contestId": 808, "index": "F", "name": "Card Game", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "flows", "graphs"]}, {"contestId": 808, "index": "E", "name": "Selling Souvenirs", "type": "PROGRAMMING", "rating": 2300, "tags": ["binary search", "dp", "greedy", "ternary search"]}, {"contestId": 808, "index": "D", "name": "Array Division", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "data structures", "implementation"]}, {"contestId": 808, "index": "C", "name": "Tea Party", "type": "PROGRAMMING", "rating": 1400, "tags": ["constructive algorithms", "greedy", "sortings"]}, {"contestId": 808, "index": "B", "name": "Average Sleep Time", "type": "PROGRAMMING", "rating": 1300, "tags": ["data structures", "implementation", "math"]}, {"contestId": 808, "index": "A", "name": "Lucky Year", "type": "PROGRAMMING", "rating": 900, "tags": ["implementation"]}, {"contestId": 807, "index": "B", "name": "T-Shirt Hunt", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["brute force", "implementation"]}, {"contestId": 807, "index": "A", "name": "Is it rated?", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation", "sortings"]}, {"contestId": 805, "index": "B", "name": "3-palindrome", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["constructive algorithms"]}, {"contestId": 805, "index": "A", "name": "Fake NP", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["greedy", "math"]}, {"contestId": 804, "index": "F", "name": "Fake bullions", "type": "PROGRAMMING", "points": 3000.0, "rating": 3400, "tags": ["combinatorics", "dfs and similar", "dp", "graphs", "number theory"]}, {"contestId": 804, "index": "E", "name": "The same permutation ", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["constructive algorithms"]}, {"contestId": 804, "index": "D", "name": "Expected diameter of a tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["binary search", "brute force", "dfs and similar", "dp", "sortings", "trees"]}, {"contestId": 804, "index": "C", "name": "Ice cream coloring", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["constructive algorithms", "dfs and similar", "greedy"]}, {"contestId": 804, "index": "B", "name": "Minimum number of steps", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["combinatorics", "greedy", "implementation", "math"]}, {"contestId": 804, "index": "A", "name": "Find Amir", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["constructive algorithms", "greedy", "math"]}, {"contestId": 803, "index": "G", "name": "Periodic RMQ Problem", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures"]}, {"contestId": 803, "index": "F", "name": "Coprime Subsequences", "type": "PROGRAMMING", "rating": 2000, "tags": ["bitmasks", "combinatorics", "number theory"]}, {"contestId": 803, "index": "E", "name": "Roma and Poker", "type": "PROGRAMMING", "rating": 2000, "tags": ["dp", "graphs"]}, {"contestId": 803, "index": "D", "name": "Magazine Ad", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "greedy"]}, {"contestId": 803, "index": "C", "name": "Maximal GCD", "type": "PROGRAMMING", "rating": 1900, "tags": ["constructive algorithms", "greedy", "math"]}, {"contestId": 803, "index": "B", "name": "Distances to Zero", "type": "PROGRAMMING", "rating": 1200, "tags": ["constructive algorithms"]}, {"contestId": 803, "index": "A", "name": "Maximal Binary Matrix", "type": "PROGRAMMING", "rating": 1400, "tags": ["constructive algorithms"]}, {"contestId": 802, "index": "O", "name": "April Fools' Problem (hard)", "type": "PROGRAMMING", "rating": 2900, "tags": ["binary search", "data structures", "flows"]}, {"contestId": 802, "index": "N", "name": "April Fools' Problem (medium)", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "flows", "graphs"]}, {"contestId": 802, "index": "M", "name": "April Fools' Problem (easy)", "type": "PROGRAMMING", "rating": 1200, "tags": ["greedy", "sortings"]}, {"contestId": 802, "index": "L", "name": "Send the Fool Further! (hard)", "type": "PROGRAMMING", "rating": 2400, "tags": ["dfs and similar", "dp", "math", "trees"]}, {"contestId": 802, "index": "K", "name": "Send the Fool Further! (medium)", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp", "trees"]}, {"contestId": 802, "index": "J", "name": "Send the Fool Further! (easy)", "type": "PROGRAMMING", "rating": 1400, "tags": ["dfs and similar", "graphs", "trees"]}, {"contestId": 802, "index": "I", "name": "Fake News (hard)", "type": "PROGRAMMING", "rating": 2300, "tags": ["string suffix structures"]}, {"contestId": 802, "index": "H", "name": "Fake News (medium)", "type": "PROGRAMMING", "rating": 2200, "tags": ["constructive algorithms", "strings"]}, {"contestId": 802, "index": "G", "name": "Fake News (easy)", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"]}, {"contestId": 802, "index": "F", "name": "Marmots (hard)", "type": "PROGRAMMING", "rating": 2800, "tags": ["math", "probabilities"]}, {"contestId": 802, "index": "E", "name": "Marmots (medium)", "type": "PROGRAMMING", "rating": 2200, "tags": ["math"]}, {"contestId": 802, "index": "D", "name": "Marmots (easy)", "type": "PROGRAMMING", "rating": 2100, "tags": ["math"]}, {"contestId": 802, "index": "C", "name": "Heidi and Library (hard)", "type": "PROGRAMMING", "rating": 2600, "tags": ["flows"]}, {"contestId": 802, "index": "B", "name": "Heidi and Library (medium)", "type": "PROGRAMMING", "rating": 1800, "tags": ["data structures", "greedy"]}, {"contestId": 802, "index": "A", "name": "Heidi and Library (easy)", "type": "PROGRAMMING", "rating": 1800, "tags": ["greedy"]}, {"contestId": 801, "index": "B", "name": "Valued Keys", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["constructive algorithms", "greedy", "strings"]}, {"contestId": 801, "index": "A", "name": "Vicious Keyboard", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["brute force"]}, {"contestId": 799, "index": "G", "name": "Cut the pie", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["binary search", "data structures", "geometry"]}, {"contestId": 799, "index": "F", "name": "Beautiful fountains rows", "type": "PROGRAMMING", "points": 3250.0, "rating": 3500, "tags": ["data structures"]}, {"contestId": 799, "index": "E", "name": "Aquarium decoration", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["data structures", "greedy", "two pointers"]}, {"contestId": 799, "index": "D", "name": "Field expansion", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["brute force", "dp", "meet-in-the-middle"]}, {"contestId": 799, "index": "C", "name": "Fountains", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["binary search", "data structures", "implementation"]}, {"contestId": 799, "index": "B", "name": "T-shirt buying", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["data structures", "implementation"]}, {"contestId": 799, "index": "A", "name": "Carrot Cakes", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["brute force", "implementation"]}, {"contestId": 798, "index": "E", "name": "Mike and code of a permutation", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["constructive algorithms", "data structures", "graphs", "sortings"]}, {"contestId": 798, "index": "D", "name": "Mike and distribution", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["constructive algorithms", "sortings"]}, {"contestId": 798, "index": "C", "name": "Mike and gcd problem", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["dp", "greedy", "number theory"]}, {"contestId": 798, "index": "B", "name": "Mike and strings", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["brute force", "dp", "strings"]}, {"contestId": 798, "index": "A", "name": "Mike and palindrome", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["brute force", "constructive algorithms", "strings"]}, {"contestId": 797, "index": "F", "name": "Mice and Holes", "type": "PROGRAMMING", "rating": 2600, "tags": ["data structures", "dp", "greedy", "sortings"]}, {"contestId": 797, "index": "E", "name": "Array Queries", "type": "PROGRAMMING", "rating": 2000, "tags": ["brute force", "data structures", "dp"]}, {"contestId": 797, "index": "D", "name": "Broken BST", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "dfs and similar"]}, {"contestId": 797, "index": "C", "name": "Minimal string", "type": "PROGRAMMING", "rating": 1700, "tags": ["data structures", "greedy", "strings"]}, {"contestId": 797, "index": "B", "name": "Odd sum", "type": "PROGRAMMING", "rating": 1400, "tags": ["dp", "greedy", "implementation"]}, {"contestId": 797, "index": "A", "name": "k-Factorization", "type": "PROGRAMMING", "rating": 1100, "tags": ["implementation", "math", "number theory"]}, {"contestId": 796, "index": "F", "name": "Sequence Recovery", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["bitmasks", "data structures", "greedy"]}, {"contestId": 796, "index": "E", "name": "Exam Cheating", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["binary search", "dp"]}, {"contestId": 796, "index": "D", "name": "Police Stations", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["constructive algorithms", "dfs and similar", "dp", "graphs", "shortest paths", "trees"]}, {"contestId": 796, "index": "C", "name": "Bank Hacking", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["constructive algorithms", "data structures", "dp", "trees"]}, {"contestId": 796, "index": "B", "name": "Find The Bone", "type": "PROGRAMMING", "points": 750.0, "rating": 1300, "tags": ["implementation"]}, {"contestId": 796, "index": "A", "name": "Buying A House", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "implementation"]}, {"contestId": 794, "index": "G", "name": "Replace All", "type": "PROGRAMMING", "points": 3500.0, "rating": 3400, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 794, "index": "F", "name": "Leha and security system", "type": "PROGRAMMING", "points": 2750.0, "rating": 2800, "tags": ["data structures"]}, {"contestId": 794, "index": "E", "name": "Choosing Carrot", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["games", "math"]}, {"contestId": 794, "index": "D", "name": "Labelling Cities", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["dfs and similar", "graphs", "hashing"]}, {"contestId": 794, "index": "C", "name": "Naming Company", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["games", "greedy", "sortings"]}, {"contestId": 794, "index": "B", "name": "Cutting Carrot", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["geometry", "math"]}, {"contestId": 794, "index": "A", "name": "Bank Robbery", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "implementation"]}, {"contestId": 793, "index": "G", "name": "Oleg and chess", "type": "PROGRAMMING", "points": 3500.0, "rating": 3400, "tags": ["data structures", "divide and conquer", "flows", "graph matchings"]}, {"contestId": 793, "index": "F", "name": "Julia the snail", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["data structures", "divide and conquer", "dp"]}, {"contestId": 793, "index": "E", "name": "Problem of offices", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["constructive algorithms", "dfs and similar", "dp", "trees"]}, {"contestId": 793, "index": "D", "name": "Presents in Bankopolis", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["dp", "graphs", "shortest paths"]}, {"contestId": 793, "index": "C", "name": "Mice problem", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["geometry", "implementation", "math", "sortings"]}, {"contestId": 793, "index": "B", "name": "Igor and his way to work", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["dfs and similar", "graphs", "implementation", "shortest paths"]}, {"contestId": 793, "index": "A", "name": "Oleg and shares", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation", "math"]}, {"contestId": 792, "index": "F", "name": "Mages and Monsters", "type": "PROGRAMMING", "rating": 3100, "tags": ["data structures", "geometry"]}, {"contestId": 792, "index": "E", "name": "Colored Balls", "type": "PROGRAMMING", "rating": 2500, "tags": ["greedy", "math", "number theory"]}, {"contestId": 792, "index": "D", "name": "Paths in a Complete Binary Tree", "type": "PROGRAMMING", "rating": 1900, "tags": ["bitmasks", "trees"]}, {"contestId": 792, "index": "C", "name": "Divide by Three", "type": "PROGRAMMING", "rating": 2000, "tags": ["dp", "greedy", "math", "number theory"]}, {"contestId": 792, "index": "B", "name": "Counting-out Rhyme", "type": "PROGRAMMING", "rating": 1300, "tags": ["implementation"]}, {"contestId": 792, "index": "A", "name": "New Bus Route", "type": "PROGRAMMING", "rating": 1100, "tags": ["implementation", "sortings"]}, {"contestId": 791, "index": "A", "name": "Bear and Big Brother", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 789, "index": "B", "name": "Masha and geometric depression", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["brute force", "implementation", "math"]}, {"contestId": 789, "index": "A", "name": "Anastasia and pebbles", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["implementation", "math"]}, {"contestId": 788, "index": "E", "name": "New task", "type": "PROGRAMMING", "points": 2250.0, "rating": 2900, "tags": ["data structures"]}, {"contestId": 788, "index": "D", "name": "Finding lines", "type": "PROGRAMMING", "points": 2000.0, "rating": 3000, "tags": ["constructive algorithms", "divide and conquer", "interactive"]}, {"contestId": 788, "index": "C", "name": "The Great Mixing", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["dfs and similar", "graphs", "shortest paths"]}, {"contestId": 788, "index": "B", "name": "Weird journey", "type": "PROGRAMMING", "points": 1250.0, "rating": 2100, "tags": ["combinatorics", "constructive algorithms", "dfs and similar", "dsu", "graphs"]}, {"contestId": 788, "index": "A", "name": "Functions again", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["dp", "two pointers"]}, {"contestId": 787, "index": "B", "name": "Not Afraid", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["greedy", "implementation", "math"]}, {"contestId": 787, "index": "A", "name": "The Monster", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["brute force", "math", "number theory"]}, {"contestId": 786, "index": "E", "name": "ALT", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["data structures", "flows", "graphs", "trees"]}, {"contestId": 786, "index": "D", "name": "Rap God", "type": "PROGRAMMING", "points": 2000.0, "rating": 3400, "tags": ["data structures", "dfs and similar", "hashing", "strings", "trees"]}, {"contestId": 786, "index": "C", "name": "Till I Collapse", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["data structures", "divide and conquer"]}, {"contestId": 786, "index": "B", "name": "Legacy", "type": "PROGRAMMING", "points": 1000.0, "rating": 2300, "tags": ["data structures", "graphs", "shortest paths"]}, {"contestId": 786, "index": "A", "name": "Berzerk", "type": "PROGRAMMING", "points": 750.0, "rating": 2000, "tags": ["dfs and similar", "dp", "games"]}, {"contestId": 785, "index": "E", "name": "Anton and Permutation", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["brute force", "data structures"]}, {"contestId": 785, "index": "D", "name": "Anton and School - 2", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["combinatorics", "dp", "math", "number theory"]}, {"contestId": 785, "index": "C", "name": "Anton and Fairy Tale", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["binary search", "math"]}, {"contestId": 785, "index": "B", "name": "Anton and Classes", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["greedy", "sortings"]}, {"contestId": 785, "index": "A", "name": "Anton and Polyhedrons", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "strings"]}, {"contestId": 784, "index": "G", "name": "BF Calculator", "type": "PROGRAMMING", "rating": 2000, "tags": ["*special"]}, {"contestId": 784, "index": "F", "name": "Crunching Numbers Just for You", "type": "PROGRAMMING", "rating": 1900, "tags": ["*special", "implementation"]}, {"contestId": 784, "index": "E", "name": "Twisted Circuit", "type": "PROGRAMMING", "rating": 2000, "tags": ["*special", "brute force", "implementation"]}, {"contestId": 784, "index": "D", "name": "Touchy-Feely Palindromes", "type": "PROGRAMMING", "rating": 1900, "tags": ["*special", "implementation"]}, {"contestId": 784, "index": "C", "name": "INTERCALC", "type": "PROGRAMMING", "rating": 1800, "tags": ["*special", "implementation"]}, {"contestId": 784, "index": "B", "name": "Kids' Riddle", "type": "PROGRAMMING", "rating": 2000, "tags": ["*special"]}, {"contestId": 784, "index": "A", "name": "Numbers Joke", "type": "PROGRAMMING", "rating": 1700, "tags": ["*special"]}, {"contestId": 780, "index": "H", "name": "Intranet of Buses", "type": "PROGRAMMING", "points": 3500.0, "rating": 3100, "tags": ["binary search", "geometry", "implementation", "two pointers"]}, {"contestId": 780, "index": "G", "name": "Andryusha and Nervous Barriers", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["data structures", "dp"]}, {"contestId": 780, "index": "F", "name": "Axel and Marston in Bitland", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["bitmasks", "dp", "graphs", "matrices"]}, {"contestId": 780, "index": "E", "name": "Underground Lab", "type": "PROGRAMMING", "points": 1750.0, "rating": 2100, "tags": ["constructive algorithms", "dfs and similar", "graphs"]}, {"contestId": 780, "index": "D", "name": "Innokenty and a Football League", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["2-sat", "graphs", "greedy", "implementation", "shortest paths", "strings"]}, {"contestId": 780, "index": "C", "name": "Andryusha and Colored Balloons", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["dfs and similar", "graphs", "greedy", "trees"]}, {"contestId": 780, "index": "B", "name": "The Meeting Place Cannot Be Changed", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["binary search"]}, {"contestId": 780, "index": "A", "name": "Andryusha and Socks", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 779, "index": "C", "name": "Dishonest Sellers", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "greedy", "sortings"]}, {"contestId": 779, "index": "B", "name": "Weird Rounding", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["brute force", "greedy"]}, {"contestId": 779, "index": "A", "name": "Pupils Redistribution", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["constructive algorithms", "math"]}, {"contestId": 778, "index": "E", "name": "Selling Numbers", "type": "PROGRAMMING", "points": 2250.0, "rating": 3000, "tags": ["dp", "sortings"]}, {"contestId": 778, "index": "D", "name": "Parquet Re-laying", "type": "PROGRAMMING", "points": 2250.0, "rating": 2700, "tags": ["constructive algorithms"]}, {"contestId": 778, "index": "C", "name": "Peterson Polyglot", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["brute force", "dfs and similar", "dsu", "hashing", "strings", "trees"]}, {"contestId": 778, "index": "B", "name": "Bitwise Formula", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["bitmasks", "brute force", "dfs and similar", "expression parsing", "implementation"]}, {"contestId": 778, "index": "A", "name": "String Game", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["binary search", "greedy", "strings"]}, {"contestId": 777, "index": "E", "name": "Hanoi Factory", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["brute force", "data structures", "dp", "greedy", "sortings"]}, {"contestId": 777, "index": "D", "name": "Cloud of Hashtags", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["binary search", "greedy", "implementation", "strings"]}, {"contestId": 777, "index": "C", "name": "Alyona and Spreadsheet", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["binary search", "data structures", "dp", "greedy", "implementation", "two pointers"]}, {"contestId": 777, "index": "B", "name": "Game of Credit Cards", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["data structures", "dp", "greedy", "sortings"]}, {"contestId": 777, "index": "A", "name": "Shell Game", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["constructive algorithms", "implementation", "math"]}, {"contestId": 776, "index": "G", "name": "Sherlock and the Encrypted Data", "type": "PROGRAMMING", "points": 3250.0, "rating": 2900, "tags": ["bitmasks", "combinatorics", "dp"]}, {"contestId": 776, "index": "F", "name": "Sherlock's bet to Moriarty", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["constructive algorithms", "data structures", "divide and conquer", "geometry", "graphs", "implementation", "trees"]}, {"contestId": 776, "index": "E", "name": "The Holmes Children", "type": "PROGRAMMING", "points": 2250.0, "rating": 2100, "tags": ["math", "number theory"]}, {"contestId": 776, "index": "D", "name": "The Door Problem", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["2-sat", "dfs and similar", "dsu", "graphs"]}, {"contestId": 776, "index": "C", "name": "Molly's Chemicals", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["binary search", "brute force", "data structures", "implementation", "math"]}, {"contestId": 776, "index": "B", "name": "Sherlock and his girlfriend", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "number theory"]}, {"contestId": 776, "index": "A", "name": "A Serial Killer", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["brute force", "implementation", "strings"]}, {"contestId": 775, "index": "A", "name": "University Schedule", "type": "PROGRAMMING", "rating": 2900, "tags": ["*special"]}, {"contestId": 774, "index": "L", "name": "Bars", "type": "PROGRAMMING", "rating": 2000, "tags": ["*special", "binary search"]}, {"contestId": 774, "index": "K", "name": "Stepan and Vowels", "type": "PROGRAMMING", "rating": 1600, "tags": ["*special", "implementation", "strings"]}, {"contestId": 774, "index": "J", "name": "Stepan's Series", "type": "PROGRAMMING", "rating": 2000, "tags": ["*special", "dp"]}, {"contestId": 774, "index": "I", "name": "Composing Of String", "type": "PROGRAMMING", "rating": 2300, "tags": ["*special", "dp"]}, {"contestId": 774, "index": "H", "name": "Repairing Of String", "type": "PROGRAMMING", "rating": 2200, "tags": ["*special", "constructive algorithms"]}, {"contestId": 774, "index": "G", "name": "Perfectionist Arkadiy", "type": "PROGRAMMING", "rating": 2700, "tags": ["*special", "number theory"]}, {"contestId": 774, "index": "F", "name": "Pens And Days Of Week", "type": "PROGRAMMING", "rating": 2700, "tags": ["*special", "binary search", "number theory"]}, {"contestId": 774, "index": "E", "name": "Big Number and Remainder", "type": "PROGRAMMING", "rating": 2300, "tags": ["*special", "math", "number theory"]}, {"contestId": 774, "index": "D", "name": "Lie or Truth", "type": "PROGRAMMING", "rating": 1500, "tags": ["*special", "constructive algorithms", "sortings"]}, {"contestId": 774, "index": "C", "name": "Maximum Number", "type": "PROGRAMMING", "rating": 1200, "tags": ["*special", "constructive algorithms", "greedy", "implementation"]}, {"contestId": 774, "index": "B", "name": "Significant Cups", "type": "PROGRAMMING", "rating": 2100, "tags": ["*special", "binary search", "data structures", "two pointers"]}, {"contestId": 774, "index": "A", "name": "Amusement Park", "type": "PROGRAMMING", "rating": 2100, "tags": ["*special", "ternary search"]}, {"contestId": 773, "index": "F", "name": "Test Data Generation", "type": "PROGRAMMING", "points": 3500.0, "rating": 3400, "tags": ["combinatorics", "divide and conquer", "dp", "fft", "math", "number theory"]}, {"contestId": 773, "index": "E", "name": "Blog Post Rating", "type": "PROGRAMMING", "points": 2750.0, "rating": 3000, "tags": ["data structures", "sortings"]}, {"contestId": 773, "index": "D", "name": "Perishable Roads", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["dp", "graphs", "shortest paths"]}, {"contestId": 773, "index": "C", "name": "Prairie Partition", "type": "PROGRAMMING", "points": 1750.0, "rating": 2200, "tags": ["binary search", "constructive algorithms", "greedy", "math"]}, {"contestId": 773, "index": "B", "name": "Dynamic Problem Scoring", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["brute force", "greedy"]}, {"contestId": 773, "index": "A", "name": "Success Rate", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["binary search", "math"]}, {"contestId": 772, "index": "E", "name": "Verifying Kingdom", "type": "PROGRAMMING", "points": 2250.0, "rating": 3200, "tags": ["binary search", "divide and conquer", "interactive", "trees"]}, {"contestId": 772, "index": "D", "name": "Varying Kibibits", "type": "PROGRAMMING", "points": 2250.0, "rating": 2700, "tags": ["bitmasks", "dp"]}, {"contestId": 772, "index": "C", "name": "Vulnerable Kerbals", "type": "PROGRAMMING", "points": 1750.0, "rating": 2300, "tags": ["constructive algorithms", "dp", "graphs", "math", "number theory"]}, {"contestId": 772, "index": "B", "name": "Volatile Kite", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["geometry"]}, {"contestId": 772, "index": "A", "name": "Voltage Keepsake", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["binary search", "math"]}, {"contestId": 771, "index": "F", "name": "Bear and Isomorphic Points", "type": "PROGRAMMING", "points": 2500.0, "rating": 3300, "tags": ["geometry", "two pointers"]}, {"contestId": 771, "index": "E", "name": "Bear and Rectangle Strips", "type": "PROGRAMMING", "points": 2250.0, "rating": 3000, "tags": ["dp", "greedy"]}, {"contestId": 771, "index": "D", "name": "Bear and Company", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["dp"]}, {"contestId": 771, "index": "C", "name": "Bear and Tree Jumps", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["dfs and similar", "dp", "trees"]}, {"contestId": 771, "index": "B", "name": "Bear and Different Names", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["constructive algorithms", "greedy"]}, {"contestId": 771, "index": "A", "name": "Bear and Friendship Condition", "type": "PROGRAMMING", "points": 250.0, "rating": 1500, "tags": ["dfs and similar", "dsu", "graphs"]}, {"contestId": 770, "index": "D", "name": "Draw Brackets!", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["*special", "implementation"]}, {"contestId": 770, "index": "C", "name": "Online Courses In BSU", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["*special", "dfs and similar", "graphs", "implementation"]}, {"contestId": 770, "index": "B", "name": "Maximize Sum of Digits", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["*special", "implementation", "math"]}, {"contestId": 770, "index": "A", "name": "New Password", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["*special", "implementation"]}, {"contestId": 769, "index": "D", "name": "k-Interesting Pairs Of Integers", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["*special", "bitmasks", "brute force", "meet-in-the-middle"]}, {"contestId": 769, "index": "C", "name": "Cycle In Maze", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["*special", "dfs and similar", "graphs", "greedy", "shortest paths"]}, {"contestId": 769, "index": "B", "name": "News About Credit", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["*special", "greedy", "two pointers"]}, {"contestId": 769, "index": "A", "name": "Year of University Entrance", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["*special", "implementation", "sortings"]}, {"contestId": 768, "index": "G", "name": "The Winds of Winter", "type": "PROGRAMMING", "points": 2750.0, "rating": 3300, "tags": ["binary search", "data structures"]}, {"contestId": 768, "index": "F", "name": "Barrels and boxes", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["brute force", "combinatorics", "math", "number theory", "probabilities"]}, {"contestId": 768, "index": "E", "name": "Game of Stones", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["bitmasks", "dp", "games"]}, {"contestId": 768, "index": "D", "name": "Jon and Orbs", "type": "PROGRAMMING", "points": 1750.0, "rating": 2200, "tags": ["dp", "math", "probabilities"]}, {"contestId": 768, "index": "C", "name": "Jon Snow and his Favourite Number", "type": "PROGRAMMING", "points": 1250.0, "rating": 1800, "tags": ["brute force", "dp", "implementation", "sortings"]}, {"contestId": 768, "index": "B", "name": "Code For 1", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["constructive algorithms", "dfs and similar", "divide and conquer"]}, {"contestId": 768, "index": "A", "name": "Oath of the Night's Watch", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["constructive algorithms", "sortings"]}, {"contestId": 767, "index": "E", "name": "Change-free", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["greedy"]}, {"contestId": 767, "index": "D", "name": "Cartons of milk", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["binary search", "data structures", "greedy", "sortings", "two pointers"]}, {"contestId": 767, "index": "C", "name": "Garland", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["dfs and similar", "graphs", "greedy", "trees"]}, {"contestId": 767, "index": "B", "name": "The Queue", "type": "PROGRAMMING", "points": 1250.0, "rating": 2100, "tags": ["brute force", "greedy"]}, {"contestId": 767, "index": "A", "name": "Snacktower", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["data structures", "implementation"]}, {"contestId": 766, "index": "E", "name": "Mahmoud and a xor trip", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["bitmasks", "constructive algorithms", "data structures", "dfs and similar", "dp", "math", "trees"]}, {"contestId": 766, "index": "D", "name": "Mahmoud and a Dictionary", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["data structures", "dfs and similar", "dp", "dsu", "graphs"]}, {"contestId": 766, "index": "C", "name": "Mahmoud and a Message", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["brute force", "dp", "greedy", "strings"]}, {"contestId": 766, "index": "B", "name": "Mahmoud and a Triangle", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["constructive algorithms", "geometry", "greedy", "math", "number theory", "sortings"]}, {"contestId": 766, "index": "A", "name": "Mahmoud and Longest Uncommon Subsequence", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["constructive algorithms", "strings"]}, {"contestId": 765, "index": "G", "name": "Math, math everywhere", "type": "PROGRAMMING", "points": 3500.0, "rating": 3200, "tags": ["brute force", "dp", "math", "meet-in-the-middle", "number theory"]}, {"contestId": 765, "index": "F", "name": "Souvenirs", "type": "PROGRAMMING", "points": 3250.0, "rating": 3100, "tags": ["data structures"]}, {"contestId": 765, "index": "E", "name": "Tree Folding", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["dfs and similar", "dp", "greedy", "implementation", "trees"]}, {"contestId": 765, "index": "D", "name": "Artsem and Saunders", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["constructive algorithms", "dsu", "math"]}, {"contestId": 765, "index": "C", "name": "Table Tennis Game 2", "type": "PROGRAMMING", "points": 1250.0, "rating": 1200, "tags": ["math"]}, {"contestId": 765, "index": "B", "name": "Code obfuscation", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["greedy", "implementation", "strings"]}, {"contestId": 765, "index": "A", "name": "Neverending competitions", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation", "math"]}, {"contestId": 764, "index": "B", "name": "Timofey and cubes", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["constructive algorithms", "implementation"]}, {"contestId": 764, "index": "A", "name": "Taymyr is calling you", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "implementation", "math"]}, {"contestId": 763, "index": "E", "name": "Timofey and our friends animals", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["data structures", "divide and conquer", "dsu"]}, {"contestId": 763, "index": "D", "name": "Timofey and a flat tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["data structures", "graphs", "hashing", "shortest paths", "trees"]}, {"contestId": 763, "index": "C", "name": "Timofey and remoduling", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["brute force", "implementation", "math", "number theory"]}, {"contestId": 763, "index": "B", "name": "Timofey and rectangles", "type": "PROGRAMMING", "points": 750.0, "rating": 2100, "tags": ["constructive algorithms", "geometry"]}, {"contestId": 763, "index": "A", "name": "Timofey and a tree", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["dfs and similar", "dp", "dsu", "graphs", "implementation", "trees"]}, {"contestId": 762, "index": "F", "name": "Tree nesting", "type": "PROGRAMMING", "rating": 2800, "tags": ["combinatorics", "graphs", "trees"]}, {"contestId": 762, "index": "E", "name": "Radio stations", "type": "PROGRAMMING", "rating": 2200, "tags": ["binary search", "data structures"]}, {"contestId": 762, "index": "D", "name": "Maximum path", "type": "PROGRAMMING", "rating": 2300, "tags": ["dp", "greedy", "implementation"]}, {"contestId": 762, "index": "C", "name": "Two strings", "type": "PROGRAMMING", "rating": 2100, "tags": ["binary search", "hashing", "strings", "two pointers"]}, {"contestId": 762, "index": "B", "name": "USB vs. PS/2", "type": "PROGRAMMING", "rating": 1400, "tags": ["greedy", "implementation", "sortings", "two pointers"]}, {"contestId": 762, "index": "A", "name": "k-th divisor", "type": "PROGRAMMING", "rating": 1400, "tags": ["math", "number theory"]}, {"contestId": 761, "index": "F", "name": "Dasha and Photos", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["brute force", "data structures", "dp", "implementation"]}, {"contestId": 761, "index": "E", "name": "Dasha and Puzzle", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy", "trees"]}, {"contestId": 761, "index": "D", "name": "Dasha and Very Difficult Problem", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["binary search", "brute force", "constructive algorithms", "greedy", "sortings"]}, {"contestId": 761, "index": "C", "name": "Dasha and Password", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["brute force", "dp", "implementation"]}, {"contestId": 761, "index": "B", "name": "Dasha and friends", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["brute force", "implementation", "math"]}, {"contestId": 761, "index": "A", "name": "Dasha and Stairs", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["brute force", "constructive algorithms", "implementation", "math"]}, {"contestId": 760, "index": "B", "name": "Frodo and pillows", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["binary search", "greedy"]}, {"contestId": 760, "index": "A", "name": "Petr and a calendar", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "math"]}, {"contestId": 758, "index": "F", "name": "Geometrical Progression", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["brute force", "math", "number theory"]}, {"contestId": 758, "index": "E", "name": "Broken Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["dfs and similar", "dp", "graphs", "greedy", "trees"]}, {"contestId": 758, "index": "D", "name": "Ability To Convert", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["constructive algorithms", "dp", "greedy", "math", "strings"]}, {"contestId": 758, "index": "C", "name": "Unfair Poll", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["binary search", "constructive algorithms", "implementation", "math"]}, {"contestId": 758, "index": "B", "name": "Blown Garland", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["brute force", "implementation", "number theory"]}, {"contestId": 758, "index": "A", "name": "Holiday Of Equality", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "math"]}, {"contestId": 757, "index": "G", "name": "Can Bash Save the Day?", "type": "PROGRAMMING", "points": 3500.0, "rating": 3400, "tags": ["data structures", "divide and conquer", "graphs", "trees"]}, {"contestId": 757, "index": "F", "name": "Team Rocket Rises Again", "type": "PROGRAMMING", "points": 2750.0, "rating": 2800, "tags": ["data structures", "graphs", "shortest paths"]}, {"contestId": 757, "index": "E", "name": "Bash Plays with Functions", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["brute force", "combinatorics", "dp", "number theory"]}, {"contestId": 757, "index": "D", "name": "Felicity's Big Secret Revealed", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["bitmasks", "dp"]}, {"contestId": 757, "index": "C", "name": "Felicity is Coming!", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["data structures", "hashing", "sortings", "strings"]}, {"contestId": 757, "index": "B", "name": "Bash's Big Day", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["greedy", "math", "number theory"]}, {"contestId": 757, "index": "A", "name": "Gotta Catch Em' All!", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"]}, {"contestId": 756, "index": "F", "name": "Long number", "type": "PROGRAMMING", "points": 3000.0, "rating": 3400, "tags": ["expression parsing", "math", "number theory"]}, {"contestId": 756, "index": "E", "name": "Byteland coins", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 756, "index": "D", "name": "Bacterial Melee", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["brute force", "combinatorics", "dp", "string suffix structures"]}, {"contestId": 756, "index": "C", "name": "Nikita and stack", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["data structures"]}, {"contestId": 756, "index": "B", "name": "Travel Card", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["binary search", "dp"]}, {"contestId": 756, "index": "A", "name": "Pavel and barbecue", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["constructive algorithms", "dfs and similar"]}, {"contestId": 755, "index": "G", "name": "PolandBall and Many Other Balls", "type": "PROGRAMMING", "points": 3500.0, "rating": 3200, "tags": ["combinatorics", "divide and conquer", "dp", "fft", "math", "number theory"]}, {"contestId": 755, "index": "F", "name": "PolandBall and Gifts", "type": "PROGRAMMING", "points": 2750.0, "rating": 2600, "tags": ["bitmasks", "dp", "greedy"]}, {"contestId": 755, "index": "E", "name": "PolandBall and White-Red graph", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["constructive algorithms", "graphs", "shortest paths"]}, {"contestId": 755, "index": "D", "name": "PolandBall and Polygon", "type": "PROGRAMMING", "points": 2250.0, "rating": 2000, "tags": ["data structures"]}, {"contestId": 755, "index": "C", "name": "PolandBall and Forest", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["dfs and similar", "dsu", "graphs", "interactive", "trees"]}, {"contestId": 755, "index": "B", "name": "PolandBall and Game", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["binary search", "data structures", "games", "greedy", "sortings", "strings"]}, {"contestId": 755, "index": "A", "name": "PolandBall and Hypothesis", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "graphs", "math", "number theory"]}, {"contestId": 754, "index": "E", "name": "Dasha and cyclic table", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["bitmasks", "brute force", "fft", "strings", "trees"]}, {"contestId": 754, "index": "D", "name": "Fedor and coupons", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["binary search", "data structures", "greedy", "sortings"]}, {"contestId": 754, "index": "C", "name": "Vladik and chat", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["brute force", "constructive algorithms", "dp", "implementation", "strings"]}, {"contestId": 754, "index": "B", "name": "Ilya and tic-tac-toe game", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["brute force", "implementation"]}, {"contestId": 754, "index": "A", "name": "Lesha and array splitting", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["constructive algorithms", "greedy", "implementation"]}, {"contestId": 753, "index": "C", "name": "Interactive Bulls and Cows (Hard)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["brute force", "constructive algorithms", "interactive"]}, {"contestId": 753, "index": "B", "name": "Interactive Bulls and Cows (Easy)", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["brute force", "constructive algorithms", "implementation"]}, {"contestId": 753, "index": "A", "name": "Santa Claus and Candies", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["dp", "greedy", "math"]}, {"contestId": 750, "index": "H", "name": "New Year and Snowy Grid", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["dfs and similar", "dsu", "graphs", "interactive"]}, {"contestId": 750, "index": "G", "name": "New Year and Binary Tree Paths", "type": "PROGRAMMING", "points": 3250.0, "rating": 3200, "tags": ["bitmasks", "brute force", "combinatorics", "dp"]}, {"contestId": 750, "index": "F", "name": "New Year and Finding Roots", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["constructive algorithms", "implementation", "interactive", "trees"]}, {"contestId": 750, "index": "E", "name": "New Year and Old Subsequence", "type": "PROGRAMMING", "points": 2250.0, "rating": 2600, "tags": ["data structures", "divide and conquer", "dp", "matrices"]}, {"contestId": 750, "index": "D", "name": "New Year and Fireworks", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["brute force", "data structures", "dfs and similar", "dp", "implementation"]}, {"contestId": 750, "index": "C", "name": "New Year and Rating", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["binary search", "greedy", "math"]}, {"contestId": 750, "index": "B", "name": "New Year and North Pole", "type": "PROGRAMMING", "points": 750.0, "rating": 1300, "tags": ["geometry", "implementation"]}, {"contestId": 750, "index": "A", "name": "New Year and Hurry", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["binary search", "brute force", "implementation", "math"]}, {"contestId": 749, "index": "E", "name": "Inversions After Shuffle", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures", "probabilities"]}, {"contestId": 749, "index": "D", "name": "Leaving Auction", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["binary search", "data structures"]}, {"contestId": 749, "index": "C", "name": "Voting", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["greedy", "implementation", "two pointers"]}, {"contestId": 749, "index": "B", "name": "Parallelogram is Back", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["brute force", "constructive algorithms", "geometry"]}, {"contestId": 749, "index": "A", "name": "Bachgold Problem", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "implementation", "math", "number theory"]}, {"contestId": 748, "index": "F", "name": "Santa Clauses and a Soccer Championship", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["constructive algorithms", "dfs and similar", "graphs", "trees"]}, {"contestId": 748, "index": "E", "name": "Santa Claus and Tangerines", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["binary search", "data structures", "greedy", "two pointers"]}, {"contestId": 748, "index": "D", "name": "Santa Claus and a Palindrome", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["constructive algorithms", "data structures", "greedy"]}, {"contestId": 748, "index": "C", "name": "Santa Claus and Robot", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["constructive algorithms", "math"]}, {"contestId": 748, "index": "B", "name": "Santa Claus and Keyboard Check", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["implementation", "strings"]}, {"contestId": 748, "index": "A", "name": "Santa Claus and a Place in a Class", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "math"]}, {"contestId": 747, "index": "F", "name": "Igor and Interesting Numbers", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["brute force", "combinatorics", "dp", "math"]}, {"contestId": 747, "index": "E", "name": "Comments", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["dfs and similar", "expression parsing", "implementation", "strings"]}, {"contestId": 747, "index": "D", "name": "Winter Is Coming", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["dp", "greedy", "sortings"]}, {"contestId": 747, "index": "C", "name": "Servers", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["implementation"]}, {"contestId": 747, "index": "B", "name": "Mammoth's Genome Decoding", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["implementation", "strings"]}, {"contestId": 747, "index": "A", "name": "Display Size", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "math"]}, {"contestId": 746, "index": "G", "name": "New Roads", "type": "PROGRAMMING", "points": 3000.0, "rating": 2100, "tags": ["constructive algorithms", "graphs", "trees"]}, {"contestId": 746, "index": "F", "name": "Music in Car", "type": "PROGRAMMING", "points": 3000.0, "rating": 2200, "tags": ["data structures", "greedy", "two pointers"]}, {"contestId": 746, "index": "E", "name": "Numbers Exchange", "type": "PROGRAMMING", "points": 2500.0, "rating": 1900, "tags": ["greedy", "implementation", "math"]}, {"contestId": 746, "index": "D", "name": "Green and Black Tea", "type": "PROGRAMMING", "points": 2000.0, "rating": 1500, "tags": ["constructive algorithms", "greedy", "math"]}, {"contestId": 746, "index": "C", "name": "Tram", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["constructive algorithms", "implementation", "math"]}, {"contestId": 746, "index": "B", "name": "Decoding", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["implementation", "strings"]}, {"contestId": 746, "index": "A", "name": "Compote", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "math"]}, {"contestId": 745, "index": "B", "name": "Hongcow Solves A Puzzle", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["implementation"]}, {"contestId": 745, "index": "A", "name": "Hongcow Learns the Cyclic Shift", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation", "strings"]}, {"contestId": 744, "index": "E", "name": "Hongcow Masters the Cyclic Shift", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["strings", "two pointers"]}, {"contestId": 744, "index": "D", "name": "Hongcow Draws a Circle", "type": "PROGRAMMING", "points": 2250.0, "rating": 3200, "tags": ["geometry"]}, {"contestId": 744, "index": "C", "name": "Hongcow Buys a Deck of Cards", "type": "PROGRAMMING", "points": 1750.0, "rating": 2400, "tags": ["bitmasks", "brute force", "dp"]}, {"contestId": 744, "index": "B", "name": "Hongcow's Game", "type": "PROGRAMMING", "points": 1250.0, "rating": 1900, "tags": ["bitmasks", "divide and conquer", "interactive"]}, {"contestId": 744, "index": "A", "name": "Hongcow Builds A Nation", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["dfs and similar", "graphs"]}, {"contestId": 743, "index": "E", "name": "Vladik and cards", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["binary search", "bitmasks", "brute force", "dp"]}, {"contestId": 743, "index": "D", "name": "Chloe and pleasant prizes", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["dfs and similar", "dp", "graphs", "trees"]}, {"contestId": 743, "index": "C", "name": "Vladik and fractions", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["brute force", "constructive algorithms", "math", "number theory"]}, {"contestId": 743, "index": "B", "name": "Chloe and the sequence ", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["binary search", "bitmasks", "constructive algorithms", "implementation"]}, {"contestId": 743, "index": "A", "name": "Vladik and flights", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["constructive algorithms", "greedy", "implementation"]}, {"contestId": 742, "index": "B", "name": "Arpa\u2019s obvious problem and Mehrdad\u2019s terrible solution", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["brute force", "math", "number theory"]}, {"contestId": 742, "index": "A", "name": "Arpa\u2019s hard exam and Mehrdad\u2019s naive cheat", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation", "math", "number theory"]}, {"contestId": 741, "index": "E", "name": "Arpa\u2019s abnormal DNA and Mehrdad\u2019s deep interest", "type": "PROGRAMMING", "points": 2500.0, "rating": 3400, "tags": ["data structures", "string suffix structures"]}, {"contestId": 741, "index": "D", "name": "Arpa\u2019s letter-marked tree and Mehrdad\u2019s Dokhtar-kosh paths", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["data structures", "dfs and similar", "trees"]}, {"contestId": 741, "index": "C", "name": "Arpa\u2019s overnight party and Mehrdad\u2019s silent entering", "type": "PROGRAMMING", "points": 1250.0, "rating": 2600, "tags": ["constructive algorithms", "dfs and similar", "graphs"]}, {"contestId": 741, "index": "B", "name": "Arpa's weak amphitheater and Mehrdad's valuable Hoses", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["dfs and similar", "dp", "dsu"]}, {"contestId": 741, "index": "A", "name": "Arpa's loud Owf and Mehrdad's evil plan", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["dfs and similar", "math"]}, {"contestId": 740, "index": "B", "name": "Alyona and flowers", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms"]}, {"contestId": 740, "index": "A", "name": "Alyona and copybooks", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["brute force", "implementation"]}, {"contestId": 739, "index": "E", "name": "Gosha is hunting", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["brute force", "data structures", "dp", "flows", "math", "probabilities", "sortings"]}, {"contestId": 739, "index": "D", "name": "Recover a functional graph", "type": "PROGRAMMING", "points": 2000.0, "rating": 3400, "tags": ["graph matchings"]}, {"contestId": 739, "index": "C", "name": "Alyona and towers", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["data structures"]}, {"contestId": 739, "index": "B", "name": "Alyona and a tree", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["binary search", "data structures", "dfs and similar", "graphs", "trees"]}, {"contestId": 739, "index": "A", "name": "Alyona and mex", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["constructive algorithms", "greedy"]}, {"contestId": 737, "index": "F", "name": "Dirty plates", "type": "PROGRAMMING", "points": 2500.0, "rating": 3300, "tags": ["constructive algorithms", "math"]}, {"contestId": 737, "index": "E", "name": "Tanya is 5!", "type": "PROGRAMMING", "points": 2000.0, "rating": 3300, "tags": ["graph matchings", "graphs", "greedy", "schedules"]}, {"contestId": 736, "index": "E", "name": "Chess Championship", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["constructive algorithms", "flows", "greedy", "math"]}, {"contestId": 736, "index": "D", "name": "Permutations", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["math", "matrices"]}, {"contestId": 735, "index": "E", "name": "Ostap and Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["dp", "trees"]}, {"contestId": 735, "index": "D", "name": "Taxes", "type": "PROGRAMMING", "points": 1750.0, "rating": 1600, "tags": ["math", "number theory"]}, {"contestId": 735, "index": "C", "name": "Tennis Championship", "type": "PROGRAMMING", "points": 1750.0, "rating": 1600, "tags": ["combinatorics", "constructive algorithms", "greedy", "math"]}, {"contestId": 735, "index": "B", "name": "Urbanization", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["greedy", "number theory", "sortings"]}, {"contestId": 735, "index": "A", "name": "Ostap and Grasshopper", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "strings"]}, {"contestId": 734, "index": "F", "name": "Anton and School", "type": "PROGRAMMING", "points": 2750.0, "rating": 2500, "tags": ["bitmasks", "constructive algorithms", "implementation", "math"]}, {"contestId": 734, "index": "E", "name": "Anton and Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["dfs and similar", "dp", "trees"]}, {"contestId": 734, "index": "D", "name": "Anton and Chess", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["implementation"]}, {"contestId": 734, "index": "C", "name": "Anton and Making Potions", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["binary search", "dp", "greedy", "two pointers"]}, {"contestId": 734, "index": "B", "name": "Anton and Digits", "type": "PROGRAMMING", "points": 750.0, "rating": 800, "tags": ["brute force", "greedy", "implementation", "math"]}, {"contestId": 734, "index": "A", "name": "Anton and Danik", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "strings"]}, {"contestId": 733, "index": "F", "name": "Drivers Dissatisfaction", "type": "PROGRAMMING", "points": 3000.0, "rating": 2200, "tags": ["data structures", "dsu", "graphs", "trees"]}, {"contestId": 733, "index": "E", "name": "Sleep in Class", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["constructive algorithms", "data structures", "math", "two pointers"]}, {"contestId": 733, "index": "D", "name": "Kostya the Sculptor", "type": "PROGRAMMING", "points": 2000.0, "rating": 1600, "tags": ["data structures", "hashing"]}, {"contestId": 733, "index": "C", "name": "Epidemic in Monstropolis", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["constructive algorithms", "dp", "greedy", "two pointers"]}, {"contestId": 733, "index": "B", "name": "Parade", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["math"]}, {"contestId": 733, "index": "A", "name": "Grasshopper And the String", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"]}, {"contestId": 732, "index": "F", "name": "Tourist Reform", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["dfs and similar", "graphs"]}, {"contestId": 732, "index": "E", "name": "Sockets", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["greedy", "sortings"]}, {"contestId": 732, "index": "D", "name": "Exams", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["binary search", "greedy", "sortings"]}, {"contestId": 732, "index": "C", "name": "Sanatorium", "type": "PROGRAMMING", "points": 1500.0, "rating": 1200, "tags": ["binary search", "constructive algorithms", "greedy", "implementation", "math"]}, {"contestId": 732, "index": "B", "name": "Cormen --- The Best Friend Of a Man", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["dp", "greedy"]}, {"contestId": 732, "index": "A", "name": "Buy a Shovel", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "constructive algorithms", "implementation", "math"]}, {"contestId": 731, "index": "F", "name": "Video Cards", "type": "PROGRAMMING", "points": 3000.0, "rating": 1900, "tags": ["brute force", "data structures", "implementation", "math", "number theory"]}, {"contestId": 731, "index": "E", "name": "Funny Game", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["dp", "games"]}, {"contestId": 731, "index": "D", "name": "80-th Level Archeology", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["brute force", "data structures", "greedy", "sortings"]}, {"contestId": 731, "index": "C", "name": "Socks", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["dfs and similar", "dsu", "graphs", "greedy"]}, {"contestId": 731, "index": "B", "name": "Coupons and Discounts", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms", "greedy"]}, {"contestId": 731, "index": "A", "name": "Night at the Museum", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "strings"]}, {"contestId": 730, "index": "L", "name": "Expression Queries", "type": "PROGRAMMING", "rating": 3200, "tags": []}, {"contestId": 730, "index": "K", "name": "Roads Orientation Problem", "type": "PROGRAMMING", "rating": 3200, "tags": ["graphs"]}, {"contestId": 730, "index": "J", "name": "Bottles", "type": "PROGRAMMING", "rating": 1900, "tags": ["dp"]}, {"contestId": 730, "index": "I", "name": "Olympiad in Programming and Sports", "type": "PROGRAMMING", "rating": 2000, "tags": ["dp", "flows", "graphs", "greedy"]}, {"contestId": 730, "index": "H", "name": "Delete Them", "type": "PROGRAMMING", "rating": 1300, "tags": ["constructive algorithms", "implementation"]}, {"contestId": 730, "index": "G", "name": "Car Repair Shop", "type": "PROGRAMMING", "rating": 1600, "tags": ["implementation"]}, {"contestId": 730, "index": "F", "name": "Ber Patio", "type": "PROGRAMMING", "rating": 3100, "tags": []}, {"contestId": 730, "index": "E", "name": "Award Ceremony", "type": "PROGRAMMING", "rating": 2200, "tags": ["greedy", "implementation"]}, {"contestId": 730, "index": "D", "name": "Running Over The Bridges", "type": "PROGRAMMING", "rating": 2200, "tags": ["greedy", "implementation", "math"]}, {"contestId": 730, "index": "C", "name": "Bulmart", "type": "PROGRAMMING", "rating": 2100, "tags": ["binary search", "dfs and similar"]}, {"contestId": 730, "index": "B", "name": "Minimum and Maximum", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "interactive"]}, {"contestId": 730, "index": "A", "name": "Toda 2", "type": "PROGRAMMING", "rating": 1800, "tags": ["greedy", "implementation"]}, {"contestId": 729, "index": "F", "name": "Financiers Game", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["dp"]}, {"contestId": 729, "index": "E", "name": "Subordinates", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["constructive algorithms", "data structures", "graphs", "greedy", "sortings"]}, {"contestId": 729, "index": "D", "name": "Sea Battle", "type": "PROGRAMMING", "points": 1750.0, "rating": 1700, "tags": ["constructive algorithms", "greedy", "math"]}, {"contestId": 729, "index": "C", "name": "Road to Cinema", "type": "PROGRAMMING", "points": 1750.0, "rating": 1700, "tags": ["binary search", "greedy", "sortings"]}, {"contestId": 729, "index": "B", "name": "Spotlights", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["dp", "implementation"]}, {"contestId": 729, "index": "A", "name": "Interview with Oleg", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation", "strings"]}, {"contestId": 727, "index": "F", "name": "Polycarp's problems", "type": "PROGRAMMING", "points": 3000.0, "rating": 2300, "tags": ["binary search", "dp", "greedy"]}, {"contestId": 727, "index": "E", "name": "Games on a CD", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["data structures", "hashing", "string suffix structures", "strings"]}, {"contestId": 727, "index": "D", "name": "T-shirts Distribution", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["constructive algorithms", "flows", "greedy"]}, {"contestId": 727, "index": "C", "name": "Guess the Array", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["constructive algorithms", "interactive", "math"]}, {"contestId": 727, "index": "B", "name": "Bill Total Value", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["expression parsing", "implementation", "strings"]}, {"contestId": 727, "index": "A", "name": "Transformation: from A to B", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["brute force", "dfs and similar", "math"]}, {"contestId": 725, "index": "G", "name": "Messages on a Tree", "type": "PROGRAMMING", "points": 3500.0, "rating": 3300, "tags": []}, {"contestId": 725, "index": "F", "name": "Family Photos", "type": "PROGRAMMING", "points": 3250.0, "rating": 2900, "tags": ["games", "greedy"]}, {"contestId": 725, "index": "E", "name": "Too Much Money", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["brute force", "greedy"]}, {"contestId": 725, "index": "D", "name": "Contest Balloons", "type": "PROGRAMMING", "points": 2250.0, "rating": 1800, "tags": ["data structures", "greedy"]}, {"contestId": 725, "index": "C", "name": "Hidden Word", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["brute force", "constructive algorithms", "implementation", "strings"]}, {"contestId": 725, "index": "B", "name": "Food on the Plane", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["implementation", "math"]}, {"contestId": 725, "index": "A", "name": "Jumping Ball", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"]}, {"contestId": 724, "index": "G", "name": "Xor-matic Number of the Graph", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["bitmasks", "graphs", "math", "number theory", "trees"]}, {"contestId": 724, "index": "F", "name": "Uniformly Branched Trees", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["combinatorics", "dp", "trees"]}, {"contestId": 724, "index": "E", "name": "Goods transportation", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["dp", "flows", "greedy"]}, {"contestId": 724, "index": "D", "name": "Dense Subsequence", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["data structures", "greedy", "strings"]}, {"contestId": 724, "index": "C", "name": "Ray Tracing", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["greedy", "hashing", "implementation", "math", "number theory", "sortings"]}, {"contestId": 724, "index": "B", "name": "Batch Sort", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["brute force", "greedy", "implementation", "math"]}, {"contestId": 724, "index": "A", "name": "Checking the Calendar", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"]}, {"contestId": 723, "index": "F", "name": "st-Spanning Tree", "type": "PROGRAMMING", "points": 3000.0, "rating": 2300, "tags": ["dsu", "graphs", "greedy", "implementation"]}, {"contestId": 723, "index": "E", "name": "One-Way Reform", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["constructive algorithms", "dfs and similar", "flows", "graphs", "greedy"]}, {"contestId": 723, "index": "D", "name": "Lakes in Berland", "type": "PROGRAMMING", "points": 2000.0, "rating": 1600, "tags": ["dfs and similar", "dsu", "graphs", "greedy", "implementation"]}, {"contestId": 723, "index": "C", "name": "Polycarp at the Radio", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["greedy"]}, {"contestId": 723, "index": "B", "name": "Text Document Analysis", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["expression parsing", "implementation", "strings"]}, {"contestId": 723, "index": "A", "name": "The New Year: Meeting Friends", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "math", "sortings"]}, {"contestId": 722, "index": "F", "name": "Cyclic Cipher", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["chinese remainder theorem", "data structures", "implementation", "number theory", "two pointers"]}, {"contestId": 722, "index": "E", "name": "Research Rover", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["combinatorics", "dp"]}, {"contestId": 722, "index": "D", "name": "Generating Sets", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["binary search", "data structures", "dfs and similar", "greedy", "strings", "trees"]}, {"contestId": 722, "index": "C", "name": "Destroying Array", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["data structures", "dsu"]}, {"contestId": 722, "index": "B", "name": "Verse Pattern", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["implementation", "strings"]}, {"contestId": 722, "index": "A", "name": "Broken Clock", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["brute force", "implementation"]}, {"contestId": 721, "index": "E", "name": "Road to Home", "type": "PROGRAMMING", "points": 2750.0, "rating": 2700, "tags": ["binary search", "dp"]}, {"contestId": 721, "index": "D", "name": "Maxim and Array", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["constructive algorithms", "data structures", "greedy", "math"]}, {"contestId": 721, "index": "C", "name": "Journey", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["dp", "graphs"]}, {"contestId": 721, "index": "B", "name": "Passwords", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["implementation", "math", "sortings", "strings"]}, {"contestId": 721, "index": "A", "name": "One-dimensional Japanese Crossword", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 720, "index": "F", "name": "Array Covering", "type": "PROGRAMMING", "rating": 3100, "tags": ["data structures"]}, {"contestId": 720, "index": "E", "name": "Cipher", "type": "PROGRAMMING", "rating": 3100, "tags": ["implementation"]}, {"contestId": 720, "index": "D", "name": "Slalom", "type": "PROGRAMMING", "rating": 3100, "tags": ["data structures", "dp", "sortings"]}, {"contestId": 720, "index": "C", "name": "Homework", "type": "PROGRAMMING", "rating": 3100, "tags": ["constructive algorithms"]}, {"contestId": 720, "index": "B", "name": "Cactusophobia", "type": "PROGRAMMING", "rating": 2400, "tags": ["dfs and similar", "flows"]}, {"contestId": 720, "index": "A", "name": "Closing ceremony", "type": "PROGRAMMING", "rating": 2000, "tags": ["greedy"]}, {"contestId": 719, "index": "B", "name": "Anatoly and Cockroaches", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["greedy"]}, {"contestId": 719, "index": "A", "name": "Vitya in the Countryside", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["implementation"]}, {"contestId": 718, "index": "E", "name": "Matvey's Birthday", "type": "PROGRAMMING", "points": 2500.0, "rating": 3300, "tags": ["bitmasks", "graphs"]}, {"contestId": 718, "index": "D", "name": "Andrew and Chemistry", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["dp", "hashing", "trees"]}, {"contestId": 718, "index": "C", "name": "Sasha and Array", "type": "PROGRAMMING", "points": 1250.0, "rating": 2300, "tags": ["data structures", "math", "matrices"]}, {"contestId": 718, "index": "A", "name": "Efim and Strange Grade", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["dp", "implementation", "math"]}, {"contestId": 717, "index": "I", "name": "Cowboy Beblop at his computer", "type": "PROGRAMMING", "rating": 2800, "tags": ["geometry"]}, {"contestId": 717, "index": "H", "name": "Pokermon League challenge", "type": "PROGRAMMING", "rating": 2400, "tags": ["math", "probabilities"]}, {"contestId": 717, "index": "G", "name": "Underfail", "type": "PROGRAMMING", "rating": 2400, "tags": ["flows"]}, {"contestId": 717, "index": "F", "name": "Heroes of Making Magic III", "type": "PROGRAMMING", "rating": 2600, "tags": ["data structures"]}, {"contestId": 717, "index": "E", "name": "Paint it really, really dark gray", "type": "PROGRAMMING", "rating": 1900, "tags": ["dfs and similar"]}, {"contestId": 717, "index": "D", "name": "Dexterina\u2019s Lab", "type": "PROGRAMMING", "rating": 1900, "tags": ["games", "matrices", "probabilities"]}, {"contestId": 717, "index": "C", "name": "Potions Homework", "type": "PROGRAMMING", "rating": 1200, "tags": ["implementation", "sortings"]}, {"contestId": 717, "index": "B", "name": "R3D3\u2019s Summer Adventure", "type": "PROGRAMMING", "rating": 2700, "tags": ["dp", "greedy"]}, {"contestId": 717, "index": "A", "name": "Festival Organization", "type": "PROGRAMMING", "rating": 2900, "tags": ["math", "number theory"]}, {"contestId": 716, "index": "B", "name": "Complete the Word", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["greedy", "two pointers"]}, {"contestId": 716, "index": "A", "name": "Crazy Computer", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 715, "index": "E", "name": "Complete the Permutations", "type": "PROGRAMMING", "points": 2750.0, "rating": 3400, "tags": ["combinatorics", "fft", "graphs", "math"]}, {"contestId": 715, "index": "D", "name": "Create a Maze", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["constructive algorithms"]}, {"contestId": 715, "index": "C", "name": "Digit Tree", "type": "PROGRAMMING", "points": 1500.0, "rating": 2700, "tags": ["dfs and similar", "divide and conquer", "dsu", "trees"]}, {"contestId": 715, "index": "B", "name": "Complete The Graph", "type": "PROGRAMMING", "points": 1000.0, "rating": 2300, "tags": ["binary search", "constructive algorithms", "graphs", "shortest paths"]}, {"contestId": 715, "index": "A", "name": "Plus and Square Root", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["constructive algorithms", "math"]}, {"contestId": 714, "index": "B", "name": "Filya and Homework", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["implementation", "sortings"]}, {"contestId": 714, "index": "A", "name": "Meeting of Old Friends", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["implementation", "math"]}, {"contestId": 713, "index": "E", "name": "Sonya Partymaker", "type": "PROGRAMMING", "points": 2000.0, "rating": 3300, "tags": ["binary search", "dp"]}, {"contestId": 713, "index": "D", "name": "Animals and Puzzle", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["binary search", "data structures"]}, {"contestId": 713, "index": "C", "name": "Sonya and Problem Wihtout a Legend", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["dp", "sortings"]}, {"contestId": 713, "index": "B", "name": "Searching Rectangles", "type": "PROGRAMMING", "points": 1000.0, "rating": 2200, "tags": ["binary search", "constructive algorithms", "interactive"]}, {"contestId": 713, "index": "A", "name": "Sonya and Queries", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["data structures", "implementation"]}, {"contestId": 712, "index": "E", "name": "Memory and Casinos", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["data structures", "math", "probabilities"]}, {"contestId": 712, "index": "D", "name": "Memory and Scores", "type": "PROGRAMMING", "points": 2250.0, "rating": 2200, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 712, "index": "C", "name": "Memory and De-Evolution", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["greedy", "math"]}, {"contestId": 712, "index": "B", "name": "Memory and Trident", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["implementation", "strings"]}, {"contestId": 712, "index": "A", "name": "Memory and Crow", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "math"]}, {"contestId": 711, "index": "E", "name": "ZS and The Birthday Paradox", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["math", "number theory", "probabilities"]}, {"contestId": 711, "index": "D", "name": "Directed Roads", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["combinatorics", "dfs and similar", "graphs", "math"]}, {"contestId": 711, "index": "C", "name": "Coloring Trees", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["dp"]}, {"contestId": 711, "index": "B", "name": "Chris and Magic Square", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["constructive algorithms", "implementation"]}, {"contestId": 711, "index": "A", "name": "Bus to Udayland", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "implementation"]}, {"contestId": 710, "index": "F", "name": "String Set Queries", "type": "PROGRAMMING", "rating": 2400, "tags": ["brute force", "data structures", "hashing", "string suffix structures", "strings"]}, {"contestId": 710, "index": "E", "name": "Generate a String", "type": "PROGRAMMING", "rating": 2000, "tags": ["dfs and similar", "dp"]}, {"contestId": 710, "index": "D", "name": "Two Arithmetic Progressions", "type": "PROGRAMMING", "rating": 2500, "tags": ["math", "number theory"]}, {"contestId": 710, "index": "C", "name": "Magic Odd Square", "type": "PROGRAMMING", "rating": 1500, "tags": ["constructive algorithms", "math"]}, {"contestId": 710, "index": "B", "name": "Optimal Point on a Line", "type": "PROGRAMMING", "rating": 1400, "tags": ["brute force", "sortings"]}, {"contestId": 710, "index": "A", "name": "King Moves", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"]}, {"contestId": 709, "index": "B", "name": "Checkpoints", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["greedy", "implementation", "sortings"]}, {"contestId": 709, "index": "A", "name": "Juicer", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation"]}, {"contestId": 708, "index": "E", "name": "Student's Camp", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["dp", "math"]}, {"contestId": 708, "index": "D", "name": "Incorrect Flow", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["flows"]}, {"contestId": 708, "index": "C", "name": "Centroids", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["data structures", "dfs and similar", "dp", "graphs", "greedy", "trees"]}, {"contestId": 708, "index": "B", "name": "Recover the String", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["constructive algorithms", "greedy", "implementation", "math"]}, {"contestId": 708, "index": "A", "name": "Letters Cyclic Shift", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["constructive algorithms", "greedy", "implementation", "strings"]}, {"contestId": 707, "index": "E", "name": "Garlands", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures"]}, {"contestId": 707, "index": "D", "name": "Persistent Bookcase ", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["bitmasks", "data structures", "dfs and similar", "implementation"]}, {"contestId": 707, "index": "C", "name": "Pythagorean Triples", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["math", "number theory"]}, {"contestId": 707, "index": "B", "name": "Bakery", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["graphs"]}, {"contestId": 707, "index": "A", "name": "Brain's Photos", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 706, "index": "E", "name": "Working routine", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["data structures", "implementation"]}, {"contestId": 706, "index": "D", "name": "Vasiliy's Multiset", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["binary search", "bitmasks", "data structures", "trees"]}, {"contestId": 706, "index": "C", "name": "Hard problem", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["dp", "strings"]}, {"contestId": 706, "index": "B", "name": "Interesting drink", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["binary search", "dp", "implementation"]}, {"contestId": 706, "index": "A", "name": "Beru-taxi", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["brute force", "geometry", "implementation"]}, {"contestId": 705, "index": "B", "name": "Spider Man", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["games", "math"]}, {"contestId": 705, "index": "A", "name": "Hulk", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 704, "index": "E", "name": "Iron Man", "type": "PROGRAMMING", "points": 2500.0, "rating": 3300, "tags": ["data structures", "geometry", "trees"]}, {"contestId": 704, "index": "D", "name": "Captain America", "type": "PROGRAMMING", "points": 2000.0, "rating": 3100, "tags": ["flows", "greedy"]}, {"contestId": 704, "index": "C", "name": "Black Widow", "type": "PROGRAMMING", "points": 1250.0, "rating": 2900, "tags": ["dp", "graphs", "implementation", "math"]}, {"contestId": 704, "index": "B", "name": "Ant Man", "type": "PROGRAMMING", "points": 1250.0, "rating": 2500, "tags": ["dp", "graphs", "greedy"]}, {"contestId": 704, "index": "A", "name": "Thor", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["brute force", "data structures", "implementation"]}, {"contestId": 703, "index": "E", "name": "Mishka and Divisors", "type": "PROGRAMMING", "points": 2250.0, "rating": 2600, "tags": ["dp", "number theory"]}, {"contestId": 703, "index": "D", "name": "Mishka and Interesting sum", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["data structures"]}, {"contestId": 703, "index": "C", "name": "Chris and Road", "type": "PROGRAMMING", "points": 1750.0, "rating": 2100, "tags": ["geometry", "implementation"]}, {"contestId": 703, "index": "B", "name": "Mishka and trip", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["implementation", "math"]}, {"contestId": 703, "index": "A", "name": "Mishka and Game", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 702, "index": "F", "name": "T-Shirts", "type": "PROGRAMMING", "rating": 2800, "tags": ["data structures"]}, {"contestId": 702, "index": "E", "name": "Analysis of Pathes in Functional Graph", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "graphs"]}, {"contestId": 702, "index": "D", "name": "Road to Post Office", "type": "PROGRAMMING", "rating": 1900, "tags": ["math"]}, {"contestId": 702, "index": "C", "name": "Cellular Network", "type": "PROGRAMMING", "rating": 1500, "tags": ["binary search", "implementation", "two pointers"]}, {"contestId": 702, "index": "B", "name": "Powers of Two", "type": "PROGRAMMING", "rating": 1500, "tags": ["brute force", "data structures", "implementation", "math"]}, {"contestId": 702, "index": "A", "name": "Maximum Increase", "type": "PROGRAMMING", "rating": 800, "tags": ["dp", "greedy", "implementation"]}, {"contestId": 701, "index": "C", "name": "They Are Everywhere", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["binary search", "strings", "two pointers"]}, {"contestId": 701, "index": "B", "name": "Cells Not Under Attack", "type": "PROGRAMMING", "points": 750.0, "rating": 1200, "tags": ["data structures", "math"]}, {"contestId": 701, "index": "A", "name": "Cards", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "implementation"]}, {"contestId": 700, "index": "E", "name": "Cool Slogans", "type": "PROGRAMMING", "points": 3000.0, "rating": 3300, "tags": ["string suffix structures", "strings"]}, {"contestId": 700, "index": "D", "name": "Huffman Coding on Segment", "type": "PROGRAMMING", "points": 2250.0, "rating": 3100, "tags": ["data structures", "greedy"]}, {"contestId": 700, "index": "C", "name": "Break Up", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["dfs and similar", "graphs"]}, {"contestId": 700, "index": "B", "name": "Connecting Universities", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["dfs and similar", "dp", "graphs", "trees"]}, {"contestId": 700, "index": "A", "name": "As Fast As Possible", "type": "PROGRAMMING", "points": 500.0, "rating": 1900, "tags": ["binary search", "math"]}, {"contestId": 699, "index": "B", "name": "One Bomb", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["implementation"]}, {"contestId": 699, "index": "A", "name": "Launch of Collider", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"]}, {"contestId": 698, "index": "F", "name": "Coprime Permutation", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["combinatorics", "number theory"]}, {"contestId": 698, "index": "E", "name": "Cron", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": []}, {"contestId": 698, "index": "D", "name": "Limak and Shooting Points", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["brute force", "geometry", "math"]}, {"contestId": 698, "index": "C", "name": "LRU", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["bitmasks", "dp", "math", "probabilities"]}, {"contestId": 698, "index": "B", "name": "Fix a Tree", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["constructive algorithms", "dfs and similar", "dsu", "graphs", "trees"]}, {"contestId": 698, "index": "A", "name": "Vacations", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["dp"]}, {"contestId": 697, "index": "B", "name": "Barnicle", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["brute force", "implementation", "math", "strings"]}, {"contestId": 697, "index": "A", "name": "Pineapple Incident", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation", "math"]}, {"contestId": 696, "index": "F", "name": "...Dary!", "type": "PROGRAMMING", "points": 3000.0, "rating": 3300, "tags": ["binary search", "geometry", "two pointers"]}, {"contestId": 696, "index": "E", "name": "...Wait for it...", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["data structures", "dsu", "trees"]}, {"contestId": 696, "index": "D", "name": "Legen...", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["data structures", "dp", "matrices", "strings"]}, {"contestId": 696, "index": "C", "name": "PLEASE", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["combinatorics", "dp", "implementation", "math", "matrices"]}, {"contestId": 696, "index": "B", "name": "Puzzles", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["dfs and similar", "math", "probabilities", "trees"]}, {"contestId": 696, "index": "A", "name": "Lorenzo Von Matterhorn", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["brute force", "data structures", "implementation", "trees"]}, {"contestId": 691, "index": "F", "name": "Couple Cover", "type": "PROGRAMMING", "rating": 2200, "tags": ["brute force", "dp", "number theory"]}, {"contestId": 691, "index": "E", "name": "Xor-sequences", "type": "PROGRAMMING", "rating": 1900, "tags": ["matrices"]}, {"contestId": 691, "index": "D", "name": "Swaps in Permutation", "type": "PROGRAMMING", "rating": 1700, "tags": ["dfs and similar", "dsu", "math"]}, {"contestId": 691, "index": "C", "name": "Exponential notation", "type": "PROGRAMMING", "rating": 1800, "tags": ["implementation", "strings"]}, {"contestId": 691, "index": "B", "name": "s-palindrome", "type": "PROGRAMMING", "rating": 1600, "tags": ["implementation", "strings"]}, {"contestId": 691, "index": "A", "name": "Fashion in Berland", "type": "PROGRAMMING", "rating": 1000, "tags": ["implementation"]}, {"contestId": 690, "index": "F3", "name": "Tree of Life (hard)", "type": "PROGRAMMING", "rating": 3200, "tags": ["trees"]}, {"contestId": 690, "index": "F2", "name": "Tree of Life (medium)", "type": "PROGRAMMING", "rating": 2700, "tags": ["constructive algorithms", "hashing", "trees"]}, {"contestId": 690, "index": "F1", "name": "Tree of Life (easy)", "type": "PROGRAMMING", "rating": 1300, "tags": []}, {"contestId": 690, "index": "E2", "name": "Photographs (II)", "type": "PROGRAMMING", "rating": 2600, "tags": []}, {"contestId": 690, "index": "E1", "name": "Photographs (I)", "type": "PROGRAMMING", "rating": 1800, "tags": []}, {"contestId": 690, "index": "D3", "name": "The Wall (hard)", "type": "PROGRAMMING", "rating": 2100, "tags": []}, {"contestId": 690, "index": "D2", "name": "The Wall (medium)", "type": "PROGRAMMING", "rating": 1800, "tags": ["combinatorics"]}, {"contestId": 690, "index": "D1", "name": "The Wall (easy)", "type": "PROGRAMMING", "rating": 1200, "tags": []}, {"contestId": 690, "index": "C3", "name": "Brain Network (hard)", "type": "PROGRAMMING", "rating": 2200, "tags": ["trees"]}, {"contestId": 690, "index": "C2", "name": "Brain Network (medium)", "type": "PROGRAMMING", "rating": 1500, "tags": ["dfs and similar", "graphs", "trees"]}, {"contestId": 690, "index": "C1", "name": "Brain Network (easy)", "type": "PROGRAMMING", "rating": 1300, "tags": []}, {"contestId": 690, "index": "B3", "name": "Recover Polygon (hard)", "type": "PROGRAMMING", "rating": 2600, "tags": []}, {"contestId": 690, "index": "B2", "name": "Recover Polygon (medium)", "type": "PROGRAMMING", "rating": 2600, "tags": ["geometry"]}, {"contestId": 690, "index": "B1", "name": "Recover Polygon (easy)", "type": "PROGRAMMING", "rating": 1700, "tags": []}, {"contestId": 690, "index": "A3", "name": "Collective Mindsets (hard)", "type": "PROGRAMMING", "rating": 2400, "tags": []}, {"contestId": 690, "index": "A2", "name": "Collective Mindsets (medium)", "type": "PROGRAMMING", "rating": 2300, "tags": []}, {"contestId": 690, "index": "A1", "name": "Collective Mindsets (easy)", "type": "PROGRAMMING", "rating": 1100, "tags": []}, {"contestId": 689, "index": "E", "name": "Mike and Geometry Problem", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["combinatorics", "data structures", "dp", "geometry", "implementation"]}, {"contestId": 689, "index": "D", "name": "Friends and Subsequences", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["binary search", "data structures"]}, {"contestId": 689, "index": "C", "name": "Mike and Chocolate Thieves", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["binary search", "combinatorics", "math"]}, {"contestId": 689, "index": "B", "name": "Mike and Shortcuts", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["dfs and similar", "graphs", "greedy", "shortest paths"]}, {"contestId": 689, "index": "A", "name": "Mike and Cellphone", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["brute force", "constructive algorithms", "implementation"]}, {"contestId": 688, "index": "B", "name": "Lovely Palindromes", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["constructive algorithms", "math"]}, {"contestId": 688, "index": "A", "name": "Opponents", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 687, "index": "E", "name": "TOF", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["dfs and similar", "graphs"]}, {"contestId": 687, "index": "D", "name": "Dividing Kingdom II", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["brute force", "data structures", "dsu", "graphs", "sortings"]}, {"contestId": 687, "index": "C", "name": "The Values You Can Make", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["dp"]}, {"contestId": 687, "index": "B", "name": "Remainders Game", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["chinese remainder theorem", "math", "number theory"]}, {"contestId": 687, "index": "A", "name": "NP-Hard Problem", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["dfs and similar", "graphs"]}, {"contestId": 686, "index": "B", "name": "Little Robber Girl's Zoo", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms", "implementation", "sortings"]}, {"contestId": 686, "index": "A", "name": "Free Ice Cream", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "implementation"]}, {"contestId": 685, "index": "E", "name": "Travelling Through the Snow Queen's Kingdom", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["bitmasks", "brute force", "divide and conquer", "graphs"]}, {"contestId": 685, "index": "D", "name": "Kay and Eternity", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["brute force", "implementation", "sortings"]}, {"contestId": 685, "index": "C", "name": "Optimal Point", "type": "PROGRAMMING", "points": 1250.0, "rating": 2900, "tags": ["binary search", "math"]}, {"contestId": 685, "index": "B", "name": "Kay and Snowflake", "type": "PROGRAMMING", "points": 1250.0, "rating": 1900, "tags": ["data structures", "dfs and similar", "dp", "trees"]}, {"contestId": 685, "index": "A", "name": "Robbers' watch", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["brute force", "combinatorics", "dp", "math"]}, {"contestId": 683, "index": "J", "name": "The Hero with Bombs", "type": "PROGRAMMING", "rating": 3000, "tags": ["*special"]}, {"contestId": 683, "index": "I", "name": "Loader", "type": "PROGRAMMING", "rating": 2500, "tags": ["*special"]}, {"contestId": 683, "index": "H", "name": "Exchange of Books", "type": "PROGRAMMING", "rating": 1900, "tags": ["*special"]}, {"contestId": 683, "index": "G", "name": "The Fraction", "type": "PROGRAMMING", "rating": 1900, "tags": ["*special"]}, {"contestId": 683, "index": "F", "name": "Reformat the String", "type": "PROGRAMMING", "rating": 1800, "tags": ["*special"]}, {"contestId": 683, "index": "E", "name": "Hammer throwing", "type": "PROGRAMMING", "rating": 1800, "tags": ["*special"]}, {"contestId": 683, "index": "D", "name": "Chocolate Bar", "type": "PROGRAMMING", "rating": 1400, "tags": ["*special", "math"]}, {"contestId": 683, "index": "C", "name": "Symmetric Difference", "type": "PROGRAMMING", "rating": 1600, "tags": ["*special"]}, {"contestId": 683, "index": "B", "name": "The Teacher of Physical Education", "type": "PROGRAMMING", "rating": 1600, "tags": ["*special"]}, {"contestId": 683, "index": "A", "name": "The Check of the Point", "type": "PROGRAMMING", "rating": 1200, "tags": ["*special", "geometry"]}, {"contestId": 682, "index": "E", "name": "Alyona and Triangles", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["geometry", "two pointers"]}, {"contestId": 682, "index": "D", "name": "Alyona and Strings", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["dp", "strings"]}, {"contestId": 682, "index": "C", "name": "Alyona and the Tree", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["dfs and similar", "dp", "graphs", "trees"]}, {"contestId": 682, "index": "B", "name": "Alyona and Mex", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["sortings"]}, {"contestId": 682, "index": "A", "name": "Alyona and Numbers", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["constructive algorithms", "math", "number theory"]}, {"contestId": 681, "index": "E", "name": "Runaway to a Shadow", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["geometry", "sortings"]}, {"contestId": 681, "index": "D", "name": "Gifts by the List", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["constructive algorithms", "dfs and similar", "graphs", "trees"]}, {"contestId": 681, "index": "C", "name": "Heap Operations", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["constructive algorithms", "data structures", "greedy"]}, {"contestId": 681, "index": "B", "name": "Economy Game", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["brute force"]}, {"contestId": 681, "index": "A", "name": "A Good Contest", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 680, "index": "B", "name": "Bear and Finding Criminals", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["constructive algorithms", "implementation"]}, {"contestId": 680, "index": "A", "name": "Bear and Five Cards", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "implementation"]}, {"contestId": 679, "index": "E", "name": "Bear and Bad Powers of 42", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["data structures"]}, {"contestId": 679, "index": "D", "name": "Bear and Chase", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["brute force", "dfs and similar", "graphs", "implementation", "math", "probabilities"]}, {"contestId": 679, "index": "C", "name": "Bear and Square Grid", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["dfs and similar", "dsu", "implementation"]}, {"contestId": 679, "index": "B", "name": "Bear and Tower of Cubes", "type": "PROGRAMMING", "points": 1250.0, "rating": 2200, "tags": ["binary search", "dp", "greedy"]}, {"contestId": 679, "index": "A", "name": "Bear and Prime 100", "type": "PROGRAMMING", "points": 750.0, "rating": 1400, "tags": ["constructive algorithms", "interactive", "math"]}, {"contestId": 678, "index": "F", "name": "Lena and Queries", "type": "PROGRAMMING", "rating": 2500, "tags": ["data structures", "divide and conquer", "geometry"]}, {"contestId": 678, "index": "E", "name": "Another Sith Tournament", "type": "PROGRAMMING", "rating": 2200, "tags": ["bitmasks", "dp", "math", "probabilities"]}, {"contestId": 678, "index": "D", "name": "Iterated Linear Function", "type": "PROGRAMMING", "rating": 1700, "tags": ["math", "number theory"]}, {"contestId": 678, "index": "C", "name": "Joty and Chocolate", "type": "PROGRAMMING", "rating": 1600, "tags": ["implementation", "math", "number theory"]}, {"contestId": 678, "index": "B", "name": "The Same Calendar", "type": "PROGRAMMING", "rating": 1600, "tags": ["implementation"]}, {"contestId": 678, "index": "A", "name": "Johny Likes Numbers", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "math"]}, {"contestId": 677, "index": "E", "name": "Vanya and Balloons", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["binary search", "brute force", "dp", "implementation"]}, {"contestId": 677, "index": "D", "name": "Vanya and Treasure", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["data structures", "dp", "graphs", "shortest paths"]}, {"contestId": 677, "index": "C", "name": "Vanya and Label", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["bitmasks", "combinatorics", "implementation", "strings"]}, {"contestId": 677, "index": "B", "name": "Vanya and Food Processor", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["implementation", "math"]}, {"contestId": 677, "index": "A", "name": "Vanya and Fence", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 676, "index": "E", "name": "The Last Fight Between Human and AI", "type": "PROGRAMMING", "points": 2250.0, "rating": 2400, "tags": ["math"]}, {"contestId": 676, "index": "D", "name": "Theseus and labyrinth", "type": "PROGRAMMING", "points": 2250.0, "rating": 2000, "tags": ["graphs", "implementation", "shortest paths"]}, {"contestId": 676, "index": "C", "name": "Vasya and String", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["binary search", "dp", "strings", "two pointers"]}, {"contestId": 676, "index": "B", "name": "Pyramid of Glasses", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["implementation", "math", "math"]}, {"contestId": 676, "index": "A", "name": "Nicholas and Permutation", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "implementation"]}, {"contestId": 675, "index": "E", "name": "Trains and Statistic", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["data structures", "dp", "greedy"]}, {"contestId": 675, "index": "D", "name": "\u0414\u0435\u0440\u0435\u0432\u043e", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["data structures", "trees"]}, {"contestId": 675, "index": "C", "name": "Money Transfers", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["constructive algorithms", "data structures", "greedy", "sortings"]}, {"contestId": 675, "index": "B", "name": "Restoring Painting", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["brute force", "constructive algorithms", "math"]}, {"contestId": 675, "index": "A", "name": "Infinite Sequence", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["math"]}, {"contestId": 673, "index": "B", "name": "Problems for Round", "type": "PROGRAMMING", "points": 750.0, "rating": 1300, "tags": ["greedy", "implementation"]}, {"contestId": 673, "index": "A", "name": "Bear and Game", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 672, "index": "B", "name": "Different is Good", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["constructive algorithms", "implementation", "strings"]}, {"contestId": 672, "index": "A", "name": "Summer Camp", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 671, "index": "E", "name": "Organizing a Race", "type": "PROGRAMMING", "points": 3000.0, "rating": 3300, "tags": ["data structures", "greedy"]}, {"contestId": 671, "index": "D", "name": "Roads in Yusland", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["data structures", "dp", "greedy"]}, {"contestId": 671, "index": "C", "name": "Ultimate Weirdness of an Array", "type": "PROGRAMMING", "points": 1500.0, "rating": 2800, "tags": ["data structures", "number theory"]}, {"contestId": 671, "index": "B", "name": "Robin Hood", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["binary search", "greedy"]}, {"contestId": 671, "index": "A", "name": "Recycling Bottles", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["dp", "geometry", "greedy", "implementation"]}, {"contestId": 670, "index": "F", "name": "Restore a Number", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["brute force", "constructive algorithms", "strings"]}, {"contestId": 670, "index": "E", "name": "Correct Bracket Sequence Editor", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["data structures", "dsu", "strings"]}, {"contestId": 670, "index": "D2", "name": "Magic Powder - 2", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["binary search", "implementation"]}, {"contestId": 670, "index": "D1", "name": "Magic Powder - 1", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["binary search", "brute force", "implementation"]}, {"contestId": 670, "index": "C", "name": "Cinema", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["implementation", "sortings"]}, {"contestId": 670, "index": "B", "name": "Game of Robots", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["implementation"]}, {"contestId": 670, "index": "A", "name": "Holidays", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["brute force", "constructive algorithms", "greedy", "math"]}, {"contestId": 669, "index": "A", "name": "Little Artem and Presents", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math"]}, {"contestId": 667, "index": "B", "name": "Coat of Anticubism", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms", "geometry"]}, {"contestId": 667, "index": "A", "name": "Pouring Rain", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["geometry", "math"]}, {"contestId": 666, "index": "E", "name": "Forensic Examination", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["data structures", "string suffix structures"]}, {"contestId": 666, "index": "D", "name": "Chain Reaction", "type": "PROGRAMMING", "points": 2000.0, "rating": 3000, "tags": ["brute force", "geometry"]}, {"contestId": 666, "index": "C", "name": "Codeword", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["combinatorics", "strings"]}, {"contestId": 666, "index": "B", "name": "World Tour", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["graphs", "shortest paths"]}, {"contestId": 666, "index": "A", "name": "Reberland Linguistics", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["dp", "implementation", "strings"]}, {"contestId": 665, "index": "F", "name": "Four Divisors", "type": "PROGRAMMING", "rating": 2400, "tags": ["data structures", "dp", "math", "number theory", "sortings", "two pointers"]}, {"contestId": 665, "index": "E", "name": "Beautiful Subarrays", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "divide and conquer", "strings", "trees"]}, {"contestId": 665, "index": "D", "name": "Simple Subset", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "greedy", "number theory"]}, {"contestId": 665, "index": "C", "name": "Simple Strings", "type": "PROGRAMMING", "rating": 1300, "tags": ["dp", "greedy", "strings"]}, {"contestId": 665, "index": "B", "name": "Shopping", "type": "PROGRAMMING", "rating": 1400, "tags": ["brute force"]}, {"contestId": 665, "index": "A", "name": "Buses Between Cities", "type": "PROGRAMMING", "rating": 1600, "tags": ["implementation"]}, {"contestId": 664, "index": "A", "name": "Complicated GCD", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math", "number theory"]}, {"contestId": 663, "index": "A", "name": "Rebus", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["constructive algorithms", "expression parsing", "greedy", "math"]}, {"contestId": 662, "index": "E", "name": "To Hack or not to Hack", "type": "PROGRAMMING", "points": 2250.0, "rating": 3100, "tags": ["brute force", "dp", "greedy"]}, {"contestId": 662, "index": "D", "name": "International Olympiad", "type": "PROGRAMMING", "points": 250.0, "rating": 2000, "tags": ["constructive algorithms", "greedy", "implementation", "math"]}, {"contestId": 662, "index": "C", "name": "Binary Table", "type": "PROGRAMMING", "points": 2250.0, "rating": 2600, "tags": ["bitmasks", "brute force", "divide and conquer", "dp", "fft", "math"]}, {"contestId": 662, "index": "B", "name": "Graph Coloring", "type": "PROGRAMMING", "points": 250.0, "rating": 2200, "tags": ["dfs and similar", "graphs"]}, {"contestId": 662, "index": "A", "name": "Gambling Nim", "type": "PROGRAMMING", "points": 500.0, "rating": 2400, "tags": ["bitmasks", "math", "matrices", "probabilities"]}, {"contestId": 661, "index": "H", "name": "Rotate Matrix", "type": "PROGRAMMING", "rating": 2400, "tags": ["*special"]}, {"contestId": 661, "index": "G", "name": "Hungarian Notation", "type": "PROGRAMMING", "rating": 2200, "tags": ["*special"]}, {"contestId": 661, "index": "F", "name": "Primes in Interval", "type": "PROGRAMMING", "rating": 1900, "tags": ["*special"]}, {"contestId": 661, "index": "E", "name": "Divisibility Check", "type": "PROGRAMMING", "rating": 2000, "tags": ["*special"]}, {"contestId": 661, "index": "D", "name": "Maximal Difference", "type": "PROGRAMMING", "rating": 2100, "tags": ["*special"]}, {"contestId": 661, "index": "C", "name": "Array Sum", "type": "PROGRAMMING", "rating": 2000, "tags": ["*special"]}, {"contestId": 661, "index": "B", "name": "Seasons", "type": "PROGRAMMING", "rating": 1900, "tags": ["*special"]}, {"contestId": 661, "index": "A", "name": "Lazy Caterer Sequence", "type": "PROGRAMMING", "rating": 1300, "tags": ["*special"]}, {"contestId": 660, "index": "F", "name": "Bear and Bowling 4", "type": "PROGRAMMING", "rating": 2500, "tags": ["binary search", "data structures", "geometry", "ternary search"]}, {"contestId": 660, "index": "E", "name": "Different Subsets For All Tuples", "type": "PROGRAMMING", "rating": 2300, "tags": ["combinatorics"]}, {"contestId": 660, "index": "D", "name": "Number of Parallelograms", "type": "PROGRAMMING", "rating": 1900, "tags": ["geometry"]}, {"contestId": 660, "index": "C", "name": "Hard Process", "type": "PROGRAMMING", "rating": 1600, "tags": ["binary search", "dp", "two pointers"]}, {"contestId": 660, "index": "B", "name": "Seating On Bus", "type": "PROGRAMMING", "rating": 1000, "tags": ["implementation"]}, {"contestId": 660, "index": "A", "name": "Co-prime Array", "type": "PROGRAMMING", "rating": 1200, "tags": ["greedy", "implementation", "math", "number theory"]}, {"contestId": 659, "index": "G", "name": "Fence Divercity", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["combinatorics", "dp", "number theory"]}, {"contestId": 659, "index": "F", "name": "Polycarp and Hay", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["dfs and similar", "dsu", "graphs", "greedy", "sortings"]}, {"contestId": 659, "index": "E", "name": "New Reform", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["data structures", "dfs and similar", "dsu", "graphs", "greedy"]}, {"contestId": 659, "index": "D", "name": "Bicycle Race", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["geometry", "implementation", "math"]}, {"contestId": 659, "index": "C", "name": "Tanya and Toys", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["greedy", "implementation"]}, {"contestId": 659, "index": "B", "name": "Qualifying Contest", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["constructive algorithms", "sortings"]}, {"contestId": 659, "index": "A", "name": "Round House", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation", "math"]}, {"contestId": 658, "index": "A", "name": "Bear and Reverse Radewoosh", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 656, "index": "G", "name": "You're a Professional", "type": "PROGRAMMING", "rating": 1900, "tags": ["*special"]}, {"contestId": 656, "index": "F", "name": "Ace It!", "type": "PROGRAMMING", "rating": 1900, "tags": ["*special"]}, {"contestId": 656, "index": "E", "name": "Out of Controls", "type": "PROGRAMMING", "rating": 2000, "tags": ["*special"]}, {"contestId": 656, "index": "D", "name": "Rosetta Problem", "type": "PROGRAMMING", "rating": 2100, "tags": ["*special"]}, {"contestId": 656, "index": "C", "name": "Without Text", "type": "PROGRAMMING", "rating": 2000, "tags": ["*special"]}, {"contestId": 656, "index": "B", "name": "Scrambled", "type": "PROGRAMMING", "rating": 1700, "tags": ["*special", "implementation"]}, {"contestId": 656, "index": "A", "name": "Da Vinci Powers", "type": "PROGRAMMING", "rating": 1900, "tags": ["*special"]}, {"contestId": 653, "index": "G", "name": "Move by Prime", "type": "PROGRAMMING", "points": 3500.0, "rating": 3100, "tags": ["combinatorics", "math", "number theory"]}, {"contestId": 653, "index": "F", "name": "Paper task", "type": "PROGRAMMING", "points": 3500.0, "rating": 2600, "tags": ["data structures", "string suffix structures", "strings"]}, {"contestId": 653, "index": "E", "name": "Bear and Forgotten Tree 2", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["dfs and similar", "dsu", "graphs", "trees"]}, {"contestId": 653, "index": "D", "name": "Delivery Bears", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["binary search", "flows", "graphs"]}, {"contestId": 653, "index": "C", "name": "Bear and Up-Down", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["brute force", "implementation"]}, {"contestId": 653, "index": "B", "name": "Bear and Compressing", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["brute force", "dfs and similar", "dp", "strings"]}, {"contestId": 653, "index": "A", "name": "Bear and Three Balls", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["brute force", "implementation", "sortings"]}, {"contestId": 652, "index": "F", "name": "Ants on a Circle", "type": "PROGRAMMING", "rating": 2800, "tags": ["constructive algorithms", "math"]}, {"contestId": 652, "index": "E", "name": "Pursuit For Artifacts", "type": "PROGRAMMING", "rating": 2300, "tags": ["dfs and similar", "dsu", "graphs", "trees"]}, {"contestId": 652, "index": "D", "name": "Nested Segments", "type": "PROGRAMMING", "rating": 1800, "tags": ["data structures", "sortings"]}, {"contestId": 652, "index": "C", "name": "Foe Pairs", "type": "PROGRAMMING", "rating": 1800, "tags": ["combinatorics", "sortings", "two pointers"]}, {"contestId": 652, "index": "B", "name": "z-sort", "type": "PROGRAMMING", "rating": 1000, "tags": ["sortings"]}, {"contestId": 652, "index": "A", "name": "Gabriel and Caterpillar", "type": "PROGRAMMING", "rating": 1400, "tags": ["implementation", "math"]}, {"contestId": 651, "index": "B", "name": "Beautiful Paintings", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["greedy", "sortings"]}, {"contestId": 651, "index": "A", "name": "Joysticks", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["dp", "greedy", "implementation", "math"]}, {"contestId": 650, "index": "E", "name": "Clockwork Bomb", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["data structures", "dfs and similar", "dsu", "greedy", "trees"]}, {"contestId": 650, "index": "D", "name": "Zip-line", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["binary search", "data structures", "dp", "hashing"]}, {"contestId": 650, "index": "C", "name": "Table Compression", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["dfs and similar", "dp", "dsu", "graphs", "greedy"]}, {"contestId": 650, "index": "B", "name": "Image Preview", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["binary search", "brute force", "dp", "two pointers"]}, {"contestId": 650, "index": "A", "name": "Watchmen", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["data structures", "geometry", "math"]}, {"contestId": 645, "index": "G", "name": "Armistice Area Apportionment", "type": "PROGRAMMING", "points": 3500.0, "rating": 3200, "tags": ["binary search", "geometry"]}, {"contestId": 645, "index": "F", "name": "Cowslip Collections", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["combinatorics", "math", "number theory"]}, {"contestId": 645, "index": "E", "name": "Intellectual Inquiry", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["dp", "greedy", "strings"]}, {"contestId": 645, "index": "D", "name": "Robot Rapping Results Report", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["binary search", "dp", "graphs"]}, {"contestId": 645, "index": "C", "name": "Enduring Exodus", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["binary search", "two pointers"]}, {"contestId": 645, "index": "B", "name": "Mischievous Mess Makers", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["greedy", "math"]}, {"contestId": 645, "index": "A", "name": "Amity Assessment", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["brute force", "constructive algorithms", "implementation"]}, {"contestId": 644, "index": "C", "name": "Hostname Aliases", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["*special", "binary search", "data structures", "implementation", "sortings", "strings"]}, {"contestId": 644, "index": "B", "name": "Processing Queries", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["*special", "constructive algorithms", "data structures", "two pointers"]}, {"contestId": 644, "index": "A", "name": "Parliament of Berland", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["*special", "constructive algorithms"]}, {"contestId": 643, "index": "G", "name": "Choosing Ads", "type": "PROGRAMMING", "points": 3000.0, "rating": 3200, "tags": ["data structures"]}, {"contestId": 643, "index": "F", "name": "Bears and Juice", "type": "PROGRAMMING", "points": 3000.0, "rating": 2900, "tags": ["dp", "math", "meet-in-the-middle"]}, {"contestId": 643, "index": "E", "name": "Bear and Destroying Subtrees", "type": "PROGRAMMING", "points": 2250.0, "rating": 2700, "tags": ["dp", "math", "probabilities", "trees"]}, {"contestId": 643, "index": "D", "name": "Bearish Fanpages", "type": "PROGRAMMING", "points": 2250.0, "rating": 2900, "tags": []}, {"contestId": 643, "index": "C", "name": "Levels and Regions", "type": "PROGRAMMING", "points": 1750.0, "rating": 2400, "tags": ["dp"]}, {"contestId": 643, "index": "B", "name": "Bear and Two Paths", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["constructive algorithms", "graphs"]}, {"contestId": 643, "index": "A", "name": "Bear and Colors", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["implementation"]}, {"contestId": 641, "index": "G", "name": "Little Artem and Graph", "type": "PROGRAMMING", "points": 3000.0, "rating": 2300, "tags": []}, {"contestId": 641, "index": "F", "name": "Little Artem and 2-SAT", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": []}, {"contestId": 641, "index": "E", "name": "Little Artem and Time Machine", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["data structures"]}, {"contestId": 641, "index": "D", "name": "Little Artem and Random Variable", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["dp", "implementation", "math", "probabilities"]}, {"contestId": 641, "index": "C", "name": "Little Artem and Dance", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["brute force", "constructive algorithms", "implementation"]}, {"contestId": 641, "index": "B", "name": "Little Artem and Matrix", "type": "PROGRAMMING", "points": 750.0, "rating": 1400, "tags": ["implementation"]}, {"contestId": 641, "index": "A", "name": "Little Artem and Grasshopper", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"]}, {"contestId": 639, "index": "F", "name": "Bear and Chemistry", "type": "PROGRAMMING", "points": 3000.0, "rating": 3300, "tags": ["data structures", "dfs and similar", "graphs", "trees"]}, {"contestId": 639, "index": "E", "name": "Bear and Paradox", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["binary search", "greedy", "math", "sortings"]}, {"contestId": 639, "index": "D", "name": "Bear and Contribution", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["data structures", "greedy", "sortings", "two pointers"]}, {"contestId": 639, "index": "C", "name": "Bear and Polynomials", "type": "PROGRAMMING", "points": 1000.0, "rating": 2200, "tags": ["hashing", "implementation", "math"]}, {"contestId": 639, "index": "B", "name": "Bear and Forgotten Tree 3", "type": "PROGRAMMING", "points": 750.0, "rating": 1600, "tags": ["constructive algorithms", "graphs", "trees"]}, {"contestId": 639, "index": "A", "name": "Bear and Displayed Friends", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["implementation"]}, {"contestId": 638, "index": "D", "name": "Three-dimensional Turtle Super Computer ", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["brute force", "dfs and similar", "graphs"]}, {"contestId": 638, "index": "C", "name": "Road Improvement", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["*special", "dfs and similar", "graphs", "greedy", "trees"]}, {"contestId": 638, "index": "B", "name": "Making Genome in Berland", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["*special", "dfs and similar", "strings"]}, {"contestId": 638, "index": "A", "name": "Home Numbers", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["*special", "constructive algorithms", "math"]}, {"contestId": 637, "index": "D", "name": "Running with Obstacles", "type": "PROGRAMMING", "points": 2000.0, "rating": 1600, "tags": ["*special", "data structures", "dp", "greedy"]}, {"contestId": 637, "index": "C", "name": "Promocodes with Mistakes", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["*special", "brute force", "constructive algorithms", "implementation"]}, {"contestId": 637, "index": "B", "name": "Chat Order", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["*special", "binary search", "constructive algorithms", "data structures", "sortings"]}, {"contestId": 637, "index": "A", "name": "Voting for Photos", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["*special", "constructive algorithms", "implementation"]}, {"contestId": 635, "index": "A", "name": "Orchestra", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["brute force", "implementation"]}, {"contestId": 634, "index": "A", "name": "Island Puzzle", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["constructive algorithms", "implementation"]}, {"contestId": 633, "index": "H", "name": "Fibonacci-ish II", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["data structures", "implementation"]}, {"contestId": 633, "index": "G", "name": "Yash And Trees", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["bitmasks", "data structures", "dfs and similar", "math", "number theory"]}, {"contestId": 633, "index": "F", "name": "The Chocolate Spree", "type": "PROGRAMMING", "points": 2750.0, "rating": 2600, "tags": ["dfs and similar", "dp", "graphs", "trees"]}, {"contestId": 633, "index": "E", "name": "Startup Funding", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["binary search", "constructive algorithms", "data structures", "probabilities", "two pointers"]}, {"contestId": 633, "index": "D", "name": "Fibonacci-ish", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["brute force", "dp", "hashing", "implementation", "math"]}, {"contestId": 633, "index": "C", "name": "Spy Syndrome 2", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["data structures", "dp", "hashing", "implementation", "sortings", "string suffix structures", "strings"]}, {"contestId": 633, "index": "B", "name": "A Trivial Problem", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["brute force", "constructive algorithms", "math", "number theory"]}, {"contestId": 633, "index": "A", "name": "Ebony and Ivory", "type": "PROGRAMMING", "points": 250.0, "rating": 1100, "tags": ["brute force", "math", "number theory"]}, {"contestId": 632, "index": "F", "name": "Magic Matrix", "type": "PROGRAMMING", "rating": 2400, "tags": ["brute force", "divide and conquer", "graphs", "matrices", "trees"]}, {"contestId": 632, "index": "E", "name": "Thief in a Shop", "type": "PROGRAMMING", "rating": 2400, "tags": ["divide and conquer", "dp", "fft", "math"]}, {"contestId": 632, "index": "D", "name": "Longest Subsequence", "type": "PROGRAMMING", "rating": 2100, "tags": ["brute force", "math", "number theory"]}, {"contestId": 632, "index": "C", "name": "The Smallest String Concatenation", "type": "PROGRAMMING", "rating": 1700, "tags": ["sortings", "strings"]}, {"contestId": 632, "index": "B", "name": "Alice, Bob, Two Teams", "type": "PROGRAMMING", "rating": 1400, "tags": ["brute force", "constructive algorithms"]}, {"contestId": 632, "index": "A", "name": "Grandma Laura and Apples", "type": "PROGRAMMING", "rating": 1200, "tags": []}, {"contestId": 631, "index": "E", "name": "Product Sum", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["data structures", "dp", "geometry"]}, {"contestId": 631, "index": "D", "name": "Messenger", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["data structures", "hashing", "implementation", "string suffix structures", "strings"]}, {"contestId": 631, "index": "C", "name": "Report", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["data structures", "sortings"]}, {"contestId": 631, "index": "B", "name": "Print Check", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "implementation"]}, {"contestId": 631, "index": "A", "name": "Interview", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["brute force", "implementation"]}, {"contestId": 630, "index": "R", "name": "Game", "type": "PROGRAMMING", "rating": 1200, "tags": ["games", "math"]}, {"contestId": 630, "index": "Q", "name": "Pyramids", "type": "PROGRAMMING", "rating": 1700, "tags": ["geometry", "math"]}, {"contestId": 630, "index": "P", "name": "Area of a Star", "type": "PROGRAMMING", "rating": 2100, "tags": ["geometry"]}, {"contestId": 630, "index": "O", "name": "Arrow", "type": "PROGRAMMING", "rating": 2000, "tags": ["geometry"]}, {"contestId": 630, "index": "N", "name": "Forecast", "type": "PROGRAMMING", "rating": 1300, "tags": ["math"]}, {"contestId": 630, "index": "M", "name": "Turn", "type": "PROGRAMMING", "rating": 1800, "tags": ["geometry", "math"]}, {"contestId": 630, "index": "L", "name": "Cracking the Code", "type": "PROGRAMMING", "rating": 1400, "tags": ["implementation", "math"]}, {"contestId": 630, "index": "K", "name": "Indivisibility", "type": "PROGRAMMING", "rating": 1500, "tags": ["math", "number theory"]}, {"contestId": 630, "index": "J", "name": "Divisibility", "type": "PROGRAMMING", "rating": 1100, "tags": ["math", "number theory"]}, {"contestId": 630, "index": "I", "name": "Parking Lot", "type": "PROGRAMMING", "rating": 1700, "tags": ["combinatorics", "math"]}, {"contestId": 630, "index": "H", "name": "Benches", "type": "PROGRAMMING", "rating": 1400, "tags": ["combinatorics", "math"]}, {"contestId": 630, "index": "G", "name": "Challenge Pennants", "type": "PROGRAMMING", "rating": 1600, "tags": ["combinatorics", "math"]}, {"contestId": 630, "index": "F", "name": "Selection of Personnel", "type": "PROGRAMMING", "rating": 1300, "tags": ["combinatorics", "math"]}, {"contestId": 630, "index": "E", "name": "A rectangle", "type": "PROGRAMMING", "rating": 1900, "tags": ["math"]}, {"contestId": 630, "index": "D", "name": "Hexagons!", "type": "PROGRAMMING", "rating": 1100, "tags": ["math"]}, {"contestId": 630, "index": "C", "name": "Lucky Numbers", "type": "PROGRAMMING", "rating": 1100, "tags": ["combinatorics", "math"]}, {"contestId": 630, "index": "B", "name": "Moore's Law", "type": "PROGRAMMING", "rating": 1200, "tags": ["math"]}, {"contestId": 630, "index": "A", "name": "Again Twenty Five!", "type": "PROGRAMMING", "rating": 800, "tags": ["number theory"]}, {"contestId": 629, "index": "E", "name": "Famil Door and Roads", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["combinatorics", "data structures", "dfs and similar", "dp", "probabilities", "trees"]}, {"contestId": 629, "index": "D", "name": "Babaei and Birthday Cake", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["data structures", "dp"]}, {"contestId": 629, "index": "C", "name": "Famil Door and Brackets", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["dp", "strings"]}, {"contestId": 629, "index": "B", "name": "Far Relative\u2019s Problem", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["brute force"]}, {"contestId": 629, "index": "A", "name": "Far Relative\u2019s Birthday Cake", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "combinatorics", "constructive algorithms", "implementation"]}, {"contestId": 628, "index": "F", "name": "Bear and Fair Set", "type": "PROGRAMMING", "rating": 2500, "tags": ["flows"]}, {"contestId": 628, "index": "E", "name": "Zbazi in Zeydabad", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "implementation"]}, {"contestId": 628, "index": "D", "name": "Magic Numbers", "type": "PROGRAMMING", "rating": 2200, "tags": ["dp"]}, {"contestId": 628, "index": "C", "name": "Bear and String Distance", "type": "PROGRAMMING", "rating": 1300, "tags": ["greedy", "strings"]}, {"contestId": 628, "index": "B", "name": "New Skateboard", "type": "PROGRAMMING", "rating": 1300, "tags": ["dp"]}, {"contestId": 628, "index": "A", "name": "Tennis Tournament", "type": "PROGRAMMING", "rating": 1000, "tags": ["implementation", "math"]}, {"contestId": 627, "index": "F", "name": "Island Puzzle", "type": "PROGRAMMING", "points": 3000.0, "rating": 3400, "tags": ["dfs and similar", "dsu", "graphs", "trees"]}, {"contestId": 627, "index": "E", "name": "Orchestra", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["two pointers"]}, {"contestId": 627, "index": "D", "name": "Preorder Test", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["binary search", "dfs and similar", "dp", "graphs", "greedy", "trees"]}, {"contestId": 627, "index": "C", "name": "Package Delivery", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["data structures", "divide and conquer", "greedy"]}, {"contestId": 627, "index": "B", "name": "Factory Repairs", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["data structures"]}, {"contestId": 627, "index": "A", "name": "XOR Equation", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["dp", "math"]}, {"contestId": 626, "index": "G", "name": "Raffles", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["data structures", "dp", "greedy", "math"]}, {"contestId": 626, "index": "F", "name": "Group Projects", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["dp"]}, {"contestId": 626, "index": "E", "name": "Simple Skewness", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["binary search", "math", "ternary search"]}, {"contestId": 626, "index": "D", "name": "Jerry's Protest", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["brute force", "combinatorics", "dp", "probabilities"]}, {"contestId": 626, "index": "C", "name": "Block Towers", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["brute force", "greedy", "math", "number theory"]}, {"contestId": 626, "index": "B", "name": "Cards", "type": "PROGRAMMING", "points": 750.0, "rating": 1300, "tags": ["constructive algorithms", "dp", "math"]}, {"contestId": 626, "index": "A", "name": "Robot Sequence", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["brute force", "implementation"]}, {"contestId": 625, "index": "E", "name": "Frog Fights", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["data structures", "greedy"]}, {"contestId": 625, "index": "D", "name": "Finals in arithmetic", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["constructive algorithms", "implementation", "math"]}, {"contestId": 625, "index": "C", "name": "K-special Tables", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["constructive algorithms", "implementation"]}, {"contestId": 625, "index": "B", "name": "War of the Corporations", "type": "PROGRAMMING", "points": 750.0, "rating": 1200, "tags": ["constructive algorithms", "greedy", "strings"]}, {"contestId": 625, "index": "A", "name": "Guest From the Past", "type": "PROGRAMMING", "points": 750.0, "rating": 1700, "tags": ["implementation", "math"]}, {"contestId": 624, "index": "B", "name": "Making a String", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["greedy", "sortings"]}, {"contestId": 624, "index": "A", "name": "Save Luke", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math"]}, {"contestId": 623, "index": "E", "name": "Transforming Sequence", "type": "PROGRAMMING", "points": 2250.0, "rating": 3300, "tags": ["combinatorics", "dp", "fft", "math"]}, {"contestId": 623, "index": "D", "name": "Birthday", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["greedy", "math", "probabilities"]}, {"contestId": 623, "index": "C", "name": "Electric Charges", "type": "PROGRAMMING", "points": 1750.0, "rating": 2900, "tags": ["binary search", "dp"]}, {"contestId": 623, "index": "B", "name": "Array GCD", "type": "PROGRAMMING", "points": 1000.0, "rating": 2300, "tags": ["dp", "greedy", "number theory"]}, {"contestId": 623, "index": "A", "name": "Graph and String", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["constructive algorithms", "graphs"]}, {"contestId": 622, "index": "F", "name": "The Sum of the k-th Powers", "type": "PROGRAMMING", "rating": 2600, "tags": ["math"]}, {"contestId": 622, "index": "E", "name": "Ants in Leaves", "type": "PROGRAMMING", "rating": 2200, "tags": ["dfs and similar", "greedy", "sortings", "trees"]}, {"contestId": 622, "index": "D", "name": "Optimal Number Permutation", "type": "PROGRAMMING", "rating": 1900, "tags": ["constructive algorithms"]}, {"contestId": 622, "index": "C", "name": "Not Equal on a Segment", "type": "PROGRAMMING", "rating": 1700, "tags": ["data structures", "implementation"]}, {"contestId": 622, "index": "B", "name": "The Time", "type": "PROGRAMMING", "rating": 900, "tags": ["implementation"]}, {"contestId": 622, "index": "A", "name": "Infinite Sequence", "type": "PROGRAMMING", "rating": 1000, "tags": ["implementation", "math"]}, {"contestId": 621, "index": "E", "name": "Wet Shark and Blocks", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["dp", "matrices"]}, {"contestId": 621, "index": "D", "name": "Rat Kwesh and Cheese", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["brute force", "constructive algorithms", "math"]}, {"contestId": 621, "index": "C", "name": "Wet Shark and Flowers", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["combinatorics", "math", "number theory", "probabilities"]}, {"contestId": 621, "index": "B", "name": "Wet Shark and Bishops", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["combinatorics", "implementation"]}, {"contestId": 621, "index": "A", "name": "Wet Shark and Odd and Even", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation"]}, {"contestId": 620, "index": "F", "name": "Xors on Segments", "type": "PROGRAMMING", "rating": 2800, "tags": ["data structures", "strings", "trees"]}, {"contestId": 620, "index": "E", "name": "New Year Tree", "type": "PROGRAMMING", "rating": 2100, "tags": ["bitmasks", "data structures", "trees"]}, {"contestId": 620, "index": "D", "name": "Professor GukiZ and Two Arrays", "type": "PROGRAMMING", "rating": 2200, "tags": ["binary search", "two pointers"]}, {"contestId": 620, "index": "C", "name": "Pearls in a Row", "type": "PROGRAMMING", "rating": 1500, "tags": ["greedy"]}, {"contestId": 620, "index": "B", "name": "Grandfather Dovlet\u2019s calculator", "type": "PROGRAMMING", "rating": 1000, "tags": ["implementation"]}, {"contestId": 620, "index": "A", "name": "Professor GukiZ's Robot", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "math"]}, {"contestId": 618, "index": "G", "name": "Combining Slimes", "type": "PROGRAMMING", "points": 3500.0, "rating": 3300, "tags": ["dp", "math", "matrices", "probabilities"]}, {"contestId": 618, "index": "F", "name": "Double Knapsack", "type": "PROGRAMMING", "points": 2750.0, "rating": 3000, "tags": ["constructive algorithms", "two pointers"]}, {"contestId": 618, "index": "E", "name": "Robot Arm", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["data structures", "geometry"]}, {"contestId": 618, "index": "D", "name": "Hamiltonian Spanning Tree", "type": "PROGRAMMING", "points": 1750.0, "rating": 2200, "tags": ["dfs and similar", "dp", "graph matchings", "greedy", "trees"]}, {"contestId": 618, "index": "C", "name": "Constellation", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["geometry", "implementation"]}, {"contestId": 618, "index": "B", "name": "Guess the Permutation", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms"]}, {"contestId": 618, "index": "A", "name": "Slime Combining", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 617, "index": "E", "name": "XOR and Favorite Number", "type": "PROGRAMMING", "points": 2750.0, "rating": 2200, "tags": ["data structures"]}, {"contestId": 617, "index": "D", "name": "Polyline", "type": "PROGRAMMING", "points": 1750.0, "rating": 1700, "tags": ["constructive algorithms", "implementation"]}, {"contestId": 617, "index": "C", "name": "Watering Flowers", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["implementation"]}, {"contestId": 617, "index": "B", "name": "Chocolate", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["combinatorics"]}, {"contestId": 617, "index": "A", "name": "Elephant", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math"]}, {"contestId": 616, "index": "F", "name": "Expensive Strings", "type": "PROGRAMMING", "rating": 2700, "tags": ["string suffix structures", "strings"]}, {"contestId": 616, "index": "E", "name": "Sum of Remainders", "type": "PROGRAMMING", "rating": 2200, "tags": ["implementation", "math", "number theory"]}, {"contestId": 616, "index": "D", "name": "Longest k-Good Segment", "type": "PROGRAMMING", "rating": 1600, "tags": ["binary search", "data structures", "two pointers"]}, {"contestId": 616, "index": "C", "name": "The Labyrinth", "type": "PROGRAMMING", "rating": 1600, "tags": ["dfs and similar"]}, {"contestId": 616, "index": "B", "name": "Dinner with Emma", "type": "PROGRAMMING", "rating": 1000, "tags": ["games", "greedy"]}, {"contestId": 616, "index": "A", "name": "Comparing Two Long Integers", "type": "PROGRAMMING", "rating": 900, "tags": ["implementation", "strings"]}, {"contestId": 615, "index": "E", "name": "Hexagons", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["binary search", "implementation", "math"]}, {"contestId": 615, "index": "D", "name": "Multipliers", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["math", "number theory"]}, {"contestId": 615, "index": "C", "name": "Running Track", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["dp", "greedy", "strings", "trees"]}, {"contestId": 615, "index": "B", "name": "Longtail Hedgehog", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["dp", "graphs"]}, {"contestId": 615, "index": "A", "name": "Bulbs", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 614, "index": "B", "name": "Gena's Code", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["implementation", "math"]}, {"contestId": 614, "index": "A", "name": "Link/Cut Tree", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["brute force", "implementation"]}, {"contestId": 613, "index": "E", "name": "Puzzle Lover", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["dp", "hashing", "strings"]}, {"contestId": 613, "index": "D", "name": "Kingdom and its Cities", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["dfs and similar", "divide and conquer", "dp", "graphs", "sortings", "trees"]}, {"contestId": 613, "index": "C", "name": "Necklace", "type": "PROGRAMMING", "points": 1250.0, "rating": 2500, "tags": ["constructive algorithms", "math"]}, {"contestId": 613, "index": "B", "name": "Skills", "type": "PROGRAMMING", "points": 1250.0, "rating": 1900, "tags": ["binary search", "brute force", "dp", "greedy", "sortings", "two pointers"]}, {"contestId": 613, "index": "A", "name": "Peter and Snow Blower", "type": "PROGRAMMING", "points": 750.0, "rating": 1900, "tags": ["binary search", "geometry", "ternary search"]}, {"contestId": 612, "index": "F", "name": "Simba on the Circle", "type": "PROGRAMMING", "rating": 2600, "tags": ["dp"]}, {"contestId": 612, "index": "E", "name": "Square Root of Permutation", "type": "PROGRAMMING", "rating": 2200, "tags": ["combinatorics", "constructive algorithms", "dfs and similar", "graphs", "math"]}, {"contestId": 612, "index": "D", "name": "The Union of k-Segments", "type": "PROGRAMMING", "rating": 1800, "tags": ["greedy", "sortings"]}, {"contestId": 612, "index": "C", "name": "Replace To Make Regular Bracket Sequence", "type": "PROGRAMMING", "rating": 1400, "tags": ["data structures", "expression parsing", "math"]}, {"contestId": 612, "index": "B", "name": "HDD is Outdated Technology", "type": "PROGRAMMING", "rating": 1200, "tags": ["implementation", "math"]}, {"contestId": 612, "index": "A", "name": "The Text Splitting", "type": "PROGRAMMING", "rating": 1300, "tags": ["brute force", "implementation", "strings"]}, {"contestId": 611, "index": "H", "name": "New Year  and Forgotten Tree", "type": "PROGRAMMING", "points": 3500.0, "rating": 3200, "tags": ["constructive algorithms", "flows", "graphs"]}, {"contestId": 611, "index": "G", "name": "New Year and Cake", "type": "PROGRAMMING", "points": 3000.0, "rating": 2900, "tags": ["geometry", "two pointers"]}, {"contestId": 611, "index": "F", "name": "New Year and Cleaning", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["binary search", "implementation"]}, {"contestId": 611, "index": "E", "name": "New Year and Three Musketeers", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures", "greedy", "sortings"]}, {"contestId": 611, "index": "D", "name": "New Year and Ancient Prophecy", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["dp", "hashing", "strings"]}, {"contestId": 611, "index": "C", "name": "New Year and Domino", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["dp", "implementation"]}, {"contestId": 611, "index": "B", "name": "New Year and Old Property", "type": "PROGRAMMING", "points": 750.0, "rating": 1300, "tags": ["bitmasks", "brute force", "implementation"]}, {"contestId": 611, "index": "A", "name": "New Year and Days", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation"]}, {"contestId": 610, "index": "E", "name": "Alphabet Permutations", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["data structures", "strings"]}, {"contestId": 610, "index": "D", "name": "Vika and Segments", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["constructive algorithms", "data structures", "geometry", "two pointers"]}, {"contestId": 610, "index": "C", "name": "Harmony Analysis", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["constructive algorithms"]}, {"contestId": 610, "index": "B", "name": "Vika and Squares", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["constructive algorithms", "implementation"]}, {"contestId": 610, "index": "A", "name": "Pasha and Stick", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["combinatorics", "math"]}, {"contestId": 609, "index": "F", "name": "Frogs and mosquitoes", "type": "PROGRAMMING", "rating": 2500, "tags": ["data structures", "greedy"]}, {"contestId": 609, "index": "E", "name": "Minimum spanning tree for each edge", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "dfs and similar", "dsu", "graphs", "trees"]}, {"contestId": 609, "index": "D", "name": "Gadgets for dollars and pounds", "type": "PROGRAMMING", "rating": 2000, "tags": ["binary search", "greedy", "two pointers"]}, {"contestId": 609, "index": "C", "name": "Load Balancing", "type": "PROGRAMMING", "rating": 1500, "tags": ["implementation", "math"]}, {"contestId": 609, "index": "B", "name": "\u041a\u043d\u0438\u0433\u0430 - \u043b\u0443\u0447\u0448\u0438\u0439 \u043f\u043e\u0434\u0430\u0440\u043e\u043a", "type": "PROGRAMMING", "rating": 1100, "tags": ["constructive algorithms", "implementation"]}, {"contestId": 609, "index": "A", "name": "\u0424\u043b\u0435\u0448-\u043a\u0430\u0440\u0442\u044b", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "implementation", "sortings"]}, {"contestId": 608, "index": "B", "name": "Hamming Distance Sum", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["combinatorics", "strings"]}, {"contestId": 608, "index": "A", "name": "Saitama Destroys Hotel", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation", "math"]}, {"contestId": 607, "index": "E", "name": "Cross Sum", "type": "PROGRAMMING", "points": 3000.0, "rating": 3300, "tags": ["binary search", "geometry"]}, {"contestId": 607, "index": "D", "name": "Power Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["data structures", "trees"]}, {"contestId": 607, "index": "C", "name": "Marbles", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["hashing", "strings"]}, {"contestId": 607, "index": "B", "name": "Zuma", "type": "PROGRAMMING", "points": 1250.0, "rating": 1900, "tags": ["dp"]}, {"contestId": 607, "index": "A", "name": "Chain Reaction", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["binary search", "dp"]}, {"contestId": 606, "index": "B", "name": "Testing Robots", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["implementation"]}, {"contestId": 606, "index": "A", "name": "Magic Spheres", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["implementation"]}, {"contestId": 605, "index": "E", "name": "Intergalaxy Trips", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["probabilities", "shortest paths"]}, {"contestId": 605, "index": "D", "name": "Board Game", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["data structures", "dfs and similar"]}, {"contestId": 605, "index": "C", "name": "Freelancer's Dreams", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["geometry"]}, {"contestId": 605, "index": "B", "name": "Lazy Student", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["constructive algorithms", "data structures", "graphs"]}, {"contestId": 605, "index": "A", "name": "Sorting Railway Cars", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["constructive algorithms", "greedy"]}, {"contestId": 604, "index": "B", "name": "More Cowbell", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["binary search", "greedy"]}, {"contestId": 604, "index": "A", "name": "Uncowed Forces", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"]}, {"contestId": 603, "index": "E", "name": "Pastoral Oddities", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["data structures", "divide and conquer", "dsu", "math", "trees"]}, {"contestId": 603, "index": "D", "name": "Ruminations on Ruminants", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["geometry", "math"]}, {"contestId": 603, "index": "C", "name": "Lieges of Legendre", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["games", "math"]}, {"contestId": 603, "index": "B", "name": "Moodular Arithmetic", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["combinatorics", "dfs and similar", "dsu", "math", "number theory"]}, {"contestId": 603, "index": "A", "name": "Alternative Thinking", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["dp", "greedy", "math"]}, {"contestId": 602, "index": "B", "name": "Approximating a Constant Range", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["dp", "implementation", "two pointers"]}, {"contestId": 602, "index": "A", "name": "Two Bases", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["brute force", "implementation"]}, {"contestId": 601, "index": "E", "name": "A Museum Robbery", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["data structures", "dp"]}, {"contestId": 601, "index": "D", "name": "Acyclic Organic Compounds", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["data structures", "dfs and similar", "dsu", "hashing", "strings", "trees"]}, {"contestId": 601, "index": "C", "name": "Kleof\u00e1\u0161 and the n-thlon", "type": "PROGRAMMING", "points": 1250.0, "rating": 2300, "tags": ["dp", "math", "probabilities"]}, {"contestId": 601, "index": "B", "name": "Lipshitz Sequence", "type": "PROGRAMMING", "points": 1250.0, "rating": 2100, "tags": ["data structures", "math"]}, {"contestId": 601, "index": "A", "name": "The Two Routes", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["graphs", "shortest paths"]}, {"contestId": 600, "index": "F", "name": "Edge coloring of bipartite graph", "type": "PROGRAMMING", "rating": 2800, "tags": ["graphs"]}, {"contestId": 600, "index": "E", "name": "Lomsat gelral", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "dfs and similar", "dsu", "trees"]}, {"contestId": 600, "index": "D", "name": "Area of Two Circles' Intersection", "type": "PROGRAMMING", "rating": 2000, "tags": ["geometry"]}, {"contestId": 600, "index": "C", "name": "Make Palindrome", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "greedy", "strings"]}, {"contestId": 600, "index": "B", "name": "Queries about less or equal elements", "type": "PROGRAMMING", "rating": 1300, "tags": ["binary search", "data structures", "sortings", "two pointers"]}, {"contestId": 600, "index": "A", "name": "Extract Numbers", "type": "PROGRAMMING", "rating": 1600, "tags": ["implementation", "strings"]}, {"contestId": 599, "index": "E", "name": "Sandy and Nuts", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["bitmasks", "dp", "trees"]}, {"contestId": 599, "index": "D", "name": "Spongebob and Squares", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["brute force", "math"]}, {"contestId": 599, "index": "C", "name": "Day at the Beach", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["sortings"]}, {"contestId": 599, "index": "B", "name": "Spongebob and Joke", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["implementation"]}, {"contestId": 599, "index": "A", "name": "Patrick and Shopping", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 598, "index": "F", "name": "Cut Length", "type": "PROGRAMMING", "rating": 2900, "tags": ["geometry"]}, {"contestId": 598, "index": "E", "name": "Chocolate Bar", "type": "PROGRAMMING", "rating": 2000, "tags": ["brute force", "dp"]}, {"contestId": 598, "index": "D", "name": "Igor In the Museum", "type": "PROGRAMMING", "rating": 1700, "tags": ["dfs and similar", "graphs", "shortest paths"]}, {"contestId": 598, "index": "C", "name": "Nearest vectors", "type": "PROGRAMMING", "rating": 2300, "tags": ["geometry", "sortings"]}, {"contestId": 598, "index": "B", "name": "Queries on a String", "type": "PROGRAMMING", "rating": 1300, "tags": ["implementation", "strings"]}, {"contestId": 598, "index": "A", "name": "Tricky Sum", "type": "PROGRAMMING", "rating": 900, "tags": ["math"]}, {"contestId": 597, "index": "C", "name": "Subsequences", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["data structures", "dp"]}, {"contestId": 597, "index": "B", "name": "Restaurant", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["dp", "greedy", "sortings"]}, {"contestId": 597, "index": "A", "name": "Divisibility", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["math"]}, {"contestId": 596, "index": "E", "name": "Wilbur and Strings", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["dfs and similar", "dp", "graphs", "strings"]}, {"contestId": 596, "index": "D", "name": "Wilbur and Trees", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["dp", "math", "probabilities", "sortings"]}, {"contestId": 596, "index": "C", "name": "Wilbur and Points", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["combinatorics", "greedy", "sortings"]}, {"contestId": 596, "index": "B", "name": "Wilbur and Array", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["greedy", "implementation"]}, {"contestId": 596, "index": "A", "name": "Wilbur and Swimming Pool", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["geometry", "implementation"]}, {"contestId": 595, "index": "B", "name": "Pasha and Phone", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["binary search", "math"]}, {"contestId": 595, "index": "A", "name": "Vitaly and Night", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "implementation"]}, {"contestId": 594, "index": "E", "name": "Cutting the Line", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["string suffix structures", "strings"]}, {"contestId": 594, "index": "D", "name": "REQ", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["data structures", "number theory"]}, {"contestId": 594, "index": "C", "name": "Edo and Magnets", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["brute force", "greedy", "implementation", "two pointers"]}, {"contestId": 594, "index": "B", "name": "Max and Bike", "type": "PROGRAMMING", "points": 1000.0, "rating": 2500, "tags": ["binary search", "geometry"]}, {"contestId": 594, "index": "A", "name": "Warrior and Archer", "type": "PROGRAMMING", "points": 500.0, "rating": 2300, "tags": ["games"]}, {"contestId": 593, "index": "E", "name": "Strange Calculation and Cats", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["dp", "matrices"]}, {"contestId": 593, "index": "D", "name": "Happy Tree Party", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["data structures", "dfs and similar", "graphs", "math", "trees"]}, {"contestId": 593, "index": "C", "name": "Beautiful Function", "type": "PROGRAMMING", "points": 3000.0, "rating": 2200, "tags": ["constructive algorithms", "math"]}, {"contestId": 593, "index": "B", "name": "Anton and Lines", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["geometry", "sortings"]}, {"contestId": 593, "index": "A", "name": "2Char", "type": "PROGRAMMING", "points": 250.0, "rating": 1200, "tags": ["brute force", "implementation"]}, {"contestId": 592, "index": "E", "name": "BCPC", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["binary search", "geometry", "two pointers"]}, {"contestId": 592, "index": "D", "name": "Super M", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["dfs and similar", "dp", "graphs", "trees"]}, {"contestId": 592, "index": "C", "name": "The Big Race", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["math"]}, {"contestId": 592, "index": "B", "name": "The Monster and the Squirrel", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["math"]}, {"contestId": 592, "index": "A", "name": "PawnChess", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["implementation"]}, {"contestId": 591, "index": "B", "name": "Rebranding", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["implementation", "strings"]}, {"contestId": 591, "index": "A", "name": "Wizards' Duel", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation", "math"]}, {"contestId": 590, "index": "E", "name": "Birthday", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["graph matchings", "strings"]}, {"contestId": 590, "index": "D", "name": "Top Secret Task", "type": "PROGRAMMING", "points": 1750.0, "rating": 2300, "tags": ["dp"]}, {"contestId": 590, "index": "C", "name": "Three States", "type": "PROGRAMMING", "points": 1250.0, "rating": 2200, "tags": ["dfs and similar", "graphs", "shortest paths"]}, {"contestId": 590, "index": "B", "name": "Chip 'n Dale Rescue Rangers", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["binary search", "geometry", "math"]}, {"contestId": 590, "index": "A", "name": "Median Smoothing", "type": "PROGRAMMING", "points": 750.0, "rating": 1700, "tags": ["implementation"]}, {"contestId": 588, "index": "B", "name": "Duff in Love", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["math"]}, {"contestId": 588, "index": "A", "name": "Duff and Meat", "type": "PROGRAMMING", "points": 750.0, "rating": 900, "tags": ["greedy"]}, {"contestId": 587, "index": "F", "name": "Duff is Mad", "type": "PROGRAMMING", "points": 2750.0, "rating": 3000, "tags": ["data structures", "strings"]}, {"contestId": 587, "index": "E", "name": "Duff as a Queen", "type": "PROGRAMMING", "points": 2750.0, "rating": 2900, "tags": ["data structures"]}, {"contestId": 587, "index": "D", "name": "Duff in Mafia", "type": "PROGRAMMING", "points": 2000.0, "rating": 3100, "tags": ["2-sat", "binary search"]}, {"contestId": 587, "index": "C", "name": "Duff in the Army", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["data structures", "trees"]}, {"contestId": 587, "index": "B", "name": "Duff in Beach", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["dp"]}, {"contestId": 587, "index": "A", "name": "Duff and Weight Lifting", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["greedy"]}, {"contestId": 586, "index": "B", "name": "Laurenty and Shop", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["implementation"]}, {"contestId": 586, "index": "A", "name": "Alena's Schedule", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation"]}, {"contestId": 585, "index": "F", "name": "Digits of Number Pi", "type": "PROGRAMMING", "points": 3000.0, "rating": 3200, "tags": ["dp", "implementation", "strings"]}, {"contestId": 585, "index": "E", "name": "Present for Vitalik the Philatelist ", "type": "PROGRAMMING", "points": 2250.0, "rating": 2900, "tags": ["combinatorics", "math", "number theory"]}, {"contestId": 585, "index": "D", "name": "Lizard Era: Beginning", "type": "PROGRAMMING", "points": 1750.0, "rating": 2300, "tags": ["meet-in-the-middle"]}, {"contestId": 585, "index": "C", "name": "Alice, Bob, Oranges and Apples", "type": "PROGRAMMING", "points": 1250.0, "rating": 2400, "tags": ["number theory"]}, {"contestId": 585, "index": "B", "name": "Phillip and Trains", "type": "PROGRAMMING", "points": 750.0, "rating": 1700, "tags": ["dfs and similar", "graphs", "shortest paths"]}, {"contestId": 585, "index": "A", "name": "Gennady the Dentist", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["brute force", "implementation"]}, {"contestId": 584, "index": "E", "name": "Anton and Ira", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["constructive algorithms", "greedy", "math"]}, {"contestId": 584, "index": "D", "name": "Dima and Lisa", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["brute force", "math", "number theory"]}, {"contestId": 584, "index": "C", "name": "Marina and Vasya", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["constructive algorithms", "greedy", "strings"]}, {"contestId": 584, "index": "B", "name": "Kolya and Tanya ", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["combinatorics"]}, {"contestId": 584, "index": "A", "name": "Olesya and Rodion", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["math"]}, {"contestId": 583, "index": "B", "name": "Robot's Task", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["greedy", "implementation"]}, {"contestId": 583, "index": "A", "name": "Asphalting Roads", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"]}, {"contestId": 582, "index": "E", "name": "Boolean Function", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["bitmasks", "dp", "expression parsing"]}, {"contestId": 582, "index": "D", "name": "Number of Binominal Coefficients", "type": "PROGRAMMING", "points": 2250.0, "rating": 3300, "tags": ["dp", "math", "number theory"]}, {"contestId": 582, "index": "C", "name": "Superior Periodic Subarrays", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["number theory"]}, {"contestId": 582, "index": "B", "name": "Once Again...", "type": "PROGRAMMING", "points": 1250.0, "rating": 1900, "tags": ["constructive algorithms", "dp", "matrices"]}, {"contestId": 582, "index": "A", "name": "GCD Table", "type": "PROGRAMMING", "points": 750.0, "rating": 1700, "tags": ["constructive algorithms", "greedy", "number theory"]}, {"contestId": 581, "index": "F", "name": "Zublicanes and Mumocrates", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["dp", "trees", "two pointers"]}, {"contestId": 581, "index": "E", "name": "Kojiro and Furrari", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["dp", "greedy"]}, {"contestId": 581, "index": "D", "name": "Three Logos", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["bitmasks", "brute force", "constructive algorithms", "geometry", "implementation", "math"]}, {"contestId": 581, "index": "C", "name": "Developing Skills", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["implementation", "math", "sortings"]}, {"contestId": 581, "index": "B", "name": "Luxurious Houses", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["implementation", "math"]}, {"contestId": 581, "index": "A", "name": "Vasya the Hipster", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "math"]}, {"contestId": 580, "index": "E", "name": "Kefa and Watch", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["data structures", "hashing", "strings"]}, {"contestId": 580, "index": "D", "name": "Kefa and Dishes", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["bitmasks", "dp"]}, {"contestId": 580, "index": "C", "name": "Kefa and Park", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["dfs and similar", "graphs", "trees"]}, {"contestId": 580, "index": "B", "name": "Kefa and Company", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["binary search", "sortings", "two pointers"]}, {"contestId": 580, "index": "A", "name": "Kefa and First Steps", "type": "PROGRAMMING", "points": 750.0, "rating": 900, "tags": ["brute force", "dp", "implementation"]}, {"contestId": 579, "index": "B", "name": "Finding Team Member", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["brute force", "implementation", "sortings"]}, {"contestId": 579, "index": "A", "name": "Raising Bacteria", "type": "PROGRAMMING", "points": 250.0, "rating": 1000, "tags": ["bitmasks"]}, {"contestId": 578, "index": "F", "name": "Mirror Box", "type": "PROGRAMMING", "points": 3000.0, "rating": 3200, "tags": ["matrices", "trees"]}, {"contestId": 578, "index": "E", "name": "Walking!", "type": "PROGRAMMING", "points": 2750.0, "rating": 2700, "tags": ["constructive algorithms", "greedy"]}, {"contestId": 578, "index": "D", "name": "LCS Again", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["dp", "greedy"]}, {"contestId": 578, "index": "C", "name": "Weakness and Poorness", "type": "PROGRAMMING", "points": 750.0, "rating": 2000, "tags": ["ternary search"]}, {"contestId": 578, "index": "B", "name": "\"Or\" Game", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["brute force", "greedy"]}, {"contestId": 578, "index": "A", "name": "A Problem about Polyline", "type": "PROGRAMMING", "points": 250.0, "rating": 1700, "tags": ["geometry", "math"]}, {"contestId": 577, "index": "B", "name": "Modulo Sum", "type": "PROGRAMMING", "points": 1250.0, "rating": 1900, "tags": ["combinatorics", "data structures", "dp", "two pointers"]}, {"contestId": 577, "index": "A", "name": "Multiplication Table", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation", "number theory"]}, {"contestId": 576, "index": "E", "name": "Painting Edges", "type": "PROGRAMMING", "points": 2750.0, "rating": 3300, "tags": ["binary search", "data structures"]}, {"contestId": 576, "index": "D", "name": "Flights for Regular Customers", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["dp", "matrices"]}, {"contestId": 576, "index": "C", "name": "Points on Plane", "type": "PROGRAMMING", "points": 1250.0, "rating": 2100, "tags": ["constructive algorithms", "divide and conquer", "geometry", "greedy", "sortings"]}, {"contestId": 576, "index": "B", "name": "Invariance of Tree", "type": "PROGRAMMING", "points": 1250.0, "rating": 2100, "tags": ["constructive algorithms", "dfs and similar", "greedy", "trees"]}, {"contestId": 576, "index": "A", "name": "Vasya and Petya's Game", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["math", "number theory"]}, {"contestId": 575, "index": "I", "name": "Robots protection", "type": "PROGRAMMING", "rating": 2800, "tags": ["data structures"]}, {"contestId": 575, "index": "H", "name": "Bots", "type": "PROGRAMMING", "rating": 1800, "tags": ["combinatorics", "number theory"]}, {"contestId": 575, "index": "G", "name": "Run for beer", "type": "PROGRAMMING", "rating": 2200, "tags": ["dfs and similar", "shortest paths"]}, {"contestId": 575, "index": "F", "name": "Bulbo", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp", "greedy"]}, {"contestId": 575, "index": "E", "name": "Spectator Riots", "type": "PROGRAMMING", "rating": 2800, "tags": ["geometry"]}, {"contestId": 575, "index": "D", "name": "Tablecity", "type": "PROGRAMMING", "rating": 1700, "tags": ["constructive algorithms", "implementation"]}, {"contestId": 575, "index": "C", "name": "Party", "type": "PROGRAMMING", "rating": 2700, "tags": ["bitmasks", "brute force", "graph matchings"]}, {"contestId": 575, "index": "B", "name": "Bribes", "type": "PROGRAMMING", "rating": 2200, "tags": ["dfs and similar", "graphs", "trees"]}, {"contestId": 575, "index": "A", "name": "Fibonotci", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "math", "matrices"]}, {"contestId": 574, "index": "B", "name": "Bear and Three Musketeers", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["brute force", "dfs and similar", "graphs", "hashing"]}, {"contestId": 574, "index": "A", "name": "Bear and Elections", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["greedy", "implementation"]}, {"contestId": 573, "index": "E", "name": "Bear and Bowling", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["data structures", "greedy"]}, {"contestId": 573, "index": "D", "name": "Bear and Cavalry", "type": "PROGRAMMING", "points": 2000.0, "rating": 3000, "tags": ["data structures", "divide and conquer", "dp"]}, {"contestId": 573, "index": "C", "name": "Bear and Drawing", "type": "PROGRAMMING", "points": 1750.0, "rating": 2300, "tags": ["constructive algorithms", "dfs and similar", "trees"]}, {"contestId": 573, "index": "B", "name": "Bear and Blocks", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["binary search", "data structures", "dp", "math"]}, {"contestId": 573, "index": "A", "name": "Bear and Poker", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["implementation", "math", "number theory"]}, {"contestId": 572, "index": "B", "name": "Order Book", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["data structures", "greedy", "implementation", "sortings"]}, {"contestId": 572, "index": "A", "name": "Arrays", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["sortings"]}, {"contestId": 571, "index": "E", "name": "Geometric Progressions", "type": "PROGRAMMING", "points": 2750.0, "rating": 3200, "tags": ["math"]}, {"contestId": 571, "index": "D", "name": "Campus", "type": "PROGRAMMING", "points": 2000.0, "rating": 3100, "tags": ["binary search", "data structures", "dsu", "trees"]}, {"contestId": 571, "index": "C", "name": "CNF 2", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy"]}, {"contestId": 571, "index": "B", "name": "Minimization", "type": "PROGRAMMING", "points": 1250.0, "rating": 2000, "tags": ["dp", "greedy", "sortings"]}, {"contestId": 571, "index": "A", "name": "Lengthening Sticks", "type": "PROGRAMMING", "points": 750.0, "rating": 2100, "tags": ["combinatorics", "implementation", "math"]}, {"contestId": 570, "index": "E", "name": "Pig and Palindromes", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["combinatorics", "dp"]}, {"contestId": 570, "index": "D", "name": "Tree Requests", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["binary search", "bitmasks", "constructive algorithms", "dfs and similar", "graphs", "trees"]}, {"contestId": 570, "index": "C", "name": "Replacement", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["constructive algorithms", "data structures", "implementation"]}, {"contestId": 570, "index": "B", "name": "Simple Game", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["constructive algorithms", "games", "greedy", "implementation", "math"]}, {"contestId": 570, "index": "A", "name": "Elections", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["implementation"]}, {"contestId": 569, "index": "B", "name": "Inventory", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["greedy", "math"]}, {"contestId": 569, "index": "A", "name": "Music", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["implementation", "math"]}, {"contestId": 568, "index": "E", "name": "Longest Increasing Subsequence", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["data structures", "dp"]}, {"contestId": 568, "index": "D", "name": "Sign Posts", "type": "PROGRAMMING", "points": 2250.0, "rating": 2800, "tags": ["brute force", "geometry", "math"]}, {"contestId": 568, "index": "C", "name": "New Language", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["2-sat", "greedy"]}, {"contestId": 568, "index": "B", "name": "Symmetric and Transitive", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 568, "index": "A", "name": "Primes or Palindromes?", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["brute force", "implementation", "math", "number theory"]}, {"contestId": 567, "index": "F", "name": "Mausoleum", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["dp"]}, {"contestId": 567, "index": "E", "name": "President and Roads", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["dfs and similar", "graphs", "hashing", "shortest paths"]}, {"contestId": 567, "index": "D", "name": "One-Dimensional Battle Ships", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["binary search", "data structures", "greedy", "sortings"]}, {"contestId": 567, "index": "C", "name": "Geometric Progression", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["binary search", "data structures", "dp"]}, {"contestId": 567, "index": "B", "name": "Berland National Library", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["implementation"]}, {"contestId": 567, "index": "A", "name": "Lineland Mail", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["greedy", "implementation"]}, {"contestId": 566, "index": "G", "name": "Max and Min", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["geometry"]}, {"contestId": 566, "index": "F", "name": "Clique in the Divisibility Graph", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["dp", "math", "number theory"]}, {"contestId": 566, "index": "E", "name": "Restoring Map", "type": "PROGRAMMING", "points": 3000.0, "rating": 3200, "tags": ["bitmasks", "constructive algorithms", "trees"]}, {"contestId": 566, "index": "D", "name": "Restructuring Company", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["data structures", "dsu"]}, {"contestId": 566, "index": "C", "name": "Logistical Questions", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["dfs and similar", "divide and conquer", "trees"]}, {"contestId": 566, "index": "B", "name": "Replicating Processes", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["constructive algorithms", "greedy"]}, {"contestId": 566, "index": "A", "name": "Matching Names", "type": "PROGRAMMING", "points": 1750.0, "rating": 2300, "tags": ["dfs and similar", "strings", "trees"]}, {"contestId": 560, "index": "B", "name": "Gerald is into Art", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "implementation"]}, {"contestId": 560, "index": "A", "name": "Currency System in Geraldion", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation", "sortings"]}, {"contestId": 559, "index": "E", "name": "Gerald and Path", "type": "PROGRAMMING", "points": 2250.0, "rating": 3000, "tags": ["dp", "sortings"]}, {"contestId": 559, "index": "D", "name": "Randomizer", "type": "PROGRAMMING", "points": 2250.0, "rating": 2800, "tags": ["combinatorics", "geometry", "probabilities"]}, {"contestId": 559, "index": "C", "name": "Gerald and Giant Chess", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["combinatorics", "dp", "math", "number theory"]}, {"contestId": 559, "index": "B", "name": "Equivalent Strings", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["divide and conquer", "hashing", "sortings", "strings"]}, {"contestId": 559, "index": "A", "name": "Gerald's Hexagon", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["brute force", "geometry", "math"]}, {"contestId": 558, "index": "E", "name": "A Simple Task", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["data structures", "sortings", "strings"]}, {"contestId": 558, "index": "D", "name": "Guess Your Way Out! II", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["data structures", "implementation", "sortings"]}, {"contestId": 558, "index": "C", "name": "Amr and Chemistry", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["brute force", "graphs", "greedy", "math", "shortest paths"]}, {"contestId": 558, "index": "B", "name": "Amr and The Large Array", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["implementation"]}, {"contestId": 558, "index": "A", "name": "Lala Land and Apple Trees", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["brute force", "implementation", "sortings"]}, {"contestId": 557, "index": "E", "name": "Ann and Half-Palindrome", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["data structures", "dp", "graphs", "string suffix structures", "strings", "trees"]}, {"contestId": 557, "index": "D", "name": "Vitaly and Cycle", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["combinatorics", "dfs and similar", "graphs", "math"]}, {"contestId": 557, "index": "C", "name": "Arthur and Table", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["brute force", "data structures", "dp", "greedy", "math", "sortings"]}, {"contestId": 557, "index": "B", "name": "Pasha and Tea", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["constructive algorithms", "implementation", "math", "sortings"]}, {"contestId": 557, "index": "A", "name": "Ilya and Diplomas", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["greedy", "implementation", "math"]}, {"contestId": 556, "index": "B", "name": "Case of Fake Numbers", "type": "PROGRAMMING", "points": 250.0, "rating": 1100, "tags": ["brute force", "implementation"]}, {"contestId": 556, "index": "A", "name": "Case of the Zeros and Ones", "type": "PROGRAMMING", "points": 250.0, "rating": 900, "tags": ["greedy"]}, {"contestId": 555, "index": "E", "name": "Case of Computer Network", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["dfs and similar", "graphs", "trees"]}, {"contestId": 555, "index": "D", "name": "Case of a Top Secret", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["binary search", "implementation", "math"]}, {"contestId": 555, "index": "C", "name": "Case of Chocolate", "type": "PROGRAMMING", "points": 1250.0, "rating": 2200, "tags": ["data structures"]}, {"contestId": 555, "index": "B", "name": "Case of Fugitive", "type": "PROGRAMMING", "points": 750.0, "rating": 2000, "tags": ["data structures", "greedy", "sortings"]}, {"contestId": 555, "index": "A", "name": "Case of Matryoshkas", "type": "PROGRAMMING", "points": 250.0, "rating": 1500, "tags": ["implementation"]}, {"contestId": 554, "index": "B", "name": "Ohana Cleans Up", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["brute force", "greedy", "strings"]}, {"contestId": 554, "index": "A", "name": "Kyoya and Photobooks", "type": "PROGRAMMING", "points": 250.0, "rating": 900, "tags": ["brute force", "math", "strings"]}, {"contestId": 553, "index": "E", "name": "Kyoya and Train", "type": "PROGRAMMING", "points": 3000.0, "rating": 3200, "tags": ["dp", "fft", "graphs", "math", "probabilities"]}, {"contestId": 553, "index": "D", "name": "Nudist Beach", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["binary search", "graphs", "greedy"]}, {"contestId": 553, "index": "C", "name": "Love Triangles", "type": "PROGRAMMING", "points": 1000.0, "rating": 2200, "tags": ["dfs and similar", "dsu", "graphs"]}, {"contestId": 553, "index": "B", "name": "Kyoya and Permutation", "type": "PROGRAMMING", "points": 500.0, "rating": 1900, "tags": ["binary search", "combinatorics", "constructive algorithms", "greedy", "implementation", "math"]}, {"contestId": 553, "index": "A", "name": "Kyoya and Colored Balls", "type": "PROGRAMMING", "points": 250.0, "rating": 1500, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 552, "index": "E", "name": "Vanya and Brackets", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["brute force", "dp", "expression parsing", "greedy", "implementation", "strings"]}, {"contestId": 552, "index": "D", "name": "Vanya and Triangles", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["brute force", "combinatorics", "data structures", "geometry", "math", "sortings"]}, {"contestId": 552, "index": "C", "name": "Vanya and Scales", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["brute force", "dp", "greedy", "math", "meet-in-the-middle", "number theory"]}, {"contestId": 552, "index": "B", "name": "Vanya and Books", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["implementation", "math"]}, {"contestId": 552, "index": "A", "name": "Vanya and Table", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation", "math"]}, {"contestId": 551, "index": "E", "name": "GukiZ and GukiZiana", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["binary search", "data structures", "implementation"]}, {"contestId": 551, "index": "D", "name": "GukiZ and Binary Operations", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["combinatorics", "implementation", "math", "matrices", "number theory"]}, {"contestId": 551, "index": "C", "name": "GukiZ hates Boxes", "type": "PROGRAMMING", "points": 1750.0, "rating": 2200, "tags": ["binary search", "greedy"]}, {"contestId": 551, "index": "B", "name": "ZgukistringZ", "type": "PROGRAMMING", "points": 1250.0, "rating": 1800, "tags": ["brute force", "constructive algorithms", "implementation", "strings"]}, {"contestId": 551, "index": "A", "name": "GukiZ and Contest", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "implementation", "sortings"]}, {"contestId": 550, "index": "E", "name": "Brackets in Implications", "type": "PROGRAMMING", "points": 3000.0, "rating": 2200, "tags": ["constructive algorithms", "greedy", "implementation", "math"]}, {"contestId": 550, "index": "D", "name": "Regular Bridge", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["constructive algorithms", "graphs", "implementation"]}, {"contestId": 550, "index": "C", "name": "Divisibility by Eight", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["brute force", "dp", "math"]}, {"contestId": 550, "index": "B", "name": "Preparing Olympiad", "type": "PROGRAMMING", "points": 750.0, "rating": 1400, "tags": ["bitmasks", "brute force"]}, {"contestId": 550, "index": "A", "name": "Two Substrings", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["brute force", "dp", "greedy", "implementation", "strings"]}, {"contestId": 549, "index": "H", "name": "Degenerate Matrix", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["binary search", "math"]}, {"contestId": 549, "index": "G", "name": "Happy Line", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["constructive algorithms", "greedy", "sortings"]}, {"contestId": 549, "index": "F", "name": "Yura and Developers", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["data structures", "divide and conquer"]}, {"contestId": 549, "index": "E", "name": "Sasha Circle", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["geometry", "math"]}, {"contestId": 549, "index": "D", "name": "Haar Features", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["greedy", "implementation"]}, {"contestId": 549, "index": "C", "name": "The Game Of Parity", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["games"]}, {"contestId": 549, "index": "B", "name": "Looksery Party", "type": "PROGRAMMING", "points": 1750.0, "rating": 2300, "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy"]}, {"contestId": 549, "index": "A", "name": "Face Detection", "type": "PROGRAMMING", "points": 250.0, "rating": 900, "tags": ["implementation", "strings"]}, {"contestId": 548, "index": "B", "name": "Mike and Fun", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["brute force", "dp", "greedy", "implementation"]}, {"contestId": 548, "index": "A", "name": "Mike and Fax", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["brute force", "implementation", "strings"]}, {"contestId": 547, "index": "E", "name": "Mike and Friends", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["data structures", "string suffix structures", "strings", "trees"]}, {"contestId": 547, "index": "D", "name": "Mike and Fish", "type": "PROGRAMMING", "points": 1750.0, "rating": 2600, "tags": ["constructive algorithms", "dfs and similar", "graphs"]}, {"contestId": 547, "index": "C", "name": "Mike and Foam", "type": "PROGRAMMING", "points": 1750.0, "rating": 2300, "tags": ["bitmasks", "combinatorics", "dp", "math", "number theory"]}, {"contestId": 547, "index": "B", "name": "Mike and Feet", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["binary search", "data structures", "dp", "dsu"]}, {"contestId": 547, "index": "A", "name": "Mike and Frog", "type": "PROGRAMMING", "points": 750.0, "rating": 2200, "tags": ["brute force", "greedy", "implementation", "math"]}, {"contestId": 546, "index": "E", "name": "Soldier and Traveling", "type": "PROGRAMMING", "points": 2250.0, "rating": 2100, "tags": ["flows", "graphs", "math"]}, {"contestId": 546, "index": "D", "name": "Soldier and Number Game", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["constructive algorithms", "dp", "math", "number theory"]}, {"contestId": 546, "index": "C", "name": "Soldier and Cards", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["brute force", "dfs and similar", "games"]}, {"contestId": 546, "index": "B", "name": "Soldier and Badges", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["brute force", "greedy", "implementation", "sortings"]}, {"contestId": 546, "index": "A", "name": "Soldier and Bananas", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "implementation", "math"]}, {"contestId": 545, "index": "E", "name": "Paths and Trees", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["graphs", "greedy", "shortest paths"]}, {"contestId": 545, "index": "D", "name": "Queue", "type": "PROGRAMMING", "points": 1750.0, "rating": 1300, "tags": ["greedy", "implementation", "sortings"]}, {"contestId": 545, "index": "C", "name": "Woodcutters", "type": "PROGRAMMING", "points": 1750.0, "rating": 1500, "tags": ["dp", "greedy"]}, {"contestId": 545, "index": "B", "name": "Equidistant String", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["greedy"]}, {"contestId": 545, "index": "A", "name": "Toy Cars", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation"]}, {"contestId": 544, "index": "B", "name": "Sea and Islands", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["constructive algorithms", "implementation"]}, {"contestId": 544, "index": "A", "name": "Set of Strings", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["implementation", "strings"]}, {"contestId": 543, "index": "E", "name": "Listening to Music", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["constructive algorithms", "data structures"]}, {"contestId": 543, "index": "D", "name": "Road Improvement", "type": "PROGRAMMING", "points": 1750.0, "rating": 2300, "tags": ["dp", "trees"]}, {"contestId": 543, "index": "C", "name": "Remembering Strings", "type": "PROGRAMMING", "points": 1750.0, "rating": 2500, "tags": ["bitmasks", "dp"]}, {"contestId": 543, "index": "B", "name": "Destroying Roads", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["constructive algorithms", "graphs", "shortest paths"]}, {"contestId": 543, "index": "A", "name": "Writing Code", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["dp"]}, {"contestId": 542, "index": "F", "name": "Quest", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["dp", "greedy"]}, {"contestId": 542, "index": "E", "name": "Playing on Graph", "type": "PROGRAMMING", "points": 2250.0, "rating": 2600, "tags": ["graphs", "shortest paths"]}, {"contestId": 542, "index": "D", "name": "Superhero's Job", "type": "PROGRAMMING", "points": 2250.0, "rating": 2600, "tags": ["dfs and similar", "dp", "hashing", "math", "number theory"]}, {"contestId": 542, "index": "C", "name": "Idempotent functions", "type": "PROGRAMMING", "points": 750.0, "rating": 2000, "tags": ["constructive algorithms", "graphs", "math"]}, {"contestId": 542, "index": "B", "name": "Duck Hunt", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["data structures"]}, {"contestId": 542, "index": "A", "name": "Place Your Ad Here", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["data structures", "sortings"]}, {"contestId": 540, "index": "E", "name": "Infinite Inversions", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["binary search", "data structures", "implementation", "sortings", "trees"]}, {"contestId": 540, "index": "D", "name": "Bad Luck Island", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["dp", "probabilities"]}, {"contestId": 540, "index": "C", "name": "Ice Cave", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["dfs and similar"]}, {"contestId": 540, "index": "B", "name": "School Marks", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["greedy", "implementation"]}, {"contestId": 540, "index": "A", "name": "Combination Lock", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 538, "index": "H", "name": "Summer Dichotomy", "type": "PROGRAMMING", "points": 3000.0, "rating": 3200, "tags": ["2-sat", "data structures", "dfs and similar", "greedy"]}, {"contestId": 538, "index": "G", "name": "Berserk Robot ", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["constructive algorithms", "math", "sortings"]}, {"contestId": 538, "index": "F", "name": "A Heap of Heaps", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["brute force", "data structures", "math", "sortings"]}, {"contestId": 538, "index": "E", "name": "Demiurges Play Again", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["dfs and similar", "dp", "math", "trees"]}, {"contestId": 538, "index": "D", "name": "Weird Chess", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["brute force", "constructive algorithms", "implementation"]}, {"contestId": 538, "index": "C", "name": "Tourist's Notes", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["binary search", "brute force", "greedy", "implementation", "math"]}, {"contestId": 538, "index": "B", "name": "Quasi Binary", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["constructive algorithms", "dp", "greedy", "implementation"]}, {"contestId": 538, "index": "A", "name": "Cutting Banner", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["brute force", "implementation"]}, {"contestId": 536, "index": "E", "name": "Tavas on the Path", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["data structures", "divide and conquer", "trees"]}, {"contestId": 536, "index": "D", "name": "Tavas in Kansas", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["dp", "games"]}, {"contestId": 535, "index": "E", "name": "Tavas and Pashmaks", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["geometry", "math"]}, {"contestId": 535, "index": "D", "name": "Tavas and Malekas", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["greedy", "hashing", "string suffix structures", "strings"]}, {"contestId": 535, "index": "C", "name": "Tavas and Karafs", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["binary search", "greedy", "math"]}, {"contestId": 535, "index": "B", "name": "Tavas and SaDDas", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["bitmasks", "brute force", "combinatorics", "implementation"]}, {"contestId": 535, "index": "A", "name": "Tavas and Nafas", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["brute force", "implementation"]}, {"contestId": 534, "index": "F", "name": "Simplified Nonogram", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["bitmasks", "dp", "hashing", "meet-in-the-middle"]}, {"contestId": 534, "index": "E", "name": "Berland Local Positioning System", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["constructive algorithms", "greedy", "hashing", "implementation"]}, {"contestId": 534, "index": "D", "name": "Handshakes", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["binary search", "constructive algorithms", "data structures", "greedy"]}, {"contestId": 534, "index": "C", "name": "Polycarpus' Dice", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["math"]}, {"contestId": 534, "index": "B", "name": "Covered Path", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["dp", "greedy", "math"]}, {"contestId": 534, "index": "A", "name": "Exam", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["constructive algorithms", "implementation", "math"]}, {"contestId": 533, "index": "F", "name": "Encoding", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["hashing", "string suffix structures", "strings"]}, {"contestId": 533, "index": "E", "name": "Correcting Mistakes", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["constructive algorithms", "dp", "greedy", "hashing", "strings", "two pointers"]}, {"contestId": 533, "index": "D", "name": "Landmarks", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["data structures", "dp"]}, {"contestId": 533, "index": "C", "name": "Board Game", "type": "PROGRAMMING", "points": 250.0, "rating": 1700, "tags": ["games", "greedy", "implementation", "math"]}, {"contestId": 533, "index": "B", "name": "Work Group", "type": "PROGRAMMING", "points": 750.0, "rating": 2000, "tags": ["dfs and similar", "dp", "graphs", "strings", "trees"]}, {"contestId": 533, "index": "A", "name": "Berland Miners", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["binary search", "data structures", "dfs and similar", "greedy", "trees"]}, {"contestId": 530, "index": "I", "name": "Different variables", "type": "PROGRAMMING", "rating": 2500, "tags": ["*special"]}, {"contestId": 530, "index": "H", "name": "Points in triangle", "type": "PROGRAMMING", "rating": 2100, "tags": ["*special", "geometry"]}, {"contestId": 530, "index": "G", "name": "Levenshtein distance", "type": "PROGRAMMING", "rating": 2100, "tags": ["*special"]}, {"contestId": 530, "index": "F", "name": "Jumping frogs", "type": "PROGRAMMING", "rating": 2100, "tags": ["*special"]}, {"contestId": 530, "index": "E", "name": "Sum and product", "type": "PROGRAMMING", "rating": 1700, "tags": ["*special"]}, {"contestId": 530, "index": "D", "name": "Set subtraction", "type": "PROGRAMMING", "rating": 1600, "tags": ["*special"]}, {"contestId": 530, "index": "C", "name": "Diophantine equation", "type": "PROGRAMMING", "rating": 1500, "tags": ["*special"]}, {"contestId": 530, "index": "B", "name": "String inside out", "type": "PROGRAMMING", "rating": 1600, "tags": ["*special"]}, {"contestId": 530, "index": "A", "name": "Quadratic equation", "type": "PROGRAMMING", "rating": 1500, "tags": ["*special"]}, {"contestId": 529, "index": "B", "name": "Group Photo 2 (online mirror version)", "type": "PROGRAMMING", "points": 500.0, "rating": 1900, "tags": ["brute force", "greedy", "sortings"]}, {"contestId": 528, "index": "E", "name": "Triangles 3000", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["geometry", "sortings"]}, {"contestId": 528, "index": "D", "name": "Fuzzy Search", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["bitmasks", "brute force", "fft"]}, {"contestId": 527, "index": "E", "name": "Data Center Drama", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["dfs and similar", "graphs"]}, {"contestId": 527, "index": "D", "name": "Clique Problem", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["data structures", "dp", "greedy", "implementation", "sortings"]}, {"contestId": 527, "index": "C", "name": "Glass Carving", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["binary search", "data structures", "implementation"]}, {"contestId": 527, "index": "B", "name": "Error Correct System", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["greedy"]}, {"contestId": 527, "index": "A", "name": "Playing with Paper", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["implementation", "math"]}, {"contestId": 526, "index": "G", "name": "Spiders Evil Plan", "type": "PROGRAMMING", "points": 3000.0, "rating": 3300, "tags": ["greedy", "trees"]}, {"contestId": 526, "index": "F", "name": "Pudding Monsters", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["data structures", "divide and conquer"]}, {"contestId": 526, "index": "E", "name": "Transmitting Levels", "type": "PROGRAMMING", "points": 2250.0, "rating": 2400, "tags": ["dp", "implementation"]}, {"contestId": 526, "index": "D", "name": "Om Nom and Necklace", "type": "PROGRAMMING", "points": 1750.0, "rating": 2200, "tags": ["hashing", "string suffix structures", "strings"]}, {"contestId": 526, "index": "C", "name": "Om Nom and Candies", "type": "PROGRAMMING", "points": 1250.0, "rating": 2000, "tags": ["brute force", "greedy", "math"]}, {"contestId": 526, "index": "B", "name": "Om Nom and Dark Park", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["dfs and similar", "greedy", "implementation"]}, {"contestId": 526, "index": "A", "name": "King of Thieves", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["brute force", "implementation"]}, {"contestId": 525, "index": "E", "name": "Anya and Cubes", "type": "PROGRAMMING", "points": 3000.0, "rating": 2100, "tags": ["binary search", "bitmasks", "brute force", "dp", "math", "meet-in-the-middle"]}, {"contestId": 525, "index": "D", "name": "Arthur and Walls", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["constructive algorithms", "data structures", "graphs", "greedy", "shortest paths"]}, {"contestId": 525, "index": "C", "name": "Ilya and Sticks", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["greedy", "math", "sortings"]}, {"contestId": 525, "index": "B", "name": "Pasha and String", "type": "PROGRAMMING", "points": 750.0, "rating": 1400, "tags": ["constructive algorithms", "greedy", "math", "strings"]}, {"contestId": 525, "index": "A", "name": "Vitaliy and Pie", "type": "PROGRAMMING", "points": 250.0, "rating": 1100, "tags": ["greedy", "hashing", "strings"]}, {"contestId": 524, "index": "F", "name": "And Yet Another Bracket Sequence", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["data structures", "greedy", "hashing", "string suffix structures", "strings"]}, {"contestId": 524, "index": "E", "name": "Rooks and Rectangles", "type": "PROGRAMMING", "points": 1750.0, "rating": 2400, "tags": ["data structures", "sortings"]}, {"contestId": 524, "index": "D", "name": "Social Network", "type": "PROGRAMMING", "points": 1250.0, "rating": 2100, "tags": ["greedy", "two pointers"]}, {"contestId": 524, "index": "C", "name": "The Art of Dealing with ATM", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["binary search", "sortings"]}, {"contestId": 524, "index": "B", "name": "\u0424\u043e\u0442\u043e \u043d\u0430 \u043f\u0430\u043c\u044f\u0442\u044c - 2 (round version)", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["dp", "greedy"]}, {"contestId": 524, "index": "A", "name": "\u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0432\u044b \u0437\u043d\u0430\u0435\u0442\u0435 \u044d\u0442\u0438\u0445 \u043b\u044e\u0434\u0435\u0439?", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["implementation"]}, {"contestId": 523, "index": "D", "name": "Statistics of Recompressing Videos", "type": "PROGRAMMING", "points": 2000.0, "rating": 1600, "tags": ["*special", "data structures", "implementation"]}, {"contestId": 523, "index": "C", "name": "Name Quest", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["*special", "greedy"]}, {"contestId": 523, "index": "B", "name": "Mean Requests", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["*special", "implementation"]}, {"contestId": 523, "index": "A", "name": "Rotate, Flip and Zoom", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["*special", "implementation"]}, {"contestId": 522, "index": "D", "name": "Closest Equals", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["*special", "data structures"]}, {"contestId": 522, "index": "C", "name": "Chicken or Fish?", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["greedy"]}, {"contestId": 522, "index": "B", "name": "Photo to Remember", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["*special", "data structures", "dp", "implementation"]}, {"contestId": 522, "index": "A", "name": "Reposts", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["*special", "dfs and similar", "dp", "graphs", "trees"]}, {"contestId": 521, "index": "E", "name": "Cycling City", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["dfs and similar", "graphs"]}, {"contestId": 521, "index": "D", "name": "Shop", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["greedy"]}, {"contestId": 520, "index": "E", "name": "Pluses everywhere", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["combinatorics", "dp", "math", "number theory"]}, {"contestId": 520, "index": "D", "name": "Cubes", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["games", "greedy", "implementation"]}, {"contestId": 520, "index": "C", "name": "DNA Alignment", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["math", "strings"]}, {"contestId": 520, "index": "B", "name": "Two Buttons", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["dfs and similar", "graphs", "greedy", "implementation", "math", "shortest paths"]}, {"contestId": 520, "index": "A", "name": "Pangram", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "strings"]}, {"contestId": 519, "index": "E", "name": "A and B and Lecture Rooms", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["binary search", "data structures", "dfs and similar", "dp", "trees"]}, {"contestId": 519, "index": "D", "name": "A and B and Interesting Substrings", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["data structures", "dp", "two pointers"]}, {"contestId": 519, "index": "C", "name": "A and B and Team Training", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["greedy", "implementation", "math", "number theory"]}, {"contestId": 519, "index": "B", "name": "A and B and Compilation Errors", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["data structures", "implementation", "sortings"]}, {"contestId": 519, "index": "A", "name": "A and B and Chess", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation"]}, {"contestId": 518, "index": "F", "name": "Pasha and Pipe", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["binary search", "brute force", "combinatorics", "dp", "implementation"]}, {"contestId": 518, "index": "E", "name": "Arthur and Questions", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["greedy", "implementation", "math", "ternary search"]}, {"contestId": 518, "index": "D", "name": "Ilya and Escalator", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["combinatorics", "dp", "math", "probabilities"]}, {"contestId": 518, "index": "C", "name": "Anya and Smartphone", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["constructive algorithms", "data structures", "implementation"]}, {"contestId": 518, "index": "B", "name": "Tanya and Postcard", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["greedy", "implementation", "strings"]}, {"contestId": 518, "index": "A", "name": "Vitaly and Strings", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["constructive algorithms", "strings"]}, {"contestId": 516, "index": "E", "name": "Drazil and His Happy Friends", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["math", "number theory"]}, {"contestId": 516, "index": "D", "name": "Drazil and Morning Exercise", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["dfs and similar", "dp", "dsu", "trees", "two pointers"]}, {"contestId": 515, "index": "E", "name": "Drazil and Park", "type": "PROGRAMMING", "points": 3000.0, "rating": 2300, "tags": ["data structures"]}, {"contestId": 515, "index": "D", "name": "Drazil and Tiles", "type": "PROGRAMMING", "points": 3000.0, "rating": 2000, "tags": ["constructive algorithms", "greedy"]}, {"contestId": 515, "index": "C", "name": "Drazil and Factorial", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["greedy", "math", "sortings"]}, {"contestId": 515, "index": "B", "name": "Drazil and His Happy Friends", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["brute force", "dsu", "meet-in-the-middle", "number theory"]}, {"contestId": 515, "index": "A", "name": "Drazil and Date", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["math"]}, {"contestId": 514, "index": "E", "name": "Darth Vader and Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["dp", "matrices"]}, {"contestId": 514, "index": "D", "name": "R2D2 and Droid Army", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["binary search", "data structures", "two pointers"]}, {"contestId": 514, "index": "C", "name": "Watto and Mechanism", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["binary search", "data structures", "hashing", "string suffix structures", "strings"]}, {"contestId": 514, "index": "B", "name": "Han Solo and Lazer Gun", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["brute force", "data structures", "geometry", "implementation", "math"]}, {"contestId": 514, "index": "A", "name": "Chewba\u0441ca and Number", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["greedy", "implementation"]}, {"contestId": 513, "index": "G3", "name": "Inversions problem", "type": "PROGRAMMING", "points": 16.0, "rating": 3100, "tags": ["dp"]}, {"contestId": 513, "index": "G2", "name": "Inversions problem", "type": "PROGRAMMING", "points": 5.0, "rating": 2400, "tags": ["dp", "probabilities"]}, {"contestId": 513, "index": "G1", "name": "Inversions problem", "type": "PROGRAMMING", "points": 3.0, "rating": 1800, "tags": ["brute force", "dfs and similar", "dp", "meet-in-the-middle"]}, {"contestId": 513, "index": "F2", "name": "Scaygerboss", "type": "PROGRAMMING", "points": 6.0, "rating": 2800, "tags": ["flows"]}, {"contestId": 513, "index": "F1", "name": "Scaygerboss", "type": "PROGRAMMING", "points": 14.0, "rating": 2700, "tags": ["flows"]}, {"contestId": 513, "index": "E2", "name": "Subarray Cuts", "type": "PROGRAMMING", "points": 12.0, "rating": 2700, "tags": ["dp"]}, {"contestId": 513, "index": "E1", "name": "Subarray Cuts", "type": "PROGRAMMING", "points": 9.0, "rating": 2600, "tags": ["dp"]}, {"contestId": 513, "index": "D2", "name": "Constrained Tree", "type": "PROGRAMMING", "points": 8.0, "rating": 2600, "tags": ["constructive algorithms", "data structures"]}, {"contestId": 513, "index": "D1", "name": "Constrained Tree", "type": "PROGRAMMING", "points": 9.0, "rating": 2400, "tags": ["dfs and similar"]}, {"contestId": 513, "index": "C", "name": "Second price auction", "type": "PROGRAMMING", "points": 8.0, "rating": 2000, "tags": ["bitmasks", "probabilities"]}, {"contestId": 513, "index": "B2", "name": "Permutations", "type": "PROGRAMMING", "points": 4.0, "rating": 1800, "tags": ["bitmasks", "divide and conquer", "math"]}, {"contestId": 513, "index": "B1", "name": "Permutations", "type": "PROGRAMMING", "points": 3.0, "rating": 1400, "tags": ["brute force"]}, {"contestId": 513, "index": "A", "name": "Game", "type": "PROGRAMMING", "points": 3.0, "rating": 800, "tags": ["constructive algorithms", "math"]}, {"contestId": 512, "index": "E", "name": "Fox And Polygon", "type": "PROGRAMMING", "points": 2250.0, "rating": 2900, "tags": ["constructive algorithms", "divide and conquer"]}, {"contestId": 512, "index": "D", "name": "Fox And Travelling", "type": "PROGRAMMING", "points": 2250.0, "rating": 2900, "tags": ["dp", "trees"]}, {"contestId": 510, "index": "E", "name": "Fox And Dinner", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["flows"]}, {"contestId": 510, "index": "D", "name": "Fox And Jumping", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["bitmasks", "brute force", "dp", "math"]}, {"contestId": 510, "index": "C", "name": "Fox And Names", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["dfs and similar", "graphs", "sortings"]}, {"contestId": 510, "index": "B", "name": "Fox And Two Dots", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["dfs and similar"]}, {"contestId": 510, "index": "A", "name": "Fox And Snake", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 509, "index": "F", "name": "Progress Monitoring", "type": "PROGRAMMING", "rating": 2300, "tags": ["dp"]}, {"contestId": 509, "index": "E", "name": "Pretty Song", "type": "PROGRAMMING", "rating": 2000, "tags": ["math", "strings"]}, {"contestId": 509, "index": "D", "name": "Restoring Numbers", "type": "PROGRAMMING", "rating": 2200, "tags": ["constructive algorithms", "math"]}, {"contestId": 509, "index": "C", "name": "Sums of Digits", "type": "PROGRAMMING", "rating": 2000, "tags": ["dp", "greedy", "implementation"]}, {"contestId": 509, "index": "B", "name": "Painting Pebbles", "type": "PROGRAMMING", "rating": 1300, "tags": ["constructive algorithms", "greedy", "implementation"]}, {"contestId": 509, "index": "A", "name": "Maximum in Table", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "implementation"]}, {"contestId": 508, "index": "E", "name": "Arthur and Brackets", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["dp", "greedy"]}, {"contestId": 508, "index": "D", "name": "Tanya and Password", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["dfs and similar", "graphs"]}, {"contestId": 508, "index": "C", "name": "Anya and Ghosts", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["constructive algorithms", "greedy"]}, {"contestId": 508, "index": "B", "name": "Anton and currency you all know", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["greedy", "math", "strings"]}, {"contestId": 508, "index": "A", "name": "Pasha and Pixels", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["brute force"]}, {"contestId": 507, "index": "E", "name": "Breaking Good", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["dfs and similar", "dp", "graphs", "shortest paths"]}, {"contestId": 507, "index": "D", "name": "The Maths Lecture", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["dp", "implementation"]}, {"contestId": 507, "index": "C", "name": "Guess Your Way Out!", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["implementation", "math", "trees"]}, {"contestId": 507, "index": "B", "name": "Amr and Pins", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["geometry", "math"]}, {"contestId": 507, "index": "A", "name": "Amr and Music", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["greedy", "implementation", "sortings"]}, {"contestId": 506, "index": "E", "name": "Mr. Kitayuta's Gift", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["combinatorics", "dp", "matrices", "strings"]}, {"contestId": 506, "index": "D", "name": "Mr. Kitayuta's Colorful Graph", "type": "PROGRAMMING", "points": 1750.0, "rating": 2400, "tags": ["brute force", "dfs and similar", "dsu", "graphs"]}, {"contestId": 505, "index": "E", "name": "Mr. Kitayuta vs. Bamboos", "type": "PROGRAMMING", "points": 2750.0, "rating": 2900, "tags": ["binary search", "greedy"]}, {"contestId": 505, "index": "D", "name": "Mr. Kitayuta's Technology", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["dfs and similar"]}, {"contestId": 505, "index": "C", "name": "Mr. Kitayuta, the Treasure Hunter", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["dfs and similar", "dp", "two pointers"]}, {"contestId": 505, "index": "B", "name": "Mr. Kitayuta's Colorful Graph", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["dfs and similar", "dp", "dsu", "graphs"]}, {"contestId": 505, "index": "A", "name": "Mr. Kitayuta's Gift", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["brute force", "implementation", "strings"]}, {"contestId": 504, "index": "E", "name": "Misha and LCP on Tree", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["binary search", "dfs and similar", "hashing", "string suffix structures", "trees"]}, {"contestId": 504, "index": "D", "name": "Misha and XOR", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["bitmasks"]}, {"contestId": 501, "index": "E", "name": "Misha and Palindrome Degree", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["binary search", "combinatorics", "implementation"]}, {"contestId": 501, "index": "D", "name": "Misha and Permutations Summation", "type": "PROGRAMMING", "points": 3000.0, "rating": 2000, "tags": ["data structures"]}, {"contestId": 501, "index": "C", "name": "Misha and Forest", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["constructive algorithms", "data structures", "greedy", "sortings", "trees"]}, {"contestId": 501, "index": "B", "name": "Misha and Changing Handles", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["data structures", "dsu", "strings"]}, {"contestId": 501, "index": "A", "name": "Contest", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation"]}, {"contestId": 500, "index": "G", "name": "New Year Running", "type": "PROGRAMMING", "points": 3500.0, "rating": 3200, "tags": ["number theory", "trees"]}, {"contestId": 500, "index": "F", "name": "New Year Shopping", "type": "PROGRAMMING", "points": 2750.0, "rating": 2700, "tags": ["divide and conquer", "dp"]}, {"contestId": 500, "index": "E", "name": "New Year Domino", "type": "PROGRAMMING", "points": 2750.0, "rating": 2300, "tags": ["data structures", "dp", "dsu"]}, {"contestId": 500, "index": "D", "name": "New Year Santa Network", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["combinatorics", "dfs and similar", "graphs", "trees"]}, {"contestId": 500, "index": "C", "name": "New Year Book Reading", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["constructive algorithms", "greedy", "implementation", "math"]}, {"contestId": 500, "index": "B", "name": "New Year Permutation", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["dfs and similar", "dsu", "graphs", "greedy", "math", "sortings"]}, {"contestId": 500, "index": "A", "name": "New Year Transportation", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["dfs and similar", "graphs", "implementation"]}, {"contestId": 499, "index": "B", "name": "Lecture", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation", "strings"]}, {"contestId": 499, "index": "A", "name": "Watching a movie", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["greedy", "implementation"]}, {"contestId": 498, "index": "E", "name": "Stairs and Lines", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["dp", "matrices"]}, {"contestId": 498, "index": "D", "name": "Traffic Jams in the Land", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["data structures", "dp", "number theory"]}, {"contestId": 498, "index": "C", "name": "Array and Operations", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["flows", "graph matchings", "number theory"]}, {"contestId": 498, "index": "B", "name": "Name That Tune", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["dp", "probabilities", "two pointers"]}, {"contestId": 498, "index": "A", "name": "Crazy Town", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["geometry"]}, {"contestId": 497, "index": "E", "name": "Subsequences Return", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["dp", "matrices"]}, {"contestId": 497, "index": "D", "name": "Gears", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["brute force", "geometry", "math"]}, {"contestId": 496, "index": "E", "name": "Distributing Parts ", "type": "PROGRAMMING", "points": 2250.0, "rating": 2100, "tags": ["greedy", "sortings"]}, {"contestId": 496, "index": "D", "name": "Tennis Game", "type": "PROGRAMMING", "points": 2250.0, "rating": 1900, "tags": ["binary search"]}, {"contestId": 496, "index": "C", "name": "Removing Columns", "type": "PROGRAMMING", "points": 1750.0, "rating": 1500, "tags": ["brute force", "constructive algorithms", "implementation"]}, {"contestId": 496, "index": "B", "name": "Secret Combination", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["brute force", "constructive algorithms", "implementation"]}, {"contestId": 496, "index": "A", "name": "Minimum Difficulty", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["brute force", "implementation", "math"]}, {"contestId": 495, "index": "B", "name": "Modular Equations", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["math", "number theory"]}, {"contestId": 495, "index": "A", "name": "Digital Counter", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["implementation"]}, {"contestId": 494, "index": "E", "name": "Sharti", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["data structures", "games"]}, {"contestId": 494, "index": "D", "name": "Birthday", "type": "PROGRAMMING", "points": 1750.0, "rating": 2700, "tags": ["data structures", "dfs and similar", "dp", "trees"]}, {"contestId": 494, "index": "C", "name": "Helping People", "type": "PROGRAMMING", "points": 1750.0, "rating": 2600, "tags": ["dp", "probabilities"]}, {"contestId": 494, "index": "B", "name": "Obsessive String", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["dp", "strings"]}, {"contestId": 494, "index": "A", "name": "Treasure", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["greedy"]}, {"contestId": 493, "index": "E", "name": "Vasya and Polynomial", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["math"]}, {"contestId": 493, "index": "D", "name": "Vasya and Chess", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["constructive algorithms", "games", "math"]}, {"contestId": 493, "index": "C", "name": "Vasya and Basketball", "type": "PROGRAMMING", "points": 2000.0, "rating": 1600, "tags": ["binary search", "brute force", "data structures", "implementation", "sortings", "two pointers"]}, {"contestId": 493, "index": "B", "name": "Vasya and Wrestling", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["implementation"]}, {"contestId": 493, "index": "A", "name": "Vasya and Football", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["implementation"]}, {"contestId": 492, "index": "E", "name": "Vanya and Field", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["math"]}, {"contestId": 492, "index": "D", "name": "Vanya and Computer Game", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["binary search", "implementation", "math", "sortings"]}, {"contestId": 492, "index": "C", "name": "Vanya and Exams", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["greedy", "sortings"]}, {"contestId": 492, "index": "B", "name": "Vanya and Lanterns", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["binary search", "implementation", "math", "sortings"]}, {"contestId": 492, "index": "A", "name": "Vanya and Cubes", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 491, "index": "C", "name": "Deciphering", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["flows", "graph matchings"]}, {"contestId": 491, "index": "B", "name": "New York Hotel", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["greedy", "math"]}, {"contestId": 491, "index": "A", "name": "Up the hill", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["constructive algorithms", "implementation"]}, {"contestId": 490, "index": "F", "name": "Treeland Tour", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["data structures", "dfs and similar", "dp", "trees"]}, {"contestId": 490, "index": "E", "name": "Restoring Increasing Sequence", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["binary search", "brute force", "greedy", "implementation"]}, {"contestId": 490, "index": "D", "name": "Chocolate", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["brute force", "dfs and similar", "math", "meet-in-the-middle", "number theory"]}, {"contestId": 490, "index": "C", "name": "Hacking Cypher", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["brute force", "math", "number theory", "strings"]}, {"contestId": 490, "index": "B", "name": "Queue", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["dsu", "implementation"]}, {"contestId": 490, "index": "A", "name": "Team Olympiad", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "implementation", "sortings"]}, {"contestId": 489, "index": "F", "name": "Special Matrices", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["combinatorics", "dp"]}, {"contestId": 489, "index": "E", "name": "Hiking", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["binary search", "dp"]}, {"contestId": 489, "index": "D", "name": "Unbearable Controversy of Being", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["brute force", "combinatorics", "dfs and similar", "graphs"]}, {"contestId": 489, "index": "C", "name": "Given Length and Sum of Digits...", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["dp", "greedy", "implementation"]}, {"contestId": 489, "index": "B", "name": "BerSU Ball", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["dfs and similar", "dp", "graph matchings", "greedy", "sortings", "two pointers"]}, {"contestId": 489, "index": "A", "name": "SwapSort", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["greedy", "implementation", "sortings"]}, {"contestId": 488, "index": "B", "name": "Candy Boxes", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["brute force", "constructive algorithms", "math"]}, {"contestId": 488, "index": "A", "name": "Giga Tower", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["brute force"]}, {"contestId": 487, "index": "E", "name": "Tourists", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["data structures", "dfs and similar", "graphs", "trees"]}, {"contestId": 487, "index": "D", "name": "Conveyor Belts", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["data structures"]}, {"contestId": 487, "index": "C", "name": "Prefix Product Sequence", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["constructive algorithms", "math", "number theory"]}, {"contestId": 487, "index": "B", "name": "Strip", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["binary search", "data structures", "dp", "two pointers"]}, {"contestId": 487, "index": "A", "name": "Fight the Monster", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["binary search", "brute force", "implementation"]}, {"contestId": 486, "index": "E", "name": "LIS of Sequence", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["data structures", "dp", "greedy", "hashing", "math"]}, {"contestId": 486, "index": "D", "name": "Valid Sets", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["dfs and similar", "dp", "math", "trees"]}, {"contestId": 486, "index": "C", "name": "Palindrome Transformation", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["brute force", "greedy", "implementation"]}, {"contestId": 486, "index": "B", "name": "OR in Matrix", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["greedy", "hashing", "implementation"]}, {"contestId": 486, "index": "A", "name": "Calculating Function", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "math"]}, {"contestId": 485, "index": "B", "name": "Valuable Resources", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["brute force", "greedy"]}, {"contestId": 485, "index": "A", "name": "Factory", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["implementation", "math", "matrices"]}, {"contestId": 484, "index": "E", "name": "Sign on Fence", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["binary search", "constructive algorithms", "data structures"]}, {"contestId": 484, "index": "D", "name": "Kindergarten", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["data structures", "dp", "greedy"]}, {"contestId": 484, "index": "C", "name": "Strange Sorting", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["implementation", "math"]}, {"contestId": 484, "index": "B", "name": "Maximum Value", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["binary search", "math", "sortings", "two pointers"]}, {"contestId": 484, "index": "A", "name": "Bits", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["bitmasks", "constructive algorithms"]}, {"contestId": 483, "index": "B", "name": "Friends and Presents", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["binary search", "math"]}, {"contestId": 483, "index": "A", "name": "Counterexample ", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["brute force", "implementation", "math", "number theory"]}, {"contestId": 482, "index": "E", "name": "ELCA", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["data structures", "trees"]}, {"contestId": 482, "index": "D", "name": "Random Function and Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["combinatorics", "dp", "trees"]}, {"contestId": 482, "index": "C", "name": "Game with Strings", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["bitmasks", "dp", "probabilities"]}, {"contestId": 482, "index": "B", "name": "Interesting Array", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["constructive algorithms", "data structures", "trees"]}, {"contestId": 482, "index": "A", "name": "Diverse Permutation", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["constructive algorithms", "greedy"]}, {"contestId": 480, "index": "E", "name": "Parking Lot", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["data structures", "divide and conquer"]}, {"contestId": 480, "index": "D", "name": "Parcels", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["dp", "graphs"]}, {"contestId": 479, "index": "E", "name": "Riding in a Lift", "type": "PROGRAMMING", "points": 2500.0, "rating": 1900, "tags": ["combinatorics", "dp"]}, {"contestId": 479, "index": "D", "name": "Long Jumps", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["binary search", "greedy", "implementation"]}, {"contestId": 479, "index": "C", "name": "Exams", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["greedy", "sortings"]}, {"contestId": 479, "index": "B", "name": "Towers", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["brute force", "constructive algorithms", "greedy", "implementation", "sortings"]}, {"contestId": 479, "index": "A", "name": "Expression", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["brute force", "math"]}, {"contestId": 478, "index": "E", "name": "Wavy numbers", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["brute force", "dfs and similar", "meet-in-the-middle", "sortings"]}, {"contestId": 478, "index": "D", "name": "Red-Green Towers", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["dp"]}, {"contestId": 478, "index": "C", "name": "Table Decorations", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["greedy"]}, {"contestId": 478, "index": "B", "name": "Random Teams", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["combinatorics", "constructive algorithms", "greedy", "math"]}, {"contestId": 478, "index": "A", "name": "Initial Bet", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["implementation"]}, {"contestId": 477, "index": "E", "name": "Dreamoon and Notepad", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["data structures"]}, {"contestId": 477, "index": "D", "name": "Dreamoon and Binary", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["dp", "strings"]}, {"contestId": 476, "index": "E", "name": "Dreamoon and Strings", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["dp", "strings"]}, {"contestId": 476, "index": "D", "name": "Dreamoon and Sets", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["constructive algorithms", "greedy", "math"]}, {"contestId": 476, "index": "C", "name": "Dreamoon and Sums", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["math"]}, {"contestId": 476, "index": "B", "name": "Dreamoon and WiFi", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["bitmasks", "brute force", "combinatorics", "dp", "math", "probabilities"]}, {"contestId": 476, "index": "A", "name": "Dreamoon and Stairs", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation", "math"]}, {"contestId": 475, "index": "F", "name": "Meta-universe", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["data structures"]}, {"contestId": 475, "index": "E", "name": "Strongly Connected City 2", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["dfs and similar"]}, {"contestId": 475, "index": "D", "name": "CGCDSSQ", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["brute force", "data structures", "math"]}, {"contestId": 475, "index": "C", "name": "Kamal-ol-molk's Painting", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["brute force", "constructive algorithms", "greedy"]}, {"contestId": 475, "index": "B", "name": "Strongly Connected City", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["brute force", "dfs and similar", "graphs", "implementation"]}, {"contestId": 475, "index": "A", "name": "Bayan Bus", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["implementation"]}, {"contestId": 474, "index": "F", "name": "Ant colony", "type": "PROGRAMMING", "points": 3000.0, "rating": 2100, "tags": ["data structures", "math", "number theory"]}, {"contestId": 474, "index": "E", "name": "Pillars", "type": "PROGRAMMING", "points": 3000.0, "rating": 2000, "tags": ["binary search", "data structures", "dp", "sortings", "trees"]}, {"contestId": 474, "index": "D", "name": "Flowers", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["dp"]}, {"contestId": 474, "index": "C", "name": "Captain Marmot", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["brute force", "geometry"]}, {"contestId": 474, "index": "B", "name": "Worms", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["binary search", "implementation"]}, {"contestId": 474, "index": "A", "name": "Keyboard", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation"]}, {"contestId": 472, "index": "G", "name": "Design Tutorial: Increase the Constraints", "type": "PROGRAMMING", "points": 3500.0, "rating": 2800, "tags": ["bitmasks", "data structures", "fft"]}, {"contestId": 472, "index": "F", "name": "Design Tutorial: Change the Goal", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["constructive algorithms", "math", "matrices"]}, {"contestId": 472, "index": "E", "name": "Design Tutorial: Learn from a Game", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["constructive algorithms", "implementation"]}, {"contestId": 472, "index": "D", "name": "Design Tutorial: Inverse the Problem", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["dfs and similar", "dsu", "shortest paths", "trees"]}, {"contestId": 472, "index": "C", "name": "Design Tutorial: Make It Nondeterministic", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["greedy"]}, {"contestId": 472, "index": "B", "name": "Design Tutorial: Learn from Life", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": []}, {"contestId": 472, "index": "A", "name": "Design Tutorial: Learn from Math", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math", "number theory"]}, {"contestId": 471, "index": "E", "name": "MUH and Lots and Lots of Segments", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["data structures", "dsu"]}, {"contestId": 471, "index": "D", "name": "MUH and Cube Walls", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["string suffix structures", "strings"]}, {"contestId": 471, "index": "C", "name": "MUH and House of Cards", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["binary search", "brute force", "greedy", "math"]}, {"contestId": 471, "index": "B", "name": "MUH and Important Things", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["implementation", "sortings"]}, {"contestId": 471, "index": "A", "name": "MUH and Sticks", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["implementation"]}, {"contestId": 470, "index": "H", "name": "Array Sorting", "type": "PROGRAMMING", "rating": 2300, "tags": ["*special"]}, {"contestId": 470, "index": "G", "name": "Hamming Distance", "type": "PROGRAMMING", "rating": 2300, "tags": ["*special"]}, {"contestId": 470, "index": "F", "name": "Pairwise Sums", "type": "PROGRAMMING", "rating": 2300, "tags": ["*special"]}, {"contestId": 470, "index": "E", "name": "Chessboard", "type": "PROGRAMMING", "rating": 1900, "tags": ["*special"]}, {"contestId": 470, "index": "D", "name": "Caesar Cipher", "type": "PROGRAMMING", "rating": 1900, "tags": ["*special"]}, {"contestId": 470, "index": "C", "name": "Eval", "type": "PROGRAMMING", "rating": 1900, "tags": ["*special"]}, {"contestId": 470, "index": "B", "name": "Hexakosioihexekontahexaphobia", "type": "PROGRAMMING", "rating": 1800, "tags": ["*special"]}, {"contestId": 470, "index": "A", "name": "Crystal Ball Sequence", "type": "PROGRAMMING", "rating": 1400, "tags": ["*special", "implementation"]}, {"contestId": 469, "index": "B", "name": "Chat Online", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["implementation"]}, {"contestId": 469, "index": "A", "name": "I Wanna Be the Guy", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "implementation"]}, {"contestId": 468, "index": "E", "name": "Permanent", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["dp", "graph matchings", "math", "meet-in-the-middle"]}, {"contestId": 468, "index": "D", "name": "Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 3100, "tags": ["graph matchings"]}, {"contestId": 468, "index": "C", "name": "Hack it!", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["binary search", "constructive algorithms", "math"]}, {"contestId": 468, "index": "B", "name": "Two Sets", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["2-sat", "dfs and similar", "dsu", "graph matchings", "greedy"]}, {"contestId": 468, "index": "A", "name": "24 Game", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["constructive algorithms", "greedy", "math"]}, {"contestId": 467, "index": "E", "name": "Alex and Complicated Task", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["data structures", "dp", "greedy"]}, {"contestId": 467, "index": "D", "name": "Fedor and Essay", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["dfs and similar", "dp", "graphs", "hashing", "strings"]}, {"contestId": 467, "index": "C", "name": "George and Job", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["dp", "implementation"]}, {"contestId": 467, "index": "B", "name": "Fedor and New Game", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["bitmasks", "brute force", "constructive algorithms", "implementation"]}, {"contestId": 467, "index": "A", "name": "George and Accommodation", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 466, "index": "E", "name": "Information Graph", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["dfs and similar", "dsu", "graphs", "trees"]}, {"contestId": 466, "index": "D", "name": "Increase Sequence", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["combinatorics", "dp"]}, {"contestId": 466, "index": "C", "name": "Number of Ways", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["binary search", "brute force", "data structures", "dp", "two pointers"]}, {"contestId": 466, "index": "B", "name": "Wonder Room", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["brute force", "math"]}, {"contestId": 466, "index": "A", "name": "Cheap Travel", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["implementation"]}, {"contestId": 465, "index": "B", "name": "Inbox (100500)", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["implementation"]}, {"contestId": 465, "index": "A", "name": "inc ARG", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation"]}, {"contestId": 464, "index": "E", "name": "The Classic Problem", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["data structures", "graphs", "shortest paths"]}, {"contestId": 464, "index": "D", "name": "World of Darkraft - 2", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["dp", "probabilities"]}, {"contestId": 464, "index": "C", "name": "Substitutes in Number", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["dp"]}, {"contestId": 464, "index": "B", "name": "Restore Cube ", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["brute force", "geometry"]}, {"contestId": 464, "index": "A", "name": "No to Palindromes!", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["greedy", "strings"]}, {"contestId": 463, "index": "E", "name": "Caisa and Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["brute force", "dfs and similar", "math", "number theory", "trees"]}, {"contestId": 463, "index": "D", "name": "Gargari and Permutations", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["dfs and similar", "dp", "graphs", "implementation"]}, {"contestId": 463, "index": "C", "name": "Gargari and Bishops", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["greedy", "hashing", "implementation"]}, {"contestId": 463, "index": "B", "name": "Caisa and Pylons", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["brute force", "implementation", "math"]}, {"contestId": 463, "index": "A", "name": "Caisa and Sugar", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["brute force", "implementation"]}, {"contestId": 462, "index": "B", "name": "Appleman and Card Game", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["greedy"]}, {"contestId": 462, "index": "A", "name": "Appleman and Easy Task", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["brute force", "implementation"]}, {"contestId": 461, "index": "E", "name": "Appleman and a Game", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["binary search", "shortest paths", "strings"]}, {"contestId": 461, "index": "D", "name": "Appleman and Complicated Task", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["dsu", "math"]}, {"contestId": 461, "index": "C", "name": "Appleman and a Sheet of Paper", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["data structures", "implementation"]}, {"contestId": 461, "index": "B", "name": "Appleman and Tree", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["dfs and similar", "dp", "trees"]}, {"contestId": 461, "index": "A", "name": "Appleman and Toastman", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["greedy", "sortings"]}, {"contestId": 460, "index": "E", "name": "Roland and Rose", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["brute force", "geometry", "math", "sortings"]}, {"contestId": 460, "index": "D", "name": "Little Victor and Set", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["brute force", "constructive algorithms", "math"]}, {"contestId": 460, "index": "C", "name": "Present", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["binary search", "data structures", "greedy"]}, {"contestId": 460, "index": "B", "name": "Little Dima and Equation", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["brute force", "implementation", "math", "number theory"]}, {"contestId": 460, "index": "A", "name": "Vasya and Socks", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["brute force", "implementation", "math"]}, {"contestId": 459, "index": "E", "name": "Pashmak and Graph", "type": "PROGRAMMING", "points": 3000.0, "rating": 1900, "tags": ["dp", "sortings"]}, {"contestId": 459, "index": "D", "name": "Pashmak and Parmida's problem", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["data structures", "divide and conquer", "sortings"]}, {"contestId": 459, "index": "C", "name": "Pashmak and Buses", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["combinatorics", "constructive algorithms", "math"]}, {"contestId": 459, "index": "B", "name": "Pashmak and Flowers", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["combinatorics", "implementation", "sortings"]}, {"contestId": 459, "index": "A", "name": "Pashmak and Garden", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["implementation"]}, {"contestId": 457, "index": "F", "name": "An easy problem about trees", "type": "PROGRAMMING", "points": 3000.0, "rating": 3200, "tags": ["dp", "games", "greedy", "trees"]}, {"contestId": 457, "index": "E", "name": "Flow Optimality", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["constructive algorithms", "flows", "math"]}, {"contestId": 457, "index": "D", "name": "Bingo!", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["combinatorics", "math", "probabilities"]}, {"contestId": 457, "index": "C", "name": "Elections", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["brute force"]}, {"contestId": 457, "index": "B", "name": "Distributed Join", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["greedy"]}, {"contestId": 457, "index": "A", "name": "Golden System", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["math", "meet-in-the-middle"]}, {"contestId": 456, "index": "B", "name": "Fedya and Maths", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["math", "number theory"]}, {"contestId": 456, "index": "A", "name": "Laptops", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["sortings"]}, {"contestId": 455, "index": "E", "name": "Function", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["data structures"]}, {"contestId": 455, "index": "D", "name": "Serega and Fun", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["data structures"]}, {"contestId": 455, "index": "C", "name": "Civilization", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["dfs and similar", "dp", "dsu", "ternary search", "trees"]}, {"contestId": 455, "index": "B", "name": "A Lot of Games", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["dfs and similar", "dp", "games", "implementation", "strings", "trees"]}, {"contestId": 455, "index": "A", "name": "Boredom", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["dp"]}, {"contestId": 454, "index": "B", "name": "Little Pony and Sort by Shift", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["implementation"]}, {"contestId": 454, "index": "A", "name": "Little Pony and Crystal Mine", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 453, "index": "E", "name": "Little Pony and Lord Tirek", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["data structures"]}, {"contestId": 453, "index": "D", "name": "Little Pony and Elements of Harmony", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["dp", "matrices"]}, {"contestId": 453, "index": "C", "name": "Little Pony and Summer Sun Celebration", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["constructive algorithms", "dfs and similar", "graphs"]}, {"contestId": 453, "index": "B", "name": "Little Pony and Harmony Chest", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["bitmasks", "brute force", "dp"]}, {"contestId": 453, "index": "A", "name": "Little Pony and Expected Maximum", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["probabilities"]}, {"contestId": 452, "index": "F", "name": "Permutation", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["data structures", "divide and conquer", "hashing"]}, {"contestId": 452, "index": "E", "name": "Three strings", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures", "dsu", "string suffix structures", "strings"]}, {"contestId": 452, "index": "D", "name": "Washer, Dryer, Folder", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["greedy", "implementation"]}, {"contestId": 452, "index": "C", "name": "Magic Trick", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["combinatorics", "math", "probabilities"]}, {"contestId": 452, "index": "B", "name": "4-point polyline", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["brute force", "constructive algorithms", "geometry", "trees"]}, {"contestId": 452, "index": "A", "name": "Eevee", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["brute force", "implementation", "strings"]}, {"contestId": 451, "index": "E", "name": "Devu and Flowers", "type": "PROGRAMMING", "points": 3000.0, "rating": 2300, "tags": ["bitmasks", "combinatorics", "number theory"]}, {"contestId": 451, "index": "D", "name": "Count Good Substrings", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["math"]}, {"contestId": 451, "index": "C", "name": "Predict Outcome of the Game", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["brute force", "implementation", "math"]}, {"contestId": 451, "index": "B", "name": "Sort the Array", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["implementation", "sortings"]}, {"contestId": 451, "index": "A", "name": "Game With Sticks", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation"]}, {"contestId": 450, "index": "B", "name": "Jzzhu and Sequences", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["implementation", "math"]}, {"contestId": 450, "index": "A", "name": "Jzzhu and Children", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"]}, {"contestId": 449, "index": "E", "name": "Jzzhu and Squares", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["dp", "math", "number theory"]}, {"contestId": 449, "index": "D", "name": "Jzzhu and Numbers", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["bitmasks", "combinatorics", "dp"]}, {"contestId": 449, "index": "C", "name": "Jzzhu and Apples", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["constructive algorithms", "number theory"]}, {"contestId": 449, "index": "B", "name": "Jzzhu and Cities", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["graphs", "greedy", "shortest paths"]}, {"contestId": 449, "index": "A", "name": "Jzzhu and Chocolate", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["greedy", "math"]}, {"contestId": 448, "index": "E", "name": "Divisors", "type": "PROGRAMMING", "points": 3000.0, "rating": 2200, "tags": ["brute force", "dfs and similar", "implementation", "number theory"]}, {"contestId": 448, "index": "D", "name": "Multiplication Table", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["binary search", "brute force"]}, {"contestId": 448, "index": "C", "name": "Painting Fence", "type": "PROGRAMMING", "points": 2500.0, "rating": 1900, "tags": ["divide and conquer", "dp", "greedy"]}, {"contestId": 448, "index": "B", "name": "Suffix Structures", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["implementation", "strings"]}, {"contestId": 448, "index": "A", "name": "Rewards", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 447, "index": "B", "name": "DZY Loves Strings", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["greedy", "implementation"]}, {"contestId": 447, "index": "A", "name": "DZY Loves Hash", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 446, "index": "E", "name": "DZY Loves Bridges", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["math", "matrices"]}, {"contestId": 446, "index": "D", "name": "DZY Loves Games", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["math", "matrices", "probabilities"]}, {"contestId": 446, "index": "C", "name": "DZY Loves Fibonacci Numbers", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["data structures", "math", "number theory"]}, {"contestId": 446, "index": "B", "name": "DZY Loves Modification", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["brute force", "data structures", "greedy"]}, {"contestId": 446, "index": "A", "name": "DZY Loves Sequences", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["dp", "implementation", "two pointers"]}, {"contestId": 445, "index": "B", "name": "DZY Loves Chemistry", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["dfs and similar", "dsu", "greedy"]}, {"contestId": 445, "index": "A", "name": "DZY Loves Chessboard", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["dfs and similar", "implementation"]}, {"contestId": 444, "index": "E", "name": "DZY Loves Planting", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["binary search", "dsu", "trees"]}, {"contestId": 444, "index": "D", "name": "DZY Loves Strings", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["binary search", "hashing", "strings", "two pointers"]}, {"contestId": 444, "index": "C", "name": "DZY Loves Colors", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["data structures"]}, {"contestId": 444, "index": "B", "name": "DZY Loves FFT", "type": "PROGRAMMING", "points": 1000.0, "rating": 2300, "tags": ["probabilities"]}, {"contestId": 444, "index": "A", "name": "DZY Loves Physics", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["greedy", "math"]}, {"contestId": 443, "index": "B", "name": "Kolya and Tandem Repeat", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["brute force", "implementation", "strings"]}, {"contestId": 443, "index": "A", "name": "Anton and Letters", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "implementation"]}, {"contestId": 442, "index": "E", "name": "Gena and Second Distance", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["geometry"]}, {"contestId": 442, "index": "D", "name": "Adam and Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["data structures", "trees"]}, {"contestId": 442, "index": "C", "name": "Artem and Array ", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["data structures", "greedy"]}, {"contestId": 442, "index": "B", "name": "Andrey and Problem", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["greedy", "math", "probabilities"]}, {"contestId": 442, "index": "A", "name": "Borya and Hanabi", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["bitmasks", "brute force", "implementation"]}, {"contestId": 441, "index": "E", "name": "Valera and Number", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["bitmasks", "dp", "math", "probabilities"]}, {"contestId": 441, "index": "D", "name": "Valera and Swaps", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["constructive algorithms", "dsu", "graphs", "implementation", "math", "string suffix structures"]}, {"contestId": 441, "index": "C", "name": "Valera and Tubes ", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["constructive algorithms", "dfs and similar", "implementation"]}, {"contestId": 441, "index": "B", "name": "Valera and Fruits", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["greedy", "implementation"]}, {"contestId": 441, "index": "A", "name": "Valera and Antique Items", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"]}, {"contestId": 440, "index": "D", "name": "Berland Federalization", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["dp", "trees"]}, {"contestId": 440, "index": "C", "name": "One-Based Arithmetic", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["brute force", "dfs and similar", "divide and conquer"]}, {"contestId": 440, "index": "B", "name": "Balancer", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["greedy", "implementation"]}, {"contestId": 440, "index": "A", "name": "Forgotten Episode", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 439, "index": "E", "name": "Devu and Birthday Celebration", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 439, "index": "D", "name": "Devu and his Brother", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["binary search", "sortings", "ternary search", "two pointers"]}, {"contestId": 439, "index": "C", "name": "Devu and Partitioning of the Array", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["brute force", "constructive algorithms", "implementation", "number theory"]}, {"contestId": 439, "index": "B", "name": "Devu, the Dumb Guy", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["implementation", "sortings"]}, {"contestId": 439, "index": "A", "name": "Devu, the Singer and Churu, the Joker", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["greedy", "implementation"]}, {"contestId": 438, "index": "E", "name": "The Child and Binary Tree", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["combinatorics", "divide and conquer", "fft", "number theory"]}, {"contestId": 438, "index": "D", "name": "The Child and Sequence", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["data structures", "math"]}, {"contestId": 437, "index": "E", "name": "The Child and Polygon", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["dp", "geometry"]}, {"contestId": 437, "index": "D", "name": "The Child and Zoo", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["dsu", "sortings"]}, {"contestId": 437, "index": "C", "name": "The Child and Toy", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["graphs", "greedy", "sortings"]}, {"contestId": 437, "index": "B", "name": "The Child and Set", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["bitmasks", "greedy", "implementation", "sortings"]}, {"contestId": 437, "index": "A", "name": "The Child and Homework", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["implementation"]}, {"contestId": 436, "index": "F", "name": "Banners", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["brute force", "data structures", "dp"]}, {"contestId": 436, "index": "E", "name": "Cardboard Box", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["data structures", "greedy"]}, {"contestId": 436, "index": "D", "name": "Pudding Monsters", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["dp"]}, {"contestId": 436, "index": "C", "name": "Dungeons and Candies", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["dsu", "graphs", "greedy", "trees"]}, {"contestId": 436, "index": "B", "name": "Om Nom and Spiders", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["implementation", "math"]}, {"contestId": 436, "index": "A", "name": "Feed with Candy", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["greedy"]}, {"contestId": 435, "index": "E", "name": "Special Graph", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": []}, {"contestId": 435, "index": "D", "name": "Special Grid", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["brute force", "dp", "greedy"]}, {"contestId": 435, "index": "C", "name": "Cardiogram", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["implementation"]}, {"contestId": 435, "index": "B", "name": "Pasha Maximizes", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["greedy"]}, {"contestId": 435, "index": "A", "name": "Queue on Bus Stop", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"]}, {"contestId": 434, "index": "E", "name": "Furukawa Nagisa's Tree", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["binary search", "divide and conquer", "sortings", "trees"]}, {"contestId": 434, "index": "D", "name": "Nanami's Power Plant", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["flows"]}, {"contestId": 433, "index": "E", "name": "Tachibana Kanade's Tofu", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["dp"]}, {"contestId": 433, "index": "D", "name": "Nanami's Digital Board", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["dsu", "implementation"]}, {"contestId": 433, "index": "C", "name": "Ryouko's Memory Note", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["implementation", "math", "sortings"]}, {"contestId": 433, "index": "B", "name": "Kuriyama Mirai's Stones", "type": "PROGRAMMING", "points": 1500.0, "rating": 1200, "tags": ["dp", "implementation", "sortings"]}, {"contestId": 433, "index": "A", "name": "Kitahara Haruki's Gift", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["brute force", "implementation"]}, {"contestId": 432, "index": "E", "name": "Square Tiling", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["constructive algorithms", "greedy"]}, {"contestId": 432, "index": "D", "name": "Prefixes and Suffixes", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["dp", "string suffix structures", "strings", "two pointers"]}, {"contestId": 432, "index": "C", "name": "Prime Swaps", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["greedy", "sortings"]}, {"contestId": 432, "index": "B", "name": "Football Kit", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["brute force", "greedy", "implementation"]}, {"contestId": 432, "index": "A", "name": "Choosing Teams", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "implementation", "sortings"]}, {"contestId": 431, "index": "E", "name": "Chemistry Experiment", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["binary search", "data structures", "ternary search"]}, {"contestId": 431, "index": "D", "name": "Random Task", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["binary search", "bitmasks", "combinatorics", "dp", "math"]}, {"contestId": 431, "index": "C", "name": "k-Tree", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["dp", "implementation", "trees"]}, {"contestId": 431, "index": "B", "name": "Shower Line", "type": "PROGRAMMING", "points": 1500.0, "rating": 1200, "tags": ["brute force", "implementation"]}, {"contestId": 431, "index": "A", "name": "Black Square", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 430, "index": "B", "name": "Balls Game", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["brute force", "two pointers"]}, {"contestId": 430, "index": "A", "name": "Points and Segments (easy)", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["constructive algorithms", "sortings"]}, {"contestId": 429, "index": "E", "name": "Points and Segments", "type": "PROGRAMMING", "points": 2000.0, "rating": 3000, "tags": ["graphs"]}, {"contestId": 429, "index": "D", "name": "Tricky Function", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["data structures", "divide and conquer", "geometry"]}, {"contestId": 429, "index": "C", "name": "Guess the Tree", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["bitmasks", "constructive algorithms", "dp", "greedy", "trees"]}, {"contestId": 429, "index": "B", "name": "Working out", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["dp"]}, {"contestId": 429, "index": "A", "name": "Xor-tree", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["dfs and similar", "trees"]}, {"contestId": 427, "index": "E", "name": "Police Patrol", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["greedy", "implementation", "math", "ternary search"]}, {"contestId": 427, "index": "D", "name": "Match & Catch", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["dp", "string suffix structures", "strings"]}, {"contestId": 427, "index": "C", "name": "Checkposts", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["dfs and similar", "graphs", "two pointers"]}, {"contestId": 427, "index": "B", "name": "Prison Transfer", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["data structures", "implementation"]}, {"contestId": 427, "index": "A", "name": "Police Recruits", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 426, "index": "B", "name": "Sereja and Mirroring", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["implementation"]}, {"contestId": 426, "index": "A", "name": "Sereja and Mugs", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 425, "index": "E", "name": "Sereja and Sets", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["dp"]}, {"contestId": 425, "index": "D", "name": "Sereja and Squares", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["binary search", "data structures", "hashing"]}, {"contestId": 425, "index": "C", "name": "Sereja and Two Sequences", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["data structures", "dp"]}, {"contestId": 425, "index": "B", "name": "Sereja and Table ", "type": "PROGRAMMING", "points": 1000.0, "rating": 2200, "tags": ["bitmasks", "greedy"]}, {"contestId": 425, "index": "A", "name": "Sereja and Swaps", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["brute force", "sortings"]}, {"contestId": 424, "index": "E", "name": "Colored Jenga", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["dfs and similar", "dp", "probabilities"]}, {"contestId": 424, "index": "D", "name": "Biathlon Track", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["binary search", "brute force", "constructive algorithms", "data structures", "dp"]}, {"contestId": 424, "index": "C", "name": "Magic Formulas", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["math"]}, {"contestId": 424, "index": "B", "name": "Megacity", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["binary search", "greedy", "implementation", "sortings"]}, {"contestId": 424, "index": "A", "name": "Squats", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation"]}, {"contestId": 421, "index": "D", "name": "Bug in Code", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["binary search", "data structures", "sortings"]}, {"contestId": 421, "index": "A", "name": "Pasha and Hamsters", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "implementation"]}, {"contestId": 420, "index": "E", "name": "Playing the ball", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["geometry"]}, {"contestId": 420, "index": "D", "name": "Cup Trick", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["data structures"]}, {"contestId": 420, "index": "C", "name": "Bug in Code", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["data structures", "graphs", "implementation", "two pointers"]}, {"contestId": 420, "index": "B", "name": "Online Meeting", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["implementation"]}, {"contestId": 420, "index": "A", "name": "Start Up", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"]}, {"contestId": 418, "index": "E", "name": "Tricky Password", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["data structures"]}, {"contestId": 418, "index": "D", "name": "Big Problems for Organizers", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["data structures", "graphs", "trees"]}, {"contestId": 417, "index": "E", "name": "Square Table", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["constructive algorithms", "math", "probabilities"]}, {"contestId": 417, "index": "D", "name": "Cunning Gena", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["bitmasks", "dp", "greedy", "sortings"]}, {"contestId": 417, "index": "C", "name": "Football", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["constructive algorithms", "graphs", "implementation"]}, {"contestId": 417, "index": "B", "name": "Crash", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["implementation"]}, {"contestId": 417, "index": "A", "name": "Elimination", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["dp", "implementation", "math"]}, {"contestId": 416, "index": "E", "name": "President's Path", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["dp", "graphs", "shortest paths"]}, {"contestId": 416, "index": "D", "name": "Population Size", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["greedy", "implementation", "math"]}, {"contestId": 416, "index": "C", "name": "Booking System", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["binary search", "dp", "greedy", "implementation"]}, {"contestId": 416, "index": "B", "name": "Art Union", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["brute force", "dp", "implementation"]}, {"contestId": 416, "index": "A", "name": "Guess a number!", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["greedy", "implementation", "two pointers"]}, {"contestId": 415, "index": "B", "name": "Mashmokh and Tokens", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["binary search", "greedy", "implementation", "math"]}, {"contestId": 415, "index": "A", "name": "Mashmokh and Lights", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation"]}, {"contestId": 414, "index": "E", "name": "Mashmokh's Designed Problem", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["data structures"]}, {"contestId": 414, "index": "D", "name": "Mashmokh and Water Tanks", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["binary search", "data structures", "greedy", "trees", "two pointers"]}, {"contestId": 414, "index": "C", "name": "Mashmokh and Reverse Operation", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["combinatorics", "divide and conquer"]}, {"contestId": 414, "index": "B", "name": "Mashmokh and ACM", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["combinatorics", "dp", "number theory"]}, {"contestId": 414, "index": "A", "name": "Mashmokh and Numbers", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["constructive algorithms", "number theory"]}, {"contestId": 413, "index": "E", "name": "Maze 2D", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["data structures", "divide and conquer"]}, {"contestId": 413, "index": "D", "name": "2048", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["bitmasks", "dp"]}, {"contestId": 413, "index": "C", "name": "Jeopardy!", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["greedy", "math"]}, {"contestId": 413, "index": "B", "name": "Spyke Chatting", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["implementation"]}, {"contestId": 413, "index": "A", "name": "Data Recovery", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["implementation"]}, {"contestId": 412, "index": "E", "name": "E-mail Addresses", "type": "PROGRAMMING", "points": 2500.0, "rating": 1900, "tags": ["implementation"]}, {"contestId": 412, "index": "D", "name": "Giving Awards", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["dfs and similar"]}, {"contestId": 412, "index": "C", "name": "Pattern", "type": "PROGRAMMING", "points": 1500.0, "rating": 1200, "tags": ["implementation", "strings"]}, {"contestId": 412, "index": "B", "name": "Network Configuration", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["greedy", "sortings"]}, {"contestId": 412, "index": "A", "name": "Poster", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["greedy", "implementation"]}, {"contestId": 411, "index": "C", "name": "Kicker", "type": "PROGRAMMING", "rating": 1700, "tags": ["implementation"]}, {"contestId": 411, "index": "B", "name": "Multi-core Processor", "type": "PROGRAMMING", "rating": 1600, "tags": ["implementation"]}, {"contestId": 411, "index": "A", "name": "Password Check", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"]}, {"contestId": 409, "index": "I", "name": "Feed the Golorp", "type": "PROGRAMMING", "rating": 2400, "tags": ["*special"]}, {"contestId": 409, "index": "H", "name": "A + B Strikes Back", "type": "PROGRAMMING", "rating": 1500, "tags": ["*special", "brute force", "constructive algorithms", "dsu", "implementation"]}, {"contestId": 409, "index": "G", "name": "On a plane", "type": "PROGRAMMING", "rating": 2200, "tags": ["*special"]}, {"contestId": 409, "index": "F", "name": "000001", "type": "PROGRAMMING", "rating": 1900, "tags": ["*special"]}, {"contestId": 409, "index": "E", "name": "Dome", "type": "PROGRAMMING", "rating": 1800, "tags": ["*special"]}, {"contestId": 409, "index": "D", "name": "Big Data", "type": "PROGRAMMING", "rating": 1700, "tags": ["*special"]}, {"contestId": 409, "index": "C", "name": "Magnum Opus", "type": "PROGRAMMING", "rating": 1700, "tags": ["*special"]}, {"contestId": 409, "index": "B", "name": "Mysterious Language", "type": "PROGRAMMING", "rating": 1700, "tags": ["*special"]}, {"contestId": 409, "index": "A", "name": "The Great Game", "type": "PROGRAMMING", "rating": 1700, "tags": ["*special"]}, {"contestId": 408, "index": "B", "name": "Garland", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["implementation"]}, {"contestId": 408, "index": "A", "name": "Line to Cashier", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation"]}, {"contestId": 407, "index": "E", "name": "k-d-sequence", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["data structures"]}, {"contestId": 407, "index": "D", "name": "Largest Submatrix 3", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["dp", "hashing"]}, {"contestId": 407, "index": "C", "name": "Curious Array", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["brute force", "combinatorics", "implementation", "math"]}, {"contestId": 407, "index": "B", "name": "Long Path", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["dp", "implementation"]}, {"contestId": 407, "index": "A", "name": "Triangle", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["brute force", "geometry", "implementation", "math"]}, {"contestId": 406, "index": "E", "name": "Hamming Triples", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["implementation", "math", "two pointers"]}, {"contestId": 406, "index": "D", "name": "Hill Climbing", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["dfs and similar", "geometry", "trees"]}, {"contestId": 405, "index": "E", "name": "Graph Cutting", "type": "PROGRAMMING", "points": 3000.0, "rating": 2300, "tags": ["dfs and similar", "graphs"]}, {"contestId": 405, "index": "D", "name": "Toy Sum", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["greedy", "implementation", "math"]}, {"contestId": 405, "index": "C", "name": "Unusual Product", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["implementation", "math"]}, {"contestId": 405, "index": "B", "name": "Domino Effect", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": []}, {"contestId": 405, "index": "A", "name": "Gravity Flip", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["greedy", "implementation", "sortings"]}, {"contestId": 404, "index": "E", "name": "Maze 1D", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["binary search", "greedy", "implementation"]}, {"contestId": 404, "index": "D", "name": "Minesweeper 1D", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["dp", "implementation"]}, {"contestId": 404, "index": "C", "name": "Restore Graph", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["dfs and similar", "graphs", "sortings"]}, {"contestId": 404, "index": "B", "name": "Marathon", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["implementation", "math"]}, {"contestId": 404, "index": "A", "name": "Valera and X", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"]}, {"contestId": 403, "index": "E", "name": "Two Rooted Trees", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["data structures", "implementation", "trees"]}, {"contestId": 403, "index": "D", "name": "Beautiful Pairs of Numbers", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["combinatorics", "dp"]}, {"contestId": 402, "index": "E", "name": "Strictly Positive Matrix", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["graphs", "math"]}, {"contestId": 402, "index": "D", "name": "Upgrading Array", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["dp", "greedy", "math", "number theory"]}, {"contestId": 402, "index": "C", "name": "Searching for Graph", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["brute force", "constructive algorithms", "graphs"]}, {"contestId": 402, "index": "B", "name": "Trees in a Row", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["brute force", "implementation"]}, {"contestId": 402, "index": "A", "name": "Nuts", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["greedy", "math"]}, {"contestId": 401, "index": "E", "name": "Olympic Games", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["math"]}, {"contestId": 401, "index": "D", "name": "Roman and Numbers", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["bitmasks", "brute force", "combinatorics", "dp", "number theory"]}, {"contestId": 401, "index": "C", "name": "Team", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["constructive algorithms", "greedy", "implementation"]}, {"contestId": 401, "index": "B", "name": "Sereja and Contests", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["greedy", "implementation", "math"]}, {"contestId": 401, "index": "A", "name": "Vanya and Cards", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "math"]}, {"contestId": 400, "index": "E", "name": "Inna and Binary Logic", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["binary search", "bitmasks", "data structures"]}, {"contestId": 400, "index": "D", "name": "Dima and Bacteria", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["dsu", "graphs", "shortest paths"]}, {"contestId": 400, "index": "C", "name": "Inna and Huge Candy Matrix", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["implementation", "math"]}, {"contestId": 400, "index": "B", "name": "Inna and New Matrix of Candies", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["brute force", "implementation", "schedules"]}, {"contestId": 400, "index": "A", "name": "Inna and Choose Options", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"]}, {"contestId": 399, "index": "B", "name": "Red and Blue Balls", "type": "PROGRAMMING", "points": 1000.0, "tags": []}, {"contestId": 399, "index": "A", "name": "Pages", "type": "PROGRAMMING", "points": 500.0, "tags": ["implementation"]}, {"contestId": 398, "index": "E", "name": "Sorting Permutations", "type": "PROGRAMMING", "points": 2500.0, "tags": []}, {"contestId": 398, "index": "D", "name": "Instant Messanger", "type": "PROGRAMMING", "points": 2000.0, "tags": ["data structures"]}, {"contestId": 398, "index": "C", "name": "Tree and Array", "type": "PROGRAMMING", "points": 1500.0, "tags": ["constructive algorithms"]}, {"contestId": 398, "index": "B", "name": "Painting The Wall", "type": "PROGRAMMING", "points": 1000.0, "tags": ["dp", "probabilities"]}, {"contestId": 398, "index": "A", "name": "Cards", "type": "PROGRAMMING", "points": 500.0, "tags": ["constructive algorithms", "implementation"]}, {"contestId": 397, "index": "B", "name": "On Corruption and Numbers", "type": "PROGRAMMING", "points": 1000.0, "tags": ["constructive algorithms", "implementation", "math"]}, {"contestId": 397, "index": "A", "name": "On Segment's Own Points", "type": "PROGRAMMING", "points": 500.0, "tags": ["implementation"]}, {"contestId": 396, "index": "E", "name": "On Iteration of One Well-Known Function", "type": "PROGRAMMING", "points": 2500.0, "tags": ["math"]}, {"contestId": 396, "index": "D", "name": "On Sum of Number of Inversions in Permutations", "type": "PROGRAMMING", "points": 2000.0, "tags": ["combinatorics", "math"]}, {"contestId": 396, "index": "C", "name": "On Changing Tree", "type": "PROGRAMMING", "points": 1500.0, "tags": ["data structures", "graphs", "trees"]}, {"contestId": 396, "index": "B", "name": "On Sum of Fractions", "type": "PROGRAMMING", "points": 1000.0, "tags": ["math", "number theory"]}, {"contestId": 396, "index": "A", "name": "On Number of Decompositions into Multipliers", "type": "PROGRAMMING", "points": 500.0, "tags": ["combinatorics", "math", "number theory"]}, {"contestId": 394, "index": "E", "name": "Lightbulb for Minister", "type": "PROGRAMMING", "points": 2500.0, "tags": ["geometry"]}, {"contestId": 394, "index": "D", "name": "Physical Education and Buns", "type": "PROGRAMMING", "points": 2000.0, "tags": ["brute force", "implementation", "math"]}, {"contestId": 394, "index": "C", "name": "Dominoes", "type": "PROGRAMMING", "points": 1500.0, "tags": ["constructive algorithms", "greedy"]}, {"contestId": 394, "index": "B", "name": "Very Beautiful Number", "type": "PROGRAMMING", "points": 1000.0, "tags": ["math"]}, {"contestId": 394, "index": "A", "name": "Counting Sticks", "type": "PROGRAMMING", "points": 500.0, "tags": ["brute force", "implementation"]}, {"contestId": 393, "index": "B", "name": "Three matrices", "type": "PROGRAMMING", "points": 1000.0, "tags": []}, {"contestId": 393, "index": "A", "name": "Nineteen", "type": "PROGRAMMING", "points": 500.0, "tags": []}, {"contestId": 392, "index": "E", "name": "Deleting Substrings", "type": "PROGRAMMING", "points": 2500.0, "tags": []}, {"contestId": 392, "index": "D", "name": "Three Arrays", "type": "PROGRAMMING", "points": 2000.0, "tags": ["data structures"]}, {"contestId": 392, "index": "C", "name": "Yet Another Number Sequence", "type": "PROGRAMMING", "points": 1500.0, "tags": ["combinatorics", "math", "matrices"]}, {"contestId": 392, "index": "B", "name": "Tower of Hanoi", "type": "PROGRAMMING", "points": 1000.0, "tags": ["dp"]}, {"contestId": 392, "index": "A", "name": "Blocked Points", "type": "PROGRAMMING", "points": 500.0, "tags": ["math"]}, {"contestId": 391, "index": "F3", "name": "Stock Trading", "type": "PROGRAMMING", "points": 10.0, "tags": []}, {"contestId": 391, "index": "F2", "name": "Stock Trading", "type": "PROGRAMMING", "points": 15.0, "tags": ["greedy"]}, {"contestId": 391, "index": "F1", "name": "Stock Trading", "type": "PROGRAMMING", "points": 8.0, "tags": ["dp"]}, {"contestId": 391, "index": "E2", "name": "Three Trees", "type": "PROGRAMMING", "points": 13.0, "tags": []}, {"contestId": 391, "index": "E1", "name": "Three Trees", "type": "PROGRAMMING", "points": 11.0, "tags": []}, {"contestId": 391, "index": "D2", "name": "Supercollider", "type": "PROGRAMMING", "points": 16.0, "tags": ["data structures"]}, {"contestId": 391, "index": "D1", "name": "Supercollider", "type": "PROGRAMMING", "points": 3.0, "tags": ["brute force"]}, {"contestId": 391, "index": "C3", "name": "The Tournament", "type": "PROGRAMMING", "points": 8.0, "tags": []}, {"contestId": 391, "index": "C2", "name": "The Tournament", "type": "PROGRAMMING", "points": 4.0, "tags": ["greedy"]}, {"contestId": 391, "index": "C1", "name": "The Tournament", "type": "PROGRAMMING", "points": 4.0, "tags": ["brute force"]}, {"contestId": 391, "index": "B", "name": "Word Folding", "type": "PROGRAMMING", "points": 5.0, "tags": ["brute force"]}, {"contestId": 391, "index": "A", "name": "Genetic Engineering", "type": "PROGRAMMING", "points": 3.0, "tags": ["implementation", "two pointers"]}, {"contestId": 390, "index": "E", "name": "Inna and Large Sweet Matrix", "type": "PROGRAMMING", "points": 2500.0, "tags": []}, {"contestId": 390, "index": "D", "name": "Inna and Sweet Matrix", "type": "PROGRAMMING", "points": 2000.0, "tags": ["constructive algorithms"]}, {"contestId": 390, "index": "C", "name": "Inna and Candy Boxes", "type": "PROGRAMMING", "points": 1500.0, "tags": ["data structures"]}, {"contestId": 390, "index": "B", "name": "Inna, Dima and Song", "type": "PROGRAMMING", "points": 1000.0, "tags": ["implementation"]}, {"contestId": 390, "index": "A", "name": "Inna and Alarm Clock", "type": "PROGRAMMING", "points": 500.0, "tags": ["implementation"]}, {"contestId": 389, "index": "B", "name": "Fox and Cross", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["greedy", "implementation"]}, {"contestId": 389, "index": "A", "name": "Fox and Number Game", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["greedy", "math"]}, {"contestId": 388, "index": "E", "name": "Fox and Meteor Shower", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["geometry"]}, {"contestId": 388, "index": "D", "name": "Fox and Perfect Sets", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["math"]}, {"contestId": 388, "index": "C", "name": "Fox and Card Game", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["games", "greedy", "sortings"]}, {"contestId": 388, "index": "B", "name": "Fox and Minimal path", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["bitmasks", "constructive algorithms", "graphs", "implementation", "math"]}, {"contestId": 388, "index": "A", "name": "Fox and Box Accumulation", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["greedy", "sortings"]}, {"contestId": 387, "index": "E", "name": "George and Cards", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["binary search", "data structures"]}, {"contestId": 387, "index": "D", "name": "George and Interesting Graph", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["graph matchings"]}, {"contestId": 387, "index": "C", "name": "George and Number", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["greedy", "implementation"]}, {"contestId": 387, "index": "B", "name": "George and Round", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["brute force", "greedy", "two pointers"]}, {"contestId": 387, "index": "A", "name": "George and Sleep", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation"]}, {"contestId": 386, "index": "D", "name": "Game with Points", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["dp", "graphs", "implementation", "shortest paths"]}, {"contestId": 386, "index": "C", "name": "Diverse Substrings", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["dp", "strings", "two pointers"]}, {"contestId": 386, "index": "B", "name": "Fly, freebies, fly!", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["binary search", "brute force", "implementation"]}, {"contestId": 386, "index": "A", "name": "Second-Price Auction", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 385, "index": "E", "name": "Bear in the Field", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["math", "matrices"]}, {"contestId": 385, "index": "D", "name": "Bear and Floodlight", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["bitmasks", "dp", "geometry"]}, {"contestId": 385, "index": "C", "name": "Bear and Prime Numbers", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["binary search", "brute force", "data structures", "dp", "implementation", "math", "number theory"]}, {"contestId": 385, "index": "B", "name": "Bear and Strings", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["brute force", "greedy", "implementation", "math", "strings"]}, {"contestId": 385, "index": "A", "name": "Bear and Raspberry", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["brute force", "greedy", "implementation"]}, {"contestId": 384, "index": "B", "name": "Multitasking", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["greedy", "implementation", "sortings", "two pointers"]}, {"contestId": 384, "index": "A", "name": "Coder", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 383, "index": "E", "name": "Vowels", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["combinatorics", "divide and conquer", "dp"]}, {"contestId": 383, "index": "D", "name": "Antimatter", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["dp"]}, {"contestId": 383, "index": "C", "name": "Propagating tree", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["data structures", "dfs and similar", "trees"]}, {"contestId": 383, "index": "B", "name": "Volcanoes", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["binary search", "implementation", "sortings", "two pointers"]}, {"contestId": 383, "index": "A", "name": "Milking cows", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["data structures", "greedy"]}, {"contestId": 382, "index": "E", "name": "Ksenia and Combinatorics", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["combinatorics", "dp"]}, {"contestId": 382, "index": "D", "name": "Ksenia and Pawns", "type": "PROGRAMMING", "points": 3000.0, "rating": 2200, "tags": ["dfs and similar", "graphs", "implementation", "trees"]}, {"contestId": 382, "index": "C", "name": "Arithmetic Progression", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["implementation", "sortings"]}, {"contestId": 382, "index": "B", "name": "Number Busters", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["binary search", "math"]}, {"contestId": 382, "index": "A", "name": "Ksenia and Pan Scales", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["greedy", "implementation"]}, {"contestId": 381, "index": "B", "name": "Sereja and Stairs", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["greedy", "implementation", "sortings"]}, {"contestId": 381, "index": "A", "name": "Sereja and Dima", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "implementation", "two pointers"]}, {"contestId": 380, "index": "E", "name": "Sereja and Dividing", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["data structures"]}, {"contestId": 380, "index": "D", "name": "Sereja and Cinema", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["combinatorics", "math"]}, {"contestId": 380, "index": "C", "name": "Sereja and Brackets", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["data structures", "schedules"]}, {"contestId": 380, "index": "B", "name": "Sereja and Tree", "type": "PROGRAMMING", "points": 1000.0, "rating": 2400, "tags": ["graphs", "implementation"]}, {"contestId": 380, "index": "A", "name": "Sereja and Prefixes", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["binary search", "brute force"]}, {"contestId": 379, "index": "G", "name": "New Year Cactus", "type": "PROGRAMMING", "points": 3500.0, "rating": 3100, "tags": ["dp"]}, {"contestId": 379, "index": "F", "name": "New Year Tree", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["data structures", "divide and conquer", "trees"]}, {"contestId": 379, "index": "E", "name": "New Year Tree Decorations", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["geometry", "schedules", "sortings"]}, {"contestId": 379, "index": "D", "name": "New Year Letter", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["bitmasks", "brute force", "dp"]}, {"contestId": 379, "index": "C", "name": "New Year Ratings Change", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["greedy", "sortings"]}, {"contestId": 379, "index": "B", "name": "New Year Present", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "implementation"]}, {"contestId": 379, "index": "A", "name": "New Year Candles", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"]}, {"contestId": 378, "index": "B", "name": "Semifinals", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["implementation", "sortings"]}, {"contestId": 378, "index": "A", "name": "Playing with Dice", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force"]}, {"contestId": 377, "index": "E", "name": "Cookie Clicker", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["dp", "geometry"]}, {"contestId": 377, "index": "D", "name": "Developing Game", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["data structures"]}, {"contestId": 377, "index": "C", "name": "Captains Mode", "type": "PROGRAMMING", "points": 1000.0, "rating": 2200, "tags": ["bitmasks", "dp", "games"]}, {"contestId": 377, "index": "B", "name": "Preparing for the Contest", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["binary search", "data structures", "greedy", "sortings"]}, {"contestId": 377, "index": "A", "name": "Maze", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["dfs and similar"]}, {"contestId": 376, "index": "B", "name": "I.O.U.", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["implementation"]}, {"contestId": 376, "index": "A", "name": "Lever", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation", "math"]}, {"contestId": 375, "index": "E", "name": "Red and Black Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["dp", "implementation", "math"]}, {"contestId": 375, "index": "D", "name": "Tree and Queries", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["data structures", "dfs and similar", "trees"]}, {"contestId": 375, "index": "C", "name": "Circling Round Treasures", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["bitmasks", "shortest paths"]}, {"contestId": 375, "index": "B", "name": "Maximum Submatrix 2", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["data structures", "dp", "implementation", "sortings"]}, {"contestId": 375, "index": "A", "name": "Divisible by Seven", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["math", "number theory"]}, {"contestId": 374, "index": "E", "name": "Inna and Babies", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["binary search", "data structures", "dsu", "geometry", "implementation"]}, {"contestId": 374, "index": "D", "name": "Inna and Sequence ", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["binary search", "data structures", "dp", "trees"]}, {"contestId": 374, "index": "C", "name": "Inna and Dima", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["dfs and similar", "dp", "graphs", "implementation"]}, {"contestId": 374, "index": "B", "name": "Inna and Nine", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["combinatorics", "greedy"]}, {"contestId": 374, "index": "A", "name": "Inna and Pink Pony", "type": "PROGRAMMING", "points": 500.0, "rating": 2000, "tags": ["greedy", "implementation"]}, {"contestId": 373, "index": "B", "name": "Making Sequences is Fun", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["binary search", "implementation", "math"]}, {"contestId": 373, "index": "A", "name": "Collecting Beats is Fun", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation"]}, {"contestId": 372, "index": "E", "name": "Drawing Circles is Fun", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["combinatorics", "geometry"]}, {"contestId": 372, "index": "D", "name": "Choosing Subtree is Fun", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["binary search", "data structures", "dfs and similar", "trees", "two pointers"]}, {"contestId": 372, "index": "C", "name": "Watching Fireworks is Fun", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["data structures", "dp", "math"]}, {"contestId": 372, "index": "B", "name": "Counting Rectangles is Fun", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["brute force", "divide and conquer", "dp"]}, {"contestId": 372, "index": "A", "name": "Counting Kangaroos is Fun", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["binary search", "greedy", "sortings", "two pointers"]}, {"contestId": 371, "index": "E", "name": "Subway Innovation", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["greedy", "math", "two pointers"]}, {"contestId": 371, "index": "D", "name": "Vessels", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["data structures", "dsu", "implementation", "trees"]}, {"contestId": 371, "index": "C", "name": "Hamburgers", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["binary search", "brute force"]}, {"contestId": 371, "index": "B", "name": "Fox Dividing Cheese", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["math", "number theory"]}, {"contestId": 371, "index": "A", "name": "K-Periodic Array", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["greedy", "implementation", "math"]}, {"contestId": 370, "index": "E", "name": "Summer Reading", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["dp", "greedy"]}, {"contestId": 370, "index": "D", "name": "Broken Monitor", "type": "PROGRAMMING", "points": 3000.0, "rating": 2100, "tags": ["brute force", "constructive algorithms", "greedy", "implementation"]}, {"contestId": 370, "index": "C", "name": "Mittens", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["constructive algorithms", "greedy", "sortings"]}, {"contestId": 370, "index": "B", "name": "Berland Bingo", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["implementation"]}, {"contestId": 370, "index": "A", "name": "Rook, Bishop and King", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["graphs", "math", "shortest paths"]}, {"contestId": 369, "index": "E", "name": "Valera and Queries", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["binary search", "data structures"]}, {"contestId": 369, "index": "D", "name": "Valera and Fools", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["dfs and similar", "dp", "graphs", "shortest paths"]}, {"contestId": 369, "index": "C", "name": "Valera and Elections", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["dfs and similar", "graphs", "trees"]}, {"contestId": 369, "index": "B", "name": "Valera and Contest", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["constructive algorithms", "implementation", "math"]}, {"contestId": 369, "index": "A", "name": "Valera and Plates", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["greedy", "implementation"]}, {"contestId": 368, "index": "B", "name": "Sereja and Suffixes", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["data structures", "dp"]}, {"contestId": 368, "index": "A", "name": "Sereja and Coat Rack", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"]}, {"contestId": 367, "index": "E", "name": "Sereja and Intervals", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["combinatorics", "dp"]}, {"contestId": 367, "index": "D", "name": "Sereja and Sets", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["bitmasks", "dfs and similar"]}, {"contestId": 367, "index": "C", "name": "Sereja and the Arrangement of Numbers", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["graphs", "greedy", "sortings"]}, {"contestId": 367, "index": "B", "name": "Sereja ans Anagrams", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["binary search", "data structures"]}, {"contestId": 367, "index": "A", "name": "Sereja and Algorithm ", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["data structures", "implementation"]}, {"contestId": 366, "index": "E", "name": "Dima and Magic Guitar", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["brute force", "implementation", "math"]}, {"contestId": 366, "index": "D", "name": "Dima and Trap Graph", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["binary search", "data structures", "dfs and similar", "dsu", "shortest paths", "two pointers"]}, {"contestId": 366, "index": "C", "name": "Dima and Salad", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["dp"]}, {"contestId": 366, "index": "B", "name": "Dima and To-do List", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["brute force", "implementation"]}, {"contestId": 366, "index": "A", "name": "Dima and Guards", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["implementation"]}, {"contestId": 365, "index": "B", "name": "The Fibonacci Segment", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["implementation"]}, {"contestId": 365, "index": "A", "name": "Good Number", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["implementation"]}, {"contestId": 364, "index": "E", "name": "Empty Rectangles", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["divide and conquer", "two pointers"]}, {"contestId": 364, "index": "D", "name": "Ghd", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["brute force", "math", "probabilities"]}, {"contestId": 364, "index": "C", "name": "Beautiful Set", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["brute force", "number theory"]}, {"contestId": 364, "index": "B", "name": "Free Market", "type": "PROGRAMMING", "points": 1000.0, "rating": 2200, "tags": ["dp", "greedy"]}, {"contestId": 364, "index": "A", "name": "Matrix", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["combinatorics", "data structures", "implementation"]}, {"contestId": 363, "index": "E", "name": "Two Circles", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["brute force", "data structures", "implementation"]}, {"contestId": 363, "index": "D", "name": "Renting Bikes", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["binary search", "greedy"]}, {"contestId": 363, "index": "C", "name": "Fixing Typos", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["greedy", "implementation"]}, {"contestId": 363, "index": "B", "name": "Fence", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["brute force", "dp"]}, {"contestId": 363, "index": "A", "name": "Soroban", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 362, "index": "E", "name": "Petya and Pipes", "type": "PROGRAMMING", "points": 3000.0, "rating": 2300, "tags": ["flows", "graphs", "shortest paths"]}, {"contestId": 362, "index": "D", "name": "Fools and Foolproof Roads", "type": "PROGRAMMING", "points": 3000.0, "rating": 2100, "tags": ["data structures", "dfs and similar", "dsu", "graphs", "greedy"]}, {"contestId": 362, "index": "C", "name": "Insertion Sort", "type": "PROGRAMMING", "points": 2500.0, "rating": 1900, "tags": ["data structures", "dp", "implementation", "math"]}, {"contestId": 362, "index": "B", "name": "Petya and Staircases", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["implementation", "sortings"]}, {"contestId": 362, "index": "A", "name": "Two Semiknights Meet", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["greedy", "math"]}, {"contestId": 361, "index": "B", "name": "Levko and Permutation", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "math", "number theory"]}, {"contestId": 361, "index": "A", "name": "Levko and Table", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "implementation"]}, {"contestId": 360, "index": "E", "name": "Levko and Game", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["graphs", "greedy", "shortest paths"]}, {"contestId": 360, "index": "D", "name": "Levko and Sets", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["number theory"]}, {"contestId": 360, "index": "C", "name": "Levko and Strings", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["combinatorics", "dp"]}, {"contestId": 360, "index": "B", "name": "Levko and Array", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["binary search", "dp"]}, {"contestId": 360, "index": "A", "name": "Levko and Array Recovery", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["greedy", "implementation"]}, {"contestId": 359, "index": "E", "name": "Neatness", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["constructive algorithms", "dfs and similar"]}, {"contestId": 359, "index": "D", "name": "Pair of Numbers", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["binary search", "brute force", "data structures", "math", "two pointers"]}, {"contestId": 359, "index": "C", "name": "Prime Number", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["math", "number theory"]}, {"contestId": 359, "index": "B", "name": "Permutation", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["constructive algorithms", "dp", "math"]}, {"contestId": 359, "index": "A", "name": "Table", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["constructive algorithms", "greedy", "implementation"]}, {"contestId": 358, "index": "E", "name": "Dima and Kicks", "type": "PROGRAMMING", "points": 3000.0, "rating": 2300, "tags": ["brute force", "dsu", "graphs", "implementation"]}, {"contestId": 358, "index": "D", "name": "Dima and Hares", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["dp", "greedy"]}, {"contestId": 358, "index": "C", "name": "Dima and Containers", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["constructive algorithms", "greedy", "implementation"]}, {"contestId": 358, "index": "B", "name": "Dima and Text Messages", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["brute force", "strings"]}, {"contestId": 358, "index": "A", "name": "Dima and Continuous Line", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["brute force", "implementation"]}, {"contestId": 357, "index": "B", "name": "Flag Day", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["constructive algorithms", "implementation"]}, {"contestId": 357, "index": "A", "name": "Group of Students", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["brute force", "greedy", "implementation"]}, {"contestId": 356, "index": "E", "name": "Xenia and String Problem", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["dp", "hashing", "implementation", "string suffix structures", "strings"]}, {"contestId": 356, "index": "D", "name": "Bags and Coins", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["bitmasks", "constructive algorithms", "dp", "greedy"]}, {"contestId": 356, "index": "C", "name": "Compartments", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["combinatorics", "constructive algorithms", "greedy", "implementation"]}, {"contestId": 356, "index": "B", "name": "Xenia and Hamming", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["implementation", "math"]}, {"contestId": 356, "index": "A", "name": "Knight Tournament", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["data structures", "dsu"]}, {"contestId": 355, "index": "B", "name": "Vasya and Public Transport", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["greedy", "implementation"]}, {"contestId": 355, "index": "A", "name": "Vasya and Digital Root", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["constructive algorithms", "implementation"]}, {"contestId": 354, "index": "E", "name": "Lucky Number Representation", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["constructive algorithms", "dfs and similar", "dp"]}, {"contestId": 354, "index": "D", "name": "Transferring Pyramid", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["dp"]}, {"contestId": 354, "index": "C", "name": "Vasya and Beautiful Arrays", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["brute force", "dp", "number theory"]}, {"contestId": 354, "index": "B", "name": "Game with Strings", "type": "PROGRAMMING", "points": 1000.0, "rating": 2400, "tags": ["bitmasks", "dp", "games"]}, {"contestId": 354, "index": "A", "name": "Vasya and Robot", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["brute force", "greedy", "math"]}, {"contestId": 353, "index": "E", "name": "Antichain", "type": "PROGRAMMING", "points": 3000.0, "rating": 2200, "tags": ["dp", "graph matchings", "greedy"]}, {"contestId": 353, "index": "D", "name": "Queue", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["constructive algorithms", "dp"]}, {"contestId": 353, "index": "C", "name": "Find Maximum", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["implementation", "math", "number theory"]}, {"contestId": 353, "index": "B", "name": "Two Heaps", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["combinatorics", "constructive algorithms", "greedy", "implementation", "math", "sortings"]}, {"contestId": 353, "index": "A", "name": "Domino", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["implementation", "math"]}, {"contestId": 352, "index": "B", "name": "Jeff and Periods", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["implementation", "sortings"]}, {"contestId": 352, "index": "A", "name": "Jeff and Digits", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["brute force", "implementation", "math"]}, {"contestId": 351, "index": "E", "name": "Jeff and Permutation", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["greedy"]}, {"contestId": 351, "index": "D", "name": "Jeff and Removing Periods", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["data structures"]}, {"contestId": 351, "index": "C", "name": "Jeff and Brackets", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["dp", "matrices"]}, {"contestId": 351, "index": "B", "name": "Jeff and Furik", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["combinatorics", "dp", "probabilities"]}, {"contestId": 351, "index": "A", "name": "Jeff and Rounding", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["dp", "greedy", "implementation", "math"]}, {"contestId": 350, "index": "E", "name": "Wrong Floyd", "type": "PROGRAMMING", "points": 3000.0, "rating": 2200, "tags": ["brute force", "constructive algorithms", "dfs and similar", "graphs"]}, {"contestId": 350, "index": "D", "name": "Looking for Owls", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["binary search", "data structures", "geometry", "hashing", "sortings"]}, {"contestId": 350, "index": "C", "name": "Bombs", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["greedy", "implementation", "sortings"]}, {"contestId": 350, "index": "B", "name": "Resort", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["graphs"]}, {"contestId": 350, "index": "A", "name": "TL", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["brute force", "greedy", "implementation"]}, {"contestId": 349, "index": "B", "name": "Color the Fence", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["data structures", "dp", "greedy", "implementation"]}, {"contestId": 349, "index": "A", "name": "Cinema Line", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["greedy", "implementation"]}, {"contestId": 348, "index": "E", "name": "Pilgrims", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["dfs and similar", "dp", "trees"]}, {"contestId": 348, "index": "D", "name": "Turtles", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["dp", "matrices"]}, {"contestId": 348, "index": "C", "name": "Subset Sums", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["brute force", "data structures"]}, {"contestId": 348, "index": "B", "name": "Apple Tree", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["dfs and similar", "number theory", "trees"]}, {"contestId": 348, "index": "A", "name": "Mafia", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["binary search", "math", "sortings"]}, {"contestId": 347, "index": "B", "name": "Fixed Points", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["brute force", "implementation", "math"]}, {"contestId": 347, "index": "A", "name": "Difference Row", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["constructive algorithms", "implementation", "sortings"]}, {"contestId": 346, "index": "E", "name": "Doodle Jump", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["math", "number theory"]}, {"contestId": 346, "index": "D", "name": "Robot Control", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["dp", "graphs", "shortest paths"]}, {"contestId": 346, "index": "C", "name": "Number Transformation II", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["greedy", "math"]}, {"contestId": 346, "index": "B", "name": "Lucky Common Subsequence", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["dp", "strings"]}, {"contestId": 346, "index": "A", "name": "Alice and Bob", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["games", "math", "number theory"]}, {"contestId": 345, "index": "G", "name": "Suffix Subgroup", "type": "PROGRAMMING", "rating": 2200, "tags": ["*special", "strings"]}, {"contestId": 345, "index": "F", "name": "Superstitions Inspection", "type": "PROGRAMMING", "rating": 2700, "tags": ["*special"]}, {"contestId": 345, "index": "E", "name": "Black Cat Rush", "type": "PROGRAMMING", "rating": 2700, "tags": ["*special"]}, {"contestId": 345, "index": "D", "name": "Chain Letter", "type": "PROGRAMMING", "rating": 2200, "tags": ["*special", "dfs and similar", "graphs"]}, {"contestId": 345, "index": "C", "name": "Counting Fridays", "type": "PROGRAMMING", "rating": 2000, "tags": ["*special"]}, {"contestId": 345, "index": "B", "name": "Triskaidekaphobia", "type": "PROGRAMMING", "rating": 2100, "tags": ["*special"]}, {"contestId": 345, "index": "A", "name": "Expecting Trouble", "type": "PROGRAMMING", "rating": 1500, "tags": ["*special", "probabilities"]}, {"contestId": 344, "index": "B", "name": "Simple Molecules", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["brute force", "graphs", "math"]}, {"contestId": 344, "index": "A", "name": "Magnets", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 343, "index": "E", "name": "Pumping Stations", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["brute force", "dfs and similar", "divide and conquer", "flows", "graphs", "greedy", "trees"]}, {"contestId": 343, "index": "D", "name": "Water Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["data structures", "dfs and similar", "graphs", "trees"]}, {"contestId": 343, "index": "C", "name": "Read Time", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["binary search", "greedy", "two pointers"]}, {"contestId": 343, "index": "B", "name": "Alternating Current", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["data structures", "greedy", "implementation"]}, {"contestId": 343, "index": "A", "name": "Rational Resistance", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["math", "number theory"]}, {"contestId": 342, "index": "E", "name": "Xenia and Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures", "divide and conquer", "trees"]}, {"contestId": 342, "index": "D", "name": "Xenia and Dominoes", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["bitmasks", "dfs and similar", "dp"]}, {"contestId": 342, "index": "C", "name": "Cupboard and Balloons", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["geometry"]}, {"contestId": 342, "index": "B", "name": "Xenia and Spies", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["brute force", "greedy", "implementation"]}, {"contestId": 342, "index": "A", "name": "Xenia and Divisors", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["greedy", "implementation"]}, {"contestId": 341, "index": "E", "name": "Candies Game", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["constructive algorithms", "greedy"]}, {"contestId": 341, "index": "D", "name": "Iahub and Xors", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["data structures"]}, {"contestId": 340, "index": "E", "name": "Iahub and Permutations", "type": "PROGRAMMING", "points": 3000.0, "rating": 2000, "tags": ["combinatorics", "math"]}, {"contestId": 340, "index": "D", "name": "Bubble Sort Graph", "type": "PROGRAMMING", "points": 2000.0, "rating": 1500, "tags": ["binary search", "data structures", "dp"]}, {"contestId": 340, "index": "C", "name": "Tourist Problem", "type": "PROGRAMMING", "points": 2000.0, "rating": 1600, "tags": ["combinatorics", "implementation", "math"]}, {"contestId": 340, "index": "B", "name": "Maximal Area Quadrilateral", "type": "PROGRAMMING", "points": 3000.0, "rating": 2100, "tags": ["brute force", "geometry"]}, {"contestId": 340, "index": "A", "name": "The Wall", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["math"]}, {"contestId": 339, "index": "E", "name": "Three Swaps", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["constructive algorithms", "dfs and similar", "greedy"]}, {"contestId": 339, "index": "D", "name": "Xenia and Bit Operations", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["data structures", "trees"]}, {"contestId": 339, "index": "C", "name": "Xenia and Weights", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["constructive algorithms", "dfs and similar", "dp", "graphs", "greedy", "shortest paths"]}, {"contestId": 339, "index": "B", "name": "Xenia and Ringroad", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["implementation"]}, {"contestId": 339, "index": "A", "name": "Helpful Maths", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "implementation", "sortings", "strings"]}, {"contestId": 338, "index": "E", "name": "Optimize!", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["data structures"]}, {"contestId": 338, "index": "D", "name": "GCD Table", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["chinese remainder theorem", "math", "number theory"]}, {"contestId": 337, "index": "E", "name": "Divisor Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["brute force", "number theory", "trees"]}, {"contestId": 337, "index": "D", "name": "Book of Evil", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["dfs and similar", "divide and conquer", "dp", "trees"]}, {"contestId": 337, "index": "C", "name": "Quiz", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["binary search", "greedy", "math", "matrices", "number theory"]}, {"contestId": 337, "index": "B", "name": "Routine Problem", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["greedy", "math", "number theory"]}, {"contestId": 337, "index": "A", "name": "Puzzles", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["greedy"]}, {"contestId": 336, "index": "E", "name": "Vasily the Bear and Painting Square", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["bitmasks", "combinatorics", "dp", "implementation"]}, {"contestId": 336, "index": "D", "name": "Vasily the Bear and Beautiful Strings", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["combinatorics", "math", "number theory"]}, {"contestId": 336, "index": "C", "name": "Vasily the Bear and Sequence", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["brute force", "greedy", "implementation", "number theory"]}, {"contestId": 336, "index": "B", "name": "Vasily the Bear and Fly", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["math"]}, {"contestId": 336, "index": "A", "name": "Vasily the Bear and Triangle", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation", "math"]}, {"contestId": 335, "index": "F", "name": "Buy One, Get One Free", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["dp", "greedy"]}, {"contestId": 335, "index": "E", "name": "Counting Skyscrapers", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["dp", "math", "probabilities"]}, {"contestId": 335, "index": "D", "name": "Rectangles and Square", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["brute force", "dp"]}, {"contestId": 335, "index": "C", "name": "More Reclamation", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["games"]}, {"contestId": 335, "index": "B", "name": "Palindrome", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["constructive algorithms", "dp"]}, {"contestId": 335, "index": "A", "name": "Banana", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["binary search", "constructive algorithms", "greedy"]}, {"contestId": 334, "index": "B", "name": "Eight Point Sets", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["sortings"]}, {"contestId": 334, "index": "A", "name": "Candy Bags", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"]}, {"contestId": 333, "index": "E", "name": "Summer Earnings", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["binary search", "bitmasks", "brute force", "geometry", "sortings"]}, {"contestId": 333, "index": "D", "name": "Characteristics of Rectangles", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["binary search", "bitmasks", "brute force", "implementation", "sortings"]}, {"contestId": 333, "index": "C", "name": "Lucky Tickets", "type": "PROGRAMMING", "points": 1500.0, "rating": 2700, "tags": ["brute force", "constructive algorithms"]}, {"contestId": 333, "index": "B", "name": "Chips", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["greedy"]}, {"contestId": 333, "index": "A", "name": "Secrets", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["greedy"]}, {"contestId": 332, "index": "E", "name": "Binary Key", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["dp", "greedy", "implementation"]}, {"contestId": 332, "index": "D", "name": "Theft of Blueprints", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["graphs", "math"]}, {"contestId": 332, "index": "C", "name": "Students' Revenge", "type": "PROGRAMMING", "points": 3000.0, "rating": 2200, "tags": ["data structures", "greedy", "sortings"]}, {"contestId": 332, "index": "B", "name": "Maximum Absurdity", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["data structures", "dp", "implementation"]}, {"contestId": 332, "index": "A", "name": "Down the Hatch!", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["implementation"]}, {"contestId": 331, "index": "E2", "name": "Deja Vu", "type": "PROGRAMMING", "points": 50.0, "rating": 3100, "tags": ["constructive algorithms", "dp"]}, {"contestId": 331, "index": "E1", "name": "Deja Vu", "type": "PROGRAMMING", "points": 50.0, "rating": 2900, "tags": ["constructive algorithms", "graphs", "implementation"]}, {"contestId": 331, "index": "D3", "name": "Escaping on Beaveractor", "type": "PROGRAMMING", "points": 40.0, "rating": 3000, "tags": ["data structures", "implementation", "trees"]}, {"contestId": 331, "index": "D2", "name": "Escaping on Beaveractor", "type": "PROGRAMMING", "points": 30.0, "rating": 2600, "tags": ["graphs"]}, {"contestId": 331, "index": "D1", "name": "Escaping on Beaveractor", "type": "PROGRAMMING", "points": 30.0, "rating": 2400, "tags": ["dfs and similar", "implementation"]}, {"contestId": 331, "index": "C3", "name": "The Great Julya Calendar", "type": "PROGRAMMING", "points": 60.0, "rating": 2500, "tags": ["dp"]}, {"contestId": 331, "index": "C2", "name": "The Great Julya Calendar", "type": "PROGRAMMING", "points": 20.0, "rating": 2400, "tags": ["dp"]}, {"contestId": 331, "index": "C1", "name": "The Great Julya Calendar", "type": "PROGRAMMING", "points": 20.0, "rating": 1100, "tags": ["dp"]}, {"contestId": 331, "index": "B2", "name": "Shave Beaver!", "type": "PROGRAMMING", "points": 70.0, "rating": 1900, "tags": ["data structures"]}, {"contestId": 331, "index": "B1", "name": "Shave Beaver!", "type": "PROGRAMMING", "points": 30.0, "rating": 1700, "tags": ["implementation"]}, {"contestId": 331, "index": "A2", "name": "Oh Sweet Beaverette", "type": "PROGRAMMING", "points": 70.0, "rating": 1500, "tags": ["data structures", "sortings"]}, {"contestId": 331, "index": "A1", "name": "Oh Sweet Beaverette", "type": "PROGRAMMING", "points": 30.0, "rating": 1400, "tags": ["brute force", "implementation"]}, {"contestId": 330, "index": "B", "name": "Road Construction", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["constructive algorithms", "graphs"]}, {"contestId": 330, "index": "A", "name": "Cakeminator", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "implementation"]}, {"contestId": 329, "index": "E", "name": "Evil", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["math"]}, {"contestId": 329, "index": "D", "name": "The Evil Temple and the Moving Rocks", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["constructive algorithms"]}, {"contestId": 329, "index": "C", "name": "Graph Reconstruction", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["constructive algorithms"]}, {"contestId": 329, "index": "B", "name": "Biridian Forest", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["dfs and similar", "shortest paths"]}, {"contestId": 329, "index": "A", "name": "Purification", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["constructive algorithms", "greedy"]}, {"contestId": 328, "index": "B", "name": "Sheldon and Ice Pieces", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["greedy"]}, {"contestId": 328, "index": "A", "name": "IQ Test", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["implementation"]}, {"contestId": 327, "index": "E", "name": "Axis Walking", "type": "PROGRAMMING", "points": 3000.0, "rating": 2300, "tags": ["bitmasks", "combinatorics", "constructive algorithms", "dp", "meet-in-the-middle"]}, {"contestId": 327, "index": "D", "name": "Block Tower", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["constructive algorithms", "dfs and similar", "graphs"]}, {"contestId": 327, "index": "C", "name": "Magic Five", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["combinatorics", "math"]}, {"contestId": 327, "index": "B", "name": "Hungry Sequence", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["math"]}, {"contestId": 327, "index": "A", "name": "Flipping Game", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["brute force", "dp", "implementation"]}, {"contestId": 325, "index": "E", "name": "The Red Button", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["combinatorics", "dfs and similar", "dsu", "graphs", "greedy"]}, {"contestId": 325, "index": "D", "name": "Reclamation", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["dsu"]}, {"contestId": 325, "index": "C", "name": "Monsters and Diamonds", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["dfs and similar", "graphs", "shortest paths"]}, {"contestId": 325, "index": "B", "name": "Stadium and Games", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["binary search", "math"]}, {"contestId": 325, "index": "A", "name": "Square and Rectangles", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["implementation"]}, {"contestId": 323, "index": "C", "name": "Two permutations", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["data structures"]}, {"contestId": 323, "index": "B", "name": "Tournament-graph", "type": "PROGRAMMING", "points": 1000.0, "rating": 2200, "tags": ["constructive algorithms", "graphs"]}, {"contestId": 323, "index": "A", "name": "Black-and-White Cube", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["combinatorics", "constructive algorithms"]}, {"contestId": 322, "index": "B", "name": "Ciel and Flowers", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["combinatorics", "math"]}, {"contestId": 322, "index": "A", "name": "Ciel and Dancing", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["greedy"]}, {"contestId": 321, "index": "E", "name": "Ciel and Gondolas", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["data structures", "divide and conquer", "dp"]}, {"contestId": 321, "index": "D", "name": "Ciel and Flipboard", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["dp", "greedy", "math"]}, {"contestId": 321, "index": "C", "name": "Ciel the Commander", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["constructive algorithms", "dfs and similar", "divide and conquer", "greedy", "trees"]}, {"contestId": 321, "index": "B", "name": "Ciel and Duel", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["dp", "flows", "greedy"]}, {"contestId": 321, "index": "A", "name": "Ciel and Robot", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["binary search", "implementation", "math"]}, {"contestId": 320, "index": "B", "name": "Ping-Pong (Easy Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["dfs and similar", "graphs"]}, {"contestId": 320, "index": "A", "name": "Magic Numbers", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["brute force", "greedy"]}, {"contestId": 319, "index": "E", "name": "Ping-Pong", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["data structures"]}, {"contestId": 319, "index": "D", "name": "Have You Ever Heard About the Word?", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["greedy", "hashing", "string suffix structures", "strings"]}, {"contestId": 319, "index": "C", "name": "Kalila and Dimna in the Logging Industry", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["dp", "geometry"]}, {"contestId": 319, "index": "B", "name": "Psychos in a Line", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["data structures", "implementation"]}, {"contestId": 319, "index": "A", "name": "Malek Dance Club", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["combinatorics", "math"]}, {"contestId": 318, "index": "B", "name": "Strings of Power", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["implementation", "strings", "two pointers"]}, {"contestId": 318, "index": "A", "name": "Even Odds", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["math"]}, {"contestId": 317, "index": "E", "name": "Princess and Her Shadow", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["constructive algorithms", "shortest paths"]}, {"contestId": 317, "index": "D", "name": "Game with Powers", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["dp", "games"]}, {"contestId": 317, "index": "C", "name": "Balance", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["constructive algorithms", "dfs and similar", "graphs", "trees"]}, {"contestId": 317, "index": "B", "name": "Ants", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["brute force", "implementation"]}, {"contestId": 317, "index": "A", "name": "Perfect Pair", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["brute force"]}, {"contestId": 316, "index": "G3", "name": "Good Substrings", "type": "PROGRAMMING", "points": 30.0, "rating": 2400, "tags": ["string suffix structures"]}, {"contestId": 316, "index": "G2", "name": "Good Substrings", "type": "PROGRAMMING", "points": 40.0, "rating": 2200, "tags": ["string suffix structures"]}, {"contestId": 316, "index": "G1", "name": "Good Substrings", "type": "PROGRAMMING", "points": 30.0, "rating": 1700, "tags": ["hashing", "strings"]}, {"contestId": 316, "index": "F3", "name": "Suns and Rays", "type": "PROGRAMMING", "points": 30.0, "rating": 2200, "tags": ["constructive algorithms", "dfs and similar", "implementation"]}, {"contestId": 316, "index": "F2", "name": "Suns and Rays", "type": "PROGRAMMING", "points": 40.0, "rating": 2300, "tags": []}, {"contestId": 316, "index": "F1", "name": "Suns and Rays", "type": "PROGRAMMING", "points": 30.0, "rating": 2200, "tags": ["dfs and similar", "implementation"]}, {"contestId": 316, "index": "E3", "name": "Summer Homework", "type": "PROGRAMMING", "points": 30.0, "rating": 2300, "tags": ["data structures", "math"]}, {"contestId": 316, "index": "E2", "name": "Summer Homework", "type": "PROGRAMMING", "points": 40.0, "rating": 2300, "tags": ["data structures", "math"]}, {"contestId": 316, "index": "E1", "name": "Summer Homework", "type": "PROGRAMMING", "points": 30.0, "rating": 1500, "tags": ["brute force", "data structures"]}, {"contestId": 316, "index": "D3", "name": "PE Lesson", "type": "PROGRAMMING", "points": 30.0, "rating": 2400, "tags": ["dp", "math"]}, {"contestId": 316, "index": "D2", "name": "PE Lesson", "type": "PROGRAMMING", "points": 40.0, "rating": 2300, "tags": ["dp"]}, {"contestId": 316, "index": "D1", "name": "PE Lesson", "type": "PROGRAMMING", "points": 30.0, "rating": 2300, "tags": ["brute force", "dp"]}, {"contestId": 316, "index": "C2", "name": "Tidying Up", "type": "PROGRAMMING", "points": 70.0, "rating": 2300, "tags": ["flows", "graph matchings"]}, {"contestId": 316, "index": "C1", "name": "Tidying Up", "type": "PROGRAMMING", "points": 30.0, "rating": 2200, "tags": ["flows"]}, {"contestId": 316, "index": "B2", "name": "EKG", "type": "PROGRAMMING", "points": 70.0, "rating": 1600, "tags": ["dfs and similar", "dp"]}, {"contestId": 316, "index": "B1", "name": "EKG", "type": "PROGRAMMING", "points": 30.0, "rating": 1500, "tags": ["brute force", "dfs and similar"]}, {"contestId": 316, "index": "A2", "name": "Special Task", "type": "PROGRAMMING", "points": 70.0, "rating": 1400, "tags": ["math"]}, {"contestId": 316, "index": "A1", "name": "Special Task", "type": "PROGRAMMING", "points": 30.0, "rating": 1100, "tags": ["greedy"]}, {"contestId": 315, "index": "B", "name": "Sereja and Array", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["implementation"]}, {"contestId": 315, "index": "A", "name": "Sereja and Bottles", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["brute force"]}, {"contestId": 314, "index": "E", "name": "Sereja and Squares", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["dp"]}, {"contestId": 314, "index": "D", "name": "Sereja and Straight Lines", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["binary search", "data structures", "geometry", "sortings", "two pointers"]}, {"contestId": 314, "index": "C", "name": "Sereja and Subsequences", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["data structures", "dp"]}, {"contestId": 314, "index": "B", "name": "Sereja and Periods", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["binary search", "dfs and similar", "strings"]}, {"contestId": 314, "index": "A", "name": "Sereja and Contest", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["implementation"]}, {"contestId": 313, "index": "E", "name": "Ilya and Two Numbers", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["constructive algorithms", "data structures", "dsu", "greedy"]}, {"contestId": 313, "index": "D", "name": "Ilya and Roads", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["dp"]}, {"contestId": 313, "index": "C", "name": "Ilya and Matrix", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["constructive algorithms", "greedy", "implementation", "sortings"]}, {"contestId": 313, "index": "B", "name": "Ilya and Queries", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["dp", "implementation"]}, {"contestId": 313, "index": "A", "name": "Ilya and Bank Account", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation", "number theory"]}, {"contestId": 312, "index": "B", "name": "Archer", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["math", "probabilities"]}, {"contestId": 312, "index": "A", "name": "Whose sentence is it?", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["implementation", "strings"]}, {"contestId": 311, "index": "E", "name": "Biologist", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["flows"]}, {"contestId": 311, "index": "D", "name": "Interval Cubing", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["data structures", "math"]}, {"contestId": 311, "index": "C", "name": "Fetch the Treasure", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["brute force", "data structures", "graphs", "shortest paths"]}, {"contestId": 311, "index": "B", "name": "Cats Transport", "type": "PROGRAMMING", "points": 1000.0, "rating": 2400, "tags": ["data structures", "dp"]}, {"contestId": 311, "index": "A", "name": "The Closest Pair", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["constructive algorithms", "implementation"]}, {"contestId": 309, "index": "E", "name": "Sheep", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["binary search", "greedy"]}, {"contestId": 309, "index": "D", "name": "Tennis Rackets", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["brute force", "geometry"]}, {"contestId": 309, "index": "C", "name": "Memory for Arrays", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["binary search", "bitmasks", "greedy"]}, {"contestId": 309, "index": "B", "name": "Context Advertising", "type": "PROGRAMMING", "points": 500.0, "rating": 2100, "tags": ["dp", "two pointers"]}, {"contestId": 309, "index": "A", "name": "Morning run", "type": "PROGRAMMING", "points": 500.0, "rating": 2000, "tags": ["binary search", "math", "two pointers"]}, {"contestId": 306, "index": "D", "name": "Polygon", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["constructive algorithms", "geometry"]}, {"contestId": 306, "index": "C", "name": "White, Black and White Again", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["combinatorics", "number theory"]}, {"contestId": 306, "index": "B", "name": "Optimizer", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["data structures", "greedy", "sortings"]}, {"contestId": 306, "index": "A", "name": "Candies", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 305, "index": "E", "name": "Playing with String", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["games"]}, {"contestId": 305, "index": "D", "name": "Olya and Graph", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["combinatorics", "math"]}, {"contestId": 305, "index": "C", "name": "Ivan and Powers of Two", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["greedy", "implementation"]}, {"contestId": 305, "index": "B", "name": "Continued Fractions", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["brute force", "implementation", "math"]}, {"contestId": 305, "index": "A", "name": "Strange Addition", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["brute force", "constructive algorithms", "implementation"]}, {"contestId": 304, "index": "B", "name": "Calendar", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["brute force", "implementation"]}, {"contestId": 304, "index": "A", "name": "Pythagorean Theorem II", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["brute force", "math"]}, {"contestId": 303, "index": "E", "name": "Random Ranking", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["dp", "math", "probabilities"]}, {"contestId": 303, "index": "D", "name": "Rotatable Number", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["math", "number theory"]}, {"contestId": 303, "index": "C", "name": "Minimum Modular", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["brute force", "graphs", "math", "number theory"]}, {"contestId": 303, "index": "B", "name": "Rectangle Puzzle II", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["implementation", "math"]}, {"contestId": 303, "index": "A", "name": "Lucky Permutation Triple", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["constructive algorithms", "implementation", "math"]}, {"contestId": 302, "index": "B", "name": "Eugeny and Play List", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["binary search", "implementation", "two pointers"]}, {"contestId": 302, "index": "A", "name": "Eugeny and Array", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 301, "index": "E", "name": "Yaroslav and Arrangements", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["dp"]}, {"contestId": 301, "index": "D", "name": "Yaroslav and Divisors", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["data structures"]}, {"contestId": 301, "index": "C", "name": "Yaroslav and Algorithm", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["constructive algorithms"]}, {"contestId": 301, "index": "B", "name": "Yaroslav and Time", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["binary search", "graphs", "shortest paths"]}, {"contestId": 301, "index": "A", "name": "Yaroslav and Sequence", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["constructive algorithms"]}, {"contestId": 300, "index": "E", "name": "Empire Strikes Back", "type": "PROGRAMMING", "points": 3000.0, "rating": 2300, "tags": ["binary search", "math", "number theory"]}, {"contestId": 300, "index": "D", "name": "Painting Square", "type": "PROGRAMMING", "points": 3000.0, "rating": 2300, "tags": ["dp", "fft"]}, {"contestId": 300, "index": "C", "name": "Beautiful Numbers", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["brute force", "combinatorics"]}, {"contestId": 300, "index": "B", "name": "Coach", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["brute force", "dfs and similar", "graphs"]}, {"contestId": 300, "index": "A", "name": "Array", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["brute force", "constructive algorithms", "implementation"]}, {"contestId": 299, "index": "B", "name": "Ksusha the Squirrel", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["brute force", "implementation"]}, {"contestId": 299, "index": "A", "name": "Ksusha and Array", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["brute force", "number theory", "sortings"]}, {"contestId": 298, "index": "B", "name": "Sail", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["brute force", "greedy", "implementation"]}, {"contestId": 298, "index": "A", "name": "Snow Footprints", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["greedy", "implementation"]}, {"contestId": 297, "index": "E", "name": "Mystic Carvings", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["data structures"]}, {"contestId": 297, "index": "D", "name": "Color the Carpet", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["constructive algorithms"]}, {"contestId": 297, "index": "C", "name": "Splitting the Uniqueness", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["constructive algorithms"]}, {"contestId": 297, "index": "B", "name": "Fish Weight", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["constructive algorithms", "greedy"]}, {"contestId": 297, "index": "A", "name": "Parity Game", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["constructive algorithms"]}, {"contestId": 296, "index": "B", "name": "Yaroslav and Two Strings", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["combinatorics", "dp"]}, {"contestId": 296, "index": "A", "name": "Yaroslav and Permutations", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["greedy", "math"]}, {"contestId": 295, "index": "E", "name": "Yaroslav and Points", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["data structures"]}, {"contestId": 295, "index": "D", "name": "Greg and Caves", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["combinatorics", "dp"]}, {"contestId": 295, "index": "C", "name": "Greg and Friends", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["combinatorics", "dp", "graphs", "shortest paths"]}, {"contestId": 295, "index": "B", "name": "Greg and Graph", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["dp", "graphs", "shortest paths"]}, {"contestId": 295, "index": "A", "name": "Greg and Array", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["data structures", "implementation"]}, {"contestId": 294, "index": "E", "name": "Shaass the Great", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["dp", "trees"]}, {"contestId": 294, "index": "D", "name": "Shaass and Painter Robot", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["brute force", "implementation", "number theory"]}, {"contestId": 294, "index": "C", "name": "Shaass and Lights", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["combinatorics", "number theory"]}, {"contestId": 294, "index": "B", "name": "Shaass and Bookshelf", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["dp", "greedy"]}, {"contestId": 294, "index": "A", "name": "Shaass and Oskols", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "math"]}, {"contestId": 293, "index": "E", "name": "Close Vertices", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["data structures", "divide and conquer", "trees"]}, {"contestId": 293, "index": "D", "name": "Ksusha and Square", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["geometry", "math", "probabilities", "two pointers"]}, {"contestId": 293, "index": "C", "name": "Cube Problem", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["brute force", "math", "number theory"]}, {"contestId": 293, "index": "B", "name": "Distinct Paths", "type": "PROGRAMMING", "points": 1500.0, "rating": 2700, "tags": ["brute force", "combinatorics"]}, {"contestId": 293, "index": "A", "name": "Weird Game", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["games", "greedy"]}, {"contestId": 292, "index": "E", "name": "Copying Data", "type": "PROGRAMMING", "points": 2500.0, "rating": 1900, "tags": ["data structures"]}, {"contestId": 292, "index": "D", "name": "Connected Components", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["data structures", "dfs and similar", "dp", "dsu"]}, {"contestId": 292, "index": "C", "name": "Beautiful IP Addresses", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["brute force"]}, {"contestId": 292, "index": "B", "name": "Network Topology", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["graphs", "implementation"]}, {"contestId": 292, "index": "A", "name": "SMSC", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["implementation"]}, {"contestId": 291, "index": "E", "name": "Tree-String Problem", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["*special", "dfs and similar", "hashing", "strings"]}, {"contestId": 291, "index": "D", "name": "Parallel Programming", "type": "PROGRAMMING", "points": 2000.0, "rating": 1600, "tags": ["*special", "greedy"]}, {"contestId": 291, "index": "C", "name": "Network Mask", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["*special", "bitmasks", "brute force", "implementation"]}, {"contestId": 291, "index": "B", "name": "Command Line Arguments", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["*special", "implementation", "strings"]}, {"contestId": 291, "index": "A", "name": "Spyke Talks", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["*special", "implementation", "sortings"]}, {"contestId": 290, "index": "F", "name": "Greedy Petya", "type": "PROGRAMMING", "rating": 2800, "tags": ["*special", "dfs and similar", "graphs", "greedy"]}, {"contestId": 290, "index": "E", "name": "HQ", "type": "PROGRAMMING", "rating": 2500, "tags": ["*special", "constructive algorithms"]}, {"contestId": 290, "index": "D", "name": "Orange", "type": "PROGRAMMING", "rating": 1400, "tags": ["*special", "implementation"]}, {"contestId": 290, "index": "C", "name": "WTF?", "type": "PROGRAMMING", "rating": 1700, "tags": ["*special", "graph matchings", "implementation", "trees"]}, {"contestId": 290, "index": "B", "name": "QR code", "type": "PROGRAMMING", "rating": 1500, "tags": ["*special", "implementation"]}, {"contestId": 290, "index": "A", "name": "Mysterious strings", "type": "PROGRAMMING", "rating": 1400, "tags": ["*special", "implementation"]}, {"contestId": 289, "index": "B", "name": "Polo the Penguin and Matrix", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["brute force", "dp", "implementation", "sortings", "ternary search"]}, {"contestId": 289, "index": "A", "name": "Polo the Penguin and Segments ", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["brute force", "implementation"]}, {"contestId": 288, "index": "E", "name": "Polo the Penguin and Lucky Numbers", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["dp", "implementation", "math"]}, {"contestId": 288, "index": "D", "name": "Polo the Penguin and Trees ", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["combinatorics", "dfs and similar", "trees"]}, {"contestId": 288, "index": "C", "name": "Polo the Penguin and XOR operation", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["implementation", "math"]}, {"contestId": 288, "index": "B", "name": "Polo the Penguin and Houses ", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["combinatorics"]}, {"contestId": 288, "index": "A", "name": "Polo the Penguin and Strings", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["greedy"]}, {"contestId": 287, "index": "B", "name": "Pipeline", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["binary search", "math"]}, {"contestId": 287, "index": "A", "name": "IQ Test", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["brute force", "implementation"]}, {"contestId": 286, "index": "E", "name": "Ladies' Shop", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["constructive algorithms", "fft", "math"]}, {"contestId": 286, "index": "D", "name": "Tourists", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["data structures", "sortings"]}, {"contestId": 286, "index": "C", "name": "Main Sequence", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["greedy", "implementation"]}, {"contestId": 286, "index": "B", "name": "Shifting", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["implementation"]}, {"contestId": 286, "index": "A", "name": "Lucky Permutation", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["constructive algorithms", "math"]}, {"contestId": 285, "index": "E", "name": "Positions in Permutations", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 285, "index": "D", "name": "Permutation Sum", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["bitmasks", "combinatorics", "dp", "implementation", "meet-in-the-middle"]}, {"contestId": 285, "index": "C", "name": "Building Permutation", "type": "PROGRAMMING", "points": 1500.0, "rating": 1200, "tags": ["greedy", "implementation", "sortings"]}, {"contestId": 285, "index": "B", "name": "Find Marble", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["implementation"]}, {"contestId": 285, "index": "A", "name": "Slightly Decreasing Permutations", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["greedy", "implementation"]}, {"contestId": 284, "index": "B", "name": "Cows and Poker Game", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["brute force", "implementation"]}, {"contestId": 284, "index": "A", "name": "Cows and Primitive Roots", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["implementation", "math", "number theory"]}, {"contestId": 283, "index": "E", "name": "Cow Tennis Tournament", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["combinatorics", "data structures", "math"]}, {"contestId": 283, "index": "D", "name": "Cows and Cool Sequences", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["dp", "math", "number theory"]}, {"contestId": 283, "index": "C", "name": "Coin Troubles", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["dp"]}, {"contestId": 283, "index": "B", "name": "Cow Program", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["dfs and similar", "dp", "graphs"]}, {"contestId": 283, "index": "A", "name": "Cows and Sequence", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["constructive algorithms", "data structures", "implementation"]}, {"contestId": 282, "index": "E", "name": "Sausage Maximization", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["bitmasks", "data structures", "trees"]}, {"contestId": 282, "index": "D", "name": "Yet Another Number Game", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["dp", "games"]}, {"contestId": 282, "index": "C", "name": "XOR and OR", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["constructive algorithms", "implementation", "math"]}, {"contestId": 282, "index": "B", "name": "Painting Eggs", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["greedy", "math"]}, {"contestId": 282, "index": "A", "name": "Bit++", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 281, "index": "B", "name": "Nearest Fraction", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["brute force", "implementation", "two pointers"]}, {"contestId": 281, "index": "A", "name": "Word Capitalization", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "strings"]}, {"contestId": 280, "index": "E", "name": "Sequence Transformation", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["data structures", "dp", "implementation", "math"]}, {"contestId": 280, "index": "D", "name": "k-Maximum Subsequence Sum", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["data structures", "flows", "graphs", "implementation"]}, {"contestId": 280, "index": "C", "name": "Game on Tree", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["implementation", "math", "probabilities", "trees"]}, {"contestId": 280, "index": "B", "name": "Maximum Xor Secondary", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["data structures", "implementation", "two pointers"]}, {"contestId": 280, "index": "A", "name": "Rectangle Puzzle", "type": "PROGRAMMING", "points": 500.0, "rating": 2000, "tags": ["geometry"]}, {"contestId": 279, "index": "E", "name": "Beautiful Decomposition", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["dp", "games", "greedy", "number theory"]}, {"contestId": 279, "index": "D", "name": "The Minimum Number of Variables", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["bitmasks", "dp"]}, {"contestId": 279, "index": "C", "name": "Ladder", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["dp", "implementation", "two pointers"]}, {"contestId": 279, "index": "B", "name": "Books", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["binary search", "brute force", "implementation", "two pointers"]}, {"contestId": 279, "index": "A", "name": "Point on Spiral", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["brute force", "geometry", "implementation"]}, {"contestId": 278, "index": "B", "name": "New Problem", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["brute force", "strings"]}, {"contestId": 278, "index": "A", "name": "Circle Line", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 277, "index": "E", "name": "Binary Tree on Plane", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["flows", "trees"]}, {"contestId": 277, "index": "D", "name": "Google Code Jam", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["dp", "probabilities"]}, {"contestId": 277, "index": "C", "name": "Game", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["games", "implementation"]}, {"contestId": 277, "index": "B", "name": "Set of Points", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["constructive algorithms", "geometry"]}, {"contestId": 277, "index": "A", "name": "Learning Languages", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["dfs and similar", "dsu"]}, {"contestId": 276, "index": "E", "name": "Little Girl and Problem on Trees", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["data structures", "graphs", "trees"]}, {"contestId": 276, "index": "D", "name": "Little Girl and Maximum XOR", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["bitmasks", "dp", "greedy", "implementation", "math"]}, {"contestId": 276, "index": "C", "name": "Little Girl and Maximum Sum", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["data structures", "greedy", "implementation", "sortings"]}, {"contestId": 276, "index": "B", "name": "Little Girl and Game", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["games", "greedy"]}, {"contestId": 276, "index": "A", "name": "Lunch Rush", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation"]}, {"contestId": 275, "index": "B", "name": "Convex Shape", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["constructive algorithms", "implementation"]}, {"contestId": 275, "index": "A", "name": "Lights Out", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation"]}, {"contestId": 274, "index": "E", "name": "Mirror Room", "type": "PROGRAMMING", "points": 2000.0, "rating": 3000, "tags": ["data structures", "implementation"]}, {"contestId": 274, "index": "D", "name": "Lovely Matrix", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["dfs and similar", "graphs", "greedy", "sortings"]}, {"contestId": 274, "index": "C", "name": "The Last Hole!", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["brute force", "geometry"]}, {"contestId": 274, "index": "B", "name": "Zero Tree", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["dfs and similar", "dp", "greedy", "trees"]}, {"contestId": 274, "index": "A", "name": "k-Multiple Free Set", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["binary search", "greedy", "sortings"]}, {"contestId": 273, "index": "E", "name": "Dima and Game", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["dp", "games"]}, {"contestId": 273, "index": "D", "name": "Dima and Figure", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["dp"]}, {"contestId": 272, "index": "E", "name": "Dima and Horses", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["combinatorics", "constructive algorithms", "graphs"]}, {"contestId": 272, "index": "D", "name": "Dima and Two Sequences", "type": "PROGRAMMING", "points": 2000.0, "rating": 1600, "tags": ["combinatorics", "math", "sortings"]}, {"contestId": 272, "index": "C", "name": "Dima and Staircase", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["data structures", "implementation"]}, {"contestId": 272, "index": "B", "name": "Dima and Sequence", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["implementation", "math"]}, {"contestId": 272, "index": "A", "name": "Dima and Friends", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation", "math"]}, {"contestId": 271, "index": "E", "name": "Three Horses", "type": "PROGRAMMING", "points": 3000.0, "rating": 2200, "tags": ["constructive algorithms", "math", "number theory"]}, {"contestId": 271, "index": "D", "name": "Good Substrings", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["data structures", "strings"]}, {"contestId": 271, "index": "C", "name": "Secret", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["constructive algorithms", "implementation"]}, {"contestId": 271, "index": "B", "name": "Prime Matrix", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["binary search", "brute force", "math", "number theory"]}, {"contestId": 271, "index": "A", "name": "Beautiful Year", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force"]}, {"contestId": 270, "index": "B", "name": "Multithreading", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["data structures", "greedy", "implementation"]}, {"contestId": 270, "index": "A", "name": "Fancy Fence", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["geometry", "implementation", "math"]}, {"contestId": 269, "index": "E", "name": "String Theory", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": []}, {"contestId": 269, "index": "D", "name": "Maximum Waterfall", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["data structures", "dp", "graphs", "sortings"]}, {"contestId": 269, "index": "C", "name": "Flawed Flow", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["constructive algorithms", "flows", "graphs", "greedy"]}, {"contestId": 269, "index": "B", "name": "Greenhouse Effect", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["dp"]}, {"contestId": 269, "index": "A", "name": "Magical Boxes", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["greedy", "math"]}, {"contestId": 268, "index": "E", "name": "Playlist", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["math", "probabilities", "sortings"]}, {"contestId": 268, "index": "D", "name": "Wall Bars", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["dp"]}, {"contestId": 268, "index": "C", "name": "Beautiful Sets of Points", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["constructive algorithms", "implementation"]}, {"contestId": 268, "index": "B", "name": "Buttons", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["implementation", "math"]}, {"contestId": 268, "index": "A", "name": "Games", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force"]}, {"contestId": 267, "index": "C", "name": "Berland Traffic", "type": "PROGRAMMING", "points": 1500.0, "rating": 2700, "tags": ["math", "matrices"]}, {"contestId": 267, "index": "B", "name": "Dominoes", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["dfs and similar", "graphs"]}, {"contestId": 267, "index": "A", "name": "Subtractions", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["math", "number theory"]}, {"contestId": 266, "index": "E", "name": "More Queries to Array...", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["data structures", "math"]}, {"contestId": 266, "index": "D", "name": "BerDonalds", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["graphs", "math", "shortest paths"]}, {"contestId": 266, "index": "C", "name": "Below the Diagonal", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["constructive algorithms", "greedy", "math"]}, {"contestId": 266, "index": "B", "name": "Queue at the School", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "graph matchings", "implementation", "shortest paths"]}, {"contestId": 266, "index": "A", "name": "Stones on the Table", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 265, "index": "B", "name": "Roadside Trees (Simplified Edition)", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["greedy", "implementation"]}, {"contestId": 265, "index": "A", "name": "Colorful Stones (Simplified Edition)", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 264, "index": "E", "name": "Roadside Trees", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["data structures", "dp"]}, {"contestId": 264, "index": "D", "name": "Colorful Stones", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["dp", "two pointers"]}, {"contestId": 264, "index": "C", "name": "Choosing Balls", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["dp"]}, {"contestId": 264, "index": "B", "name": "Good Sequences", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["dp", "number theory"]}, {"contestId": 264, "index": "A", "name": "Escape from Stones", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["constructive algorithms", "data structures", "implementation", "two pointers"]}, {"contestId": 263, "index": "E", "name": "Rhombus", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["brute force", "data structures", "dp"]}, {"contestId": 263, "index": "D", "name": "Cycle in Graph", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["dfs and similar", "graphs"]}, {"contestId": 263, "index": "C", "name": "Circle of Numbers", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["brute force", "dfs and similar", "implementation"]}, {"contestId": 263, "index": "B", "name": "Squares", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["greedy", "implementation", "sortings"]}, {"contestId": 263, "index": "A", "name": "Beautiful Matrix", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 262, "index": "B", "name": "Roma and Changing Signs", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["greedy"]}, {"contestId": 262, "index": "A", "name": "Roma and Lucky Numbers", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 261, "index": "E", "name": "Maxim and Calculator", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["brute force", "dp", "two pointers"]}, {"contestId": 261, "index": "D", "name": "Maxim and Increasing Subsequence", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["dp"]}, {"contestId": 261, "index": "C", "name": "Maxim and Matrix", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["constructive algorithms", "dp", "math"]}, {"contestId": 261, "index": "B", "name": "Maxim and Restaurant", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["dp", "math", "probabilities"]}, {"contestId": 261, "index": "A", "name": "Maxim and Discounts", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["greedy", "sortings"]}, {"contestId": 260, "index": "E", "name": "Dividing Kingdom", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["binary search", "brute force", "data structures"]}, {"contestId": 260, "index": "D", "name": "Black and White Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["constructive algorithms", "dsu", "graphs", "greedy", "trees"]}, {"contestId": 260, "index": "C", "name": "Balls and Boxes", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["constructive algorithms", "greedy", "implementation"]}, {"contestId": 260, "index": "B", "name": "Ancient Prophesy", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["brute force", "implementation", "strings"]}, {"contestId": 260, "index": "A", "name": "Adding Digits", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["implementation", "math"]}, {"contestId": 259, "index": "B", "name": "Little Elephant and Magic Square", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["brute force", "implementation"]}, {"contestId": 259, "index": "A", "name": "Little Elephant and Chess", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["brute force", "strings"]}, {"contestId": 258, "index": "E", "name": "Little Elephant and Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures", "dfs and similar", "trees"]}, {"contestId": 258, "index": "D", "name": "Little Elephant and Broken Sorting", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["dp", "math", "probabilities"]}, {"contestId": 258, "index": "C", "name": "Little Elephant and LCM", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["binary search", "combinatorics", "dp", "math"]}, {"contestId": 258, "index": "B", "name": "Little Elephant and Elections", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["brute force", "combinatorics", "dp"]}, {"contestId": 258, "index": "A", "name": "Little Elephant and Bits", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["greedy", "math"]}, {"contestId": 257, "index": "E", "name": "Greedy Elevator", "type": "PROGRAMMING", "points": 3000.0, "rating": 2200, "tags": ["data structures", "implementation"]}, {"contestId": 257, "index": "D", "name": "Sum", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["greedy", "math"]}, {"contestId": 257, "index": "C", "name": "View Angle", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["brute force", "geometry", "math"]}, {"contestId": 257, "index": "B", "name": "Playing Cubes", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["games", "greedy", "implementation"]}, {"contestId": 257, "index": "A", "name": "Sockets", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["greedy", "implementation", "sortings"]}, {"contestId": 256, "index": "E", "name": "Lucky Arrays", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures"]}, {"contestId": 256, "index": "D", "name": "Liars and Serge", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["dp"]}, {"contestId": 255, "index": "E", "name": "Furlo and Rublo and Game", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["games", "implementation", "math"]}, {"contestId": 255, "index": "D", "name": "Mr. Bender and Square", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["binary search", "implementation", "math"]}, {"contestId": 255, "index": "C", "name": "Almost Arithmetical Progression", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["brute force", "dp"]}, {"contestId": 255, "index": "B", "name": "Code Parsing", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["implementation"]}, {"contestId": 255, "index": "A", "name": "Greg's Workout", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 254, "index": "E", "name": "Dormitory", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["dp", "implementation"]}, {"contestId": 254, "index": "D", "name": "Rats", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["brute force", "dfs and similar", "graphs", "implementation", "shortest paths"]}, {"contestId": 254, "index": "C", "name": "Anagram", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["greedy", "strings"]}, {"contestId": 254, "index": "B", "name": "Jury Size", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["brute force", "implementation"]}, {"contestId": 254, "index": "A", "name": "Cards with Numbers", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["constructive algorithms", "sortings"]}, {"contestId": 253, "index": "E", "name": "Printer", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["binary search", "data structures", "implementation", "sortings"]}, {"contestId": 253, "index": "D", "name": "Table with Letters - 2", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["brute force", "two pointers"]}, {"contestId": 253, "index": "C", "name": "Text Editor", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["data structures", "dfs and similar", "graphs", "greedy", "shortest paths"]}, {"contestId": 253, "index": "B", "name": "Physics Practical", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["binary search", "dp", "sortings", "two pointers"]}, {"contestId": 253, "index": "A", "name": "Boys and Girls", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["greedy"]}, {"contestId": 252, "index": "B", "name": "Unsorting Array", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["brute force", "sortings"]}, {"contestId": 252, "index": "A", "name": "Little Xor", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["brute force", "implementation"]}, {"contestId": 251, "index": "E", "name": "Tree and Table", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["dfs and similar", "dp", "implementation", "trees"]}, {"contestId": 251, "index": "D", "name": "Two Sets", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["bitmasks", "math"]}, {"contestId": 251, "index": "C", "name": "Number Transformation", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["dp", "greedy", "number theory"]}, {"contestId": 251, "index": "B", "name": "Playing with Permutations", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["implementation", "math"]}, {"contestId": 251, "index": "A", "name": "Points on Line", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["binary search", "combinatorics", "two pointers"]}, {"contestId": 250, "index": "E", "name": "Mad Joe", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["brute force"]}, {"contestId": 250, "index": "D", "name": "Building Bridge", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["geometry", "ternary search", "two pointers"]}, {"contestId": 250, "index": "C", "name": "Movie Critics", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["greedy"]}, {"contestId": 250, "index": "B", "name": "Restoring IPv6", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["implementation", "strings"]}, {"contestId": 250, "index": "A", "name": "Paper Work", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["greedy"]}, {"contestId": 249, "index": "E", "name": "Endless Matrix", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["math"]}, {"contestId": 249, "index": "D", "name": "Donkey and Stars", "type": "PROGRAMMING", "points": 1500.0, "rating": 2700, "tags": ["data structures", "dp", "geometry", "math", "sortings"]}, {"contestId": 248, "index": "E", "name": "Piglet's Birthday", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["dp", "math", "probabilities"]}, {"contestId": 248, "index": "D", "name": "Sweets for Everyone!", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["binary search", "greedy", "implementation"]}, {"contestId": 248, "index": "C", "name": "Robo-Footballer", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["binary search", "geometry"]}, {"contestId": 248, "index": "B", "name": "Chilly Willy", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["math", "number theory"]}, {"contestId": 248, "index": "A", "name": "Cupboards", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 246, "index": "E", "name": "Blood Cousins Return", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["binary search", "data structures", "dfs and similar", "dp", "sortings"]}, {"contestId": 246, "index": "D", "name": "Colorful Graph", "type": "PROGRAMMING", "points": 2000.0, "rating": 1600, "tags": ["brute force", "dfs and similar", "graphs"]}, {"contestId": 246, "index": "C", "name": "Beauty Pageant", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["brute force", "constructive algorithms", "greedy"]}, {"contestId": 246, "index": "B", "name": "Increase and Decrease", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["greedy", "math"]}, {"contestId": 246, "index": "A", "name": "Buggy Sorting", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["constructive algorithms", "greedy", "sortings"]}, {"contestId": 245, "index": "H", "name": "Queries for Number of Palindromes", "type": "PROGRAMMING", "rating": 1800, "tags": ["dp", "hashing", "strings"]}, {"contestId": 245, "index": "G", "name": "Suggested Friends", "type": "PROGRAMMING", "rating": 2200, "tags": ["brute force", "graphs"]}, {"contestId": 245, "index": "F", "name": "Log Stream Analysis", "type": "PROGRAMMING", "rating": 2000, "tags": ["binary search", "brute force", "implementation", "strings"]}, {"contestId": 245, "index": "E", "name": "Mishap in Club", "type": "PROGRAMMING", "rating": 1400, "tags": ["greedy", "implementation"]}, {"contestId": 245, "index": "D", "name": "Restoring Table", "type": "PROGRAMMING", "rating": 1500, "tags": ["constructive algorithms", "greedy"]}, {"contestId": 245, "index": "C", "name": "Game with Coins", "type": "PROGRAMMING", "rating": 1700, "tags": ["greedy"]}, {"contestId": 245, "index": "B", "name": "Internet Address", "type": "PROGRAMMING", "rating": 1100, "tags": ["implementation", "strings"]}, {"contestId": 245, "index": "A", "name": "System Administrator", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"]}, {"contestId": 244, "index": "B", "name": "Undoubtedly Lucky Numbers", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["bitmasks", "brute force", "dfs and similar"]}, {"contestId": 244, "index": "A", "name": "Dividing Orange", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation"]}, {"contestId": 243, "index": "E", "name": "Matrix", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["data structures"]}, {"contestId": 243, "index": "D", "name": "Cubes", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["data structures", "dp", "geometry", "two pointers"]}, {"contestId": 243, "index": "C", "name": "Colorado Potato Beetle", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["dfs and similar", "implementation"]}, {"contestId": 243, "index": "B", "name": "Hydra", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["graphs", "sortings"]}, {"contestId": 243, "index": "A", "name": "The Brand New Function", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["bitmasks"]}, {"contestId": 242, "index": "E", "name": "XOR on Segment", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["bitmasks", "data structures"]}, {"contestId": 242, "index": "D", "name": "Dispute", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["dfs and similar", "graphs", "greedy"]}, {"contestId": 242, "index": "C", "name": "King's Path", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["dfs and similar", "graphs", "hashing", "shortest paths"]}, {"contestId": 242, "index": "B", "name": "Big Segment", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["implementation", "sortings"]}, {"contestId": 242, "index": "A", "name": "Heads or Tails", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["brute force", "implementation"]}, {"contestId": 241, "index": "G", "name": "Challenging Balloons", "type": "PROGRAMMING", "rating": 1900, "tags": ["constructive algorithms"]}, {"contestId": 241, "index": "F", "name": "Race", "type": "PROGRAMMING", "rating": 2300, "tags": ["brute force", "implementation"]}, {"contestId": 241, "index": "E", "name": "Flights", "type": "PROGRAMMING", "rating": 2600, "tags": ["graphs", "shortest paths"]}, {"contestId": 241, "index": "D", "name": "Numbers", "type": "PROGRAMMING", "rating": 2900, "tags": []}, {"contestId": 241, "index": "C", "name": "Mirror Box", "type": "PROGRAMMING", "rating": 2000, "tags": ["geometry", "implementation"]}, {"contestId": 241, "index": "B", "name": "Friends", "type": "PROGRAMMING", "rating": 2700, "tags": ["binary search", "bitmasks", "data structures", "math"]}, {"contestId": 241, "index": "A", "name": "Old Peykan", "type": "PROGRAMMING", "rating": 1300, "tags": ["greedy"]}, {"contestId": 240, "index": "F", "name": "TorCoder", "type": "PROGRAMMING", "rating": 2600, "tags": ["data structures"]}, {"contestId": 240, "index": "E", "name": "Road Repairs", "type": "PROGRAMMING", "rating": 2800, "tags": ["dfs and similar", "graphs", "greedy"]}, {"contestId": 239, "index": "B", "name": "Easy Tape Programming", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["brute force", "implementation"]}, {"contestId": 239, "index": "A", "name": "Two Bags of Potatoes", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["greedy", "implementation", "math"]}, {"contestId": 238, "index": "E", "name": "Meeting Her", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["dp", "graphs", "shortest paths"]}, {"contestId": 238, "index": "D", "name": "Tape Programming", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["data structures", "implementation"]}, {"contestId": 238, "index": "C", "name": "World Eater Brothers", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["dfs and similar", "dp", "greedy", "trees"]}, {"contestId": 238, "index": "B", "name": "Boring Partition", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["constructive algorithms"]}, {"contestId": 238, "index": "A", "name": "Not Wool Sequences", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["constructive algorithms", "math"]}, {"contestId": 237, "index": "E", "name": "Build String", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["flows", "graphs"]}, {"contestId": 237, "index": "D", "name": "T-decomposition", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["dfs and similar", "graphs", "greedy", "trees"]}, {"contestId": 237, "index": "C", "name": "Primes on Interval", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["binary search", "number theory", "two pointers"]}, {"contestId": 237, "index": "B", "name": "Young Table", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["implementation", "sortings"]}, {"contestId": 237, "index": "A", "name": "Free Cash", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"]}, {"contestId": 236, "index": "B", "name": "Easy Number Challenge", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["implementation", "number theory"]}, {"contestId": 236, "index": "A", "name": "Boy or Girl", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "implementation", "strings"]}, {"contestId": 235, "index": "E", "name": "Number Challenge", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["combinatorics", "dp", "implementation", "math", "number theory"]}, {"contestId": 235, "index": "D", "name": "Graph Game", "type": "PROGRAMMING", "points": 2000.0, "rating": 3000, "tags": ["graphs"]}, {"contestId": 235, "index": "C", "name": "Cyclical Quest", "type": "PROGRAMMING", "points": 1500.0, "rating": 2700, "tags": ["data structures", "string suffix structures", "strings"]}, {"contestId": 235, "index": "B", "name": "Let's Play Osu!", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["dp", "math", "probabilities"]}, {"contestId": 235, "index": "A", "name": "LCM Challenge", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["number theory"]}, {"contestId": 234, "index": "H", "name": "Merging Two Decks", "type": "PROGRAMMING", "rating": 2000, "tags": ["constructive algorithms", "greedy"]}, {"contestId": 234, "index": "G", "name": "Practice", "type": "PROGRAMMING", "rating": 1600, "tags": ["constructive algorithms", "divide and conquer", "implementation"]}, {"contestId": 234, "index": "F", "name": "Fence", "type": "PROGRAMMING", "rating": 1800, "tags": ["dp"]}, {"contestId": 234, "index": "E", "name": "Champions' League", "type": "PROGRAMMING", "rating": 1600, "tags": ["implementation"]}, {"contestId": 234, "index": "D", "name": "Cinema", "type": "PROGRAMMING", "rating": 1600, "tags": ["implementation"]}, {"contestId": 234, "index": "C", "name": "Weather", "type": "PROGRAMMING", "rating": 1300, "tags": ["dp", "implementation"]}, {"contestId": 234, "index": "B", "name": "Reading", "type": "PROGRAMMING", "rating": 1000, "tags": ["sortings"]}, {"contestId": 234, "index": "A", "name": "Lefthanders and Righthanders ", "type": "PROGRAMMING", "rating": 1200, "tags": ["implementation"]}, {"contestId": 233, "index": "B", "name": "Non-square Equation", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["binary search", "brute force", "math"]}, {"contestId": 233, "index": "A", "name": "Perfect Permutation", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "math"]}, {"contestId": 232, "index": "E", "name": "Quick Tortoise", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["bitmasks", "divide and conquer", "dp"]}, {"contestId": 232, "index": "D", "name": "Fence", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["binary search", "data structures", "string suffix structures"]}, {"contestId": 232, "index": "C", "name": "Doe Graphs", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["constructive algorithms", "divide and conquer", "dp", "graphs", "shortest paths"]}, {"contestId": 232, "index": "B", "name": "Table", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["bitmasks", "combinatorics", "dp", "math"]}, {"contestId": 232, "index": "A", "name": "Cycles", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["binary search", "constructive algorithms", "graphs", "greedy"]}, {"contestId": 231, "index": "E", "name": "Cactus", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["data structures", "dfs and similar", "dp", "graphs", "trees"]}, {"contestId": 231, "index": "D", "name": "Magic Box", "type": "PROGRAMMING", "points": 2000.0, "rating": 1600, "tags": ["brute force", "geometry"]}, {"contestId": 231, "index": "C", "name": "To Add or Not to Add", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["binary search", "sortings", "two pointers"]}, {"contestId": 231, "index": "B", "name": "Magic, Wizardry and Wonders", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["constructive algorithms", "greedy"]}, {"contestId": 231, "index": "A", "name": "Team", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "greedy"]}, {"contestId": 230, "index": "B", "name": "T-primes", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["binary search", "implementation", "math", "number theory"]}, {"contestId": 230, "index": "A", "name": "Dragons", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["greedy", "sortings"]}, {"contestId": 229, "index": "E", "name": "Gifts", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["combinatorics", "dp", "math", "probabilities"]}, {"contestId": 229, "index": "D", "name": "Towers", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["dp", "greedy", "two pointers"]}, {"contestId": 229, "index": "C", "name": "Triangles", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["combinatorics", "graphs", "math"]}, {"contestId": 229, "index": "B", "name": "Planets", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["binary search", "data structures", "graphs", "shortest paths"]}, {"contestId": 229, "index": "A", "name": "Shifts", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["brute force", "two pointers"]}, {"contestId": 228, "index": "E", "name": "The Road to Berland is Paved With Good Intentions", "type": "PROGRAMMING", "points": 2500.0, "rating": 1900, "tags": ["2-sat", "dfs and similar", "dsu", "graphs"]}, {"contestId": 228, "index": "D", "name": "Zigzag", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["data structures"]}, {"contestId": 228, "index": "C", "name": "Fractal Detector", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["dp", "hashing"]}, {"contestId": 228, "index": "B", "name": "Two Tables", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["brute force", "implementation"]}, {"contestId": 228, "index": "A", "name": "Is your horseshoe on the other hoof?", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 227, "index": "B", "name": "Effective Approach", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["implementation"]}, {"contestId": 227, "index": "A", "name": "Where do I Turn?", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["geometry"]}, {"contestId": 226, "index": "E", "name": "Noble Knight's Path", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["data structures", "trees"]}, {"contestId": 226, "index": "D", "name": "The table", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["constructive algorithms", "greedy"]}, {"contestId": 226, "index": "C", "name": "Anniversary", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["data structures", "implementation", "math", "matrices", "number theory"]}, {"contestId": 226, "index": "B", "name": "Naughty Stone Piles", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["greedy"]}, {"contestId": 226, "index": "A", "name": "Flying Saucer Segments", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["math"]}, {"contestId": 225, "index": "E", "name": "Unsolvable", "type": "PROGRAMMING", "points": 3000.0, "rating": 2100, "tags": ["math", "number theory"]}, {"contestId": 225, "index": "D", "name": "Snake", "type": "PROGRAMMING", "points": 3000.0, "rating": 2200, "tags": ["bitmasks", "dfs and similar", "graphs", "implementation"]}, {"contestId": 225, "index": "C", "name": "Barcode", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["dp", "matrices"]}, {"contestId": 225, "index": "B", "name": "Well-known Numbers", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["binary search", "greedy", "number theory"]}, {"contestId": 225, "index": "A", "name": "Dice Tower", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["constructive algorithms", "greedy"]}, {"contestId": 224, "index": "B", "name": "Array", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["bitmasks", "implementation", "two pointers"]}, {"contestId": 224, "index": "A", "name": "Parallelepiped", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["brute force", "geometry", "math"]}, {"contestId": 223, "index": "E", "name": "Planar Graph", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["flows", "geometry", "graphs"]}, {"contestId": 223, "index": "D", "name": "Spider", "type": "PROGRAMMING", "points": 2000.0, "rating": 3000, "tags": ["geometry", "graphs"]}, {"contestId": 223, "index": "C", "name": "Partial Sums", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["combinatorics", "math", "number theory"]}, {"contestId": 223, "index": "B", "name": "Two Strings", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["data structures", "dp", "strings"]}, {"contestId": 223, "index": "A", "name": "Bracket Sequence", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["data structures", "expression parsing", "implementation"]}, {"contestId": 222, "index": "E", "name": "Decoding Genome", "type": "PROGRAMMING", "points": 2500.0, "rating": 1900, "tags": ["dp", "matrices"]}, {"contestId": 222, "index": "D", "name": "Olympiad", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["binary search", "greedy", "sortings", "two pointers"]}, {"contestId": 222, "index": "C", "name": "Reducing Fractions", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["implementation", "math", "number theory", "sortings"]}, {"contestId": 222, "index": "B", "name": "Cosmic Tables", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["data structures", "implementation"]}, {"contestId": 222, "index": "A", "name": "Shooshuns and Sequence ", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["brute force", "implementation"]}, {"contestId": 221, "index": "B", "name": "Little Elephant and Numbers", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["implementation"]}, {"contestId": 221, "index": "A", "name": "Little Elephant and Function", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation", "math"]}, {"contestId": 220, "index": "E", "name": "Little Elephant and Inversions", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures", "two pointers"]}, {"contestId": 220, "index": "D", "name": "Little Elephant and Triangle", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["geometry", "math"]}, {"contestId": 220, "index": "C", "name": "Little Elephant and Shifts", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["data structures"]}, {"contestId": 220, "index": "B", "name": "Little Elephant and Array", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["constructive algorithms", "data structures"]}, {"contestId": 220, "index": "A", "name": "Little Elephant and Problem", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["implementation", "sortings"]}, {"contestId": 219, "index": "E", "name": "Parking Lot", "type": "PROGRAMMING", "points": 3000.0, "rating": 2200, "tags": ["data structures"]}, {"contestId": 219, "index": "D", "name": "Choosing Capital for Treeland", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["dfs and similar", "dp", "graphs", "trees"]}, {"contestId": 219, "index": "C", "name": "Color Stripe", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["brute force", "dp", "greedy"]}, {"contestId": 219, "index": "B", "name": "Special Offer! Super Price 999 Bourles!", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["implementation"]}, {"contestId": 219, "index": "A", "name": "k-String", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation", "strings"]}, {"contestId": 218, "index": "B", "name": "Airport", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["implementation"]}, {"contestId": 218, "index": "A", "name": "Mountain Scenery", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["brute force", "constructive algorithms", "implementation"]}, {"contestId": 217, "index": "E", "name": "Alien DNA", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["data structures", "dsu", "trees"]}, {"contestId": 217, "index": "D", "name": "Bitonix' Patrol", "type": "PROGRAMMING", "points": 3000.0, "rating": 2900, "tags": ["bitmasks", "brute force", "combinatorics", "dfs and similar", "math"]}, {"contestId": 217, "index": "C", "name": "Formurosa", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["divide and conquer", "dp", "expression parsing"]}, {"contestId": 217, "index": "B", "name": "Blackboard Fibonacci", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["brute force", "math"]}, {"contestId": 217, "index": "A", "name": "Ice Skating", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["brute force", "dfs and similar", "dsu", "graphs"]}, {"contestId": 216, "index": "E", "name": "Martian Luck", "type": "PROGRAMMING", "points": 3000.0, "rating": 2000, "tags": ["math", "number theory"]}, {"contestId": 216, "index": "D", "name": "Spider's Web", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["binary search", "sortings", "two pointers"]}, {"contestId": 216, "index": "C", "name": "Hiring Staff", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["greedy"]}, {"contestId": 216, "index": "B", "name": "Forming Teams", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["dfs and similar", "implementation"]}, {"contestId": 216, "index": "A", "name": "Tiling with Hexagons", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["implementation", "math"]}, {"contestId": 215, "index": "E", "name": "Periodical Numbers", "type": "PROGRAMMING", "points": 3000.0, "rating": 2100, "tags": ["combinatorics", "dp", "number theory"]}, {"contestId": 215, "index": "D", "name": "Hot Days", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["greedy"]}, {"contestId": 215, "index": "C", "name": "Crosses", "type": "PROGRAMMING", "points": 3000.0, "rating": 2100, "tags": ["brute force", "implementation"]}, {"contestId": 215, "index": "B", "name": "Olympic Medal", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["greedy", "math"]}, {"contestId": 215, "index": "A", "name": "Bicycle Chain", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["brute force", "implementation"]}, {"contestId": 214, "index": "B", "name": "Hometask", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["brute force", "constructive algorithms", "greedy", "math"]}, {"contestId": 214, "index": "A", "name": "System of Equations", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force"]}, {"contestId": 213, "index": "E", "name": "Two Permutations", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["data structures", "hashing", "strings"]}, {"contestId": 213, "index": "D", "name": "Stars", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["constructive algorithms", "geometry"]}, {"contestId": 213, "index": "C", "name": "Relay Race", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["dp"]}, {"contestId": 213, "index": "B", "name": "Numbers", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["combinatorics", "dp"]}, {"contestId": 213, "index": "A", "name": "Game", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["dfs and similar", "greedy"]}, {"contestId": 212, "index": "E", "name": "IT Restaurants", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["dfs and similar", "dp", "trees"]}, {"contestId": 212, "index": "D", "name": "Cutting a Fence", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["binary search", "data structures", "dsu"]}, {"contestId": 212, "index": "C", "name": "Cowboys", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 212, "index": "B", "name": "Polycarpus is Looking for Good Substrings", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["bitmasks", "hashing", "implementation"]}, {"contestId": 212, "index": "A", "name": "Privatization", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["flows", "graphs"]}, {"contestId": 209, "index": "C", "name": "Trails and Glades", "type": "PROGRAMMING", "points": 1000.0, "rating": 2400, "tags": ["constructive algorithms", "dsu", "graphs", "greedy"]}, {"contestId": 209, "index": "B", "name": "Pixels", "type": "PROGRAMMING", "points": 500.0, "rating": 2100, "tags": ["constructive algorithms", "math"]}, {"contestId": 209, "index": "A", "name": "Multicolored Marbles", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["dp", "math"]}, {"contestId": 208, "index": "E", "name": "Blood Cousins", "type": "PROGRAMMING", "points": 3000.0, "rating": 2100, "tags": ["binary search", "data structures", "dfs and similar", "trees"]}, {"contestId": 208, "index": "D", "name": "Prizes, Prizes, more Prizes", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["implementation"]}, {"contestId": 208, "index": "C", "name": "Police Station", "type": "PROGRAMMING", "points": 2500.0, "rating": 1900, "tags": ["dp", "graphs", "shortest paths"]}, {"contestId": 208, "index": "B", "name": "Solitaire", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["dfs and similar", "dp"]}, {"contestId": 208, "index": "A", "name": "Dubstep", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["strings"]}, {"contestId": 207, "index": "D9", "name": "The Beaver's Problem - 3", "type": "PROGRAMMING", "points": 10.0, "rating": 1800, "tags": []}, {"contestId": 207, "index": "D8", "name": "The Beaver's Problem - 3", "type": "PROGRAMMING", "points": 10.0, "rating": 2300, "tags": []}, {"contestId": 207, "index": "D7", "name": "The Beaver's Problem - 3", "type": "PROGRAMMING", "points": 10.0, "rating": 1600, "tags": []}, {"contestId": 207, "index": "D6", "name": "The Beaver's Problem - 3", "type": "PROGRAMMING", "points": 10.0, "rating": 2100, "tags": []}, {"contestId": 207, "index": "D5", "name": "The Beaver's Problem - 3", "type": "PROGRAMMING", "points": 10.0, "rating": 1600, "tags": []}, {"contestId": 207, "index": "D4", "name": "The Beaver's Problem - 3", "type": "PROGRAMMING", "points": 10.0, "rating": 2100, "tags": []}, {"contestId": 207, "index": "D3", "name": "The Beaver's Problem - 3", "type": "PROGRAMMING", "points": 10.0, "rating": 2000, "tags": []}, {"contestId": 207, "index": "D2", "name": "The Beaver's Problem - 3", "type": "PROGRAMMING", "points": 10.0, "rating": 2000, "tags": []}, {"contestId": 207, "index": "D10", "name": "The Beaver's Problem - 3", "type": "PROGRAMMING", "points": 10.0, "rating": 2100, "tags": []}, {"contestId": 207, "index": "D1", "name": "The Beaver's Problem - 3", "type": "PROGRAMMING", "points": 10.0, "rating": 1800, "tags": []}, {"contestId": 207, "index": "C3", "name": "Game with Two Trees", "type": "PROGRAMMING", "points": 50.0, "rating": 2700, "tags": ["data structures"]}, {"contestId": 207, "index": "C2", "name": "Game with Two Trees", "type": "PROGRAMMING", "points": 30.0, "rating": 2200, "tags": []}, {"contestId": 207, "index": "C1", "name": "Game with Two Trees", "type": "PROGRAMMING", "points": 20.0, "rating": 2100, "tags": []}, {"contestId": 207, "index": "B3", "name": "Military Trainings", "type": "PROGRAMMING", "points": 50.0, "rating": 1700, "tags": []}, {"contestId": 207, "index": "B2", "name": "Military Trainings", "type": "PROGRAMMING", "points": 30.0, "rating": 1900, "tags": []}, {"contestId": 207, "index": "B1", "name": "Military Trainings", "type": "PROGRAMMING", "points": 20.0, "rating": 1600, "tags": []}, {"contestId": 207, "index": "A3", "name": "Beaver's Calculator 1.0", "type": "PROGRAMMING", "points": 50.0, "rating": 2000, "tags": ["greedy"]}, {"contestId": 207, "index": "A2", "name": "Beaver's Calculator 1.0", "type": "PROGRAMMING", "points": 30.0, "rating": 1800, "tags": ["greedy"]}, {"contestId": 207, "index": "A1", "name": "Beaver's Calculator 1.0", "type": "PROGRAMMING", "points": 20.0, "rating": 1600, "tags": ["greedy"]}, {"contestId": 205, "index": "B", "name": "Little Elephant and Sorting", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["brute force", "greedy"]}, {"contestId": 205, "index": "A", "name": "Little Elephant and Rozdil", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["brute force", "implementation"]}, {"contestId": 204, "index": "E", "name": "Little Elephant and Strings", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["data structures", "implementation", "string suffix structures", "two pointers"]}, {"contestId": 204, "index": "D", "name": "Little Elephant and Retro Strings", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["dp"]}, {"contestId": 204, "index": "C", "name": "Little Elephant and Furik and Rubik", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["math", "probabilities"]}, {"contestId": 204, "index": "B", "name": "Little Elephant and Cards", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["binary search", "data structures"]}, {"contestId": 204, "index": "A", "name": "Little Elephant and Interval", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["binary search", "combinatorics", "dp"]}, {"contestId": 203, "index": "E", "name": "Transportation", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["greedy", "sortings", "two pointers"]}, {"contestId": 203, "index": "D", "name": "Hit Ball", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["geometry", "implementation", "math"]}, {"contestId": 203, "index": "C", "name": "Photographer", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["greedy", "sortings"]}, {"contestId": 203, "index": "B", "name": "Game on Paper", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["brute force", "implementation"]}, {"contestId": 203, "index": "A", "name": "Two Problems", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["brute force", "implementation"]}, {"contestId": 202, "index": "B", "name": "Brand New Easy Problem", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["brute force"]}, {"contestId": 202, "index": "A", "name": "LLPS", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["binary search", "bitmasks", "brute force", "greedy", "implementation", "strings"]}, {"contestId": 201, "index": "E", "name": "Thoroughly Bureaucratic Organization", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["binary search", "combinatorics"]}, {"contestId": 201, "index": "D", "name": "Brand New Problem", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["bitmasks", "brute force", "dp"]}, {"contestId": 201, "index": "C", "name": "Fragile Bridges", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["dp"]}, {"contestId": 201, "index": "B", "name": "Guess That Car!", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["math", "ternary search"]}, {"contestId": 201, "index": "A", "name": "Clear Symmetry", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["constructive algorithms", "dp", "math"]}, {"contestId": 200, "index": "E", "name": "Tractor College", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["implementation", "math", "number theory", "ternary search"]}, {"contestId": 200, "index": "D", "name": "Programming Language", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["binary search", "brute force", "expression parsing", "implementation"]}, {"contestId": 200, "index": "C", "name": "Football Championship", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["brute force", "implementation"]}, {"contestId": 200, "index": "B", "name": "Drinks", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "math"]}, {"contestId": 200, "index": "A", "name": "Cinema", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["brute force", "data structures"]}, {"contestId": 199, "index": "B", "name": "Special Olympics", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["geometry"]}, {"contestId": 199, "index": "A", "name": "Hexadecimal's theorem", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["brute force", "constructive algorithms", "implementation", "number theory"]}, {"contestId": 198, "index": "E", "name": "Gripping Story", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["binary search", "data structures", "sortings"]}, {"contestId": 198, "index": "D", "name": "Cube Snake", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["constructive algorithms"]}, {"contestId": 198, "index": "C", "name": "Delivering Carcinogen", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["binary search", "geometry"]}, {"contestId": 198, "index": "B", "name": "Jumping on Walls", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["shortest paths"]}, {"contestId": 198, "index": "A", "name": "About Bacteria", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["implementation", "math"]}, {"contestId": 197, "index": "B", "name": "Limit", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["math"]}, {"contestId": 197, "index": "A", "name": "Plate Game", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["constructive algorithms", "games", "math"]}, {"contestId": 196, "index": "E", "name": "Opening Portals", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["dsu", "graphs", "shortest paths"]}, {"contestId": 196, "index": "D", "name": "The Next Good String", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["data structures", "greedy", "hashing", "strings"]}, {"contestId": 196, "index": "C", "name": "Paint Tree", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["constructive algorithms", "divide and conquer", "geometry", "sortings", "trees"]}, {"contestId": 196, "index": "B", "name": "Infinite Maze", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["dfs and similar", "graphs"]}, {"contestId": 196, "index": "A", "name": "Lexicographically Maximum Subsequence", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["greedy", "strings"]}, {"contestId": 195, "index": "E", "name": "Building Forest", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["data structures", "dsu", "graphs"]}, {"contestId": 195, "index": "D", "name": "Analyzing Polyline", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["geometry", "math", "sortings"]}, {"contestId": 195, "index": "C", "name": "Try and Catch", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["expression parsing", "implementation"]}, {"contestId": 195, "index": "B", "name": "After Training", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["data structures", "implementation", "math"]}, {"contestId": 195, "index": "A", "name": "Let's Watch Football", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["binary search", "brute force", "math"]}, {"contestId": 194, "index": "B", "name": "Square", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["math"]}, {"contestId": 194, "index": "A", "name": "Exams", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation", "math"]}, {"contestId": 193, "index": "E", "name": "Fibonacci Number", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["brute force", "math", "matrices"]}, {"contestId": 193, "index": "D", "name": "Two Segments", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["data structures"]}, {"contestId": 193, "index": "C", "name": "Hamming Distance", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["constructive algorithms", "greedy", "math", "matrices"]}, {"contestId": 193, "index": "B", "name": "Xor", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["brute force"]}, {"contestId": 193, "index": "A", "name": "Cutting Figure", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["constructive algorithms", "graphs", "trees"]}, {"contestId": 192, "index": "B", "name": "Walking in the Rain", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["brute force", "implementation"]}, {"contestId": 192, "index": "A", "name": "Funky Numbers", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["binary search", "brute force", "implementation"]}, {"contestId": 191, "index": "E", "name": "Thwarting Demonstrations", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["binary search", "data structures", "trees"]}, {"contestId": 191, "index": "D", "name": "Metro Scheme", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["graphs", "greedy"]}, {"contestId": 191, "index": "C", "name": "Fools and Roads", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["data structures", "dfs and similar", "trees"]}, {"contestId": 191, "index": "B", "name": "Demonstration", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["greedy"]}, {"contestId": 191, "index": "A", "name": "Dynasty Puzzles", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["dp"]}, {"contestId": 190, "index": "E", "name": "Counter Attack", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["data structures", "dsu", "graphs", "hashing", "sortings"]}, {"contestId": 190, "index": "D", "name": "Non-Secret Cypher", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["two pointers"]}, {"contestId": 190, "index": "C", "name": "STL", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["dfs and similar"]}, {"contestId": 190, "index": "B", "name": "Surrounded", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["geometry"]}, {"contestId": 190, "index": "A", "name": "Vasya and the Bus", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["greedy", "math"]}, {"contestId": 189, "index": "B", "name": "Counting Rhombi", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["brute force", "math"]}, {"contestId": 189, "index": "A", "name": "Cut Ribbon", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["brute force", "dp"]}, {"contestId": 188, "index": "H", "name": "Stack", "type": "PROGRAMMING", "rating": 1800, "tags": ["*special", "expression parsing", "implementation"]}, {"contestId": 188, "index": "G", "name": "Array Sorting", "type": "PROGRAMMING", "rating": 1600, "tags": ["*special", "implementation"]}, {"contestId": 188, "index": "F", "name": "Binary Notation", "type": "PROGRAMMING", "rating": 1400, "tags": ["*special", "implementation"]}, {"contestId": 188, "index": "E", "name": "HQ9+", "type": "PROGRAMMING", "rating": 1400, "tags": ["*special", "implementation"]}, {"contestId": 188, "index": "D", "name": "Asterisks", "type": "PROGRAMMING", "rating": 1100, "tags": ["*special", "implementation"]}, {"contestId": 188, "index": "C", "name": "LCM", "type": "PROGRAMMING", "rating": 1400, "tags": ["*special", "implementation", "math"]}, {"contestId": 188, "index": "B", "name": "A + Reverse B", "type": "PROGRAMMING", "rating": 1300, "tags": ["*special", "implementation"]}, {"contestId": 188, "index": "A", "name": "Hexagonal Numbers", "type": "PROGRAMMING", "rating": 1100, "tags": ["*special"]}, {"contestId": 187, "index": "E", "name": "Heaven Tour", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["data structures", "greedy"]}, {"contestId": 187, "index": "D", "name": "BRT Contract ", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["data structures"]}, {"contestId": 187, "index": "C", "name": "Weak Memory", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["dfs and similar", "dsu"]}, {"contestId": 187, "index": "B", "name": "AlgoRace", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["dp", "shortest paths"]}, {"contestId": 187, "index": "A", "name": "Permutations", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["greedy"]}, {"contestId": 186, "index": "B", "name": "Growing Mushrooms", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["greedy", "sortings"]}, {"contestId": 186, "index": "A", "name": "Comparing Strings", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["implementation", "strings"]}, {"contestId": 185, "index": "E", "name": "Soap Time! - 2", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["binary search", "data structures"]}, {"contestId": 185, "index": "D", "name": "Visit of the Great", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["math", "number theory"]}, {"contestId": 185, "index": "C", "name": "Clever Fat Rat", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["dp"]}, {"contestId": 185, "index": "B", "name": "Mushroom Scientists", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["math", "ternary search"]}, {"contestId": 185, "index": "A", "name": "Plant", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["math"]}, {"contestId": 183, "index": "E", "name": "Candy Shop", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["greedy"]}, {"contestId": 183, "index": "D", "name": "T-shirt", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["dp", "greedy", "probabilities"]}, {"contestId": 183, "index": "C", "name": "Cyclic Coloring", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["dfs and similar"]}, {"contestId": 183, "index": "B", "name": "Zoo", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["brute force", "geometry"]}, {"contestId": 183, "index": "A", "name": "Headquarters", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["constructive algorithms", "math"]}, {"contestId": 182, "index": "E", "name": "Wooden Fence", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["dp"]}, {"contestId": 182, "index": "D", "name": "Common Divisors", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["brute force", "hashing", "implementation", "math", "strings"]}, {"contestId": 182, "index": "C", "name": "Optimal Sum", "type": "PROGRAMMING", "points": 3000.0, "rating": 2000, "tags": ["data structures", "greedy"]}, {"contestId": 182, "index": "B", "name": "Vasya's Calendar", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"]}, {"contestId": 182, "index": "A", "name": "Battlefield", "type": "PROGRAMMING", "points": 3000.0, "rating": 2200, "tags": ["geometry", "graphs", "implementation", "shortest paths"]}, {"contestId": 181, "index": "B", "name": "Number of Triplets", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["binary search", "brute force"]}, {"contestId": 181, "index": "A", "name": "Series of Crimes", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "geometry", "implementation"]}, {"contestId": 180, "index": "F", "name": "Mathematical Analysis Rocks!", "type": "PROGRAMMING", "rating": 1200, "tags": ["constructive algorithms", "implementation", "math"]}, {"contestId": 180, "index": "E", "name": "Cubes", "type": "PROGRAMMING", "rating": 1800, "tags": ["binary search", "dp", "two pointers"]}, {"contestId": 180, "index": "D", "name": "Name", "type": "PROGRAMMING", "rating": 1900, "tags": ["greedy", "strings"]}, {"contestId": 180, "index": "C", "name": "Letter", "type": "PROGRAMMING", "rating": 1400, "tags": ["dp"]}, {"contestId": 180, "index": "B", "name": "Divisibility Rules", "type": "PROGRAMMING", "rating": 2300, "tags": ["math", "number theory"]}, {"contestId": 180, "index": "A", "name": "Defragmentation", "type": "PROGRAMMING", "rating": 1800, "tags": ["implementation"]}, {"contestId": 178, "index": "F3", "name": "Representative Sampling", "type": "PROGRAMMING", "points": 50.0, "rating": 2500, "tags": []}, {"contestId": 178, "index": "F2", "name": "Representative Sampling", "type": "PROGRAMMING", "points": 30.0, "rating": 2200, "tags": ["dp", "sortings", "strings"]}, {"contestId": 178, "index": "F1", "name": "Representative Sampling", "type": "PROGRAMMING", "points": 20.0, "rating": 1800, "tags": []}, {"contestId": 178, "index": "E3", "name": "The Beaver's Problem - 2", "type": "PROGRAMMING", "points": 50.0, "rating": 2300, "tags": []}, {"contestId": 178, "index": "E2", "name": "The Beaver's Problem - 2", "type": "PROGRAMMING", "points": 30.0, "rating": 2000, "tags": []}, {"contestId": 178, "index": "E1", "name": "The Beaver's Problem - 2", "type": "PROGRAMMING", "points": 20.0, "rating": 1900, "tags": []}, {"contestId": 178, "index": "D3", "name": "Magic Squares", "type": "PROGRAMMING", "points": 50.0, "rating": 2100, "tags": []}, {"contestId": 178, "index": "D2", "name": "Magic Squares", "type": "PROGRAMMING", "points": 30.0, "rating": 1900, "tags": []}, {"contestId": 178, "index": "D1", "name": "Magic Squares", "type": "PROGRAMMING", "points": 20.0, "rating": 1500, "tags": []}, {"contestId": 178, "index": "C3", "name": "Smart Beaver and Resolving Collisions", "type": "PROGRAMMING", "points": 50.0, "rating": 2000, "tags": []}, {"contestId": 178, "index": "C2", "name": "Smart Beaver and Resolving Collisions", "type": "PROGRAMMING", "points": 30.0, "rating": 1900, "tags": []}, {"contestId": 178, "index": "C1", "name": "Smart Beaver and Resolving Collisions", "type": "PROGRAMMING", "points": 20.0, "rating": 1600, "tags": []}, {"contestId": 178, "index": "B3", "name": "Greedy Merchants", "type": "PROGRAMMING", "points": 50.0, "rating": 1800, "tags": []}, {"contestId": 178, "index": "B2", "name": "Greedy Merchants", "type": "PROGRAMMING", "points": 30.0, "rating": 1600, "tags": []}, {"contestId": 178, "index": "B1", "name": "Greedy Merchants", "type": "PROGRAMMING", "points": 20.0, "rating": 1600, "tags": []}, {"contestId": 178, "index": "A3", "name": "Educational Game", "type": "PROGRAMMING", "points": 50.0, "rating": 1100, "tags": ["greedy"]}, {"contestId": 178, "index": "A2", "name": "Educational Game", "type": "PROGRAMMING", "points": 30.0, "rating": 1000, "tags": ["greedy"]}, {"contestId": 178, "index": "A1", "name": "Educational Game", "type": "PROGRAMMING", "points": 20.0, "rating": 1000, "tags": []}, {"contestId": 177, "index": "G2", "name": "Fibonacci Strings", "type": "PROGRAMMING", "points": 70.0, "rating": 2600, "tags": ["matrices", "strings"]}, {"contestId": 177, "index": "G1", "name": "Fibonacci Strings", "type": "PROGRAMMING", "points": 30.0, "rating": 2400, "tags": ["strings"]}, {"contestId": 177, "index": "F2", "name": "Script Generation", "type": "PROGRAMMING", "points": 70.0, "rating": 2300, "tags": []}, {"contestId": 177, "index": "F1", "name": "Script Generation", "type": "PROGRAMMING", "points": 30.0, "rating": 1800, "tags": []}, {"contestId": 177, "index": "E2", "name": "Space Voyage", "type": "PROGRAMMING", "points": 70.0, "rating": 1900, "tags": ["binary search"]}, {"contestId": 177, "index": "E1", "name": "Space Voyage", "type": "PROGRAMMING", "points": 30.0, "rating": 1700, "tags": ["binary search"]}, {"contestId": 177, "index": "D2", "name": "Encrypting Messages", "type": "PROGRAMMING", "points": 70.0, "rating": 1500, "tags": ["data structures"]}, {"contestId": 177, "index": "D1", "name": "Encrypting Messages", "type": "PROGRAMMING", "points": 30.0, "rating": 1200, "tags": ["brute force"]}, {"contestId": 177, "index": "C2", "name": "Party", "type": "PROGRAMMING", "points": 70.0, "rating": 1500, "tags": ["brute force", "dfs and similar", "dsu", "graphs"]}, {"contestId": 177, "index": "C1", "name": "Party", "type": "PROGRAMMING", "points": 30.0, "rating": 1500, "tags": ["dfs and similar", "dsu", "graphs"]}, {"contestId": 177, "index": "B2", "name": "Rectangular Game", "type": "PROGRAMMING", "points": 70.0, "rating": 1200, "tags": ["number theory"]}, {"contestId": 177, "index": "B1", "name": "Rectangular Game", "type": "PROGRAMMING", "points": 30.0, "rating": 1000, "tags": ["number theory"]}, {"contestId": 177, "index": "A2", "name": "Good Matrix Elements", "type": "PROGRAMMING", "points": 70.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 177, "index": "A1", "name": "Good Matrix Elements", "type": "PROGRAMMING", "points": 30.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 176, "index": "E", "name": "Archaeology", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["data structures", "dfs and similar", "trees"]}, {"contestId": 176, "index": "D", "name": "Hyper String", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["dp"]}, {"contestId": 176, "index": "C", "name": "Playing with Superglue", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["combinatorics", "constructive algorithms"]}, {"contestId": 176, "index": "B", "name": "Word Cut", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["dp"]}, {"contestId": 176, "index": "A", "name": "Trading Business", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["greedy", "sortings"]}, {"contestId": 175, "index": "F", "name": "Gnomes of Might and Magic", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["data structures", "graphs", "implementation", "shortest paths"]}, {"contestId": 175, "index": "E", "name": "Power Defence", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["brute force", "dp", "geometry", "greedy"]}, {"contestId": 175, "index": "D", "name": "Plane of Tanks: Duel", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["brute force", "dp", "math", "probabilities"]}, {"contestId": 175, "index": "C", "name": "Geometry Horse", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["greedy", "implementation", "sortings", "two pointers"]}, {"contestId": 175, "index": "B", "name": "Plane of Tanks: Pro", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["implementation"]}, {"contestId": 175, "index": "A", "name": "Robot Bicorn Attack", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["brute force", "implementation"]}, {"contestId": 174, "index": "C", "name": "Range Increments", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["data structures", "greedy"]}, {"contestId": 174, "index": "B", "name": "File List", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["dp", "greedy", "implementation"]}, {"contestId": 174, "index": "A", "name": "Problem About Equation", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["math"]}, {"contestId": 173, "index": "E", "name": "Camping Groups", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["data structures", "sortings"]}, {"contestId": 173, "index": "D", "name": "Deputies", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["constructive algorithms", "graphs", "greedy", "implementation"]}, {"contestId": 173, "index": "C", "name": "Spiral Maximum", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["brute force", "dp"]}, {"contestId": 173, "index": "B", "name": "Chamber of Secrets", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["dfs and similar", "shortest paths"]}, {"contestId": 173, "index": "A", "name": "Rock-Paper-Scissors", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["implementation", "math"]}, {"contestId": 172, "index": "E", "name": "BHTML+BCSS", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["*special", "dfs and similar", "expression parsing"]}, {"contestId": 172, "index": "D", "name": "Calendar Reform", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["*special", "number theory"]}, {"contestId": 172, "index": "C", "name": "Bus", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["*special", "implementation", "sortings"]}, {"contestId": 172, "index": "B", "name": "Pseudorandom Sequence Period", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["*special", "implementation", "number theory"]}, {"contestId": 172, "index": "A", "name": "Phone Code", "type": "PROGRAMMING", "points": 1000.0, "rating": 800, "tags": ["*special", "brute force", "implementation"]}, {"contestId": 171, "index": "H", "name": "A polyline", "type": "PROGRAMMING", "rating": 1700, "tags": ["*special", "implementation"]}, {"contestId": 171, "index": "G", "name": "Mysterious numbers - 2", "type": "PROGRAMMING", "rating": 1600, "tags": ["*special"]}, {"contestId": 171, "index": "F", "name": "ucyhf", "type": "PROGRAMMING", "rating": 1600, "tags": ["*special", "brute force", "implementation", "number theory"]}, {"contestId": 171, "index": "E", "name": "MYSTERIOUS LANGUAGE", "type": "PROGRAMMING", "rating": 2000, "tags": ["*special"]}, {"contestId": 171, "index": "D", "name": "Broken checker", "type": "PROGRAMMING", "rating": 1300, "tags": ["*special", "brute force"]}, {"contestId": 171, "index": "C", "name": "A Piece of Cake", "type": "PROGRAMMING", "rating": 2000, "tags": ["*special", "implementation"]}, {"contestId": 171, "index": "B", "name": "Star", "type": "PROGRAMMING", "rating": 1300, "tags": ["*special", "combinatorics"]}, {"contestId": 171, "index": "A", "name": "Mysterious numbers - 1", "type": "PROGRAMMING", "rating": 1200, "tags": ["*special", "constructive algorithms"]}, {"contestId": 169, "index": "B", "name": "Replacing Digits", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["greedy"]}, {"contestId": 169, "index": "A", "name": "Chores", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["sortings"]}, {"contestId": 168, "index": "B", "name": "Wizards and Minimal Spell", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["implementation", "strings"]}, {"contestId": 168, "index": "A", "name": "Wizards and Demonstration", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation", "math"]}, {"contestId": 167, "index": "E", "name": "Wizards and Bets", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["dfs and similar", "graphs", "math", "matrices"]}, {"contestId": 167, "index": "D", "name": "Wizards and Roads", "type": "PROGRAMMING", "points": 2000.0, "rating": 3000, "tags": ["data structures", "divide and conquer", "graph matchings", "graphs", "greedy"]}, {"contestId": 167, "index": "C", "name": "Wizards and Numbers", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["games", "math"]}, {"contestId": 167, "index": "B", "name": "Wizards and Huge Prize", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["dp", "math", "probabilities"]}, {"contestId": 167, "index": "A", "name": "Wizards and Trolleybuses", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["implementation"]}, {"contestId": 166, "index": "E", "name": "Tetrahedron", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["dp", "math", "matrices"]}, {"contestId": 166, "index": "D", "name": "Shoe Store", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["dp", "graph matchings", "greedy", "sortings", "two pointers"]}, {"contestId": 166, "index": "C", "name": "Median", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["greedy", "math", "sortings"]}, {"contestId": 166, "index": "B", "name": "Polygons", "type": "PROGRAMMING", "points": 3000.0, "rating": 2100, "tags": ["geometry", "sortings"]}, {"contestId": 166, "index": "A", "name": "Rank List", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["binary search", "implementation", "sortings"]}, {"contestId": 165, "index": "E", "name": "Compatible Numbers", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["bitmasks", "brute force", "dfs and similar", "dp"]}, {"contestId": 165, "index": "D", "name": "Beard Graph", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["data structures", "dsu", "trees"]}, {"contestId": 165, "index": "C", "name": "Another Problem on Strings", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["binary search", "brute force", "dp", "math", "strings", "two pointers"]}, {"contestId": 165, "index": "B", "name": "Burning Midnight Oil", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["binary search", "implementation"]}, {"contestId": 165, "index": "A", "name": "Supercentral Point", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"]}, {"contestId": 164, "index": "E", "name": "Polycarpus and Tasks", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": []}, {"contestId": 164, "index": "D", "name": "Minimum Diameter", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["binary search", "brute force"]}, {"contestId": 164, "index": "C", "name": "Machine Programming", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["flows", "graphs"]}, {"contestId": 164, "index": "B", "name": "Ancient Berland Hieroglyphs", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["two pointers"]}, {"contestId": 164, "index": "A", "name": "Variable, or There and Back Again", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["dfs and similar", "graphs"]}, {"contestId": 163, "index": "E", "name": "e-Government", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["data structures", "dfs and similar", "dp", "strings", "trees"]}, {"contestId": 163, "index": "D", "name": "Large Refrigerator", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["brute force"]}, {"contestId": 163, "index": "C", "name": "Conveyor", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["sortings", "two pointers"]}, {"contestId": 163, "index": "B", "name": "Lemmings", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["binary search"]}, {"contestId": 163, "index": "A", "name": "Substring and Subsequence", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["dp"]}, {"contestId": 162, "index": "J", "name": "Brackets", "type": "PROGRAMMING", "rating": 1800, "tags": ["*special"]}, {"contestId": 162, "index": "I", "name": "Truncatable primes", "type": "PROGRAMMING", "rating": 2000, "tags": ["*special"]}, {"contestId": 162, "index": "H", "name": "Alternating case", "type": "PROGRAMMING", "rating": 1800, "tags": ["*special"]}, {"contestId": 162, "index": "G", "name": "Non-decimal sum", "type": "PROGRAMMING", "rating": 2000, "tags": ["*special"]}, {"contestId": 162, "index": "F", "name": "Factorial zeros", "type": "PROGRAMMING", "rating": 1800, "tags": ["*special"]}, {"contestId": 162, "index": "E", "name": "HQ9+", "type": "PROGRAMMING", "rating": 1800, "tags": ["*special"]}, {"contestId": 162, "index": "D", "name": "Remove digits", "type": "PROGRAMMING", "rating": 1900, "tags": ["*special"]}, {"contestId": 162, "index": "C", "name": "Prime factorization", "type": "PROGRAMMING", "rating": 1800, "tags": ["*special"]}, {"contestId": 162, "index": "B", "name": "Binary notation", "type": "PROGRAMMING", "rating": 1800, "tags": ["*special"]}, {"contestId": 162, "index": "A", "name": "Pentagonal numbers", "type": "PROGRAMMING", "rating": 1100, "tags": ["*special", "implementation"]}, {"contestId": 161, "index": "E", "name": "Polycarpus the Safecracker", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["brute force", "dp"]}, {"contestId": 161, "index": "D", "name": "Distance in Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["dfs and similar", "dp", "trees"]}, {"contestId": 161, "index": "C", "name": "Abracadabra", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["divide and conquer"]}, {"contestId": 161, "index": "B", "name": "Discounts", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["constructive algorithms", "greedy", "sortings"]}, {"contestId": 161, "index": "A", "name": "Dress'em in Vests!", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["binary search", "brute force", "greedy", "two pointers"]}, {"contestId": 160, "index": "E", "name": "Buses and People", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["binary search", "data structures", "sortings"]}, {"contestId": 160, "index": "D", "name": "Edges in MST", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["dfs and similar", "dsu", "graphs", "sortings"]}, {"contestId": 160, "index": "C", "name": "Find Pair", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["implementation", "math", "sortings"]}, {"contestId": 160, "index": "B", "name": "Unlucky Ticket", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["greedy", "sortings"]}, {"contestId": 160, "index": "A", "name": "Twins", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["greedy", "sortings"]}, {"contestId": 159, "index": "E", "name": "Zebra Tower", "type": "PROGRAMMING", "points": 2500.0, "rating": 1700, "tags": ["*special", "data structures", "greedy", "sortings"]}, {"contestId": 159, "index": "D", "name": "Palindrome pairs", "type": "PROGRAMMING", "points": 2000.0, "rating": 1500, "tags": ["*special", "brute force", "dp", "strings"]}, {"contestId": 159, "index": "C", "name": "String Manipulation 1.0", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["*special", "binary search", "brute force", "data structures", "strings"]}, {"contestId": 159, "index": "B", "name": "Matchmaker", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["*special", "greedy", "sortings"]}, {"contestId": 159, "index": "A", "name": "Friends or Not", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["*special", "greedy", "implementation"]}, {"contestId": 158, "index": "E", "name": "Phone Talks", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["*special", "dp", "sortings"]}, {"contestId": 158, "index": "D", "name": "Ice Sculptures", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["*special", "brute force", "number theory"]}, {"contestId": 158, "index": "C", "name": "Cd and pwd commands", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["*special", "data structures", "implementation"]}, {"contestId": 158, "index": "B", "name": "Taxi", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["*special", "greedy", "implementation"]}, {"contestId": 158, "index": "A", "name": "Next Round", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["*special", "implementation"]}, {"contestId": 157, "index": "B", "name": "Trace", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["geometry", "sortings"]}, {"contestId": 157, "index": "A", "name": "Game Outcome", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force"]}, {"contestId": 156, "index": "E", "name": "Mrs. Hudson's Pancakes", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["brute force", "dp"]}, {"contestId": 156, "index": "D", "name": "Clues", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["combinatorics", "graphs"]}, {"contestId": 156, "index": "C", "name": "Cipher", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["combinatorics", "dp"]}, {"contestId": 156, "index": "B", "name": "Suspects", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["constructive algorithms", "data structures", "implementation"]}, {"contestId": 156, "index": "A", "name": "Message", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["brute force"]}, {"contestId": 155, "index": "B", "name": "Combination", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["greedy", "sortings"]}, {"contestId": 155, "index": "A", "name": "I_love_\\%username\\%", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force"]}, {"contestId": 154, "index": "E", "name": "Martian Colony", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["geometry"]}, {"contestId": 154, "index": "D", "name": "Flatland Fencing", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["games", "math"]}, {"contestId": 154, "index": "C", "name": "Double Profiles", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["graphs", "hashing", "sortings"]}, {"contestId": 154, "index": "B", "name": "Colliders", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["math", "number theory"]}, {"contestId": 154, "index": "A", "name": "Hometask", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["greedy"]}, {"contestId": 153, "index": "E", "name": "Euclidean Distance", "type": "PROGRAMMING", "rating": 2100, "tags": ["*special"]}, {"contestId": 153, "index": "D", "name": "Date Change", "type": "PROGRAMMING", "rating": 2000, "tags": ["*special"]}, {"contestId": 153, "index": "C", "name": "Caesar Cipher", "type": "PROGRAMMING", "rating": 2200, "tags": ["*special"]}, {"contestId": 153, "index": "B", "name": "Binary notation", "type": "PROGRAMMING", "rating": 1800, "tags": ["*special"]}, {"contestId": 153, "index": "A", "name": "A + B", "type": "PROGRAMMING", "rating": 1600, "tags": ["*special"]}, {"contestId": 152, "index": "E", "name": "Garden", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["bitmasks", "dp", "graphs", "trees"]}, {"contestId": 152, "index": "D", "name": "Frames", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["brute force"]}, {"contestId": 152, "index": "C", "name": "Pocket Book", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["combinatorics"]}, {"contestId": 152, "index": "B", "name": "Steps", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["binary search", "implementation"]}, {"contestId": 152, "index": "A", "name": "Marks", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation"]}, {"contestId": 151, "index": "B", "name": "Phone Numbers", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["implementation", "strings"]}, {"contestId": 151, "index": "A", "name": "Soft Drinking", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "math"]}, {"contestId": 150, "index": "E", "name": "Freezing with Style", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["binary search", "data structures", "divide and conquer", "trees"]}, {"contestId": 150, "index": "D", "name": "Mission Impassable", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["dp", "strings"]}, {"contestId": 150, "index": "C", "name": "Smart Cheater", "type": "PROGRAMMING", "points": 1000.0, "rating": 2200, "tags": ["data structures", "math", "probabilities"]}, {"contestId": 150, "index": "B", "name": "Quantity of Strings", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["combinatorics", "dfs and similar", "graphs", "math"]}, {"contestId": 150, "index": "A", "name": "Win or Freeze", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["games", "math", "number theory"]}, {"contestId": 149, "index": "E", "name": "Martian Strings", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["string suffix structures", "strings"]}, {"contestId": 149, "index": "D", "name": "Coloring Brackets", "type": "PROGRAMMING", "points": 2500.0, "rating": 1900, "tags": ["dp"]}, {"contestId": 149, "index": "C", "name": "Division into Teams", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["greedy", "math", "sortings"]}, {"contestId": 149, "index": "B", "name": "Martian Clock", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["implementation"]}, {"contestId": 149, "index": "A", "name": "Business trip", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["greedy", "implementation", "sortings"]}, {"contestId": 148, "index": "E", "name": "Porcelain", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["dp"]}, {"contestId": 148, "index": "D", "name": "Bag of mice", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["dp", "games", "math", "probabilities"]}, {"contestId": 148, "index": "C", "name": "Terse princess", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["constructive algorithms", "greedy"]}, {"contestId": 148, "index": "B", "name": "Escape", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["implementation", "math"]}, {"contestId": 148, "index": "A", "name": "Insomnia cure", "type": "PROGRAMMING", "points": 1000.0, "rating": 800, "tags": ["constructive algorithms", "implementation", "math"]}, {"contestId": 147, "index": "B", "name": "Smile House", "type": "PROGRAMMING", "points": 1000.0, "rating": 2500, "tags": ["binary search", "graphs", "matrices"]}, {"contestId": 147, "index": "A", "name": "Punctuation", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["implementation", "strings"]}, {"contestId": 146, "index": "B", "name": "Lucky Mask", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["brute force", "implementation"]}, {"contestId": 146, "index": "A", "name": "Lucky Ticket", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 145, "index": "E", "name": "Lucky Queries", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures"]}, {"contestId": 145, "index": "D", "name": "Lucky Pair", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["combinatorics", "data structures", "implementation"]}, {"contestId": 145, "index": "C", "name": "Lucky Subsequence", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 145, "index": "B", "name": "Lucky Number 2", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["constructive algorithms"]}, {"contestId": 145, "index": "A", "name": "Lucky Conversion", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["greedy", "implementation"]}, {"contestId": 144, "index": "E", "name": "Competition", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["data structures", "greedy"]}, {"contestId": 144, "index": "D", "name": "Missile Silos", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["data structures", "dfs and similar", "graphs", "shortest paths"]}, {"contestId": 144, "index": "C", "name": "Anagram Search", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["implementation", "strings"]}, {"contestId": 144, "index": "B", "name": "Meeting", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["implementation"]}, {"contestId": 144, "index": "A", "name": "Arrival of the General", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 143, "index": "B", "name": "Help Kingdom of Far Far Away 2", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["implementation", "strings"]}, {"contestId": 143, "index": "A", "name": "Help Vasilisa the Wise 2", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["brute force", "math"]}, {"contestId": 142, "index": "E", "name": "Help Greg the Dwarf 2", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["geometry"]}, {"contestId": 142, "index": "D", "name": "Help Shrek and Donkey 2", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["games"]}, {"contestId": 142, "index": "C", "name": "Help Caretaker", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["brute force", "dp"]}, {"contestId": 142, "index": "B", "name": "Help General", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["constructive algorithms", "greedy", "implementation"]}, {"contestId": 142, "index": "A", "name": "Help Farmer", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["brute force", "math"]}, {"contestId": 141, "index": "E", "name": "Clearing Up", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["constructive algorithms", "dp", "dsu", "graphs"]}, {"contestId": 141, "index": "D", "name": "Take-off Ramps", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["graphs", "shortest paths"]}, {"contestId": 141, "index": "C", "name": "Queue", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["constructive algorithms", "greedy", "sortings"]}, {"contestId": 141, "index": "B", "name": "Hopscotch", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["geometry", "math"]}, {"contestId": 141, "index": "A", "name": "Amusing Joke", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "sortings", "strings"]}, {"contestId": 140, "index": "F", "name": "New Year Snowflake", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["geometry", "sortings"]}, {"contestId": 140, "index": "E", "name": "New Year Garland", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["combinatorics", "dp"]}, {"contestId": 140, "index": "D", "name": "New Year Contest", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["greedy", "sortings"]}, {"contestId": 140, "index": "C", "name": "New Year Snowmen", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["binary search", "data structures", "greedy"]}, {"contestId": 140, "index": "B", "name": "New Year Cards", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["brute force", "greedy", "implementation"]}, {"contestId": 140, "index": "A", "name": "New Year Table", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["geometry", "math"]}, {"contestId": 139, "index": "B", "name": "Wallpaper", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["implementation", "math"]}, {"contestId": 139, "index": "A", "name": "Petr and Book", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"]}, {"contestId": 138, "index": "E", "name": "Hellish Constraints", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["brute force", "dp", "two pointers"]}, {"contestId": 138, "index": "D", "name": "World of Darkraft", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["dp", "games"]}, {"contestId": 138, "index": "C", "name": "Mushroom Gnomes - 2", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["binary search", "data structures", "probabilities", "sortings"]}, {"contestId": 138, "index": "B", "name": "Digits Permutations", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["greedy"]}, {"contestId": 138, "index": "A", "name": "Literature Lesson", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["implementation"]}, {"contestId": 137, "index": "E", "name": "Last Chance", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["data structures", "implementation", "strings"]}, {"contestId": 137, "index": "D", "name": "Palindromes", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["dp", "strings"]}, {"contestId": 137, "index": "C", "name": "History", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["sortings"]}, {"contestId": 137, "index": "B", "name": "Permutation", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["greedy"]}, {"contestId": 137, "index": "A", "name": "Postcards and photos", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation"]}, {"contestId": 136, "index": "B", "name": "Ternary Logic", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["implementation", "math"]}, {"contestId": 136, "index": "A", "name": "Presents", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 135, "index": "E", "name": "Weak Subsequence", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["combinatorics"]}, {"contestId": 135, "index": "D", "name": "Cycle", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["brute force", "dfs and similar", "implementation"]}, {"contestId": 135, "index": "C", "name": "Zero-One", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["constructive algorithms", "games", "greedy"]}, {"contestId": 135, "index": "B", "name": "Rectangle and Square", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["brute force", "geometry", "math"]}, {"contestId": 135, "index": "A", "name": "Replacement", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["greedy", "implementation", "sortings"]}, {"contestId": 134, "index": "C", "name": "Swaps", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["constructive algorithms", "graphs", "greedy"]}, {"contestId": 134, "index": "B", "name": "Pairs of Numbers", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["brute force", "dfs and similar", "math", "number theory"]}, {"contestId": 134, "index": "A", "name": "Average Numbers", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["brute force", "implementation"]}, {"contestId": 133, "index": "B", "name": "Unary", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["implementation"]}, {"contestId": 133, "index": "A", "name": "HQ9+", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation"]}, {"contestId": 132, "index": "E", "name": "Bits of merry old England", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["flows", "graphs"]}, {"contestId": 132, "index": "D", "name": "Constants in the language of Shakespeare", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["constructive algorithms", "dp", "greedy"]}, {"contestId": 132, "index": "C", "name": "Logo Turtle", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["dp"]}, {"contestId": 132, "index": "B", "name": "Piet", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["implementation"]}, {"contestId": 132, "index": "A", "name": "Turing Tape", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["implementation"]}, {"contestId": 131, "index": "F", "name": "Present to Mom", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["binary search", "two pointers"]}, {"contestId": 131, "index": "E", "name": "Yet Another Task with Queens", "type": "PROGRAMMING", "points": 2500.0, "rating": 1700, "tags": ["sortings"]}, {"contestId": 131, "index": "D", "name": "Subway", "type": "PROGRAMMING", "points": 2000.0, "rating": 1600, "tags": ["dfs and similar", "graphs"]}, {"contestId": 131, "index": "C", "name": "The World is a Theatre", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["combinatorics", "math"]}, {"contestId": 131, "index": "B", "name": "Opposites Attract", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["implementation", "math"]}, {"contestId": 131, "index": "A", "name": "cAPS lOCK", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation", "strings"]}, {"contestId": 130, "index": "J", "name": "Date calculation", "type": "PROGRAMMING", "rating": 1800, "tags": ["*special"]}, {"contestId": 130, "index": "I", "name": "Array sorting", "type": "PROGRAMMING", "rating": 2300, "tags": ["*special", "sortings"]}, {"contestId": 130, "index": "H", "name": "Balanced brackets", "type": "PROGRAMMING", "rating": 1600, "tags": ["*special"]}, {"contestId": 130, "index": "G", "name": "CAPS LOCK ON", "type": "PROGRAMMING", "rating": 1700, "tags": ["*special"]}, {"contestId": 130, "index": "F", "name": "Prime factorization", "type": "PROGRAMMING", "rating": 1600, "tags": ["*special"]}, {"contestId": 130, "index": "E", "name": "Tribonacci numbers", "type": "PROGRAMMING", "rating": 1600, "tags": ["*special"]}, {"contestId": 130, "index": "D", "name": "Exponentiation", "type": "PROGRAMMING", "rating": 1500, "tags": ["*special"]}, {"contestId": 130, "index": "C", "name": "Decimal sum", "type": "PROGRAMMING", "rating": 1500, "tags": ["*special"]}, {"contestId": 130, "index": "B", "name": "Gnikool Ssalg", "type": "PROGRAMMING", "rating": 1400, "tags": ["*special", "implementation", "strings"]}, {"contestId": 130, "index": "A", "name": "Hexagonal numbers", "type": "PROGRAMMING", "rating": 900, "tags": ["*special", "implementation"]}, {"contestId": 129, "index": "B", "name": "Students and Shoelaces", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["brute force", "dfs and similar", "graphs", "implementation"]}, {"contestId": 129, "index": "A", "name": "Cookies", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation"]}, {"contestId": 128, "index": "E", "name": "Birthday", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["geometry", "math"]}, {"contestId": 128, "index": "D", "name": "Numbers", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["constructive algorithms", "implementation"]}, {"contestId": 128, "index": "C", "name": "Games with Rectangle", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["combinatorics", "dp"]}, {"contestId": 128, "index": "B", "name": "String", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["brute force", "constructive algorithms", "hashing", "implementation", "string suffix structures", "strings"]}, {"contestId": 128, "index": "A", "name": "Statues", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["dfs and similar"]}, {"contestId": 127, "index": "B", "name": "Canvas Frames", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["implementation"]}, {"contestId": 127, "index": "A", "name": "Wasted Time", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["geometry"]}, {"contestId": 126, "index": "E", "name": "Pills", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["brute force", "flows"]}, {"contestId": 126, "index": "D", "name": "Fibonacci Sums", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["dp", "math"]}, {"contestId": 126, "index": "C", "name": "E-reader Display", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["constructive algorithms", "greedy"]}, {"contestId": 126, "index": "B", "name": "Password", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["binary search", "dp", "hashing", "string suffix structures", "strings"]}, {"contestId": 126, "index": "A", "name": "Hot Bath", "type": "PROGRAMMING", "points": 500.0, "rating": 1900, "tags": ["binary search", "brute force", "math"]}, {"contestId": 125, "index": "E", "name": "MST Company", "type": "PROGRAMMING", "points": 5000.0, "rating": 2400, "tags": ["binary search", "graphs"]}, {"contestId": 125, "index": "D", "name": "Two progressions", "type": "PROGRAMMING", "points": 3000.0, "rating": 2200, "tags": ["constructive algorithms", "greedy"]}, {"contestId": 125, "index": "C", "name": "Hobbits' Party", "type": "PROGRAMMING", "points": 2000.0, "rating": 1600, "tags": ["constructive algorithms", "greedy"]}, {"contestId": 125, "index": "B", "name": "Simple XML", "type": "PROGRAMMING", "points": 1500.0, "rating": 1000, "tags": ["implementation"]}, {"contestId": 125, "index": "A", "name": "Measuring Lengths in Baden", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["math"]}, {"contestId": 124, "index": "B", "name": "Permutations", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["brute force", "combinatorics", "implementation"]}, {"contestId": 124, "index": "A", "name": "The number of positions", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["math"]}, {"contestId": 123, "index": "E", "name": "Maze", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["dfs and similar", "dp", "probabilities", "trees"]}, {"contestId": 123, "index": "D", "name": "String", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["string suffix structures"]}, {"contestId": 123, "index": "C", "name": "Brackets", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["combinatorics", "dp", "greedy"]}, {"contestId": 123, "index": "B", "name": "Squares", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["math"]}, {"contestId": 123, "index": "A", "name": "Prime Permutation", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["implementation", "number theory", "strings"]}, {"contestId": 122, "index": "B", "name": "Lucky Substring", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["brute force", "implementation"]}, {"contestId": 122, "index": "A", "name": "Lucky Division", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["brute force", "number theory"]}, {"contestId": 121, "index": "E", "name": "Lucky Array", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures"]}, {"contestId": 121, "index": "D", "name": "Lucky Segments", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["binary search", "implementation", "two pointers"]}, {"contestId": 121, "index": "C", "name": "Lucky Permutation", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["brute force", "combinatorics", "number theory"]}, {"contestId": 121, "index": "B", "name": "Lucky Transformation", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["strings"]}, {"contestId": 121, "index": "A", "name": "Lucky Sum", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["implementation"]}, {"contestId": 120, "index": "J", "name": "Minimum Sum", "type": "PROGRAMMING", "rating": 1900, "tags": ["divide and conquer", "geometry", "sortings"]}, {"contestId": 120, "index": "I", "name": "Luck is in Numbers", "type": "PROGRAMMING", "rating": 2200, "tags": ["greedy"]}, {"contestId": 120, "index": "H", "name": "Brevity is Soul of Wit", "type": "PROGRAMMING", "rating": 1800, "tags": ["graph matchings"]}, {"contestId": 120, "index": "G", "name": "Boom", "type": "PROGRAMMING", "rating": 1800, "tags": ["implementation"]}, {"contestId": 120, "index": "F", "name": "Spiders", "type": "PROGRAMMING", "rating": 1400, "tags": ["dp", "greedy", "trees"]}, {"contestId": 120, "index": "E", "name": "Put Knight!", "type": "PROGRAMMING", "rating": 1400, "tags": ["games", "math"]}, {"contestId": 120, "index": "D", "name": "Three Sons", "type": "PROGRAMMING", "rating": 1400, "tags": ["brute force"]}, {"contestId": 120, "index": "C", "name": "Winnie-the-Pooh and honey", "type": "PROGRAMMING", "rating": 1100, "tags": ["implementation", "math"]}, {"contestId": 120, "index": "B", "name": "Quiz League", "type": "PROGRAMMING", "rating": 1100, "tags": ["implementation"]}, {"contestId": 120, "index": "A", "name": "Elevator", "type": "PROGRAMMING", "rating": 1000, "tags": ["brute force", "implementation", "math"]}, {"contestId": 119, "index": "E", "name": "Alternative Reality", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["geometry"]}, {"contestId": 119, "index": "D", "name": "String Transformation", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["hashing", "strings"]}, {"contestId": 119, "index": "C", "name": "Education Reform", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["dp"]}, {"contestId": 119, "index": "B", "name": "Before Exam", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["constructive algorithms", "implementation", "sortings"]}, {"contestId": 119, "index": "A", "name": "Epic Game", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 118, "index": "E", "name": "Bertown roads", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["dfs and similar", "graphs"]}, {"contestId": 118, "index": "D", "name": "Caesar's Legions", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["dp"]}, {"contestId": 118, "index": "C", "name": "Fancy Number", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["brute force", "greedy", "sortings", "strings"]}, {"contestId": 118, "index": "B", "name": "Present from Lena", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["constructive algorithms", "implementation"]}, {"contestId": 118, "index": "A", "name": "String Task", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation", "strings"]}, {"contestId": 117, "index": "E", "name": "Tree or not Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["data structures", "divide and conquer", "implementation", "trees"]}, {"contestId": 117, "index": "D", "name": "Not Quick Transformation", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["divide and conquer", "math"]}, {"contestId": 117, "index": "C", "name": "Cycle", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["dfs and similar", "graphs"]}, {"contestId": 117, "index": "B", "name": "Very Interesting Game", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["brute force", "number theory"]}, {"contestId": 117, "index": "A", "name": "Elevator", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["implementation", "math"]}, {"contestId": 116, "index": "B", "name": "Little Pigs and Wolves", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["greedy", "implementation"]}, {"contestId": 116, "index": "A", "name": "Tram", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 115, "index": "E", "name": "Linear Kingdom Races", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures", "dp"]}, {"contestId": 115, "index": "D", "name": "Unambiguous Arithmetic Expression", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["dp", "expression parsing"]}, {"contestId": 115, "index": "C", "name": "Plumber", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["math"]}, {"contestId": 115, "index": "B", "name": "Lawnmower", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["greedy", "sortings"]}, {"contestId": 115, "index": "A", "name": "Party", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["dfs and similar", "graphs", "trees"]}, {"contestId": 114, "index": "B", "name": "PFAST Inc.", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["bitmasks", "brute force", "graphs"]}, {"contestId": 114, "index": "A", "name": "Cifera", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["math"]}, {"contestId": 113, "index": "E", "name": "Sleeping", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["combinatorics", "implementation", "math"]}, {"contestId": 113, "index": "D", "name": "Museum", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["math", "matrices", "probabilities"]}, {"contestId": 113, "index": "C", "name": "Double Happiness", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["brute force", "math", "number theory"]}, {"contestId": 113, "index": "B", "name": "Petr#", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["brute force", "data structures", "hashing", "strings"]}, {"contestId": 113, "index": "A", "name": "Grammar Lessons", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["implementation", "strings"]}, {"contestId": 112, "index": "B", "name": "Petya and Square", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["implementation", "math"]}, {"contestId": 112, "index": "A", "name": "Petya and Strings", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "strings"]}, {"contestId": 111, "index": "E", "name": "Petya and Rectangle", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": []}, {"contestId": 111, "index": "D", "name": "Petya and Coloring", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["combinatorics", "dp"]}, {"contestId": 111, "index": "C", "name": "Petya and Spiders", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["bitmasks", "dp", "dsu"]}, {"contestId": 111, "index": "B", "name": "Petya and Divisors", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["binary search", "data structures", "number theory"]}, {"contestId": 111, "index": "A", "name": "Petya and Inequiations", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["greedy"]}, {"contestId": 110, "index": "B", "name": "Lucky String", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms", "strings"]}, {"contestId": 110, "index": "A", "name": "Nearly Lucky Number", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 109, "index": "E", "name": "Lucky Interval", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["brute force", "math"]}, {"contestId": 109, "index": "D", "name": "Lucky Sorting", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["constructive algorithms", "sortings"]}, {"contestId": 109, "index": "C", "name": "Lucky Tree", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["dp", "dsu", "trees"]}, {"contestId": 109, "index": "B", "name": "Lucky Probability", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["brute force", "probabilities"]}, {"contestId": 109, "index": "A", "name": "Lucky Sum of Digits", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["brute force", "implementation"]}, {"contestId": 108, "index": "B", "name": "Datatypes", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["math", "sortings"]}, {"contestId": 108, "index": "A", "name": "Palindromic Times", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation", "strings"]}, {"contestId": 107, "index": "E", "name": "Darts", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["geometry", "probabilities"]}, {"contestId": 107, "index": "D", "name": "Crime Management", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["dp", "graphs", "matrices"]}, {"contestId": 107, "index": "C", "name": "Arrangement", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["bitmasks", "dp"]}, {"contestId": 107, "index": "B", "name": "Basketball Team", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["combinatorics", "dp", "math", "probabilities"]}, {"contestId": 107, "index": "A", "name": "Dorm Water Supply", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["dfs and similar", "graphs"]}, {"contestId": 106, "index": "E", "name": "Space Rescuers", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["geometry", "ternary search"]}, {"contestId": 106, "index": "D", "name": "Treasure Island", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["brute force", "implementation"]}, {"contestId": 106, "index": "C", "name": "Buns", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["dp"]}, {"contestId": 106, "index": "B", "name": "Choosing Laptop", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["brute force", "implementation"]}, {"contestId": 106, "index": "A", "name": "Card Game", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"]}, {"contestId": 105, "index": "E", "name": "Lift and Throw", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["brute force"]}, {"contestId": 105, "index": "D", "name": "Entertaining Geodetics", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["brute force", "dsu", "implementation"]}, {"contestId": 105, "index": "C", "name": "Item World", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["brute force", "implementation", "sortings"]}, {"contestId": 105, "index": "B", "name": "Dark Assembly", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["brute force", "probabilities"]}, {"contestId": 105, "index": "A", "name": "Transmigration", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["implementation"]}, {"contestId": 104, "index": "A", "name": "Blackjack", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 103, "index": "E", "name": "Buying Sets", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["flows", "graph matchings"]}, {"contestId": 103, "index": "D", "name": "Time to Raid Cowavans", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["brute force", "data structures", "sortings"]}, {"contestId": 103, "index": "C", "name": "Russian Roulette", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["constructive algorithms", "greedy"]}, {"contestId": 103, "index": "B", "name": "Cthulhu", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["dfs and similar", "dsu", "graphs"]}, {"contestId": 103, "index": "A", "name": "Testing Pants for Sadness", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["greedy", "implementation", "math"]}, {"contestId": 102, "index": "B", "name": "Sum of Digits", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["implementation"]}, {"contestId": 102, "index": "A", "name": "Clothes", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["brute force"]}, {"contestId": 101, "index": "E", "name": "Candies and Stones", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["divide and conquer", "dp"]}, {"contestId": 101, "index": "D", "name": "Castle", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["dp", "greedy", "probabilities", "sortings", "trees"]}, {"contestId": 101, "index": "C", "name": "Vectors", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["implementation", "math"]}, {"contestId": 101, "index": "B", "name": "Buses", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["binary search", "data structures", "dp"]}, {"contestId": 101, "index": "A", "name": "Homework", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["greedy"]}, {"contestId": 100, "index": "J", "name": "Interval Coloring", "type": "PROGRAMMING", "rating": 2400, "tags": ["*special", "greedy", "math"]}, {"contestId": 100, "index": "I", "name": "Rotation", "type": "PROGRAMMING", "rating": 1500, "tags": ["*special", "geometry", "math"]}, {"contestId": 100, "index": "H", "name": "Battleship", "type": "PROGRAMMING", "rating": 2100, "tags": ["*special", "dfs and similar", "implementation"]}, {"contestId": 100, "index": "G", "name": "Name the album", "type": "PROGRAMMING", "rating": 1800, "tags": ["*special", "data structures", "implementation"]}, {"contestId": 100, "index": "F", "name": "Polynom", "type": "PROGRAMMING", "rating": 1800, "tags": ["*special", "implementation"]}, {"contestId": 100, "index": "E", "name": "Lamps in a Line", "type": "PROGRAMMING", "rating": 1600, "tags": ["*special", "math"]}, {"contestId": 100, "index": "D", "name": "World of Mouth", "type": "PROGRAMMING", "rating": 1500, "tags": ["*special", "strings"]}, {"contestId": 100, "index": "C", "name": "A+B", "type": "PROGRAMMING", "rating": 1400, "tags": ["*special", "implementation"]}, {"contestId": 100, "index": "B", "name": "Friendly Numbers", "type": "PROGRAMMING", "rating": 1500, "tags": ["*special", "implementation"]}, {"contestId": 100, "index": "A", "name": "Carpeting the Room", "type": "PROGRAMMING", "rating": 1100, "tags": ["*special", "implementation"]}, {"contestId": 99, "index": "B", "name": "Help Chef Gerasim", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["implementation", "sortings"]}, {"contestId": 99, "index": "A", "name": "Help Far Away Kingdom", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["strings"]}, {"contestId": 98, "index": "E", "name": "Help Shrek and Donkey", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["dp", "games", "math", "probabilities"]}, {"contestId": 98, "index": "D", "name": "Help Monks", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["constructive algorithms"]}, {"contestId": 98, "index": "C", "name": "Help Greg the Dwarf", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["geometry", "ternary search"]}, {"contestId": 98, "index": "B", "name": "Help King", "type": "PROGRAMMING", "points": 1000.0, "rating": 2200, "tags": ["implementation", "probabilities", "trees"]}, {"contestId": 98, "index": "A", "name": "Help Victoria the Wise", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["brute force", "implementation"]}, {"contestId": 97, "index": "E", "name": "Leaders", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["dfs and similar", "dsu", "graphs", "trees"]}, {"contestId": 97, "index": "D", "name": "Robot in Basement", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["bitmasks", "brute force", "implementation"]}, {"contestId": 97, "index": "C", "name": "Winning Strategy", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["binary search", "graphs", "math", "shortest paths"]}, {"contestId": 97, "index": "B", "name": "Superset", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["constructive algorithms", "divide and conquer"]}, {"contestId": 97, "index": "A", "name": "Domino", "type": "PROGRAMMING", "points": 500.0, "rating": 2400, "tags": ["brute force", "implementation"]}, {"contestId": 96, "index": "B", "name": "Lucky Numbers (easy)", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["binary search", "bitmasks", "brute force"]}, {"contestId": 96, "index": "A", "name": "Football", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation", "strings"]}, {"contestId": 95, "index": "E", "name": "Lucky Country", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["dp", "dsu", "graphs"]}, {"contestId": 95, "index": "D", "name": "Horse Races", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["dp", "math"]}, {"contestId": 95, "index": "C", "name": "Volleyball", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["shortest paths"]}, {"contestId": 95, "index": "B", "name": "Lucky Numbers", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["dp", "greedy"]}, {"contestId": 95, "index": "A", "name": "Hockey", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["implementation", "strings"]}, {"contestId": 94, "index": "B", "name": "Friends", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["graphs", "implementation", "math"]}, {"contestId": 94, "index": "A", "name": "Restoring Password", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation", "strings"]}, {"contestId": 93, "index": "E", "name": "Lostborn", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["dp", "math", "number theory"]}, {"contestId": 93, "index": "D", "name": "Flags", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["dp", "math", "matrices"]}, {"contestId": 93, "index": "C", "name": "Azembler", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["brute force", "implementation"]}, {"contestId": 93, "index": "B", "name": "End of Exams", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["greedy"]}, {"contestId": 93, "index": "A", "name": "Frames", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["implementation"]}, {"contestId": 92, "index": "B", "name": "Binary Number", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["greedy"]}, {"contestId": 92, "index": "A", "name": "Chips", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "math"]}, {"contestId": 91, "index": "E", "name": "Igloo Skyscraper", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["data structures", "geometry"]}, {"contestId": 91, "index": "D", "name": "Grocer's Problem", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["constructive algorithms", "graphs", "greedy"]}, {"contestId": 91, "index": "C", "name": "Ski Base", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["combinatorics", "dsu", "graphs"]}, {"contestId": 91, "index": "B", "name": "Queue", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["binary search", "data structures"]}, {"contestId": 91, "index": "A", "name": "Newspaper Headline", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["greedy", "strings"]}, {"contestId": 90, "index": "B", "name": "African Crossword", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["implementation", "strings"]}, {"contestId": 90, "index": "A", "name": "Cableway", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["greedy", "math"]}, {"contestId": 89, "index": "E", "name": "Fire and Ice", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["greedy"]}, {"contestId": 89, "index": "D", "name": "Space mines", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["geometry"]}, {"contestId": 89, "index": "C", "name": "Chip Play", "type": "PROGRAMMING", "points": 1000.0, "rating": 2300, "tags": ["brute force", "data structures", "implementation"]}, {"contestId": 89, "index": "B", "name": "Widget Library", "type": "PROGRAMMING", "points": 1000.0, "rating": 2300, "tags": ["dp", "expression parsing", "graphs", "implementation"]}, {"contestId": 89, "index": "A", "name": "Robbery", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["greedy"]}, {"contestId": 88, "index": "B", "name": "Keyboard", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["implementation"]}, {"contestId": 88, "index": "A", "name": "Chord", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["brute force", "implementation"]}, {"contestId": 87, "index": "E", "name": "Mogohu-Rea Idol", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["geometry"]}, {"contestId": 87, "index": "D", "name": "Beautiful Road", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["dfs and similar", "dp", "dsu", "graphs", "implementation", "sortings", "trees"]}, {"contestId": 87, "index": "C", "name": "Interesting Game", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["dp", "games", "math"]}, {"contestId": 87, "index": "B", "name": "Vasya and Types", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["implementation", "strings"]}, {"contestId": 87, "index": "A", "name": "Trains", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["implementation", "math"]}, {"contestId": 86, "index": "E", "name": "Long sequence", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["brute force", "math", "matrices"]}, {"contestId": 86, "index": "D", "name": "Powerful array", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["data structures", "implementation", "math", "two pointers"]}, {"contestId": 86, "index": "C", "name": "Genetic engineering", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["dp", "string suffix structures", "trees"]}, {"contestId": 86, "index": "B", "name": "Tetris revisited", "type": "PROGRAMMING", "points": 1000.0, "rating": 2200, "tags": ["constructive algorithms", "graph matchings", "greedy", "math"]}, {"contestId": 86, "index": "A", "name": "Reflection", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["math"]}, {"contestId": 85, "index": "E", "name": "Guard Towers", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["binary search", "dsu", "geometry", "graphs", "sortings"]}, {"contestId": 85, "index": "D", "name": "Sum of Medians", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["binary search", "brute force", "data structures", "implementation"]}, {"contestId": 85, "index": "C", "name": "Petya and Tree", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["binary search", "dfs and similar", "probabilities", "sortings", "trees"]}, {"contestId": 85, "index": "B", "name": "Embassy Queue", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["data structures", "greedy"]}, {"contestId": 85, "index": "A", "name": "Domino", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["constructive algorithms", "implementation"]}, {"contestId": 84, "index": "C", "name": "Biathlon", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["binary search", "implementation"]}, {"contestId": 84, "index": "A", "name": "Toy Army", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["math", "number theory"]}, {"contestId": 83, "index": "E", "name": "Two Subsequences", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["bitmasks", "dp"]}, {"contestId": 83, "index": "D", "name": "Numbers", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["dp", "math", "number theory"]}, {"contestId": 83, "index": "C", "name": "Track", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["graphs", "greedy", "shortest paths"]}, {"contestId": 83, "index": "B", "name": "Doctor", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["binary search", "math", "sortings"]}, {"contestId": 83, "index": "A", "name": "Magical Array", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["math"]}, {"contestId": 82, "index": "E", "name": "Corridor", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["geometry"]}, {"contestId": 82, "index": "D", "name": "Two out of Three", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["dp"]}, {"contestId": 82, "index": "C", "name": "General Mobilization", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["data structures", "dfs and similar", "sortings"]}, {"contestId": 82, "index": "B", "name": "Sets", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["constructive algorithms", "hashing", "implementation"]}, {"contestId": 82, "index": "A", "name": "Double Cola", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["implementation", "math"]}, {"contestId": 81, "index": "E", "name": "Pairs", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["dfs and similar", "dp", "dsu", "graphs", "implementation", "trees"]}, {"contestId": 81, "index": "D", "name": "Polycarp's Picture Gallery", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["constructive algorithms", "greedy"]}, {"contestId": 81, "index": "C", "name": "Average Score", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["greedy", "math", "sortings"]}, {"contestId": 81, "index": "B", "name": "Sequence Formatting", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["implementation", "strings"]}, {"contestId": 81, "index": "A", "name": "Plug-in", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["implementation"]}, {"contestId": 80, "index": "B", "name": "Depression", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["geometry", "math"]}, {"contestId": 80, "index": "A", "name": "Panoramix's Prediction", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force"]}, {"contestId": 79, "index": "E", "name": "Security System", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["math"]}, {"contestId": 79, "index": "D", "name": "Password", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["bitmasks", "dp", "shortest paths"]}, {"contestId": 79, "index": "C", "name": "Beaver", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["data structures", "dp", "greedy", "hashing", "strings", "two pointers"]}, {"contestId": 79, "index": "B", "name": "Colorful Field", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["implementation", "sortings"]}, {"contestId": 79, "index": "A", "name": "Bus Game", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["greedy"]}, {"contestId": 78, "index": "E", "name": "Evacuation", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["flows", "graphs", "shortest paths"]}, {"contestId": 78, "index": "D", "name": "Archer's Shot", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["binary search", "geometry", "math", "two pointers"]}, {"contestId": 78, "index": "C", "name": "Beaver Game", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["dp", "games", "number theory"]}, {"contestId": 78, "index": "B", "name": "Easter Eggs", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "implementation"]}, {"contestId": 78, "index": "A", "name": "Haiku", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "strings"]}, {"contestId": 77, "index": "E", "name": "Martian Food", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["geometry"]}, {"contestId": 77, "index": "D", "name": "Domino Carpet", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["dp", "implementation"]}, {"contestId": 77, "index": "C", "name": "Beavermuncher-0xFF", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["dfs and similar", "dp", "dsu", "greedy", "trees"]}, {"contestId": 77, "index": "B", "name": "Falling Anvils", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["math", "probabilities"]}, {"contestId": 77, "index": "A", "name": "Heroes", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["brute force", "implementation"]}, {"contestId": 76, "index": "F", "name": "Tourist", "type": "PROGRAMMING", "rating": 2300, "tags": ["binary search", "data structures", "dp"]}, {"contestId": 76, "index": "E", "name": "Points", "type": "PROGRAMMING", "rating": 1700, "tags": ["implementation", "math"]}, {"contestId": 76, "index": "D", "name": "Plus and xor", "type": "PROGRAMMING", "rating": 1700, "tags": ["dp", "greedy", "math"]}, {"contestId": 76, "index": "C", "name": "Mutation", "type": "PROGRAMMING", "rating": 2700, "tags": ["bitmasks", "dp", "math"]}, {"contestId": 76, "index": "B", "name": "Mice", "type": "PROGRAMMING", "rating": 2100, "tags": ["greedy", "two pointers"]}, {"contestId": 76, "index": "A", "name": "Gift", "type": "PROGRAMMING", "rating": 2200, "tags": ["dsu", "graphs", "sortings", "trees"]}, {"contestId": 75, "index": "E", "name": "Ship's Shortest Path", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["geometry", "shortest paths"]}, {"contestId": 75, "index": "D", "name": "Big Maximum Sum", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["data structures", "dp", "greedy", "implementation", "math", "trees"]}, {"contestId": 75, "index": "C", "name": "Modified GCD", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["binary search", "number theory"]}, {"contestId": 75, "index": "B", "name": "Facetook Priority Wall", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["expression parsing", "implementation", "strings"]}, {"contestId": 75, "index": "A", "name": "Life Without Zeros", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"]}, {"contestId": 74, "index": "E", "name": "Shift It!", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["constructive algorithms"]}, {"contestId": 74, "index": "D", "name": "Hanger", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["data structures"]}, {"contestId": 74, "index": "C", "name": "Chessboard Billiard", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["dfs and similar", "dsu", "graphs", "number theory"]}, {"contestId": 74, "index": "B", "name": "Train", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["dp", "games", "greedy"]}, {"contestId": 74, "index": "A", "name": "Room Leader", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"]}, {"contestId": 73, "index": "F", "name": "Plane of Tanks", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["brute force", "geometry"]}, {"contestId": 73, "index": "E", "name": "Morrowindows", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["math", "number theory"]}, {"contestId": 73, "index": "D", "name": "FreeDiv", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["dfs and similar", "graphs", "greedy"]}, {"contestId": 73, "index": "C", "name": "LionAge II", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["dp"]}, {"contestId": 73, "index": "B", "name": "Need For Brake", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["binary search", "greedy", "sortings"]}, {"contestId": 73, "index": "A", "name": "The Elder Trolls IV: Oblivon", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["greedy", "math"]}, {"contestId": 72, "index": "I", "name": "Goofy Numbers", "type": "PROGRAMMING", "rating": 1500, "tags": ["*special", "implementation"]}, {"contestId": 72, "index": "H", "name": "Reverse It!", "type": "PROGRAMMING", "rating": 1600, "tags": ["*special", "implementation"]}, {"contestId": 72, "index": "G", "name": "Fibonacci army", "type": "PROGRAMMING", "rating": 1000, "tags": ["*special", "dp"]}, {"contestId": 72, "index": "F", "name": "Oil", "type": "PROGRAMMING", "rating": 1900, "tags": ["*special", "greedy", "math"]}, {"contestId": 72, "index": "E", "name": "Ali goes shopping", "type": "PROGRAMMING", "rating": 1800, "tags": ["*special", "brute force", "strings"]}, {"contestId": 72, "index": "D", "name": "Perse-script", "type": "PROGRAMMING", "rating": 2300, "tags": ["*special", "expression parsing"]}, {"contestId": 72, "index": "C", "name": "Extraordinarily Nice Numbers", "type": "PROGRAMMING", "rating": 1200, "tags": ["*special", "math"]}, {"contestId": 72, "index": "B", "name": "INI-file", "type": "PROGRAMMING", "rating": 2200, "tags": ["*special", "implementation"]}, {"contestId": 72, "index": "A", "name": "Goshtasp, Vishtasp and Eidi", "type": "PROGRAMMING", "rating": 1800, "tags": ["*special", "greedy", "math"]}, {"contestId": 71, "index": "E", "name": "Nuclear Fusion", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["bitmasks", "dp"]}, {"contestId": 71, "index": "D", "name": "Solitaire", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["brute force", "implementation"]}, {"contestId": 71, "index": "C", "name": "Round Table Knights", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["dp", "math", "number theory"]}, {"contestId": 71, "index": "B", "name": "Progress Bar", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["implementation", "math"]}, {"contestId": 71, "index": "A", "name": "Way Too Long Words", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["strings"]}, {"contestId": 70, "index": "E", "name": "Information Reform", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["dp", "implementation", "trees"]}, {"contestId": 70, "index": "D", "name": "Professor's task", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["data structures", "geometry"]}, {"contestId": 70, "index": "C", "name": "Lucky Tickets", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["binary search", "data structures", "sortings", "two pointers"]}, {"contestId": 70, "index": "B", "name": "Text Messaging", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["expression parsing", "greedy", "strings"]}, {"contestId": 70, "index": "A", "name": "Cookies", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["math"]}, {"contestId": 69, "index": "E", "name": "Subsegments", "type": "PROGRAMMING", "points": 2500.0, "rating": 1800, "tags": ["data structures", "implementation"]}, {"contestId": 69, "index": "D", "name": "Dot", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["dp", "games"]}, {"contestId": 69, "index": "C", "name": "Game", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["implementation"]}, {"contestId": 69, "index": "B", "name": "Bets", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["greedy", "implementation"]}, {"contestId": 69, "index": "A", "name": "Young Physicist", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation", "math"]}, {"contestId": 68, "index": "E", "name": "Contact", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["geometry"]}, {"contestId": 68, "index": "D", "name": "Half-decay tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["data structures", "divide and conquer", "dp", "math", "probabilities"]}, {"contestId": 68, "index": "C", "name": "Synchrophasotron", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["brute force"]}, {"contestId": 68, "index": "B", "name": "Energy exchange", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["binary search"]}, {"contestId": 68, "index": "A", "name": "Irrational problem", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["implementation", "number theory"]}, {"contestId": 67, "index": "E", "name": "Save the City!", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["geometry"]}, {"contestId": 67, "index": "D", "name": "Optical Experiment", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["binary search", "data structures", "dp"]}, {"contestId": 67, "index": "C", "name": "Sequence of Balls", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["dp"]}, {"contestId": 67, "index": "B", "name": "Restoration of the Permutation", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["greedy"]}, {"contestId": 67, "index": "A", "name": "Partial Teacher", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["dp", "graphs", "greedy", "implementation"]}, {"contestId": 66, "index": "E", "name": "Petya and Post", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["data structures", "dp"]}, {"contestId": 66, "index": "D", "name": "Petya and His Friends", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["constructive algorithms", "math", "number theory"]}, {"contestId": 66, "index": "C", "name": "Petya and File System", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["data structures", "implementation"]}, {"contestId": 66, "index": "B", "name": "Petya and Countryside", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["brute force", "implementation"]}, {"contestId": 66, "index": "A", "name": "Petya and Java", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["implementation", "strings"]}, {"contestId": 65, "index": "E", "name": "Harry Potter and Moving Staircases", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["dfs and similar", "implementation"]}, {"contestId": 65, "index": "D", "name": "Harry Potter and the Sorting Hat", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["brute force", "dfs and similar", "hashing"]}, {"contestId": 65, "index": "C", "name": "Harry Potter and the Golden Snitch", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["binary search", "geometry"]}, {"contestId": 65, "index": "B", "name": "Harry Potter and the History of Magic", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["brute force", "greedy", "implementation"]}, {"contestId": 65, "index": "A", "name": "Harry Potter and Three Spells", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["implementation", "math"]}, {"contestId": 64, "index": "I", "name": "Sort the Table", "type": "PROGRAMMING", "rating": 2400, "tags": ["*special", "sortings"]}, {"contestId": 64, "index": "H", "name": "Table Bowling", "type": "PROGRAMMING", "rating": 2300, "tags": ["*special", "sortings"]}, {"contestId": 64, "index": "G", "name": "Path Canonization", "type": "PROGRAMMING", "rating": 2200, "tags": ["*special"]}, {"contestId": 64, "index": "F", "name": "Domain", "type": "PROGRAMMING", "rating": 2000, "tags": ["*special", "expression parsing"]}, {"contestId": 64, "index": "E", "name": "Prime Segment", "type": "PROGRAMMING", "rating": 1800, "tags": ["*special", "brute force"]}, {"contestId": 64, "index": "D", "name": "Presents", "type": "PROGRAMMING", "rating": 1800, "tags": ["*special", "greedy"]}, {"contestId": 64, "index": "C", "name": "Table", "type": "PROGRAMMING", "rating": 1600, "tags": ["*special", "greedy", "implementation", "math"]}, {"contestId": 64, "index": "B", "name": "Expression", "type": "PROGRAMMING", "rating": 1500, "tags": ["*special", "expression parsing"]}, {"contestId": 64, "index": "A", "name": "Factorial", "type": "PROGRAMMING", "rating": 1300, "tags": ["*special", "implementation"]}, {"contestId": 63, "index": "E", "name": "Sweets Game", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["bitmasks", "dfs and similar", "dp", "games", "implementation"]}, {"contestId": 63, "index": "D", "name": "Dividing Island", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["constructive algorithms"]}, {"contestId": 63, "index": "C", "name": "Bulls and Cows", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["brute force", "implementation"]}, {"contestId": 63, "index": "B", "name": "Settlers' Training", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["implementation"]}, {"contestId": 63, "index": "A", "name": "Sinking Ship", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation", "sortings", "strings"]}, {"contestId": 62, "index": "E", "name": "World Evil", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["dp", "flows"]}, {"contestId": 62, "index": "D", "name": "Wormhouse", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["dfs and similar", "graphs"]}, {"contestId": 62, "index": "C", "name": "Inquisition", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["geometry", "implementation", "sortings"]}, {"contestId": 62, "index": "B", "name": "Tyndex.Brome", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["binary search", "implementation"]}, {"contestId": 62, "index": "A", "name": "A Student's Dream", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["greedy", "math"]}, {"contestId": 61, "index": "E", "name": "Enemy is weak", "type": "PROGRAMMING", "points": 2500.0, "rating": 1900, "tags": ["data structures", "trees"]}, {"contestId": 61, "index": "D", "name": "Eternal Victory", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["dfs and similar", "graphs", "greedy", "shortest paths", "trees"]}, {"contestId": 61, "index": "C", "name": "Capture Valerian", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["math"]}, {"contestId": 61, "index": "B", "name": "Hard Work", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["strings"]}, {"contestId": 61, "index": "A", "name": "Ultra-Fast Mathematician", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 60, "index": "E", "name": "Mushroom Gnomes", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["math", "matrices"]}, {"contestId": 60, "index": "D", "name": "Savior", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["brute force", "dsu", "math"]}, {"contestId": 60, "index": "C", "name": "Mushroom Strife", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["brute force", "dfs and similar"]}, {"contestId": 60, "index": "B", "name": "Serial Time!", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["dfs and similar", "dsu"]}, {"contestId": 60, "index": "A", "name": "Where Are My Flakes?", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["implementation", "two pointers"]}, {"contestId": 59, "index": "E", "name": "Shortest Path", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["graphs", "shortest paths"]}, {"contestId": 59, "index": "D", "name": "Team Arrangement", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["constructive algorithms", "greedy", "implementation"]}, {"contestId": 59, "index": "C", "name": "Title", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["expression parsing"]}, {"contestId": 59, "index": "B", "name": "Fortune Telling", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["implementation", "number theory"]}, {"contestId": 59, "index": "A", "name": "Word", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "strings"]}, {"contestId": 58, "index": "E", "name": "Expression", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["dp"]}, {"contestId": 58, "index": "D", "name": "Calendar", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["greedy", "strings"]}, {"contestId": 58, "index": "C", "name": "Trees", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["brute force"]}, {"contestId": 58, "index": "B", "name": "Coins", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["greedy"]}, {"contestId": 58, "index": "A", "name": "Chat room", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["greedy", "strings"]}, {"contestId": 57, "index": "E", "name": "Chess", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["math", "shortest paths"]}, {"contestId": 57, "index": "D", "name": "Journey", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["dp", "math"]}, {"contestId": 57, "index": "C", "name": "Array", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["combinatorics", "math"]}, {"contestId": 57, "index": "B", "name": "Martian Architecture", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["implementation"]}, {"contestId": 57, "index": "A", "name": "Square Earth?", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["dfs and similar", "greedy", "implementation"]}, {"contestId": 56, "index": "E", "name": "Domino Principle", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["binary search", "data structures", "sortings"]}, {"contestId": 56, "index": "D", "name": "Changing a String", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["dp"]}, {"contestId": 56, "index": "C", "name": "Corporation Mail", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["data structures", "expression parsing", "implementation"]}, {"contestId": 56, "index": "B", "name": "Spoilt Permutation", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["implementation"]}, {"contestId": 56, "index": "A", "name": "Bar", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"]}, {"contestId": 55, "index": "E", "name": "Very simple problem", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["geometry", "two pointers"]}, {"contestId": 55, "index": "D", "name": "Beautiful numbers", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["dp", "number theory"]}, {"contestId": 55, "index": "C", "name": "Pie or die", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["games"]}, {"contestId": 55, "index": "B", "name": "Smallest number", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["brute force"]}, {"contestId": 55, "index": "A", "name": "Flea travel", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["implementation", "math"]}, {"contestId": 54, "index": "E", "name": "Vacuum \u0421leaner", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["geometry"]}, {"contestId": 54, "index": "D", "name": "Writing a Song", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["brute force", "dp", "strings"]}, {"contestId": 54, "index": "C", "name": "First Digit Law", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["dp", "math", "probabilities"]}, {"contestId": 54, "index": "B", "name": "Cutting Jigsaw Puzzle", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["hashing", "implementation"]}, {"contestId": 54, "index": "A", "name": "Presents", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["implementation"]}, {"contestId": 53, "index": "E", "name": "Dead Ends", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["bitmasks", "dp"]}, {"contestId": 53, "index": "D", "name": "Physical Education", "type": "PROGRAMMING", "points": 2000.0, "rating": 1500, "tags": ["sortings"]}, {"contestId": 53, "index": "C", "name": "Little Frog", "type": "PROGRAMMING", "points": 1500.0, "rating": 1200, "tags": ["constructive algorithms"]}, {"contestId": 53, "index": "B", "name": "Blog Photo", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["binary search", "implementation"]}, {"contestId": 53, "index": "A", "name": "Autocomplete", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["implementation"]}, {"contestId": 52, "index": "C", "name": "Circular RMQ", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["data structures"]}, {"contestId": 52, "index": "B", "name": "Right Triangles", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["combinatorics"]}, {"contestId": 52, "index": "A", "name": "123-sequence", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation"]}, {"contestId": 51, "index": "F", "name": "Caterpillar", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["dfs and similar", "dp", "graphs", "trees"]}, {"contestId": 51, "index": "E", "name": "Pentagon", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["combinatorics", "graphs", "matrices"]}, {"contestId": 51, "index": "D", "name": "Geometrical problem", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["implementation"]}, {"contestId": 51, "index": "C", "name": "Three Base Stations", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["binary search", "greedy"]}, {"contestId": 51, "index": "B", "name": "bHTML Tables Analisys", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["expression parsing"]}, {"contestId": 51, "index": "A", "name": "Cheaterius's Problem", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["implementation"]}, {"contestId": 50, "index": "E", "name": "Square Equation Roots", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["math"]}, {"contestId": 50, "index": "D", "name": "Bombing", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["binary search", "dp", "probabilities"]}, {"contestId": 50, "index": "C", "name": "Happy Farm 5", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["geometry"]}, {"contestId": 50, "index": "B", "name": "Choosing Symbol Pairs", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["strings"]}, {"contestId": 50, "index": "A", "name": "Domino piling", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "math"]}, {"contestId": 49, "index": "E", "name": "Common ancestor", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["dp"]}, {"contestId": 49, "index": "D", "name": "Game", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["brute force", "dp", "implementation"]}, {"contestId": 49, "index": "C", "name": "Disposition", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["constructive algorithms", "math"]}, {"contestId": 49, "index": "B", "name": "Sum", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["math"]}, {"contestId": 49, "index": "A", "name": "Sleuth", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 48, "index": "H", "name": "Black and White", "type": "PROGRAMMING", "rating": 2800, "tags": ["constructive algorithms"]}, {"contestId": 48, "index": "G", "name": "Galaxy Union", "type": "PROGRAMMING", "rating": 2700, "tags": ["dp", "trees", "two pointers"]}, {"contestId": 48, "index": "F", "name": "Snow sellers", "type": "PROGRAMMING", "rating": 2800, "tags": ["greedy", "sortings"]}, {"contestId": 48, "index": "E", "name": "Ivan the Fool VS Gorynych the Dragon", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp", "games", "graphs"]}, {"contestId": 48, "index": "D", "name": "Permutations", "type": "PROGRAMMING", "rating": 1500, "tags": ["greedy"]}, {"contestId": 48, "index": "C", "name": "The Race", "type": "PROGRAMMING", "rating": 1800, "tags": ["math"]}, {"contestId": 48, "index": "B", "name": "Land Lot", "type": "PROGRAMMING", "rating": 1200, "tags": ["brute force", "implementation"]}, {"contestId": 48, "index": "A", "name": "Rock-paper-scissors", "type": "PROGRAMMING", "rating": 900, "tags": ["implementation", "schedules"]}, {"contestId": 47, "index": "E", "name": "Cannon", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["data structures", "geometry", "sortings"]}, {"contestId": 47, "index": "D", "name": "Safe", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["brute force"]}, {"contestId": 47, "index": "C", "name": "Crossword", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["implementation"]}, {"contestId": 47, "index": "B", "name": "Coins", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["implementation"]}, {"contestId": 47, "index": "A", "name": "Triangular numbers", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "math"]}, {"contestId": 46, "index": "G", "name": "Emperor's Problem", "type": "PROGRAMMING", "rating": 2500, "tags": ["geometry"]}, {"contestId": 46, "index": "F", "name": "Hercule Poirot Problem", "type": "PROGRAMMING", "rating": 2300, "tags": ["dsu", "graphs"]}, {"contestId": 46, "index": "E", "name": "Comb", "type": "PROGRAMMING", "rating": 1900, "tags": ["data structures", "dp"]}, {"contestId": 46, "index": "D", "name": "Parking Lot", "type": "PROGRAMMING", "rating": 1800, "tags": ["data structures", "implementation"]}, {"contestId": 46, "index": "C", "name": "Hamsters and Tigers", "type": "PROGRAMMING", "rating": 1600, "tags": ["two pointers"]}, {"contestId": 46, "index": "B", "name": "T-shirts from Sponsor", "type": "PROGRAMMING", "rating": 1100, "tags": ["implementation"]}, {"contestId": 46, "index": "A", "name": "Ball Game", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "implementation"]}, {"contestId": 45, "index": "J", "name": "Planting Trees", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms"]}, {"contestId": 45, "index": "I", "name": "TCMCF+++", "type": "PROGRAMMING", "rating": 1400, "tags": ["greedy"]}, {"contestId": 45, "index": "H", "name": "Road Problem", "type": "PROGRAMMING", "rating": 2100, "tags": ["graphs"]}, {"contestId": 45, "index": "G", "name": "Prime Problem", "type": "PROGRAMMING", "rating": 2200, "tags": ["number theory"]}, {"contestId": 45, "index": "F", "name": "Goats and Wolves", "type": "PROGRAMMING", "rating": 2500, "tags": ["greedy"]}, {"contestId": 45, "index": "E", "name": "Director", "type": "PROGRAMMING", "rating": 2000, "tags": ["constructive algorithms", "greedy"]}, {"contestId": 45, "index": "D", "name": "Event Dates", "type": "PROGRAMMING", "rating": 1900, "tags": ["greedy", "meet-in-the-middle", "sortings"]}, {"contestId": 45, "index": "C", "name": "Dancing Lessons", "type": "PROGRAMMING", "rating": 1900, "tags": ["data structures"]}, {"contestId": 45, "index": "B", "name": "School", "type": "PROGRAMMING", "rating": 2200, "tags": ["dp", "dsu"]}, {"contestId": 45, "index": "A", "name": "Codecraft III", "type": "PROGRAMMING", "rating": 900, "tags": ["implementation"]}, {"contestId": 44, "index": "J", "name": "Triminoes", "type": "PROGRAMMING", "rating": 2000, "tags": ["constructive algorithms", "greedy"]}, {"contestId": 44, "index": "I", "name": "Toys", "type": "PROGRAMMING", "rating": 2300, "tags": ["brute force", "combinatorics"]}, {"contestId": 44, "index": "H", "name": "Phone Number", "type": "PROGRAMMING", "rating": 1700, "tags": ["dp"]}, {"contestId": 44, "index": "G", "name": "Shooting Gallery", "type": "PROGRAMMING", "rating": 2500, "tags": ["data structures", "implementation"]}, {"contestId": 44, "index": "F", "name": "BerPaint", "type": "PROGRAMMING", "rating": 2700, "tags": ["geometry", "graphs"]}, {"contestId": 44, "index": "E", "name": "Anfisa the Monkey", "type": "PROGRAMMING", "rating": 1400, "tags": ["dp"]}, {"contestId": 44, "index": "D", "name": "Hyperdrive", "type": "PROGRAMMING", "rating": 1800, "tags": ["math"]}, {"contestId": 44, "index": "C", "name": "Holidays", "type": "PROGRAMMING", "rating": 1300, "tags": ["implementation"]}, {"contestId": 44, "index": "B", "name": "Cola", "type": "PROGRAMMING", "rating": 1500, "tags": ["implementation"]}, {"contestId": 44, "index": "A", "name": "Indian Summer", "type": "PROGRAMMING", "rating": 900, "tags": ["implementation"]}, {"contestId": 43, "index": "E", "name": "Race", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["brute force", "implementation", "two pointers"]}, {"contestId": 43, "index": "D", "name": "Journey", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["brute force", "constructive algorithms", "implementation"]}, {"contestId": 43, "index": "C", "name": "Lucky Tickets", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["greedy"]}, {"contestId": 43, "index": "B", "name": "Letter", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["implementation", "strings"]}, {"contestId": 43, "index": "A", "name": "Football", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["strings"]}, {"contestId": 42, "index": "E", "name": "Baldman and the military", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["dfs and similar", "graphs", "trees"]}, {"contestId": 42, "index": "D", "name": "Strange town", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["constructive algorithms", "math"]}, {"contestId": 42, "index": "C", "name": "Safe cracking", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["brute force", "constructive algorithms"]}, {"contestId": 42, "index": "B", "name": "Game of chess unfinished", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["implementation"]}, {"contestId": 42, "index": "A", "name": "Guilty --- to the kitchen!", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["greedy", "implementation"]}, {"contestId": 41, "index": "E", "name": "3-cycles", "type": "PROGRAMMING", "points": 2500.0, "rating": 1900, "tags": ["constructive algorithms", "graphs", "greedy"]}, {"contestId": 41, "index": "D", "name": "Pawn", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["dp"]}, {"contestId": 41, "index": "C", "name": "Email address", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["expression parsing", "implementation"]}, {"contestId": 41, "index": "B", "name": "Martian Dollar", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["brute force"]}, {"contestId": 41, "index": "A", "name": "Translation", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "strings"]}, {"contestId": 40, "index": "E", "name": "Number Table", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["combinatorics"]}, {"contestId": 40, "index": "D", "name": "Interesting Sequence", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["math"]}, {"contestId": 40, "index": "C", "name": "Berland Square", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["implementation", "math"]}, {"contestId": 40, "index": "B", "name": "Repaintings", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["math"]}, {"contestId": 40, "index": "A", "name": "Find Color", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["constructive algorithms", "geometry", "implementation", "math"]}, {"contestId": 39, "index": "K", "name": "Testing", "type": "PROGRAMMING", "rating": 2600, "tags": []}, {"contestId": 39, "index": "J", "name": "Spelling Check", "type": "PROGRAMMING", "rating": 1500, "tags": ["hashing", "implementation", "strings"]}, {"contestId": 39, "index": "I", "name": "Tram", "type": "PROGRAMMING", "rating": 2500, "tags": []}, {"contestId": 39, "index": "H", "name": "Multiplication Table", "type": "PROGRAMMING", "rating": 1300, "tags": ["implementation"]}, {"contestId": 39, "index": "G", "name": "Inverse Function", "type": "PROGRAMMING", "rating": 2400, "tags": ["implementation"]}, {"contestId": 39, "index": "F", "name": "Pacifist frogs", "type": "PROGRAMMING", "rating": 1300, "tags": ["implementation"]}, {"contestId": 39, "index": "E", "name": "What Has Dirichlet Got to Do with That?", "type": "PROGRAMMING", "rating": 2000, "tags": ["dp", "games"]}, {"contestId": 39, "index": "D", "name": "Cubical Planet", "type": "PROGRAMMING", "rating": 1100, "tags": ["math"]}, {"contestId": 39, "index": "C", "name": "Moon Craters", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp", "sortings"]}, {"contestId": 39, "index": "B", "name": "Company Income Growth", "type": "PROGRAMMING", "rating": 1300, "tags": ["greedy"]}, {"contestId": 39, "index": "A", "name": "C*++ Calculations", "type": "PROGRAMMING", "rating": 2000, "tags": ["expression parsing", "greedy"]}, {"contestId": 38, "index": "H", "name": "The Great Marathon", "type": "PROGRAMMING", "rating": 2400, "tags": ["dp"]}, {"contestId": 38, "index": "G", "name": "Queue", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures"]}, {"contestId": 38, "index": "F", "name": "Smart Boy", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp", "games", "strings"]}, {"contestId": 38, "index": "E", "name": "Let's Go Rolling!", "type": "PROGRAMMING", "rating": 1800, "tags": ["dp", "sortings"]}, {"contestId": 38, "index": "D", "name": "Vasya the Architect", "type": "PROGRAMMING", "rating": 1900, "tags": ["implementation"]}, {"contestId": 38, "index": "C", "name": "Blinds", "type": "PROGRAMMING", "rating": 1400, "tags": ["brute force"]}, {"contestId": 38, "index": "B", "name": "Chess", "type": "PROGRAMMING", "rating": 1200, "tags": ["brute force", "implementation", "math"]}, {"contestId": 38, "index": "A", "name": "Army", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"]}, {"contestId": 37, "index": "E", "name": "Trial for Chief", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["graphs", "greedy", "shortest paths"]}, {"contestId": 37, "index": "D", "name": "Lesson Timetable", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 37, "index": "C", "name": "Old Berland Language", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["data structures", "greedy", "trees"]}, {"contestId": 37, "index": "B", "name": "Computer Game", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["greedy", "implementation"]}, {"contestId": 37, "index": "A", "name": "Towers", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["sortings"]}, {"contestId": 36, "index": "E", "name": "Two Paths", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["constructive algorithms", "dsu", "graphs", "implementation"]}, {"contestId": 36, "index": "D", "name": "New Game with a Chess Piece", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["games"]}, {"contestId": 36, "index": "C", "name": "Bowls", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["geometry", "implementation"]}, {"contestId": 36, "index": "B", "name": "Fractal", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["implementation"]}, {"contestId": 36, "index": "A", "name": "Extra-terrestrial Intelligence", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["implementation"]}, {"contestId": 35, "index": "E", "name": "Parade", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["data structures", "sortings"]}, {"contestId": 35, "index": "D", "name": "Animals", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["dp", "greedy"]}, {"contestId": 35, "index": "C", "name": "Fire Again", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["brute force", "dfs and similar", "shortest paths"]}, {"contestId": 35, "index": "B", "name": "Warehouse", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["implementation"]}, {"contestId": 35, "index": "A", "name": "Shell Game", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"]}, {"contestId": 34, "index": "E", "name": "Collisions", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["brute force", "implementation", "math"]}, {"contestId": 34, "index": "D", "name": "Road Map", "type": "PROGRAMMING", "points": 2000.0, "rating": 1600, "tags": ["dfs and similar", "graphs"]}, {"contestId": 34, "index": "C", "name": "Page Numbers", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["expression parsing", "implementation", "sortings", "strings"]}, {"contestId": 34, "index": "B", "name": "Sale", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["greedy", "sortings"]}, {"contestId": 34, "index": "A", "name": "Reconnaissance 2", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"]}, {"contestId": 33, "index": "E", "name": "Helper", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": []}, {"contestId": 33, "index": "D", "name": "Knights", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["geometry", "graphs", "shortest paths", "sortings"]}, {"contestId": 33, "index": "C", "name": "Wonderful Randomized Sum", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["greedy"]}, {"contestId": 33, "index": "B", "name": "String Problem", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["shortest paths"]}, {"contestId": 33, "index": "A", "name": "What is for dinner?", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["greedy", "implementation"]}, {"contestId": 32, "index": "E", "name": "Hide-and-Seek", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["geometry", "implementation"]}, {"contestId": 32, "index": "D", "name": "Constellation", "type": "PROGRAMMING", "points": 2000.0, "rating": 1600, "tags": ["implementation"]}, {"contestId": 32, "index": "C", "name": "Flea", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["math"]}, {"contestId": 32, "index": "B", "name": "Borze", "type": "PROGRAMMING", "points": 1000.0, "rating": 800, "tags": ["expression parsing", "implementation"]}, {"contestId": 32, "index": "A", "name": "Reconnaissance", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force"]}, {"contestId": 31, "index": "E", "name": "TV Game", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["dp"]}, {"contestId": 31, "index": "D", "name": "Chocolate", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["dfs and similar", "implementation"]}, {"contestId": 31, "index": "C", "name": "Schedule", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["implementation"]}, {"contestId": 31, "index": "B", "name": "Sysadmin Bob", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["greedy", "implementation", "strings"]}, {"contestId": 31, "index": "A", "name": "Worms Evolution", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["implementation"]}, {"contestId": 30, "index": "E", "name": "Tricky and Clever Password", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["binary search", "constructive algorithms", "data structures", "greedy", "hashing", "strings"]}, {"contestId": 30, "index": "D", "name": "King's Problem?", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["geometry", "greedy"]}, {"contestId": 30, "index": "C", "name": "Shooting Gallery", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["dp", "probabilities"]}, {"contestId": 30, "index": "B", "name": "Codeforces World Finals", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["implementation"]}, {"contestId": 30, "index": "A", "name": "Accounting", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["brute force", "math"]}, {"contestId": 29, "index": "E", "name": "Quarrel", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["graphs", "shortest paths"]}, {"contestId": 29, "index": "D", "name": "Ant on the Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["constructive algorithms", "dfs and similar", "trees"]}, {"contestId": 29, "index": "C", "name": "Mail Stamps", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["data structures", "dfs and similar", "graphs", "implementation"]}, {"contestId": 29, "index": "B", "name": "Traffic Lights", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["implementation"]}, {"contestId": 29, "index": "A", "name": "Spit Problem", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["brute force"]}, {"contestId": 28, "index": "E", "name": "DravDe saves the world", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["geometry", "math"]}, {"contestId": 28, "index": "D", "name": "Don't fear, DravDe is kind", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["binary search", "data structures", "dp", "hashing"]}, {"contestId": 28, "index": "C", "name": "Bath Queue", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["combinatorics", "dp", "probabilities"]}, {"contestId": 28, "index": "B", "name": "pSort", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["dfs and similar", "dsu", "graphs"]}, {"contestId": 28, "index": "A", "name": "Bender Problem", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["implementation"]}, {"contestId": 27, "index": "E", "name": "Number With The Given Amount Of Divisors", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["brute force", "dp", "number theory"]}, {"contestId": 27, "index": "D", "name": "Ring Road 2", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["2-sat", "dfs and similar", "dsu", "graphs"]}, {"contestId": 27, "index": "C", "name": "Unordered Subsequence", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["constructive algorithms", "greedy"]}, {"contestId": 27, "index": "B", "name": "Tournament", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["bitmasks", "brute force", "dfs and similar", "greedy"]}, {"contestId": 27, "index": "A", "name": "Next Test", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["implementation", "sortings"]}, {"contestId": 26, "index": "E", "name": "Multithreading", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["constructive algorithms"]}, {"contestId": 26, "index": "D", "name": "Tickets", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["combinatorics", "math", "probabilities"]}, {"contestId": 26, "index": "C", "name": "Parquet", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["combinatorics", "constructive algorithms", "greedy", "implementation"]}, {"contestId": 26, "index": "B", "name": "Regular Bracket Sequence", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["greedy"]}, {"contestId": 26, "index": "A", "name": "Almost Prime", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["number theory"]}, {"contestId": 25, "index": "E", "name": "Test", "type": "PROGRAMMING", "rating": 2200, "tags": ["hashing", "strings"]}, {"contestId": 25, "index": "D", "name": "Roads not only in Berland", "type": "PROGRAMMING", "rating": 1900, "tags": ["dsu", "graphs", "trees"]}, {"contestId": 25, "index": "C", "name": "Roads in Berland", "type": "PROGRAMMING", "rating": 1900, "tags": ["graphs", "shortest paths"]}, {"contestId": 25, "index": "B", "name": "Phone numbers", "type": "PROGRAMMING", "rating": 1100, "tags": ["implementation"]}, {"contestId": 25, "index": "A", "name": "IQ test", "type": "PROGRAMMING", "rating": 1300, "tags": ["brute force"]}, {"contestId": 24, "index": "E", "name": "Berland collider", "type": "PROGRAMMING", "rating": 2300, "tags": ["binary search"]}, {"contestId": 24, "index": "D", "name": "Broken robot", "type": "PROGRAMMING", "rating": 2400, "tags": ["dp", "probabilities"]}, {"contestId": 24, "index": "C", "name": "Sequence of points", "type": "PROGRAMMING", "rating": 1800, "tags": ["geometry", "implementation", "math"]}, {"contestId": 24, "index": "B", "name": "F1 Champions", "type": "PROGRAMMING", "rating": 1500, "tags": ["implementation"]}, {"contestId": 24, "index": "A", "name": "Ring road", "type": "PROGRAMMING", "rating": 1400, "tags": ["graphs"]}, {"contestId": 23, "index": "E", "name": "Tree", "type": "PROGRAMMING", "rating": 2500, "tags": ["dp"]}, {"contestId": 23, "index": "D", "name": "Tetragon", "type": "PROGRAMMING", "rating": 2600, "tags": ["geometry", "math"]}, {"contestId": 23, "index": "C", "name": "Oranges and Apples", "type": "PROGRAMMING", "rating": 2500, "tags": ["constructive algorithms", "sortings"]}, {"contestId": 23, "index": "B", "name": "Party", "type": "PROGRAMMING", "rating": 1600, "tags": ["constructive algorithms", "graphs", "math"]}, {"contestId": 23, "index": "A", "name": "You're Given a String...", "type": "PROGRAMMING", "rating": 1200, "tags": ["brute force", "greedy"]}, {"contestId": 22, "index": "E", "name": "Scheme", "type": "PROGRAMMING", "rating": 2300, "tags": ["dfs and similar", "graphs", "trees"]}, {"contestId": 22, "index": "D", "name": "Segments", "type": "PROGRAMMING", "rating": 1900, "tags": ["greedy", "sortings"]}, {"contestId": 22, "index": "C", "name": "System Administrator", "type": "PROGRAMMING", "rating": 1700, "tags": ["graphs"]}, {"contestId": 22, "index": "B", "name": "Bargaining Table", "type": "PROGRAMMING", "rating": 1500, "tags": ["brute force", "dp"]}, {"contestId": 22, "index": "A", "name": "Second Order Statistics", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force"]}, {"contestId": 21, "index": "D", "name": "Traveling Graph", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["bitmasks", "graph matchings", "graphs"]}, {"contestId": 21, "index": "C", "name": "Stripe 2", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["binary search", "dp", "sortings"]}, {"contestId": 21, "index": "B", "name": "Intersection", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["implementation", "math"]}, {"contestId": 21, "index": "A", "name": "Jabber ID", "type": "PROGRAMMING", "points": 500.0, "rating": 1900, "tags": ["implementation", "strings"]}, {"contestId": 20, "index": "C", "name": "Dijkstra?", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["graphs", "shortest paths"]}, {"contestId": 20, "index": "B", "name": "Equation", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["math"]}, {"contestId": 20, "index": "A", "name": "BerOS file system", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["implementation"]}, {"contestId": 19, "index": "E", "name": "Fairy", "type": "PROGRAMMING", "rating": 2900, "tags": ["dfs and similar", "divide and conquer", "dsu"]}, {"contestId": 19, "index": "D", "name": "Points", "type": "PROGRAMMING", "rating": 2800, "tags": ["data structures"]}, {"contestId": 19, "index": "C", "name": "Deletion of Repeats", "type": "PROGRAMMING", "rating": 2200, "tags": ["greedy", "hashing", "string suffix structures"]}, {"contestId": 19, "index": "B", "name": "Checkout Assistant", "type": "PROGRAMMING", "rating": 1900, "tags": ["dp"]}, {"contestId": 19, "index": "A", "name": "World Football Cup", "type": "PROGRAMMING", "rating": 1400, "tags": ["implementation"]}, {"contestId": 18, "index": "E", "name": "Flag 2", "type": "PROGRAMMING", "rating": 2000, "tags": ["dp"]}, {"contestId": 18, "index": "D", "name": "Seller Bob", "type": "PROGRAMMING", "rating": 2000, "tags": ["brute force", "dp", "greedy"]}, {"contestId": 18, "index": "C", "name": "Stripe", "type": "PROGRAMMING", "rating": 1200, "tags": ["data structures", "implementation"]}, {"contestId": 18, "index": "B", "name": "Platforms", "type": "PROGRAMMING", "rating": 1700, "tags": ["brute force", "math"]}, {"contestId": 18, "index": "A", "name": "Triangle", "type": "PROGRAMMING", "rating": 1500, "tags": ["brute force", "geometry"]}, {"contestId": 17, "index": "E", "name": "Palisection", "type": "PROGRAMMING", "rating": 2900, "tags": ["strings"]}, {"contestId": 17, "index": "D", "name": "Notepad", "type": "PROGRAMMING", "rating": 2400, "tags": ["number theory"]}, {"contestId": 17, "index": "C", "name": "Balance", "type": "PROGRAMMING", "rating": 2500, "tags": ["dp"]}, {"contestId": 17, "index": "B", "name": "Hierarchy", "type": "PROGRAMMING", "rating": 1500, "tags": ["dfs and similar", "dsu", "greedy", "shortest paths"]}, {"contestId": 17, "index": "A", "name": "Noldbach problem", "type": "PROGRAMMING", "rating": 1000, "tags": ["brute force", "math", "number theory"]}, {"contestId": 16, "index": "E", "name": "Fish", "type": "PROGRAMMING", "rating": 1900, "tags": ["bitmasks", "dp", "probabilities"]}, {"contestId": 16, "index": "D", "name": "Logging", "type": "PROGRAMMING", "rating": 1900, "tags": ["implementation", "strings"]}, {"contestId": 16, "index": "C", "name": "Monitor", "type": "PROGRAMMING", "rating": 1800, "tags": ["binary search", "number theory"]}, {"contestId": 16, "index": "B", "name": "Burglar and Matches", "type": "PROGRAMMING", "rating": 900, "tags": ["greedy", "implementation", "sortings"]}, {"contestId": 16, "index": "A", "name": "Flag", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"]}, {"contestId": 15, "index": "E", "name": "Triangles", "type": "PROGRAMMING", "rating": 2600, "tags": ["combinatorics", "dp"]}, {"contestId": 15, "index": "D", "name": "Map", "type": "PROGRAMMING", "rating": 2500, "tags": ["data structures", "implementation", "sortings"]}, {"contestId": 15, "index": "C", "name": "Industrial Nim", "type": "PROGRAMMING", "rating": 2000, "tags": ["games"]}, {"contestId": 15, "index": "B", "name": "Laser", "type": "PROGRAMMING", "rating": 1800, "tags": ["math"]}, {"contestId": 15, "index": "A", "name": "Cottage Village", "type": "PROGRAMMING", "rating": 1200, "tags": ["implementation", "sortings"]}, {"contestId": 14, "index": "E", "name": "Camels", "type": "PROGRAMMING", "rating": 1900, "tags": ["dp"]}, {"contestId": 14, "index": "D", "name": "Two Paths", "type": "PROGRAMMING", "rating": 1900, "tags": ["dfs and similar", "dp", "graphs", "shortest paths", "trees", "two pointers"]}, {"contestId": 14, "index": "C", "name": "Four Segments", "type": "PROGRAMMING", "rating": 1700, "tags": ["brute force", "constructive algorithms", "geometry", "implementation", "math"]}, {"contestId": 14, "index": "B", "name": "Young Photographer", "type": "PROGRAMMING", "rating": 1000, "tags": ["implementation"]}, {"contestId": 14, "index": "A", "name": "Letter", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"]}, {"contestId": 13, "index": "E", "name": "Holes", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "dsu"]}, {"contestId": 13, "index": "D", "name": "Triangles", "type": "PROGRAMMING", "rating": 2600, "tags": ["dp", "geometry"]}, {"contestId": 13, "index": "C", "name": "Sequence", "type": "PROGRAMMING", "rating": 2200, "tags": ["dp", "sortings"]}, {"contestId": 13, "index": "B", "name": "Letter A", "type": "PROGRAMMING", "rating": 2000, "tags": ["geometry", "implementation"]}, {"contestId": 13, "index": "A", "name": "Numbers", "type": "PROGRAMMING", "rating": 1000, "tags": ["implementation", "math"]}, {"contestId": 12, "index": "E", "name": "Start of the session", "type": "PROGRAMMING", "rating": 2100, "tags": ["constructive algorithms"]}, {"contestId": 12, "index": "D", "name": "Ball", "type": "PROGRAMMING", "rating": 2400, "tags": ["data structures", "sortings"]}, {"contestId": 12, "index": "C", "name": "Fruits", "type": "PROGRAMMING", "rating": 1100, "tags": ["greedy", "implementation", "sortings"]}, {"contestId": 12, "index": "B", "name": "Correct Solution?", "type": "PROGRAMMING", "rating": 1100, "tags": ["implementation", "sortings"]}, {"contestId": 12, "index": "A", "name": "Super Agent", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"]}, {"contestId": 11, "index": "E", "name": "Forward, march!", "type": "PROGRAMMING", "rating": 2800, "tags": ["binary search", "dp", "greedy"]}, {"contestId": 11, "index": "D", "name": "A Simple Task", "type": "PROGRAMMING", "rating": 2200, "tags": ["bitmasks", "dp", "graphs"]}, {"contestId": 11, "index": "C", "name": "How Many Squares?", "type": "PROGRAMMING", "rating": 2200, "tags": ["implementation"]}, {"contestId": 11, "index": "B", "name": "Jumping Jack", "type": "PROGRAMMING", "rating": 1600, "tags": ["math"]}, {"contestId": 11, "index": "A", "name": "Increasing Sequence", "type": "PROGRAMMING", "rating": 900, "tags": ["constructive algorithms", "implementation", "math"]}, {"contestId": 10, "index": "E", "name": "Greedy Change", "type": "PROGRAMMING", "rating": 2600, "tags": ["constructive algorithms"]}, {"contestId": 10, "index": "D", "name": "LCIS", "type": "PROGRAMMING", "rating": 2800, "tags": ["dp"]}, {"contestId": 10, "index": "C", "name": "Digital Root", "type": "PROGRAMMING", "rating": 2000, "tags": ["number theory"]}, {"contestId": 10, "index": "B", "name": "Cinema Cashier", "type": "PROGRAMMING", "rating": 1500, "tags": ["dp", "implementation"]}, {"contestId": 10, "index": "A", "name": "Power Consumption Calculation", "type": "PROGRAMMING", "rating": 900, "tags": ["implementation"]}, {"contestId": 9, "index": "E", "name": "Interestring graph and Apples", "type": "PROGRAMMING", "rating": 2300, "tags": ["dfs and similar", "dsu", "graphs"]}, {"contestId": 9, "index": "D", "name": "How many trees?", "type": "PROGRAMMING", "rating": 1900, "tags": ["combinatorics", "divide and conquer", "dp"]}, {"contestId": 9, "index": "C", "name": "Hexadecimal's Numbers", "type": "PROGRAMMING", "rating": 1200, "tags": ["brute force", "implementation", "math"]}, {"contestId": 9, "index": "B", "name": "Running Student", "type": "PROGRAMMING", "rating": 1200, "tags": ["brute force", "geometry", "implementation"]}, {"contestId": 9, "index": "A", "name": "Die Roll", "type": "PROGRAMMING", "rating": 800, "tags": ["math", "probabilities"]}, {"contestId": 8, "index": "E", "name": "Beads", "type": "PROGRAMMING", "rating": 2600, "tags": ["dp", "graphs"]}, {"contestId": 8, "index": "D", "name": "Two Friends", "type": "PROGRAMMING", "rating": 2600, "tags": ["binary search", "geometry"]}, {"contestId": 8, "index": "C", "name": "Looking for Order", "type": "PROGRAMMING", "rating": 2000, "tags": ["bitmasks", "dp"]}, {"contestId": 8, "index": "B", "name": "Obsession with Robots", "type": "PROGRAMMING", "rating": 1400, "tags": ["constructive algorithms", "graphs", "implementation"]}, {"contestId": 8, "index": "A", "name": "Train and Peter", "type": "PROGRAMMING", "rating": 1200, "tags": ["strings"]}, {"contestId": 7, "index": "E", "name": "Defining Macros", "type": "PROGRAMMING", "rating": 2600, "tags": ["dp", "expression parsing", "implementation"]}, {"contestId": 7, "index": "D", "name": "Palindrome Degree", "type": "PROGRAMMING", "rating": 2200, "tags": ["hashing", "strings"]}, {"contestId": 7, "index": "C", "name": "Line", "type": "PROGRAMMING", "rating": 1800, "tags": ["math", "number theory"]}, {"contestId": 7, "index": "B", "name": "Memory Manager", "type": "PROGRAMMING", "rating": 1600, "tags": ["implementation"]}, {"contestId": 7, "index": "A", "name": "Kalevitch and Chess", "type": "PROGRAMMING", "rating": 1100, "tags": ["brute force", "constructive algorithms"]}, {"contestId": 6, "index": "E", "name": "Exposition", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "data structures", "dsu", "trees", "two pointers"]}, {"contestId": 6, "index": "D", "name": "Lizards and Basements 2", "type": "PROGRAMMING", "rating": 2600, "tags": ["brute force", "dp"]}, {"contestId": 6, "index": "C", "name": "Alice, Bob and Chocolate", "type": "PROGRAMMING", "rating": 1200, "tags": ["greedy", "two pointers"]}, {"contestId": 6, "index": "B", "name": "President's Office", "type": "PROGRAMMING", "rating": 1100, "tags": ["implementation"]}, {"contestId": 6, "index": "A", "name": "Triangle", "type": "PROGRAMMING", "rating": 900, "tags": ["brute force", "geometry"]}, {"contestId": 5, "index": "E", "name": "Bindian Signalizing", "type": "PROGRAMMING", "rating": 2400, "tags": ["data structures"]}, {"contestId": 5, "index": "D", "name": "Follow Traffic Rules", "type": "PROGRAMMING", "rating": 2100, "tags": ["implementation", "math"]}, {"contestId": 5, "index": "C", "name": "Longest Regular Bracket Sequence", "type": "PROGRAMMING", "rating": 1900, "tags": ["constructive algorithms", "data structures", "dp", "greedy", "sortings", "strings"]}, {"contestId": 5, "index": "B", "name": "Center Alignment", "type": "PROGRAMMING", "rating": 1200, "tags": ["implementation", "strings"]}, {"contestId": 5, "index": "A", "name": "Chat Servers Outgoing Traffic", "type": "PROGRAMMING", "rating": 1000, "tags": ["implementation"]}, {"contestId": 4, "index": "D", "name": "Mysterious Present", "type": "PROGRAMMING", "rating": 1700, "tags": ["dp", "sortings"]}, {"contestId": 4, "index": "C", "name": "Registration System", "type": "PROGRAMMING", "rating": 1300, "tags": ["data structures", "hashing", "implementation"]}, {"contestId": 4, "index": "B", "name": "Before an Exam", "type": "PROGRAMMING", "rating": 1200, "tags": ["constructive algorithms", "greedy"]}, {"contestId": 4, "index": "A", "name": "Watermelon", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "math"]}, {"contestId": 3, "index": "D", "name": "Least Cost Bracket Sequence", "type": "PROGRAMMING", "rating": 2600, "tags": ["greedy"]}, {"contestId": 3, "index": "C", "name": "Tic-tac-toe", "type": "PROGRAMMING", "rating": 1800, "tags": ["brute force", "games", "implementation"]}, {"contestId": 3, "index": "B", "name": "Lorry", "type": "PROGRAMMING", "rating": 1900, "tags": ["greedy", "sortings"]}, {"contestId": 3, "index": "A", "name": "Shortest path of the king", "type": "PROGRAMMING", "rating": 1000, "tags": ["greedy", "shortest paths"]}, {"contestId": 2, "index": "C", "name": "Commentator problem", "type": "PROGRAMMING", "rating": 2600, "tags": ["geometry"]}, {"contestId": 2, "index": "B", "name": "The least round way", "type": "PROGRAMMING", "rating": 2000, "tags": ["dp", "math"]}, {"contestId": 2, "index": "A", "name": "Winner", "type": "PROGRAMMING", "rating": 1500, "tags": ["hashing", "implementation"]}, {"contestId": 1, "index": "C", "name": "Ancient Berland Circus", "type": "PROGRAMMING", "rating": 2100, "tags": ["geometry", "math"]}, {"contestId": 1, "index": "B", "name": "Spreadsheet", "type": "PROGRAMMING", "rating": 1600, "tags": ["implementation", "math"]}, {"contestId": 1, "index": "A", "name": "Theatre Square", "type": "PROGRAMMING", "rating": 1000, "tags": ["math"]}], "problemStatistics": [{"contestId": 1375, "index": "I", "solvedCount": 7}, {"contestId": 1375, "index": "H", "solvedCount": 40}, {"contestId": 1375, "index": "G", "solvedCount": 506}, {"contestId": 1375, "index": "F", "solvedCount": 779}, {"contestId": 1375, "index": "E", "solvedCount": 1012}, {"contestId": 1375, "index": "D", "solvedCount": 4216}, {"contestId": 1375, "index": "C", "solvedCount": 8532}, {"contestId": 1375, "index": "B", "solvedCount": 9498}, {"contestId": 1375, "index": "A", "solvedCount": 10573}, {"contestId": 1374, "index": "F", "solvedCount": 691}, {"contestId": 1374, "index": "E2", "solvedCount": 440}, {"contestId": 1374, "index": "E1", "solvedCount": 7114}, {"contestId": 1374, "index": "D", "solvedCount": 10620}, {"contestId": 1374, "index": "C", "solvedCount": 16985}, {"contestId": 1374, "index": "B", "solvedCount": 17972}, {"contestId": 1374, "index": "A", "solvedCount": 19556}, {"contestId": 1373, "index": "G", "solvedCount": 350}, {"contestId": 1373, "index": "F", "solvedCount": 938}, {"contestId": 1373, "index": "E", "solvedCount": 1758}, {"contestId": 1373, "index": "D", "solvedCount": 7534}, {"contestId": 1373, "index": "C", "solvedCount": 11370}, {"contestId": 1373, "index": "B", "solvedCount": 15551}, {"contestId": 1373, "index": "A", "solvedCount": 14050}, {"contestId": 1371, "index": "F", "solvedCount": 199}, {"contestId": 1371, "index": "E2", "solvedCount": 1330}, {"contestId": 1371, "index": "E1", "solvedCount": 3009}, {"contestId": 1371, "index": "D", "solvedCount": 7606}, {"contestId": 1371, "index": "C", "solvedCount": 11447}, {"contestId": 1371, "index": "B", "solvedCount": 12701}, {"contestId": 1371, "index": "A", "solvedCount": 18536}, {"contestId": 1370, "index": "F2", "solvedCount": 690}, {"contestId": 1370, "index": "F1", "solvedCount": 797}, {"contestId": 1370, "index": "E", "solvedCount": 3039}, {"contestId": 1370, "index": "D", "solvedCount": 5085}, {"contestId": 1370, "index": "C", "solvedCount": 12121}, {"contestId": 1370, "index": "B", "solvedCount": 14509}, {"contestId": 1370, "index": "A", "solvedCount": 19913}, {"contestId": 1369, "index": "F", "solvedCount": 300}, {"contestId": 1369, "index": "E", "solvedCount": 1219}, {"contestId": 1369, "index": "D", "solvedCount": 5224}, {"contestId": 1369, "index": "C", "solvedCount": 10935}, {"contestId": 1369, "index": "B", "solvedCount": 14312}, {"contestId": 1369, "index": "A", "solvedCount": 19434}, {"contestId": 1368, "index": "H2", "solvedCount": 32}, {"contestId": 1368, "index": "H1", "solvedCount": 53}, {"contestId": 1368, "index": "G", "solvedCount": 77}, {"contestId": 1368, "index": "F", "solvedCount": 508}, {"contestId": 1368, "index": "E", "solvedCount": 1234}, {"contestId": 1368, "index": "D", "solvedCount": 6426}, {"contestId": 1368, "index": "C", "solvedCount": 8761}, {"contestId": 1368, "index": "B", "solvedCount": 10586}, {"contestId": 1368, "index": "A", "solvedCount": 17444}, {"contestId": 1367, "index": "F2", "solvedCount": 656}, {"contestId": 1367, "index": "F1", "solvedCount": 1644}, {"contestId": 1367, "index": "E", "solvedCount": 3154}, {"contestId": 1367, "index": "D", "solvedCount": 5079}, {"contestId": 1367, "index": "C", "solvedCount": 13298}, {"contestId": 1367, "index": "B", "solvedCount": 21048}, {"contestId": 1367, "index": "A", "solvedCount": 22942}, {"contestId": 1366, "index": "G", "solvedCount": 268}, {"contestId": 1366, "index": "F", "solvedCount": 312}, {"contestId": 1366, "index": "E", "solvedCount": 2444}, {"contestId": 1366, "index": "D", "solvedCount": 5166}, {"contestId": 1366, "index": "C", "solvedCount": 8517}, {"contestId": 1366, "index": "B", "solvedCount": 12160}, {"contestId": 1366, "index": "A", "solvedCount": 15378}, {"contestId": 1365, "index": "G", "solvedCount": 406}, {"contestId": 1365, "index": "F", "solvedCount": 2942}, {"contestId": 1365, "index": "E", "solvedCount": 5162}, {"contestId": 1365, "index": "D", "solvedCount": 7877}, {"contestId": 1365, "index": "C", "solvedCount": 12370}, {"contestId": 1365, "index": "B", "solvedCount": 14452}, {"contestId": 1365, "index": "A", "solvedCount": 15958}, {"contestId": 1364, "index": "E", "solvedCount": 548}, {"contestId": 1364, "index": "D", "solvedCount": 2365}, {"contestId": 1364, "index": "C", "solvedCount": 7486}, {"contestId": 1364, "index": "B", "solvedCount": 11353}, {"contestId": 1364, "index": "A", "solvedCount": 13355}, {"contestId": 1363, "index": "F", "solvedCount": 633}, {"contestId": 1363, "index": "E", "solvedCount": 4126}, {"contestId": 1363, "index": "D", "solvedCount": 2734}, {"contestId": 1363, "index": "C", "solvedCount": 9836}, {"contestId": 1363, "index": "B", "solvedCount": 12500}, {"contestId": 1363, "index": "A", "solvedCount": 17239}, {"contestId": 1362, "index": "C", "solvedCount": 10643}, {"contestId": 1362, "index": "B", "solvedCount": 12025}, {"contestId": 1362, "index": "A", "solvedCount": 14948}, {"contestId": 1361, "index": "F", "solvedCount": 50}, {"contestId": 1361, "index": "E", "solvedCount": 166}, {"contestId": 1361, "index": "D", "solvedCount": 171}, {"contestId": 1361, "index": "C", "solvedCount": 776}, {"contestId": 1361, "index": "B", "solvedCount": 2285}, {"contestId": 1361, "index": "A", "solvedCount": 5810}, {"contestId": 1360, "index": "H", "solvedCount": 2952}, {"contestId": 1360, "index": "G", "solvedCount": 4923}, {"contestId": 1360, "index": "F", "solvedCount": 6914}, {"contestId": 1360, "index": "E", "solvedCount": 13505}, {"contestId": 1360, "index": "D", "solvedCount": 14847}, {"contestId": 1360, "index": "C", "solvedCount": 17637}, {"contestId": 1360, "index": "B", "solvedCount": 21380}, {"contestId": 1360, "index": "A", "solvedCount": 21998}, {"contestId": 1359, "index": "F", "solvedCount": 210}, {"contestId": 1359, "index": "E", "solvedCount": 3626}, {"contestId": 1359, "index": "D", "solvedCount": 5194}, {"contestId": 1359, "index": "C", "solvedCount": 8314}, {"contestId": 1359, "index": "B", "solvedCount": 16044}, {"contestId": 1359, "index": "A", "solvedCount": 17421}, {"contestId": 1358, "index": "F", "solvedCount": 297}, {"contestId": 1358, "index": "E", "solvedCount": 1384}, {"contestId": 1358, "index": "D", "solvedCount": 5608}, {"contestId": 1358, "index": "C", "solvedCount": 11031}, {"contestId": 1358, "index": "B", "solvedCount": 16959}, {"contestId": 1358, "index": "A", "solvedCount": 20990}, {"contestId": 1357, "index": "E2", "solvedCount": 39}, {"contestId": 1357, "index": "E1", "solvedCount": 177}, {"contestId": 1357, "index": "D5", "solvedCount": 68}, {"contestId": 1357, "index": "D4", "solvedCount": 73}, {"contestId": 1357, "index": "D3", "solvedCount": 92}, {"contestId": 1357, "index": "D2", "solvedCount": 99}, {"contestId": 1357, "index": "D1", "solvedCount": 112}, {"contestId": 1357, "index": "C2", "solvedCount": 287}, {"contestId": 1357, "index": "C1", "solvedCount": 331}, {"contestId": 1357, "index": "B2", "solvedCount": 197}, {"contestId": 1357, "index": "B1", "solvedCount": 197}, {"contestId": 1357, "index": "A7", "solvedCount": 165}, {"contestId": 1357, "index": "A6", "solvedCount": 149}, {"contestId": 1357, "index": "A5", "solvedCount": 219}, {"contestId": 1357, "index": "A4", "solvedCount": 323}, {"contestId": 1357, "index": "A3", "solvedCount": 446}, {"contestId": 1357, "index": "A2", "solvedCount": 481}, {"contestId": 1357, "index": "A1", "solvedCount": 595}, {"contestId": 1356, "index": "D2", "solvedCount": 113}, {"contestId": 1356, "index": "D1", "solvedCount": 123}, {"contestId": 1356, "index": "C", "solvedCount": 279}, {"contestId": 1356, "index": "B2", "solvedCount": 258}, {"contestId": 1356, "index": "B1", "solvedCount": 257}, {"contestId": 1356, "index": "A5", "solvedCount": 302}, {"contestId": 1356, "index": "A4", "solvedCount": 426}, {"contestId": 1356, "index": "A3", "solvedCount": 425}, {"contestId": 1356, "index": "A2", "solvedCount": 449}, {"contestId": 1356, "index": "A1", "solvedCount": 563}, {"contestId": 1355, "index": "F", "solvedCount": 439}, {"contestId": 1355, "index": "E", "solvedCount": 2754}, {"contestId": 1355, "index": "D", "solvedCount": 10713}, {"contestId": 1355, "index": "C", "solvedCount": 6551}, {"contestId": 1355, "index": "B", "solvedCount": 14130}, {"contestId": 1355, "index": "A", "solvedCount": 15343}, {"contestId": 1354, "index": "G", "solvedCount": 310}, {"contestId": 1354, "index": "F", "solvedCount": 530}, {"contestId": 1354, "index": "E", "solvedCount": 1869}, {"contestId": 1354, "index": "D", "solvedCount": 4812}, {"contestId": 1354, "index": "C2", "solvedCount": 4233}, {"contestId": 1354, "index": "C1", "solvedCount": 10830}, {"contestId": 1354, "index": "B", "solvedCount": 13979}, {"contestId": 1354, "index": "A", "solvedCount": 16220}, {"contestId": 1353, "index": "F", "solvedCount": 2034}, {"contestId": 1353, "index": "E", "solvedCount": 4275}, {"contestId": 1353, "index": "D", "solvedCount": 10100}, {"contestId": 1353, "index": "C", "solvedCount": 19385}, {"contestId": 1353, "index": "B", "solvedCount": 22329}, {"contestId": 1353, "index": "A", "solvedCount": 21877}, {"contestId": 1352, "index": "G", "solvedCount": 9916}, {"contestId": 1352, "index": "F", "solvedCount": 8584}, {"contestId": 1352, "index": "E", "solvedCount": 9775}, {"contestId": 1352, "index": "D", "solvedCount": 14103}, {"contestId": 1352, "index": "C", "solvedCount": 18495}, {"contestId": 1352, "index": "B", "solvedCount": 16880}, {"contestId": 1352, "index": "A", "solvedCount": 25572}, {"contestId": 1351, "index": "C", "solvedCount": 4814}, {"contestId": 1351, "index": "B", "solvedCount": 8764}, {"contestId": 1351, "index": "A", "solvedCount": 10637}, {"contestId": 1350, "index": "B", "solvedCount": 10828}, {"contestId": 1350, "index": "A", "solvedCount": 16722}, {"contestId": 1349, "index": "F2", "solvedCount": 34}, {"contestId": 1349, "index": "F1", "solvedCount": 121}, {"contestId": 1349, "index": "E", "solvedCount": 24}, {"contestId": 1349, "index": "D", "solvedCount": 245}, {"contestId": 1349, "index": "C", "solvedCount": 2849}, {"contestId": 1349, "index": "B", "solvedCount": 4862}, {"contestId": 1349, "index": "A", "solvedCount": 8875}, {"contestId": 1348, "index": "F", "solvedCount": 481}, {"contestId": 1348, "index": "E", "solvedCount": 1326}, {"contestId": 1348, "index": "D", "solvedCount": 5981}, {"contestId": 1348, "index": "C", "solvedCount": 9566}, {"contestId": 1348, "index": "B", "solvedCount": 14399}, {"contestId": 1348, "index": "A", "solvedCount": 22557}, {"contestId": 1346, "index": "I", "solvedCount": 15}, {"contestId": 1346, "index": "H", "solvedCount": 20}, {"contestId": 1346, "index": "G", "solvedCount": 79}, {"contestId": 1346, "index": "F", "solvedCount": 146}, {"contestId": 1346, "index": "E", "solvedCount": 206}, {"contestId": 1346, "index": "D", "solvedCount": 310}, {"contestId": 1346, "index": "C", "solvedCount": 398}, {"contestId": 1346, "index": "B", "solvedCount": 764}, {"contestId": 1346, "index": "A", "solvedCount": 1223}, {"contestId": 1345, "index": "B", "solvedCount": 15203}, {"contestId": 1345, "index": "A", "solvedCount": 17578}, {"contestId": 1344, "index": "F", "solvedCount": 87}, {"contestId": 1344, "index": "E", "solvedCount": 70}, {"contestId": 1344, "index": "D", "solvedCount": 527}, {"contestId": 1344, "index": "C", "solvedCount": 1134}, {"contestId": 1344, "index": "B", "solvedCount": 4186}, {"contestId": 1344, "index": "A", "solvedCount": 10077}, {"contestId": 1343, "index": "F", "solvedCount": 833}, {"contestId": 1343, "index": "E", "solvedCount": 3231}, {"contestId": 1343, "index": "D", "solvedCount": 7895}, {"contestId": 1343, "index": "C", "solvedCount": 19048}, {"contestId": 1343, "index": "B", "solvedCount": 24981}, {"contestId": 1343, "index": "A", "solvedCount": 24477}, {"contestId": 1342, "index": "F", "solvedCount": 204}, {"contestId": 1342, "index": "E", "solvedCount": 1492}, {"contestId": 1342, "index": "D", "solvedCount": 4443}, {"contestId": 1342, "index": "C", "solvedCount": 9310}, {"contestId": 1342, "index": "B", "solvedCount": 16469}, {"contestId": 1342, "index": "A", "solvedCount": 20051}, {"contestId": 1341, "index": "B", "solvedCount": 13477}, {"contestId": 1341, "index": "A", "solvedCount": 18753}, {"contestId": 1340, "index": "F", "solvedCount": 100}, {"contestId": 1340, "index": "E", "solvedCount": 37}, {"contestId": 1340, "index": "D", "solvedCount": 473}, {"contestId": 1340, "index": "C", "solvedCount": 1434}, {"contestId": 1340, "index": "B", "solvedCount": 5507}, {"contestId": 1340, "index": "A", "solvedCount": 10532}, {"contestId": 1339, "index": "B", "solvedCount": 15221}, {"contestId": 1339, "index": "A", "solvedCount": 18409}, {"contestId": 1338, "index": "E", "solvedCount": 74}, {"contestId": 1338, "index": "D", "solvedCount": 425}, {"contestId": 1338, "index": "C", "solvedCount": 2150}, {"contestId": 1338, "index": "B", "solvedCount": 5487}, {"contestId": 1338, "index": "A", "solvedCount": 13216}, {"contestId": 1337, "index": "B", "solvedCount": 19901}, {"contestId": 1337, "index": "A", "solvedCount": 20520}, {"contestId": 1336, "index": "F", "solvedCount": 72}, {"contestId": 1336, "index": "E2", "solvedCount": 102}, {"contestId": 1336, "index": "E1", "solvedCount": 387}, {"contestId": 1336, "index": "D", "solvedCount": 275}, {"contestId": 1336, "index": "C", "solvedCount": 2244}, {"contestId": 1336, "index": "B", "solvedCount": 7616}, {"contestId": 1336, "index": "A", "solvedCount": 10765}, {"contestId": 1335, "index": "F", "solvedCount": 1346}, {"contestId": 1335, "index": "E2", "solvedCount": 5142}, {"contestId": 1335, "index": "E1", "solvedCount": 6923}, {"contestId": 1335, "index": "D", "solvedCount": 16207}, {"contestId": 1335, "index": "C", "solvedCount": 19166}, {"contestId": 1335, "index": "B", "solvedCount": 21658}, {"contestId": 1335, "index": "A", "solvedCount": 28651}, {"contestId": 1334, "index": "G", "solvedCount": 204}, {"contestId": 1334, "index": "F", "solvedCount": 609}, {"contestId": 1334, "index": "E", "solvedCount": 1685}, {"contestId": 1334, "index": "D", "solvedCount": 5042}, {"contestId": 1334, "index": "C", "solvedCount": 10158}, {"contestId": 1334, "index": "B", "solvedCount": 16214}, {"contestId": 1334, "index": "A", "solvedCount": 15927}, {"contestId": 1333, "index": "F", "solvedCount": 2861}, {"contestId": 1333, "index": "E", "solvedCount": 933}, {"contestId": 1333, "index": "D", "solvedCount": 2918}, {"contestId": 1333, "index": "C", "solvedCount": 7952}, {"contestId": 1333, "index": "B", "solvedCount": 15217}, {"contestId": 1333, "index": "A", "solvedCount": 16860}, {"contestId": 1332, "index": "G", "solvedCount": 147}, {"contestId": 1332, "index": "F", "solvedCount": 667}, {"contestId": 1332, "index": "E", "solvedCount": 2535}, {"contestId": 1332, "index": "D", "solvedCount": 5958}, {"contestId": 1332, "index": "C", "solvedCount": 9788}, {"contestId": 1332, "index": "B", "solvedCount": 11100}, {"contestId": 1332, "index": "A", "solvedCount": 15115}, {"contestId": 1331, "index": "H", "solvedCount": 456}, {"contestId": 1331, "index": "G", "solvedCount": 375}, {"contestId": 1331, "index": "F", "solvedCount": 416}, {"contestId": 1331, "index": "E", "solvedCount": 986}, {"contestId": 1331, "index": "D", "solvedCount": 10101}, {"contestId": 1331, "index": "C", "solvedCount": 2635}, {"contestId": 1331, "index": "B", "solvedCount": 5758}, {"contestId": 1331, "index": "A", "solvedCount": 13127}, {"contestId": 1330, "index": "B", "solvedCount": 9810}, {"contestId": 1330, "index": "A", "solvedCount": 14303}, {"contestId": 1329, "index": "E", "solvedCount": 54}, {"contestId": 1329, "index": "D", "solvedCount": 150}, {"contestId": 1329, "index": "C", "solvedCount": 1167}, {"contestId": 1329, "index": "B", "solvedCount": 4555}, {"contestId": 1329, "index": "A", "solvedCount": 6288}, {"contestId": 1328, "index": "F", "solvedCount": 2102}, {"contestId": 1328, "index": "E", "solvedCount": 4488}, {"contestId": 1328, "index": "D", "solvedCount": 7646}, {"contestId": 1328, "index": "C", "solvedCount": 17286}, {"contestId": 1328, "index": "B", "solvedCount": 16354}, {"contestId": 1328, "index": "A", "solvedCount": 30260}, {"contestId": 1327, "index": "G", "solvedCount": 239}, {"contestId": 1327, "index": "F", "solvedCount": 722}, {"contestId": 1327, "index": "E", "solvedCount": 5610}, {"contestId": 1327, "index": "D", "solvedCount": 2274}, {"contestId": 1327, "index": "C", "solvedCount": 8981}, {"contestId": 1327, "index": "B", "solvedCount": 13150}, {"contestId": 1327, "index": "A", "solvedCount": 19070}, {"contestId": 1326, "index": "G", "solvedCount": 24}, {"contestId": 1326, "index": "F2", "solvedCount": 147}, {"contestId": 1326, "index": "F1", "solvedCount": 477}, {"contestId": 1326, "index": "E", "solvedCount": 1299}, {"contestId": 1326, "index": "D2", "solvedCount": 5730}, {"contestId": 1326, "index": "D1", "solvedCount": 7783}, {"contestId": 1326, "index": "C", "solvedCount": 10787}, {"contestId": 1326, "index": "B", "solvedCount": 16128}, {"contestId": 1326, "index": "A", "solvedCount": 16680}, {"contestId": 1325, "index": "F", "solvedCount": 981}, {"contestId": 1325, "index": "E", "solvedCount": 1153}, {"contestId": 1325, "index": "D", "solvedCount": 7037}, {"contestId": 1325, "index": "C", "solvedCount": 8580}, {"contestId": 1325, "index": "B", "solvedCount": 19112}, {"contestId": 1325, "index": "A", "solvedCount": 19102}, {"contestId": 1324, "index": "F", "solvedCount": 3882}, {"contestId": 1324, "index": "E", "solvedCount": 6324}, {"contestId": 1324, "index": "D", "solvedCount": 11687}, {"contestId": 1324, "index": "C", "solvedCount": 14807}, {"contestId": 1324, "index": "B", "solvedCount": 15739}, {"contestId": 1324, "index": "A", "solvedCount": 16801}, {"contestId": 1323, "index": "B", "solvedCount": 5692}, {"contestId": 1323, "index": "A", "solvedCount": 12317}, {"contestId": 1322, "index": "F", "solvedCount": 25}, {"contestId": 1322, "index": "E", "solvedCount": 69}, {"contestId": 1322, "index": "D", "solvedCount": 304}, {"contestId": 1322, "index": "C", "solvedCount": 1104}, {"contestId": 1322, "index": "B", "solvedCount": 2301}, {"contestId": 1322, "index": "A", "solvedCount": 8498}, {"contestId": 1321, "index": "C", "solvedCount": 5888}, {"contestId": 1321, "index": "A", "solvedCount": 10052}, {"contestId": 1320, "index": "F", "solvedCount": 35}, {"contestId": 1320, "index": "E", "solvedCount": 253}, {"contestId": 1320, "index": "D", "solvedCount": 690}, {"contestId": 1320, "index": "C", "solvedCount": 1997}, {"contestId": 1320, "index": "B", "solvedCount": 4017}, {"contestId": 1320, "index": "A", "solvedCount": 9205}, {"contestId": 1316, "index": "F", "solvedCount": 268}, {"contestId": 1316, "index": "E", "solvedCount": 1563}, {"contestId": 1316, "index": "D", "solvedCount": 2364}, {"contestId": 1316, "index": "C", "solvedCount": 5087}, {"contestId": 1316, "index": "B", "solvedCount": 7460}, {"contestId": 1316, "index": "A", "solvedCount": 13698}, {"contestId": 1315, "index": "C", "solvedCount": 5875}, {"contestId": 1315, "index": "B", "solvedCount": 5582}, {"contestId": 1315, "index": "A", "solvedCount": 8537}, {"contestId": 1313, "index": "E", "solvedCount": 234}, {"contestId": 1313, "index": "D", "solvedCount": 452}, {"contestId": 1313, "index": "C2", "solvedCount": 3508}, {"contestId": 1313, "index": "C1", "solvedCount": 6055}, {"contestId": 1313, "index": "B", "solvedCount": 4498}, {"contestId": 1313, "index": "A", "solvedCount": 10523}, {"contestId": 1312, "index": "G", "solvedCount": 447}, {"contestId": 1312, "index": "F", "solvedCount": 438}, {"contestId": 1312, "index": "E", "solvedCount": 2945}, {"contestId": 1312, "index": "D", "solvedCount": 5493}, {"contestId": 1312, "index": "C", "solvedCount": 9714}, {"contestId": 1312, "index": "B", "solvedCount": 14259}, {"contestId": 1312, "index": "A", "solvedCount": 16472}, {"contestId": 1311, "index": "F", "solvedCount": 2199}, {"contestId": 1311, "index": "E", "solvedCount": 1206}, {"contestId": 1311, "index": "D", "solvedCount": 5381}, {"contestId": 1311, "index": "C", "solvedCount": 10193}, {"contestId": 1311, "index": "B", "solvedCount": 11704}, {"contestId": 1311, "index": "A", "solvedCount": 20303}, {"contestId": 1310, "index": "F", "solvedCount": 28}, {"contestId": 1310, "index": "E", "solvedCount": 104}, {"contestId": 1310, "index": "D", "solvedCount": 726}, {"contestId": 1310, "index": "C", "solvedCount": 195}, {"contestId": 1310, "index": "B", "solvedCount": 324}, {"contestId": 1310, "index": "A", "solvedCount": 3296}, {"contestId": 1307, "index": "G", "solvedCount": 136}, {"contestId": 1307, "index": "F", "solvedCount": 229}, {"contestId": 1307, "index": "E", "solvedCount": 744}, {"contestId": 1307, "index": "D", "solvedCount": 3728}, {"contestId": 1307, "index": "C", "solvedCount": 7251}, {"contestId": 1307, "index": "B", "solvedCount": 8985}, {"contestId": 1307, "index": "A", "solvedCount": 11731}, {"contestId": 1305, "index": "H", "solvedCount": 28}, {"contestId": 1305, "index": "G", "solvedCount": 193}, {"contestId": 1305, "index": "F", "solvedCount": 1133}, {"contestId": 1305, "index": "E", "solvedCount": 2058}, {"contestId": 1305, "index": "D", "solvedCount": 3321}, {"contestId": 1305, "index": "C", "solvedCount": 7632}, {"contestId": 1305, "index": "B", "solvedCount": 7925}, {"contestId": 1305, "index": "A", "solvedCount": 10781}, {"contestId": 1304, "index": "F2", "solvedCount": 723}, {"contestId": 1304, "index": "F1", "solvedCount": 956}, {"contestId": 1304, "index": "E", "solvedCount": 2838}, {"contestId": 1304, "index": "D", "solvedCount": 4096}, {"contestId": 1304, "index": "C", "solvedCount": 9061}, {"contestId": 1304, "index": "B", "solvedCount": 11922}, {"contestId": 1304, "index": "A", "solvedCount": 16338}, {"contestId": 1303, "index": "G", "solvedCount": 289}, {"contestId": 1303, "index": "F", "solvedCount": 278}, {"contestId": 1303, "index": "E", "solvedCount": 1585}, {"contestId": 1303, "index": "D", "solvedCount": 4201}, {"contestId": 1303, "index": "C", "solvedCount": 7316}, {"contestId": 1303, "index": "B", "solvedCount": 10078}, {"contestId": 1303, "index": "A", "solvedCount": 16422}, {"contestId": 1302, "index": "J", "solvedCount": 8}, {"contestId": 1302, "index": "I", "solvedCount": 1}, {"contestId": 1302, "index": "H", "solvedCount": 8}, {"contestId": 1302, "index": "G", "solvedCount": 22}, {"contestId": 1302, "index": "F", "solvedCount": 65}, {"contestId": 1302, "index": "E", "solvedCount": 43}, {"contestId": 1302, "index": "D", "solvedCount": 75}, {"contestId": 1302, "index": "C", "solvedCount": 342}, {"contestId": 1302, "index": "B", "solvedCount": 135}, {"contestId": 1302, "index": "A", "solvedCount": 278}, {"contestId": 1301, "index": "F", "solvedCount": 570}, {"contestId": 1301, "index": "E", "solvedCount": 778}, {"contestId": 1301, "index": "D", "solvedCount": 2815}, {"contestId": 1301, "index": "C", "solvedCount": 5948}, {"contestId": 1301, "index": "B", "solvedCount": 8910}, {"contestId": 1301, "index": "A", "solvedCount": 13816}, {"contestId": 1300, "index": "B", "solvedCount": 12380}, {"contestId": 1300, "index": "A", "solvedCount": 14935}, {"contestId": 1299, "index": "E", "solvedCount": 55}, {"contestId": 1299, "index": "D", "solvedCount": 192}, {"contestId": 1299, "index": "C", "solvedCount": 2391}, {"contestId": 1299, "index": "B", "solvedCount": 3899}, {"contestId": 1299, "index": "A", "solvedCount": 8017}, {"contestId": 1297, "index": "I", "solvedCount": 13}, {"contestId": 1297, "index": "H", "solvedCount": 16}, {"contestId": 1297, "index": "G", "solvedCount": 45}, {"contestId": 1297, "index": "F", "solvedCount": 92}, {"contestId": 1297, "index": "E", "solvedCount": 154}, {"contestId": 1297, "index": "D", "solvedCount": 226}, {"contestId": 1297, "index": "C", "solvedCount": 348}, {"contestId": 1297, "index": "B", "solvedCount": 323}, {"contestId": 1297, "index": "A", "solvedCount": 792}, {"contestId": 1296, "index": "F", "solvedCount": 1702}, {"contestId": 1296, "index": "E2", "solvedCount": 2925}, {"contestId": 1296, "index": "E1", "solvedCount": 4212}, {"contestId": 1296, "index": "D", "solvedCount": 8790}, {"contestId": 1296, "index": "C", "solvedCount": 9177}, {"contestId": 1296, "index": "B", "solvedCount": 17041}, {"contestId": 1296, "index": "A", "solvedCount": 19545}, {"contestId": 1295, "index": "F", "solvedCount": 439}, {"contestId": 1295, "index": "E", "solvedCount": 1538}, {"contestId": 1295, "index": "D", "solvedCount": 4818}, {"contestId": 1295, "index": "C", "solvedCount": 7490}, {"contestId": 1295, "index": "B", "solvedCount": 6400}, {"contestId": 1295, "index": "A", "solvedCount": 15234}, {"contestId": 1294, "index": "F", "solvedCount": 2863}, {"contestId": 1294, "index": "E", "solvedCount": 3281}, {"contestId": 1294, "index": "D", "solvedCount": 6945}, {"contestId": 1294, "index": "C", "solvedCount": 14127}, {"contestId": 1294, "index": "B", "solvedCount": 13671}, {"contestId": 1294, "index": "A", "solvedCount": 20689}, {"contestId": 1293, "index": "B", "solvedCount": 13212}, {"contestId": 1293, "index": "A", "solvedCount": 10830}, {"contestId": 1292, "index": "F", "solvedCount": 58}, {"contestId": 1292, "index": "E", "solvedCount": 103}, {"contestId": 1292, "index": "D", "solvedCount": 470}, {"contestId": 1292, "index": "C", "solvedCount": 1191}, {"contestId": 1292, "index": "B", "solvedCount": 4006}, {"contestId": 1292, "index": "A", "solvedCount": 9054}, {"contestId": 1291, "index": "F", "solvedCount": 187}, {"contestId": 1291, "index": "B", "solvedCount": 8862}, {"contestId": 1291, "index": "A", "solvedCount": 12118}, {"contestId": 1290, "index": "F", "solvedCount": 49}, {"contestId": 1290, "index": "E", "solvedCount": 72}, {"contestId": 1290, "index": "D", "solvedCount": 269}, {"contestId": 1290, "index": "C", "solvedCount": 920}, {"contestId": 1290, "index": "B", "solvedCount": 3156}, {"contestId": 1290, "index": "A", "solvedCount": 5806}, {"contestId": 1288, "index": "F", "solvedCount": 178}, {"contestId": 1288, "index": "E", "solvedCount": 1962}, {"contestId": 1288, "index": "D", "solvedCount": 3567}, {"contestId": 1288, "index": "C", "solvedCount": 6566}, {"contestId": 1288, "index": "B", "solvedCount": 11496}, {"contestId": 1288, "index": "A", "solvedCount": 11908}, {"contestId": 1287, "index": "B", "solvedCount": 6438}, {"contestId": 1287, "index": "A", "solvedCount": 13710}, {"contestId": 1286, "index": "F", "solvedCount": 79}, {"contestId": 1286, "index": "E", "solvedCount": 75}, {"contestId": 1286, "index": "D", "solvedCount": 238}, {"contestId": 1286, "index": "C2", "solvedCount": 341}, {"contestId": 1286, "index": "C1", "solvedCount": 788}, {"contestId": 1286, "index": "B", "solvedCount": 2776}, {"contestId": 1286, "index": "A", "solvedCount": 5143}, {"contestId": 1285, "index": "F", "solvedCount": 458}, {"contestId": 1285, "index": "E", "solvedCount": 1051}, {"contestId": 1285, "index": "D", "solvedCount": 4281}, {"contestId": 1285, "index": "C", "solvedCount": 10780}, {"contestId": 1285, "index": "B", "solvedCount": 11220}, {"contestId": 1285, "index": "A", "solvedCount": 17954}, {"contestId": 1284, "index": "G", "solvedCount": 49}, {"contestId": 1284, "index": "F", "solvedCount": 130}, {"contestId": 1284, "index": "E", "solvedCount": 708}, {"contestId": 1284, "index": "D", "solvedCount": 2077}, {"contestId": 1284, "index": "C", "solvedCount": 5286}, {"contestId": 1284, "index": "B", "solvedCount": 7480}, {"contestId": 1284, "index": "A", "solvedCount": 14480}, {"contestId": 1283, "index": "F", "solvedCount": 835}, {"contestId": 1283, "index": "E", "solvedCount": 3741}, {"contestId": 1283, "index": "D", "solvedCount": 4203}, {"contestId": 1283, "index": "C", "solvedCount": 7527}, {"contestId": 1283, "index": "B", "solvedCount": 13747}, {"contestId": 1283, "index": "A", "solvedCount": 19091}, {"contestId": 1282, "index": "E", "solvedCount": 675}, {"contestId": 1282, "index": "D", "solvedCount": 1413}, {"contestId": 1282, "index": "C", "solvedCount": 2925}, {"contestId": 1282, "index": "B2", "solvedCount": 6219}, {"contestId": 1282, "index": "B1", "solvedCount": 7269}, {"contestId": 1282, "index": "A", "solvedCount": 10681}, {"contestId": 1281, "index": "B", "solvedCount": 5036}, {"contestId": 1281, "index": "A", "solvedCount": 13038}, {"contestId": 1280, "index": "F", "solvedCount": 30}, {"contestId": 1280, "index": "E", "solvedCount": 98}, {"contestId": 1280, "index": "D", "solvedCount": 383}, {"contestId": 1280, "index": "C", "solvedCount": 1470}, {"contestId": 1280, "index": "B", "solvedCount": 2500}, {"contestId": 1280, "index": "A", "solvedCount": 3280}, {"contestId": 1279, "index": "F", "solvedCount": 353}, {"contestId": 1279, "index": "E", "solvedCount": 203}, {"contestId": 1279, "index": "D", "solvedCount": 3415}, {"contestId": 1279, "index": "C", "solvedCount": 7116}, {"contestId": 1279, "index": "B", "solvedCount": 8644}, {"contestId": 1279, "index": "A", "solvedCount": 11547}, {"contestId": 1278, "index": "F", "solvedCount": 542}, {"contestId": 1278, "index": "E", "solvedCount": 1104}, {"contestId": 1278, "index": "D", "solvedCount": 2265}, {"contestId": 1278, "index": "C", "solvedCount": 4949}, {"contestId": 1278, "index": "B", "solvedCount": 7635}, {"contestId": 1278, "index": "A", "solvedCount": 9685}, {"contestId": 1277, "index": "D", "solvedCount": 2065}, {"contestId": 1277, "index": "B", "solvedCount": 7652}, {"contestId": 1277, "index": "A", "solvedCount": 8518}, {"contestId": 1276, "index": "F", "solvedCount": 86}, {"contestId": 1276, "index": "E", "solvedCount": 25}, {"contestId": 1276, "index": "D", "solvedCount": 174}, {"contestId": 1276, "index": "C", "solvedCount": 928}, {"contestId": 1276, "index": "B", "solvedCount": 2842}, {"contestId": 1276, "index": "A", "solvedCount": 7336}, {"contestId": 1275, "index": "F", "solvedCount": 91}, {"contestId": 1275, "index": "E3", "solvedCount": 56}, {"contestId": 1275, "index": "E2", "solvedCount": 130}, {"contestId": 1275, "index": "E1", "solvedCount": 254}, {"contestId": 1275, "index": "D", "solvedCount": 419}, {"contestId": 1275, "index": "C", "solvedCount": 654}, {"contestId": 1275, "index": "B", "solvedCount": 807}, {"contestId": 1275, "index": "A", "solvedCount": 869}, {"contestId": 1272, "index": "F", "solvedCount": 948}, {"contestId": 1272, "index": "E", "solvedCount": 2953}, {"contestId": 1272, "index": "D", "solvedCount": 7663}, {"contestId": 1272, "index": "C", "solvedCount": 11132}, {"contestId": 1272, "index": "B", "solvedCount": 8888}, {"contestId": 1272, "index": "A", "solvedCount": 13075}, {"contestId": 1271, "index": "F", "solvedCount": 95}, {"contestId": 1271, "index": "E", "solvedCount": 1885}, {"contestId": 1271, "index": "D", "solvedCount": 1462}, {"contestId": 1271, "index": "C", "solvedCount": 6785}, {"contestId": 1271, "index": "B", "solvedCount": 7103}, {"contestId": 1271, "index": "A", "solvedCount": 10823}, {"contestId": 1270, "index": "I", "solvedCount": 72}, {"contestId": 1270, "index": "H", "solvedCount": 162}, {"contestId": 1270, "index": "G", "solvedCount": 757}, {"contestId": 1270, "index": "F", "solvedCount": 571}, {"contestId": 1270, "index": "E", "solvedCount": 1436}, {"contestId": 1270, "index": "D", "solvedCount": 3251}, {"contestId": 1270, "index": "C", "solvedCount": 8188}, {"contestId": 1270, "index": "B", "solvedCount": 10094}, {"contestId": 1270, "index": "A", "solvedCount": 12947}, {"contestId": 1269, "index": "B", "solvedCount": 5994}, {"contestId": 1269, "index": "A", "solvedCount": 12198}, {"contestId": 1268, "index": "E", "solvedCount": 77}, {"contestId": 1268, "index": "D", "solvedCount": 130}, {"contestId": 1268, "index": "C", "solvedCount": 1040}, {"contestId": 1268, "index": "B", "solvedCount": 3579}, {"contestId": 1268, "index": "A", "solvedCount": 5590}, {"contestId": 1267, "index": "L", "solvedCount": 1580}, {"contestId": 1267, "index": "K", "solvedCount": 993}, {"contestId": 1267, "index": "J", "solvedCount": 1394}, {"contestId": 1267, "index": "I", "solvedCount": 434}, {"contestId": 1267, "index": "H", "solvedCount": 41}, {"contestId": 1267, "index": "G", "solvedCount": 144}, {"contestId": 1267, "index": "F", "solvedCount": 280}, {"contestId": 1267, "index": "E", "solvedCount": 1667}, {"contestId": 1267, "index": "D", "solvedCount": 130}, {"contestId": 1267, "index": "C", "solvedCount": 328}, {"contestId": 1267, "index": "B", "solvedCount": 2047}, {"contestId": 1267, "index": "A", "solvedCount": 496}, {"contestId": 1266, "index": "H", "solvedCount": 26}, {"contestId": 1266, "index": "G", "solvedCount": 29}, {"contestId": 1266, "index": "F", "solvedCount": 170}, {"contestId": 1266, "index": "E", "solvedCount": 1471}, {"contestId": 1266, "index": "D", "solvedCount": 2544}, {"contestId": 1266, "index": "C", "solvedCount": 6375}, {"contestId": 1266, "index": "B", "solvedCount": 8824}, {"contestId": 1266, "index": "A", "solvedCount": 9043}, {"contestId": 1265, "index": "E", "solvedCount": 1533}, {"contestId": 1265, "index": "B", "solvedCount": 7875}, {"contestId": 1265, "index": "A", "solvedCount": 9940}, {"contestId": 1264, "index": "F", "solvedCount": 73}, {"contestId": 1264, "index": "E", "solvedCount": 254}, {"contestId": 1264, "index": "D2", "solvedCount": 218}, {"contestId": 1264, "index": "D1", "solvedCount": 546}, {"contestId": 1264, "index": "C", "solvedCount": 720}, {"contestId": 1264, "index": "B", "solvedCount": 3995}, {"contestId": 1264, "index": "A", "solvedCount": 7066}, {"contestId": 1263, "index": "F", "solvedCount": 525}, {"contestId": 1263, "index": "E", "solvedCount": 1835}, {"contestId": 1263, "index": "D", "solvedCount": 6633}, {"contestId": 1263, "index": "C", "solvedCount": 7896}, {"contestId": 1263, "index": "B", "solvedCount": 7153}, {"contestId": 1263, "index": "A", "solvedCount": 10633}, {"contestId": 1261, "index": "F", "solvedCount": 133}, {"contestId": 1260, "index": "F", "solvedCount": 220}, {"contestId": 1260, "index": "E", "solvedCount": 1055}, {"contestId": 1260, "index": "D", "solvedCount": 2481}, {"contestId": 1260, "index": "C", "solvedCount": 5439}, {"contestId": 1260, "index": "B", "solvedCount": 9134}, {"contestId": 1260, "index": "A", "solvedCount": 9294}, {"contestId": 1257, "index": "G", "solvedCount": 325}, {"contestId": 1257, "index": "F", "solvedCount": 1175}, {"contestId": 1257, "index": "E", "solvedCount": 2757}, {"contestId": 1257, "index": "D", "solvedCount": 4911}, {"contestId": 1257, "index": "C", "solvedCount": 10052}, {"contestId": 1257, "index": "B", "solvedCount": 12043}, {"contestId": 1257, "index": "A", "solvedCount": 15056}, {"contestId": 1256, "index": "F", "solvedCount": 1888}, {"contestId": 1256, "index": "E", "solvedCount": 2354}, {"contestId": 1256, "index": "D", "solvedCount": 7193}, {"contestId": 1256, "index": "C", "solvedCount": 4617}, {"contestId": 1256, "index": "B", "solvedCount": 8499}, {"contestId": 1256, "index": "A", "solvedCount": 16160}, {"contestId": 1255, "index": "C", "solvedCount": 4476}, {"contestId": 1255, "index": "B", "solvedCount": 7764}, {"contestId": 1255, "index": "A", "solvedCount": 11955}, {"contestId": 1254, "index": "E", "solvedCount": 100}, {"contestId": 1254, "index": "D", "solvedCount": 471}, {"contestId": 1254, "index": "C", "solvedCount": 836}, {"contestId": 1254, "index": "B2", "solvedCount": 1895}, {"contestId": 1254, "index": "B1", "solvedCount": 2767}, {"contestId": 1254, "index": "A", "solvedCount": 3541}, {"contestId": 1253, "index": "F", "solvedCount": 641}, {"contestId": 1253, "index": "E", "solvedCount": 1726}, {"contestId": 1253, "index": "D", "solvedCount": 5156}, {"contestId": 1253, "index": "C", "solvedCount": 7567}, {"contestId": 1253, "index": "B", "solvedCount": 7152}, {"contestId": 1253, "index": "A", "solvedCount": 10979}, {"contestId": 1252, "index": "L", "solvedCount": 360}, {"contestId": 1252, "index": "K", "solvedCount": 1163}, {"contestId": 1252, "index": "J", "solvedCount": 449}, {"contestId": 1252, "index": "I", "solvedCount": 20}, {"contestId": 1252, "index": "H", "solvedCount": 1804}, {"contestId": 1252, "index": "G", "solvedCount": 892}, {"contestId": 1252, "index": "F", "solvedCount": 513}, {"contestId": 1252, "index": "E", "solvedCount": 808}, {"contestId": 1252, "index": "D", "solvedCount": 113}, {"contestId": 1252, "index": "C", "solvedCount": 2359}, {"contestId": 1252, "index": "B", "solvedCount": 330}, {"contestId": 1252, "index": "A", "solvedCount": 3751}, {"contestId": 1251, "index": "F", "solvedCount": 331}, {"contestId": 1251, "index": "E2", "solvedCount": 1265}, {"contestId": 1251, "index": "E1", "solvedCount": 1172}, {"contestId": 1251, "index": "D", "solvedCount": 3557}, {"contestId": 1251, "index": "C", "solvedCount": 6715}, {"contestId": 1251, "index": "B", "solvedCount": 7154}, {"contestId": 1251, "index": "A", "solvedCount": 11112}, {"contestId": 1250, "index": "N", "solvedCount": 1087}, {"contestId": 1250, "index": "M", "solvedCount": 256}, {"contestId": 1250, "index": "L", "solvedCount": 2306}, {"contestId": 1250, "index": "K", "solvedCount": 66}, {"contestId": 1250, "index": "J", "solvedCount": 1654}, {"contestId": 1250, "index": "I", "solvedCount": 94}, {"contestId": 1250, "index": "H", "solvedCount": 2496}, {"contestId": 1250, "index": "G", "solvedCount": 529}, {"contestId": 1250, "index": "F", "solvedCount": 4035}, {"contestId": 1250, "index": "E", "solvedCount": 562}, {"contestId": 1250, "index": "D", "solvedCount": 63}, {"contestId": 1250, "index": "C", "solvedCount": 919}, {"contestId": 1250, "index": "B", "solvedCount": 1683}, {"contestId": 1250, "index": "A", "solvedCount": 2539}, {"contestId": 1249, "index": "F", "solvedCount": 1005}, {"contestId": 1249, "index": "E", "solvedCount": 5048}, {"contestId": 1249, "index": "D2", "solvedCount": 2804}, {"contestId": 1249, "index": "D1", "solvedCount": 2878}, {"contestId": 1249, "index": "C2", "solvedCount": 7493}, {"contestId": 1249, "index": "C1", "solvedCount": 9135}, {"contestId": 1249, "index": "B2", "solvedCount": 9507}, {"contestId": 1249, "index": "B1", "solvedCount": 12555}, {"contestId": 1249, "index": "A", "solvedCount": 15533}, {"contestId": 1248, "index": "D1", "solvedCount": 1618}, {"contestId": 1248, "index": "B", "solvedCount": 10276}, {"contestId": 1248, "index": "A", "solvedCount": 9587}, {"contestId": 1246, "index": "F", "solvedCount": 50}, {"contestId": 1245, "index": "F", "solvedCount": 1058}, {"contestId": 1245, "index": "E", "solvedCount": 805}, {"contestId": 1245, "index": "D", "solvedCount": 3469}, {"contestId": 1245, "index": "C", "solvedCount": 8638}, {"contestId": 1245, "index": "B", "solvedCount": 9113}, {"contestId": 1245, "index": "A", "solvedCount": 10346}, {"contestId": 1244, "index": "G", "solvedCount": 886}, {"contestId": 1244, "index": "F", "solvedCount": 938}, {"contestId": 1244, "index": "E", "solvedCount": 2988}, {"contestId": 1244, "index": "D", "solvedCount": 4563}, {"contestId": 1244, "index": "C", "solvedCount": 4960}, {"contestId": 1244, "index": "B", "solvedCount": 10044}, {"contestId": 1244, "index": "A", "solvedCount": 13733}, {"contestId": 1243, "index": "B2", "solvedCount": 4847}, {"contestId": 1243, "index": "B1", "solvedCount": 10032}, {"contestId": 1243, "index": "A", "solvedCount": 11592}, {"contestId": 1242, "index": "E", "solvedCount": 53}, {"contestId": 1242, "index": "D", "solvedCount": 86}, {"contestId": 1242, "index": "C", "solvedCount": 971}, {"contestId": 1242, "index": "B", "solvedCount": 3749}, {"contestId": 1242, "index": "A", "solvedCount": 8172}, {"contestId": 1240, "index": "F", "solvedCount": 55}, {"contestId": 1239, "index": "F", "solvedCount": 56}, {"contestId": 1239, "index": "E", "solvedCount": 248}, {"contestId": 1239, "index": "D", "solvedCount": 946}, {"contestId": 1239, "index": "C", "solvedCount": 883}, {"contestId": 1239, "index": "B", "solvedCount": 699}, {"contestId": 1239, "index": "A", "solvedCount": 4963}, {"contestId": 1238, "index": "G", "solvedCount": 225}, {"contestId": 1238, "index": "F", "solvedCount": 990}, {"contestId": 1238, "index": "E", "solvedCount": 1523}, {"contestId": 1238, "index": "D", "solvedCount": 3797}, {"contestId": 1238, "index": "C", "solvedCount": 5093}, {"contestId": 1238, "index": "B", "solvedCount": 9053}, {"contestId": 1238, "index": "A", "solvedCount": 14143}, {"contestId": 1237, "index": "H", "solvedCount": 85}, {"contestId": 1237, "index": "G", "solvedCount": 44}, {"contestId": 1237, "index": "F", "solvedCount": 419}, {"contestId": 1237, "index": "E", "solvedCount": 819}, {"contestId": 1237, "index": "D", "solvedCount": 2548}, {"contestId": 1237, "index": "C2", "solvedCount": 2909}, {"contestId": 1237, "index": "C1", "solvedCount": 4380}, {"contestId": 1237, "index": "B", "solvedCount": 8182}, {"contestId": 1237, "index": "A", "solvedCount": 10145}, {"contestId": 1236, "index": "F", "solvedCount": 66}, {"contestId": 1236, "index": "E", "solvedCount": 417}, {"contestId": 1236, "index": "D", "solvedCount": 1327}, {"contestId": 1236, "index": "C", "solvedCount": 7034}, {"contestId": 1236, "index": "B", "solvedCount": 7147}, {"contestId": 1236, "index": "A", "solvedCount": 11813}, {"contestId": 1234, "index": "F", "solvedCount": 1373}, {"contestId": 1234, "index": "E", "solvedCount": 1751}, {"contestId": 1234, "index": "D", "solvedCount": 7098}, {"contestId": 1234, "index": "C", "solvedCount": 7798}, {"contestId": 1234, "index": "B2", "solvedCount": 10742}, {"contestId": 1234, "index": "B1", "solvedCount": 12757}, {"contestId": 1234, "index": "A", "solvedCount": 17859}, {"contestId": 1231, "index": "E", "solvedCount": 424}, {"contestId": 1231, "index": "C", "solvedCount": 1630}, {"contestId": 1230, "index": "B", "solvedCount": 12263}, {"contestId": 1230, "index": "A", "solvedCount": 15135}, {"contestId": 1228, "index": "F", "solvedCount": 304}, {"contestId": 1228, "index": "E", "solvedCount": 1395}, {"contestId": 1228, "index": "D", "solvedCount": 3789}, {"contestId": 1228, "index": "C", "solvedCount": 6066}, {"contestId": 1228, "index": "B", "solvedCount": 8750}, {"contestId": 1228, "index": "A", "solvedCount": 15354}, {"contestId": 1227, "index": "G", "solvedCount": 396}, {"contestId": 1227, "index": "F2", "solvedCount": 815}, {"contestId": 1227, "index": "F1", "solvedCount": 1087}, {"contestId": 1227, "index": "E", "solvedCount": 964}, {"contestId": 1227, "index": "D2", "solvedCount": 2842}, {"contestId": 1227, "index": "D1", "solvedCount": 4106}, {"contestId": 1227, "index": "C", "solvedCount": 3737}, {"contestId": 1227, "index": "B", "solvedCount": 5810}, {"contestId": 1227, "index": "A", "solvedCount": 6835}, {"contestId": 1225, "index": "G", "solvedCount": 158}, {"contestId": 1225, "index": "F", "solvedCount": 551}, {"contestId": 1225, "index": "E", "solvedCount": 1207}, {"contestId": 1225, "index": "D", "solvedCount": 3872}, {"contestId": 1225, "index": "C", "solvedCount": 5658}, {"contestId": 1225, "index": "B2", "solvedCount": 6866}, {"contestId": 1225, "index": "B1", "solvedCount": 8627}, {"contestId": 1225, "index": "A", "solvedCount": 10743}, {"contestId": 1223, "index": "G", "solvedCount": 113}, {"contestId": 1223, "index": "F", "solvedCount": 616}, {"contestId": 1223, "index": "E", "solvedCount": 1645}, {"contestId": 1223, "index": "D", "solvedCount": 2700}, {"contestId": 1223, "index": "C", "solvedCount": 5036}, {"contestId": 1223, "index": "B", "solvedCount": 9778}, {"contestId": 1223, "index": "A", "solvedCount": 15988}, {"contestId": 1221, "index": "G", "solvedCount": 223}, {"contestId": 1221, "index": "F", "solvedCount": 569}, {"contestId": 1221, "index": "E", "solvedCount": 712}, {"contestId": 1221, "index": "D", "solvedCount": 5004}, {"contestId": 1221, "index": "C", "solvedCount": 10849}, {"contestId": 1221, "index": "B", "solvedCount": 8341}, {"contestId": 1221, "index": "A", "solvedCount": 11015}, {"contestId": 1220, "index": "G", "solvedCount": 26}, {"contestId": 1220, "index": "F", "solvedCount": 406}, {"contestId": 1220, "index": "E", "solvedCount": 1517}, {"contestId": 1220, "index": "D", "solvedCount": 2636}, {"contestId": 1220, "index": "C", "solvedCount": 6767}, {"contestId": 1220, "index": "B", "solvedCount": 7956}, {"contestId": 1220, "index": "A", "solvedCount": 17138}, {"contestId": 1219, "index": "G", "solvedCount": 342}, {"contestId": 1219, "index": "C", "solvedCount": 979}, {"contestId": 1218, "index": "I", "solvedCount": 369}, {"contestId": 1218, "index": "H", "solvedCount": 62}, {"contestId": 1218, "index": "G", "solvedCount": 19}, {"contestId": 1218, "index": "F", "solvedCount": 1537}, {"contestId": 1218, "index": "E", "solvedCount": 209}, {"contestId": 1218, "index": "D", "solvedCount": 171}, {"contestId": 1218, "index": "C", "solvedCount": 99}, {"contestId": 1218, "index": "B", "solvedCount": 25}, {"contestId": 1218, "index": "A", "solvedCount": 53}, {"contestId": 1217, "index": "F", "solvedCount": 236}, {"contestId": 1217, "index": "E", "solvedCount": 1102}, {"contestId": 1217, "index": "D", "solvedCount": 3187}, {"contestId": 1217, "index": "C", "solvedCount": 4975}, {"contestId": 1217, "index": "B", "solvedCount": 7367}, {"contestId": 1217, "index": "A", "solvedCount": 9887}, {"contestId": 1216, "index": "F", "solvedCount": 1181}, {"contestId": 1216, "index": "E2", "solvedCount": 913}, {"contestId": 1216, "index": "E1", "solvedCount": 2282}, {"contestId": 1216, "index": "D", "solvedCount": 7143}, {"contestId": 1216, "index": "C", "solvedCount": 4300}, {"contestId": 1216, "index": "B", "solvedCount": 11189}, {"contestId": 1216, "index": "A", "solvedCount": 12489}, {"contestId": 1215, "index": "F", "solvedCount": 335}, {"contestId": 1215, "index": "E", "solvedCount": 1713}, {"contestId": 1215, "index": "D", "solvedCount": 4016}, {"contestId": 1215, "index": "C", "solvedCount": 6429}, {"contestId": 1215, "index": "B", "solvedCount": 7212}, {"contestId": 1215, "index": "A", "solvedCount": 8506}, {"contestId": 1214, "index": "H", "solvedCount": 227}, {"contestId": 1214, "index": "G", "solvedCount": 133}, {"contestId": 1214, "index": "F", "solvedCount": 280}, {"contestId": 1214, "index": "E", "solvedCount": 1802}, {"contestId": 1214, "index": "D", "solvedCount": 3487}, {"contestId": 1214, "index": "C", "solvedCount": 7534}, {"contestId": 1214, "index": "B", "solvedCount": 7283}, {"contestId": 1214, "index": "A", "solvedCount": 6333}, {"contestId": 1213, "index": "G", "solvedCount": 3052}, {"contestId": 1213, "index": "F", "solvedCount": 1426}, {"contestId": 1213, "index": "E", "solvedCount": 3262}, {"contestId": 1213, "index": "D2", "solvedCount": 6582}, {"contestId": 1213, "index": "D1", "solvedCount": 6833}, {"contestId": 1213, "index": "C", "solvedCount": 11699}, {"contestId": 1213, "index": "B", "solvedCount": 14137}, {"contestId": 1213, "index": "A", "solvedCount": 15625}, {"contestId": 1211, "index": "I", "solvedCount": 16}, {"contestId": 1211, "index": "H", "solvedCount": 18}, {"contestId": 1211, "index": "G", "solvedCount": 43}, {"contestId": 1211, "index": "F", "solvedCount": 81}, {"contestId": 1211, "index": "E", "solvedCount": 122}, {"contestId": 1211, "index": "D", "solvedCount": 148}, {"contestId": 1211, "index": "C", "solvedCount": 333}, {"contestId": 1211, "index": "B", "solvedCount": 550}, {"contestId": 1211, "index": "A", "solvedCount": 701}, {"contestId": 1210, "index": "G", "solvedCount": 31}, {"contestId": 1210, "index": "F2", "solvedCount": 66}, {"contestId": 1210, "index": "F1", "solvedCount": 87}, {"contestId": 1210, "index": "E", "solvedCount": 254}, {"contestId": 1210, "index": "D", "solvedCount": 1081}, {"contestId": 1210, "index": "C", "solvedCount": 2218}, {"contestId": 1210, "index": "B", "solvedCount": 4425}, {"contestId": 1210, "index": "A", "solvedCount": 4069}, {"contestId": 1209, "index": "H", "solvedCount": 57}, {"contestId": 1209, "index": "G2", "solvedCount": 107}, {"contestId": 1209, "index": "G1", "solvedCount": 1852}, {"contestId": 1209, "index": "F", "solvedCount": 535}, {"contestId": 1209, "index": "E2", "solvedCount": 1005}, {"contestId": 1209, "index": "E1", "solvedCount": 1749}, {"contestId": 1209, "index": "D", "solvedCount": 4726}, {"contestId": 1209, "index": "C", "solvedCount": 5017}, {"contestId": 1209, "index": "B", "solvedCount": 6190}, {"contestId": 1209, "index": "A", "solvedCount": 8987}, {"contestId": 1208, "index": "H", "solvedCount": 42}, {"contestId": 1208, "index": "G", "solvedCount": 396}, {"contestId": 1208, "index": "F", "solvedCount": 835}, {"contestId": 1208, "index": "E", "solvedCount": 1435}, {"contestId": 1208, "index": "D", "solvedCount": 3213}, {"contestId": 1208, "index": "C", "solvedCount": 4381}, {"contestId": 1208, "index": "B", "solvedCount": 6400}, {"contestId": 1208, "index": "A", "solvedCount": 11412}, {"contestId": 1207, "index": "G", "solvedCount": 378}, {"contestId": 1207, "index": "F", "solvedCount": 2373}, {"contestId": 1207, "index": "E", "solvedCount": 3575}, {"contestId": 1207, "index": "D", "solvedCount": 3840}, {"contestId": 1207, "index": "C", "solvedCount": 6499}, {"contestId": 1207, "index": "B", "solvedCount": 9728}, {"contestId": 1207, "index": "A", "solvedCount": 15939}, {"contestId": 1206, "index": "B", "solvedCount": 14586}, {"contestId": 1206, "index": "A", "solvedCount": 15119}, {"contestId": 1205, "index": "F", "solvedCount": 44}, {"contestId": 1205, "index": "E", "solvedCount": 105}, {"contestId": 1205, "index": "D", "solvedCount": 357}, {"contestId": 1205, "index": "C", "solvedCount": 821}, {"contestId": 1205, "index": "B", "solvedCount": 4153}, {"contestId": 1205, "index": "A", "solvedCount": 9998}, {"contestId": 1204, "index": "E", "solvedCount": 897}, {"contestId": 1204, "index": "D2", "solvedCount": 2150}, {"contestId": 1204, "index": "D1", "solvedCount": 2094}, {"contestId": 1204, "index": "C", "solvedCount": 4771}, {"contestId": 1204, "index": "B", "solvedCount": 12286}, {"contestId": 1204, "index": "A", "solvedCount": 12104}, {"contestId": 1203, "index": "F2", "solvedCount": 1419}, {"contestId": 1203, "index": "F1", "solvedCount": 1949}, {"contestId": 1203, "index": "E", "solvedCount": 7797}, {"contestId": 1203, "index": "D2", "solvedCount": 4385}, {"contestId": 1203, "index": "D1", "solvedCount": 5294}, {"contestId": 1203, "index": "C", "solvedCount": 10774}, {"contestId": 1203, "index": "B", "solvedCount": 10082}, {"contestId": 1203, "index": "A", "solvedCount": 11769}, {"contestId": 1202, "index": "F", "solvedCount": 200}, {"contestId": 1202, "index": "E", "solvedCount": 655}, {"contestId": 1202, "index": "D", "solvedCount": 3187}, {"contestId": 1202, "index": "C", "solvedCount": 1527}, {"contestId": 1202, "index": "B", "solvedCount": 3210}, {"contestId": 1202, "index": "A", "solvedCount": 6030}, {"contestId": 1201, "index": "E2", "solvedCount": 78}, {"contestId": 1201, "index": "E1", "solvedCount": 69}, {"contestId": 1201, "index": "D", "solvedCount": 1479}, {"contestId": 1201, "index": "C", "solvedCount": 8267}, {"contestId": 1201, "index": "B", "solvedCount": 9304}, {"contestId": 1201, "index": "A", "solvedCount": 10390}, {"contestId": 1200, "index": "F", "solvedCount": 627}, {"contestId": 1200, "index": "E", "solvedCount": 2982}, {"contestId": 1200, "index": "D", "solvedCount": 2937}, {"contestId": 1200, "index": "C", "solvedCount": 6984}, {"contestId": 1200, "index": "B", "solvedCount": 9443}, {"contestId": 1200, "index": "A", "solvedCount": 13182}, {"contestId": 1199, "index": "B", "solvedCount": 11999}, {"contestId": 1199, "index": "A", "solvedCount": 9917}, {"contestId": 1198, "index": "F", "solvedCount": 314}, {"contestId": 1198, "index": "E", "solvedCount": 553}, {"contestId": 1198, "index": "D", "solvedCount": 1619}, {"contestId": 1198, "index": "C", "solvedCount": 2069}, {"contestId": 1198, "index": "B", "solvedCount": 6086}, {"contestId": 1198, "index": "A", "solvedCount": 6184}, {"contestId": 1197, "index": "F", "solvedCount": 129}, {"contestId": 1197, "index": "E", "solvedCount": 937}, {"contestId": 1197, "index": "D", "solvedCount": 3361}, {"contestId": 1197, "index": "C", "solvedCount": 8764}, {"contestId": 1197, "index": "B", "solvedCount": 9803}, {"contestId": 1197, "index": "A", "solvedCount": 10363}, {"contestId": 1196, "index": "F", "solvedCount": 1348}, {"contestId": 1196, "index": "E", "solvedCount": 2437}, {"contestId": 1196, "index": "D2", "solvedCount": 5732}, {"contestId": 1196, "index": "D1", "solvedCount": 6615}, {"contestId": 1196, "index": "C", "solvedCount": 6623}, {"contestId": 1196, "index": "B", "solvedCount": 10417}, {"contestId": 1196, "index": "A", "solvedCount": 18418}, {"contestId": 1195, "index": "F", "solvedCount": 368}, {"contestId": 1195, "index": "E", "solvedCount": 1893}, {"contestId": 1195, "index": "D2", "solvedCount": 3296}, {"contestId": 1195, "index": "D1", "solvedCount": 5798}, {"contestId": 1195, "index": "C", "solvedCount": 10240}, {"contestId": 1195, "index": "B", "solvedCount": 11031}, {"contestId": 1195, "index": "A", "solvedCount": 9198}, {"contestId": 1194, "index": "G", "solvedCount": 100}, {"contestId": 1194, "index": "F", "solvedCount": 496}, {"contestId": 1194, "index": "E", "solvedCount": 1165}, {"contestId": 1194, "index": "D", "solvedCount": 4295}, {"contestId": 1194, "index": "C", "solvedCount": 8278}, {"contestId": 1194, "index": "B", "solvedCount": 7599}, {"contestId": 1194, "index": "A", "solvedCount": 11743}, {"contestId": 1193, "index": "C", "solvedCount": 18}, {"contestId": 1193, "index": "B", "solvedCount": 196}, {"contestId": 1193, "index": "A", "solvedCount": 99}, {"contestId": 1192, "index": "C", "solvedCount": 238}, {"contestId": 1192, "index": "B", "solvedCount": 290}, {"contestId": 1192, "index": "A", "solvedCount": 41}, {"contestId": 1191, "index": "B", "solvedCount": 7452}, {"contestId": 1191, "index": "A", "solvedCount": 13114}, {"contestId": 1190, "index": "F", "solvedCount": 47}, {"contestId": 1190, "index": "E", "solvedCount": 133}, {"contestId": 1190, "index": "D", "solvedCount": 1571}, {"contestId": 1190, "index": "C", "solvedCount": 1240}, {"contestId": 1190, "index": "B", "solvedCount": 4417}, {"contestId": 1190, "index": "A", "solvedCount": 6975}, {"contestId": 1189, "index": "C", "solvedCount": 6995}, {"contestId": 1189, "index": "B", "solvedCount": 8758}, {"contestId": 1189, "index": "A", "solvedCount": 11016}, {"contestId": 1188, "index": "E", "solvedCount": 91}, {"contestId": 1188, "index": "D", "solvedCount": 197}, {"contestId": 1188, "index": "C", "solvedCount": 868}, {"contestId": 1188, "index": "B", "solvedCount": 2653}, {"contestId": 1188, "index": "A2", "solvedCount": 784}, {"contestId": 1188, "index": "A1", "solvedCount": 5497}, {"contestId": 1187, "index": "G", "solvedCount": 250}, {"contestId": 1187, "index": "F", "solvedCount": 401}, {"contestId": 1187, "index": "E", "solvedCount": 2922}, {"contestId": 1187, "index": "D", "solvedCount": 1542}, {"contestId": 1187, "index": "C", "solvedCount": 4228}, {"contestId": 1187, "index": "B", "solvedCount": 8021}, {"contestId": 1187, "index": "A", "solvedCount": 11129}, {"contestId": 1186, "index": "F", "solvedCount": 506}, {"contestId": 1186, "index": "E", "solvedCount": 400}, {"contestId": 1186, "index": "D", "solvedCount": 6136}, {"contestId": 1186, "index": "C", "solvedCount": 4292}, {"contestId": 1186, "index": "A", "solvedCount": 19493}, {"contestId": 1185, "index": "G2", "solvedCount": 379}, {"contestId": 1185, "index": "G1", "solvedCount": 1544}, {"contestId": 1185, "index": "F", "solvedCount": 1184}, {"contestId": 1185, "index": "E", "solvedCount": 1838}, {"contestId": 1185, "index": "D", "solvedCount": 4520}, {"contestId": 1185, "index": "C2", "solvedCount": 5157}, {"contestId": 1185, "index": "C1", "solvedCount": 8158}, {"contestId": 1185, "index": "B", "solvedCount": 8865}, {"contestId": 1185, "index": "A", "solvedCount": 11352}, {"contestId": 1184, "index": "E3", "solvedCount": 281}, {"contestId": 1184, "index": "E2", "solvedCount": 606}, {"contestId": 1184, "index": "E1", "solvedCount": 1058}, {"contestId": 1184, "index": "D2", "solvedCount": 21}, {"contestId": 1184, "index": "D1", "solvedCount": 1739}, {"contestId": 1184, "index": "C3", "solvedCount": 24}, {"contestId": 1184, "index": "C2", "solvedCount": 460}, {"contestId": 1184, "index": "C1", "solvedCount": 1578}, {"contestId": 1184, "index": "B3", "solvedCount": 125}, {"contestId": 1184, "index": "B2", "solvedCount": 407}, {"contestId": 1184, "index": "B1", "solvedCount": 2711}, {"contestId": 1184, "index": "A3", "solvedCount": 47}, {"contestId": 1184, "index": "A2", "solvedCount": 728}, {"contestId": 1184, "index": "A1", "solvedCount": 3637}, {"contestId": 1183, "index": "H", "solvedCount": 1604}, {"contestId": 1183, "index": "G", "solvedCount": 1511}, {"contestId": 1183, "index": "F", "solvedCount": 1131}, {"contestId": 1183, "index": "E", "solvedCount": 2760}, {"contestId": 1183, "index": "D", "solvedCount": 8182}, {"contestId": 1183, "index": "C", "solvedCount": 8215}, {"contestId": 1183, "index": "B", "solvedCount": 12307}, {"contestId": 1183, "index": "A", "solvedCount": 15925}, {"contestId": 1182, "index": "F", "solvedCount": 179}, {"contestId": 1182, "index": "E", "solvedCount": 1506}, {"contestId": 1182, "index": "D", "solvedCount": 539}, {"contestId": 1182, "index": "C", "solvedCount": 3510}, {"contestId": 1182, "index": "B", "solvedCount": 7462}, {"contestId": 1182, "index": "A", "solvedCount": 12943}, {"contestId": 1181, "index": "E2", "solvedCount": 150}, {"contestId": 1181, "index": "E1", "solvedCount": 279}, {"contestId": 1181, "index": "D", "solvedCount": 1251}, {"contestId": 1181, "index": "C", "solvedCount": 2260}, {"contestId": 1181, "index": "B", "solvedCount": 4480}, {"contestId": 1181, "index": "A", "solvedCount": 8804}, {"contestId": 1180, "index": "B", "solvedCount": 6242}, {"contestId": 1180, "index": "A", "solvedCount": 13972}, {"contestId": 1179, "index": "E", "solvedCount": 67}, {"contestId": 1179, "index": "D", "solvedCount": 381}, {"contestId": 1179, "index": "C", "solvedCount": 1101}, {"contestId": 1179, "index": "B", "solvedCount": 3102}, {"contestId": 1179, "index": "A", "solvedCount": 6271}, {"contestId": 1178, "index": "H", "solvedCount": 47}, {"contestId": 1178, "index": "G", "solvedCount": 164}, {"contestId": 1178, "index": "F2", "solvedCount": 485}, {"contestId": 1178, "index": "F1", "solvedCount": 1140}, {"contestId": 1178, "index": "E", "solvedCount": 3028}, {"contestId": 1178, "index": "D", "solvedCount": 4798}, {"contestId": 1178, "index": "C", "solvedCount": 7003}, {"contestId": 1178, "index": "B", "solvedCount": 7772}, {"contestId": 1178, "index": "A", "solvedCount": 8043}, {"contestId": 1177, "index": "B", "solvedCount": 1311}, {"contestId": 1177, "index": "A", "solvedCount": 2507}, {"contestId": 1176, "index": "F", "solvedCount": 921}, {"contestId": 1176, "index": "E", "solvedCount": 4725}, {"contestId": 1176, "index": "D", "solvedCount": 3067}, {"contestId": 1176, "index": "C", "solvedCount": 8508}, {"contestId": 1176, "index": "B", "solvedCount": 10802}, {"contestId": 1176, "index": "A", "solvedCount": 13604}, {"contestId": 1175, "index": "G", "solvedCount": 92}, {"contestId": 1175, "index": "F", "solvedCount": 576}, {"contestId": 1175, "index": "E", "solvedCount": 1452}, {"contestId": 1175, "index": "D", "solvedCount": 3389}, {"contestId": 1175, "index": "C", "solvedCount": 4459}, {"contestId": 1175, "index": "B", "solvedCount": 6024}, {"contestId": 1175, "index": "A", "solvedCount": 11166}, {"contestId": 1174, "index": "F", "solvedCount": 762}, {"contestId": 1174, "index": "E", "solvedCount": 718}, {"contestId": 1174, "index": "D", "solvedCount": 3229}, {"contestId": 1174, "index": "C", "solvedCount": 8032}, {"contestId": 1174, "index": "B", "solvedCount": 8931}, {"contestId": 1174, "index": "A", "solvedCount": 10771}, {"contestId": 1173, "index": "B", "solvedCount": 6639}, {"contestId": 1173, "index": "A", "solvedCount": 11798}, {"contestId": 1172, "index": "F", "solvedCount": 83}, {"contestId": 1172, "index": "E", "solvedCount": 110}, {"contestId": 1172, "index": "D", "solvedCount": 273}, {"contestId": 1172, "index": "C2", "solvedCount": 415}, {"contestId": 1172, "index": "C1", "solvedCount": 630}, {"contestId": 1172, "index": "B", "solvedCount": 2605}, {"contestId": 1172, "index": "A", "solvedCount": 3558}, {"contestId": 1170, "index": "I", "solvedCount": 18}, {"contestId": 1170, "index": "H", "solvedCount": 25}, {"contestId": 1170, "index": "G", "solvedCount": 49}, {"contestId": 1170, "index": "F", "solvedCount": 89}, {"contestId": 1170, "index": "E", "solvedCount": 204}, {"contestId": 1170, "index": "D", "solvedCount": 334}, {"contestId": 1170, "index": "C", "solvedCount": 619}, {"contestId": 1170, "index": "B", "solvedCount": 793}, {"contestId": 1170, "index": "A", "solvedCount": 1101}, {"contestId": 1169, "index": "B", "solvedCount": 5952}, {"contestId": 1169, "index": "A", "solvedCount": 8490}, {"contestId": 1168, "index": "E", "solvedCount": 81}, {"contestId": 1168, "index": "D", "solvedCount": 146}, {"contestId": 1168, "index": "C", "solvedCount": 1420}, {"contestId": 1168, "index": "B", "solvedCount": 2248}, {"contestId": 1168, "index": "A", "solvedCount": 3969}, {"contestId": 1167, "index": "G", "solvedCount": 103}, {"contestId": 1167, "index": "F", "solvedCount": 859}, {"contestId": 1167, "index": "E", "solvedCount": 1469}, {"contestId": 1167, "index": "D", "solvedCount": 4866}, {"contestId": 1167, "index": "C", "solvedCount": 7813}, {"contestId": 1167, "index": "B", "solvedCount": 5910}, {"contestId": 1167, "index": "A", "solvedCount": 13304}, {"contestId": 1166, "index": "F", "solvedCount": 362}, {"contestId": 1166, "index": "E", "solvedCount": 1836}, {"contestId": 1166, "index": "D", "solvedCount": 1466}, {"contestId": 1166, "index": "C", "solvedCount": 5864}, {"contestId": 1166, "index": "B", "solvedCount": 8223}, {"contestId": 1166, "index": "A", "solvedCount": 10136}, {"contestId": 1165, "index": "F2", "solvedCount": 1159}, {"contestId": 1165, "index": "F1", "solvedCount": 1066}, {"contestId": 1165, "index": "E", "solvedCount": 4336}, {"contestId": 1165, "index": "D", "solvedCount": 7097}, {"contestId": 1165, "index": "C", "solvedCount": 7736}, {"contestId": 1165, "index": "B", "solvedCount": 11284}, {"contestId": 1165, "index": "A", "solvedCount": 9405}, {"contestId": 1163, "index": "F", "solvedCount": 138}, {"contestId": 1163, "index": "E", "solvedCount": 328}, {"contestId": 1163, "index": "D", "solvedCount": 801}, {"contestId": 1163, "index": "C2", "solvedCount": 2277}, {"contestId": 1163, "index": "C1", "solvedCount": 2208}, {"contestId": 1163, "index": "B2", "solvedCount": 4229}, {"contestId": 1163, "index": "B1", "solvedCount": 4600}, {"contestId": 1163, "index": "A", "solvedCount": 8624}, {"contestId": 1162, "index": "B", "solvedCount": 3834}, {"contestId": 1162, "index": "A", "solvedCount": 6091}, {"contestId": 1160, "index": "A2", "solvedCount": 0}, {"contestId": 1159, "index": "B", "solvedCount": 5154}, {"contestId": 1159, "index": "A", "solvedCount": 8482}, {"contestId": 1158, "index": "F", "solvedCount": 83}, {"contestId": 1158, "index": "E", "solvedCount": 55}, {"contestId": 1158, "index": "D", "solvedCount": 379}, {"contestId": 1158, "index": "C", "solvedCount": 1067}, {"contestId": 1158, "index": "B", "solvedCount": 1470}, {"contestId": 1158, "index": "A", "solvedCount": 4390}, {"contestId": 1157, "index": "G", "solvedCount": 529}, {"contestId": 1157, "index": "F", "solvedCount": 1284}, {"contestId": 1157, "index": "E", "solvedCount": 4563}, {"contestId": 1157, "index": "D", "solvedCount": 2134}, {"contestId": 1157, "index": "C2", "solvedCount": 4751}, {"contestId": 1157, "index": "C1", "solvedCount": 7669}, {"contestId": 1157, "index": "B", "solvedCount": 8829}, {"contestId": 1157, "index": "A", "solvedCount": 10215}, {"contestId": 1156, "index": "G", "solvedCount": 78}, {"contestId": 1156, "index": "F", "solvedCount": 624}, {"contestId": 1156, "index": "E", "solvedCount": 1372}, {"contestId": 1156, "index": "D", "solvedCount": 1768}, {"contestId": 1156, "index": "C", "solvedCount": 3462}, {"contestId": 1156, "index": "B", "solvedCount": 3937}, {"contestId": 1156, "index": "A", "solvedCount": 5708}, {"contestId": 1155, "index": "F", "solvedCount": 212}, {"contestId": 1155, "index": "E", "solvedCount": 923}, {"contestId": 1155, "index": "D", "solvedCount": 3742}, {"contestId": 1155, "index": "C", "solvedCount": 6403}, {"contestId": 1155, "index": "B", "solvedCount": 7718}, {"contestId": 1155, "index": "A", "solvedCount": 8490}, {"contestId": 1154, "index": "G", "solvedCount": 1539}, {"contestId": 1154, "index": "F", "solvedCount": 1619}, {"contestId": 1154, "index": "E", "solvedCount": 3428}, {"contestId": 1154, "index": "D", "solvedCount": 6601}, {"contestId": 1154, "index": "C", "solvedCount": 6829}, {"contestId": 1154, "index": "B", "solvedCount": 10720}, {"contestId": 1154, "index": "A", "solvedCount": 25366}, {"contestId": 1153, "index": "F", "solvedCount": 397}, {"contestId": 1153, "index": "E", "solvedCount": 1074}, {"contestId": 1153, "index": "D", "solvedCount": 2946}, {"contestId": 1153, "index": "C", "solvedCount": 5185}, {"contestId": 1153, "index": "B", "solvedCount": 6929}, {"contestId": 1153, "index": "A", "solvedCount": 8579}, {"contestId": 1152, "index": "F2", "solvedCount": 166}, {"contestId": 1152, "index": "F1", "solvedCount": 180}, {"contestId": 1152, "index": "E", "solvedCount": 615}, {"contestId": 1152, "index": "D", "solvedCount": 1569}, {"contestId": 1152, "index": "C", "solvedCount": 4060}, {"contestId": 1152, "index": "B", "solvedCount": 6142}, {"contestId": 1152, "index": "A", "solvedCount": 10495}, {"contestId": 1151, "index": "F", "solvedCount": 574}, {"contestId": 1151, "index": "E", "solvedCount": 1787}, {"contestId": 1151, "index": "D", "solvedCount": 5460}, {"contestId": 1151, "index": "C", "solvedCount": 3507}, {"contestId": 1151, "index": "B", "solvedCount": 5844}, {"contestId": 1151, "index": "A", "solvedCount": 8125}, {"contestId": 1150, "index": "B", "solvedCount": 7680}, {"contestId": 1150, "index": "A", "solvedCount": 8806}, {"contestId": 1149, "index": "E", "solvedCount": 146}, {"contestId": 1149, "index": "D", "solvedCount": 254}, {"contestId": 1149, "index": "C", "solvedCount": 481}, {"contestId": 1149, "index": "B", "solvedCount": 1377}, {"contestId": 1149, "index": "A", "solvedCount": 8936}, {"contestId": 1148, "index": "H", "solvedCount": 58}, {"contestId": 1148, "index": "G", "solvedCount": 100}, {"contestId": 1148, "index": "F", "solvedCount": 528}, {"contestId": 1148, "index": "E", "solvedCount": 1190}, {"contestId": 1148, "index": "D", "solvedCount": 3376}, {"contestId": 1148, "index": "C", "solvedCount": 3632}, {"contestId": 1148, "index": "B", "solvedCount": 5037}, {"contestId": 1148, "index": "A", "solvedCount": 10754}, {"contestId": 1147, "index": "F", "solvedCount": 72}, {"contestId": 1147, "index": "E", "solvedCount": 191}, {"contestId": 1147, "index": "D", "solvedCount": 510}, {"contestId": 1147, "index": "C", "solvedCount": 1710}, {"contestId": 1147, "index": "B", "solvedCount": 1906}, {"contestId": 1147, "index": "A", "solvedCount": 3560}, {"contestId": 1146, "index": "H", "solvedCount": 202}, {"contestId": 1146, "index": "G", "solvedCount": 385}, {"contestId": 1146, "index": "F", "solvedCount": 471}, {"contestId": 1146, "index": "E", "solvedCount": 532}, {"contestId": 1146, "index": "D", "solvedCount": 824}, {"contestId": 1146, "index": "C", "solvedCount": 2412}, {"contestId": 1146, "index": "B", "solvedCount": 4756}, {"contestId": 1146, "index": "A", "solvedCount": 12896}, {"contestId": 1145, "index": "G", "solvedCount": 90}, {"contestId": 1145, "index": "F", "solvedCount": 386}, {"contestId": 1145, "index": "E", "solvedCount": 286}, {"contestId": 1145, "index": "D", "solvedCount": 899}, {"contestId": 1145, "index": "C", "solvedCount": 629}, {"contestId": 1145, "index": "B", "solvedCount": 1160}, {"contestId": 1145, "index": "A", "solvedCount": 7139}, {"contestId": 1144, "index": "G", "solvedCount": 893}, {"contestId": 1144, "index": "F", "solvedCount": 4741}, {"contestId": 1144, "index": "E", "solvedCount": 2751}, {"contestId": 1144, "index": "D", "solvedCount": 6420}, {"contestId": 1144, "index": "C", "solvedCount": 9346}, {"contestId": 1144, "index": "B", "solvedCount": 10818}, {"contestId": 1144, "index": "A", "solvedCount": 12809}, {"contestId": 1143, "index": "C", "solvedCount": 5818}, {"contestId": 1143, "index": "B", "solvedCount": 6662}, {"contestId": 1143, "index": "A", "solvedCount": 10434}, {"contestId": 1142, "index": "E", "solvedCount": 125}, {"contestId": 1142, "index": "D", "solvedCount": 218}, {"contestId": 1142, "index": "C", "solvedCount": 705}, {"contestId": 1142, "index": "B", "solvedCount": 1458}, {"contestId": 1142, "index": "A", "solvedCount": 2568}, {"contestId": 1141, "index": "G", "solvedCount": 1271}, {"contestId": 1141, "index": "F2", "solvedCount": 2537}, {"contestId": 1141, "index": "F1", "solvedCount": 2509}, {"contestId": 1141, "index": "E", "solvedCount": 4373}, {"contestId": 1141, "index": "D", "solvedCount": 5732}, {"contestId": 1141, "index": "C", "solvedCount": 7615}, {"contestId": 1141, "index": "B", "solvedCount": 13537}, {"contestId": 1141, "index": "A", "solvedCount": 14638}, {"contestId": 1140, "index": "G", "solvedCount": 160}, {"contestId": 1140, "index": "F", "solvedCount": 370}, {"contestId": 1140, "index": "E", "solvedCount": 1312}, {"contestId": 1140, "index": "D", "solvedCount": 8654}, {"contestId": 1140, "index": "C", "solvedCount": 5628}, {"contestId": 1140, "index": "B", "solvedCount": 7821}, {"contestId": 1140, "index": "A", "solvedCount": 9433}, {"contestId": 1139, "index": "F", "solvedCount": 194}, {"contestId": 1139, "index": "E", "solvedCount": 832}, {"contestId": 1139, "index": "D", "solvedCount": 975}, {"contestId": 1139, "index": "C", "solvedCount": 6773}, {"contestId": 1139, "index": "B", "solvedCount": 9499}, {"contestId": 1139, "index": "A", "solvedCount": 12466}, {"contestId": 1138, "index": "B", "solvedCount": 2669}, {"contestId": 1138, "index": "A", "solvedCount": 8894}, {"contestId": 1137, "index": "F", "solvedCount": 192}, {"contestId": 1137, "index": "E", "solvedCount": 286}, {"contestId": 1137, "index": "D", "solvedCount": 660}, {"contestId": 1137, "index": "C", "solvedCount": 637}, {"contestId": 1137, "index": "B", "solvedCount": 3221}, {"contestId": 1137, "index": "A", "solvedCount": 3255}, {"contestId": 1136, "index": "E", "solvedCount": 754}, {"contestId": 1136, "index": "D", "solvedCount": 2788}, {"contestId": 1136, "index": "C", "solvedCount": 5752}, {"contestId": 1136, "index": "B", "solvedCount": 8747}, {"contestId": 1136, "index": "A", "solvedCount": 12520}, {"contestId": 1133, "index": "F2", "solvedCount": 1587}, {"contestId": 1133, "index": "F1", "solvedCount": 4140}, {"contestId": 1133, "index": "E", "solvedCount": 2547}, {"contestId": 1133, "index": "D", "solvedCount": 6101}, {"contestId": 1133, "index": "C", "solvedCount": 9025}, {"contestId": 1133, "index": "B", "solvedCount": 7694}, {"contestId": 1133, "index": "A", "solvedCount": 10373}, {"contestId": 1132, "index": "G", "solvedCount": 450}, {"contestId": 1132, "index": "F", "solvedCount": 3248}, {"contestId": 1132, "index": "E", "solvedCount": 742}, {"contestId": 1132, "index": "D", "solvedCount": 1136}, {"contestId": 1132, "index": "C", "solvedCount": 3731}, {"contestId": 1132, "index": "B", "solvedCount": 8356}, {"contestId": 1132, "index": "A", "solvedCount": 7132}, {"contestId": 1131, "index": "G", "solvedCount": 233}, {"contestId": 1131, "index": "F", "solvedCount": 3937}, {"contestId": 1131, "index": "E", "solvedCount": 862}, {"contestId": 1131, "index": "D", "solvedCount": 2149}, {"contestId": 1131, "index": "C", "solvedCount": 8677}, {"contestId": 1131, "index": "B", "solvedCount": 6807}, {"contestId": 1131, "index": "A", "solvedCount": 9779}, {"contestId": 1130, "index": "C", "solvedCount": 5428}, {"contestId": 1130, "index": "B", "solvedCount": 6070}, {"contestId": 1130, "index": "A", "solvedCount": 8569}, {"contestId": 1129, "index": "E", "solvedCount": 182}, {"contestId": 1129, "index": "D", "solvedCount": 348}, {"contestId": 1129, "index": "C", "solvedCount": 583}, {"contestId": 1129, "index": "B", "solvedCount": 1546}, {"contestId": 1129, "index": "A2", "solvedCount": 3044}, {"contestId": 1129, "index": "A1", "solvedCount": 3058}, {"contestId": 1121, "index": "C", "solvedCount": 1500}, {"contestId": 1121, "index": "B", "solvedCount": 5136}, {"contestId": 1121, "index": "A", "solvedCount": 5571}, {"contestId": 1120, "index": "F", "solvedCount": 83}, {"contestId": 1120, "index": "E", "solvedCount": 47}, {"contestId": 1120, "index": "D", "solvedCount": 422}, {"contestId": 1120, "index": "C", "solvedCount": 1279}, {"contestId": 1120, "index": "B", "solvedCount": 246}, {"contestId": 1120, "index": "A", "solvedCount": 1172}, {"contestId": 1119, "index": "H", "solvedCount": 165}, {"contestId": 1119, "index": "G", "solvedCount": 164}, {"contestId": 1119, "index": "F", "solvedCount": 171}, {"contestId": 1119, "index": "E", "solvedCount": 3236}, {"contestId": 1119, "index": "D", "solvedCount": 3515}, {"contestId": 1119, "index": "C", "solvedCount": 5186}, {"contestId": 1119, "index": "B", "solvedCount": 6616}, {"contestId": 1119, "index": "A", "solvedCount": 7981}, {"contestId": 1118, "index": "F2", "solvedCount": 237}, {"contestId": 1118, "index": "F1", "solvedCount": 3104}, {"contestId": 1118, "index": "E", "solvedCount": 2528}, {"contestId": 1118, "index": "D2", "solvedCount": 3548}, {"contestId": 1118, "index": "D1", "solvedCount": 3440}, {"contestId": 1118, "index": "C", "solvedCount": 3831}, {"contestId": 1118, "index": "B", "solvedCount": 7703}, {"contestId": 1118, "index": "A", "solvedCount": 13464}, {"contestId": 1117, "index": "G", "solvedCount": 300}, {"contestId": 1117, "index": "F", "solvedCount": 286}, {"contestId": 1117, "index": "E", "solvedCount": 993}, {"contestId": 1117, "index": "D", "solvedCount": 2258}, {"contestId": 1117, "index": "C", "solvedCount": 3187}, {"contestId": 1117, "index": "B", "solvedCount": 8391}, {"contestId": 1117, "index": "A", "solvedCount": 8270}, {"contestId": 1116, "index": "D6", "solvedCount": 67}, {"contestId": 1116, "index": "D5", "solvedCount": 134}, {"contestId": 1116, "index": "D4", "solvedCount": 155}, {"contestId": 1116, "index": "D3", "solvedCount": 188}, {"contestId": 1116, "index": "D2", "solvedCount": 216}, {"contestId": 1116, "index": "D1", "solvedCount": 256}, {"contestId": 1116, "index": "C3", "solvedCount": 168}, {"contestId": 1116, "index": "C2", "solvedCount": 170}, {"contestId": 1116, "index": "C1", "solvedCount": 245}, {"contestId": 1116, "index": "B2", "solvedCount": 47}, {"contestId": 1116, "index": "B1", "solvedCount": 116}, {"contestId": 1116, "index": "A2", "solvedCount": 164}, {"contestId": 1116, "index": "A1", "solvedCount": 298}, {"contestId": 1115, "index": "U3", "solvedCount": 184}, {"contestId": 1115, "index": "U2", "solvedCount": 211}, {"contestId": 1115, "index": "U1", "solvedCount": 229}, {"contestId": 1115, "index": "G3", "solvedCount": 209}, {"contestId": 1115, "index": "G2", "solvedCount": 287}, {"contestId": 1115, "index": "G1", "solvedCount": 335}, {"contestId": 1114, "index": "F", "solvedCount": 943}, {"contestId": 1114, "index": "E", "solvedCount": 1835}, {"contestId": 1114, "index": "D", "solvedCount": 3673}, {"contestId": 1114, "index": "C", "solvedCount": 5397}, {"contestId": 1114, "index": "B", "solvedCount": 6677}, {"contestId": 1114, "index": "A", "solvedCount": 14554}, {"contestId": 1113, "index": "B", "solvedCount": 5780}, {"contestId": 1113, "index": "A", "solvedCount": 11013}, {"contestId": 1111, "index": "E", "solvedCount": 405}, {"contestId": 1111, "index": "D", "solvedCount": 586}, {"contestId": 1111, "index": "C", "solvedCount": 4359}, {"contestId": 1111, "index": "B", "solvedCount": 4697}, {"contestId": 1111, "index": "A", "solvedCount": 11323}, {"contestId": 1110, "index": "H", "solvedCount": 112}, {"contestId": 1110, "index": "G", "solvedCount": 244}, {"contestId": 1110, "index": "F", "solvedCount": 990}, {"contestId": 1110, "index": "E", "solvedCount": 2517}, {"contestId": 1110, "index": "D", "solvedCount": 2172}, {"contestId": 1110, "index": "C", "solvedCount": 6148}, {"contestId": 1110, "index": "B", "solvedCount": 7531}, {"contestId": 1110, "index": "A", "solvedCount": 10732}, {"contestId": 1109, "index": "F", "solvedCount": 120}, {"contestId": 1109, "index": "E", "solvedCount": 263}, {"contestId": 1109, "index": "D", "solvedCount": 776}, {"contestId": 1109, "index": "C", "solvedCount": 168}, {"contestId": 1109, "index": "B", "solvedCount": 3120}, {"contestId": 1109, "index": "A", "solvedCount": 5497}, {"contestId": 1108, "index": "F", "solvedCount": 1374}, {"contestId": 1108, "index": "E2", "solvedCount": 1356}, {"contestId": 1108, "index": "E1", "solvedCount": 2990}, {"contestId": 1108, "index": "D", "solvedCount": 9144}, {"contestId": 1108, "index": "C", "solvedCount": 8142}, {"contestId": 1108, "index": "B", "solvedCount": 13235}, {"contestId": 1108, "index": "A", "solvedCount": 15429}, {"contestId": 1107, "index": "G", "solvedCount": 593}, {"contestId": 1107, "index": "F", "solvedCount": 380}, {"contestId": 1107, "index": "E", "solvedCount": 1002}, {"contestId": 1107, "index": "D", "solvedCount": 2849}, {"contestId": 1107, "index": "C", "solvedCount": 6851}, {"contestId": 1107, "index": "B", "solvedCount": 8987}, {"contestId": 1107, "index": "A", "solvedCount": 8923}, {"contestId": 1106, "index": "F", "solvedCount": 543}, {"contestId": 1106, "index": "E", "solvedCount": 1500}, {"contestId": 1106, "index": "D", "solvedCount": 7675}, {"contestId": 1106, "index": "C", "solvedCount": 10306}, {"contestId": 1106, "index": "B", "solvedCount": 5364}, {"contestId": 1106, "index": "A", "solvedCount": 10567}, {"contestId": 1105, "index": "E", "solvedCount": 1050}, {"contestId": 1105, "index": "D", "solvedCount": 2818}, {"contestId": 1105, "index": "C", "solvedCount": 6442}, {"contestId": 1105, "index": "B", "solvedCount": 7540}, {"contestId": 1105, "index": "A", "solvedCount": 8133}, {"contestId": 1104, "index": "B", "solvedCount": 9167}, {"contestId": 1104, "index": "A", "solvedCount": 11824}, {"contestId": 1103, "index": "E", "solvedCount": 99}, {"contestId": 1103, "index": "D", "solvedCount": 206}, {"contestId": 1103, "index": "C", "solvedCount": 454}, {"contestId": 1103, "index": "B", "solvedCount": 2366}, {"contestId": 1103, "index": "A", "solvedCount": 6929}, {"contestId": 1102, "index": "F", "solvedCount": 993}, {"contestId": 1102, "index": "E", "solvedCount": 3244}, {"contestId": 1102, "index": "D", "solvedCount": 5159}, {"contestId": 1102, "index": "C", "solvedCount": 8426}, {"contestId": 1102, "index": "B", "solvedCount": 6583}, {"contestId": 1102, "index": "A", "solvedCount": 13654}, {"contestId": 1101, "index": "G", "solvedCount": 752}, {"contestId": 1101, "index": "F", "solvedCount": 664}, {"contestId": 1101, "index": "E", "solvedCount": 5905}, {"contestId": 1101, "index": "D", "solvedCount": 2360}, {"contestId": 1101, "index": "C", "solvedCount": 5450}, {"contestId": 1101, "index": "B", "solvedCount": 7570}, {"contestId": 1101, "index": "A", "solvedCount": 11137}, {"contestId": 1100, "index": "F", "solvedCount": 643}, {"contestId": 1100, "index": "E", "solvedCount": 1462}, {"contestId": 1100, "index": "D", "solvedCount": 611}, {"contestId": 1100, "index": "C", "solvedCount": 7080}, {"contestId": 1100, "index": "B", "solvedCount": 7687}, {"contestId": 1100, "index": "A", "solvedCount": 8018}, {"contestId": 1099, "index": "F", "solvedCount": 577}, {"contestId": 1099, "index": "C", "solvedCount": 6270}, {"contestId": 1099, "index": "B", "solvedCount": 7961}, {"contestId": 1099, "index": "A", "solvedCount": 9702}, {"contestId": 1098, "index": "F", "solvedCount": 56}, {"contestId": 1098, "index": "E", "solvedCount": 78}, {"contestId": 1098, "index": "D", "solvedCount": 315}, {"contestId": 1098, "index": "C", "solvedCount": 537}, {"contestId": 1098, "index": "B", "solvedCount": 1021}, {"contestId": 1098, "index": "A", "solvedCount": 5270}, {"contestId": 1097, "index": "H", "solvedCount": 50}, {"contestId": 1097, "index": "G", "solvedCount": 247}, {"contestId": 1097, "index": "F", "solvedCount": 730}, {"contestId": 1097, "index": "E", "solvedCount": 246}, {"contestId": 1097, "index": "D", "solvedCount": 1815}, {"contestId": 1097, "index": "C", "solvedCount": 6142}, {"contestId": 1097, "index": "B", "solvedCount": 11520}, {"contestId": 1097, "index": "A", "solvedCount": 21492}, {"contestId": 1096, "index": "G", "solvedCount": 737}, {"contestId": 1096, "index": "F", "solvedCount": 966}, {"contestId": 1096, "index": "E", "solvedCount": 372}, {"contestId": 1096, "index": "D", "solvedCount": 4209}, {"contestId": 1096, "index": "C", "solvedCount": 4907}, {"contestId": 1096, "index": "B", "solvedCount": 7003}, {"contestId": 1096, "index": "A", "solvedCount": 12262}, {"contestId": 1095, "index": "F", "solvedCount": 2740}, {"contestId": 1095, "index": "E", "solvedCount": 2285}, {"contestId": 1095, "index": "D", "solvedCount": 4816}, {"contestId": 1095, "index": "C", "solvedCount": 7923}, {"contestId": 1095, "index": "B", "solvedCount": 12104}, {"contestId": 1095, "index": "A", "solvedCount": 16317}, {"contestId": 1093, "index": "G", "solvedCount": 1038}, {"contestId": 1093, "index": "F", "solvedCount": 463}, {"contestId": 1093, "index": "E", "solvedCount": 797}, {"contestId": 1093, "index": "D", "solvedCount": 4539}, {"contestId": 1093, "index": "C", "solvedCount": 6813}, {"contestId": 1093, "index": "B", "solvedCount": 10057}, {"contestId": 1093, "index": "A", "solvedCount": 12715}, {"contestId": 1092, "index": "F", "solvedCount": 2475}, {"contestId": 1092, "index": "E", "solvedCount": 813}, {"contestId": 1092, "index": "D2", "solvedCount": 1535}, {"contestId": 1092, "index": "D1", "solvedCount": 1982}, {"contestId": 1092, "index": "C", "solvedCount": 3788}, {"contestId": 1092, "index": "B", "solvedCount": 15378}, {"contestId": 1092, "index": "A", "solvedCount": 11216}, {"contestId": 1091, "index": "H", "solvedCount": 191}, {"contestId": 1091, "index": "G", "solvedCount": 103}, {"contestId": 1091, "index": "F", "solvedCount": 560}, {"contestId": 1091, "index": "E", "solvedCount": 788}, {"contestId": 1091, "index": "D", "solvedCount": 4709}, {"contestId": 1091, "index": "C", "solvedCount": 6982}, {"contestId": 1091, "index": "B", "solvedCount": 8445}, {"contestId": 1091, "index": "A", "solvedCount": 13842}, {"contestId": 1090, "index": "M", "solvedCount": 3453}, {"contestId": 1090, "index": "L", "solvedCount": 706}, {"contestId": 1090, "index": "K", "solvedCount": 572}, {"contestId": 1090, "index": "J", "solvedCount": 170}, {"contestId": 1090, "index": "I", "solvedCount": 547}, {"contestId": 1090, "index": "H", "solvedCount": 46}, {"contestId": 1090, "index": "G", "solvedCount": 46}, {"contestId": 1090, "index": "F", "solvedCount": 123}, {"contestId": 1090, "index": "E", "solvedCount": 304}, {"contestId": 1090, "index": "D", "solvedCount": 1126}, {"contestId": 1090, "index": "C", "solvedCount": 251}, {"contestId": 1090, "index": "B", "solvedCount": 805}, {"contestId": 1090, "index": "A", "solvedCount": 2393}, {"contestId": 1089, "index": "M", "solvedCount": 380}, {"contestId": 1089, "index": "L", "solvedCount": 2232}, {"contestId": 1089, "index": "K", "solvedCount": 604}, {"contestId": 1089, "index": "J", "solvedCount": 79}, {"contestId": 1089, "index": "I", "solvedCount": 136}, {"contestId": 1089, "index": "H", "solvedCount": 59}, {"contestId": 1089, "index": "G", "solvedCount": 1883}, {"contestId": 1089, "index": "F", "solvedCount": 1245}, {"contestId": 1089, "index": "E", "solvedCount": 1408}, {"contestId": 1089, "index": "D", "solvedCount": 56}, {"contestId": 1089, "index": "C", "solvedCount": 259}, {"contestId": 1089, "index": "B", "solvedCount": 120}, {"contestId": 1089, "index": "A", "solvedCount": 721}, {"contestId": 1088, "index": "F", "solvedCount": 245}, {"contestId": 1088, "index": "E", "solvedCount": 964}, {"contestId": 1088, "index": "D", "solvedCount": 1816}, {"contestId": 1088, "index": "C", "solvedCount": 5790}, {"contestId": 1088, "index": "B", "solvedCount": 8937}, {"contestId": 1088, "index": "A", "solvedCount": 11436}, {"contestId": 1086, "index": "F", "solvedCount": 57}, {"contestId": 1085, "index": "G", "solvedCount": 224}, {"contestId": 1085, "index": "F", "solvedCount": 409}, {"contestId": 1085, "index": "E", "solvedCount": 647}, {"contestId": 1085, "index": "D", "solvedCount": 3878}, {"contestId": 1085, "index": "C", "solvedCount": 4369}, {"contestId": 1085, "index": "B", "solvedCount": 6924}, {"contestId": 1085, "index": "A", "solvedCount": 9322}, {"contestId": 1084, "index": "C", "solvedCount": 4965}, {"contestId": 1084, "index": "B", "solvedCount": 5544}, {"contestId": 1084, "index": "A", "solvedCount": 6425}, {"contestId": 1083, "index": "F", "solvedCount": 80}, {"contestId": 1083, "index": "E", "solvedCount": 1183}, {"contestId": 1083, "index": "D", "solvedCount": 79}, {"contestId": 1083, "index": "C", "solvedCount": 374}, {"contestId": 1083, "index": "B", "solvedCount": 1217}, {"contestId": 1083, "index": "A", "solvedCount": 3099}, {"contestId": 1082, "index": "G", "solvedCount": 785}, {"contestId": 1082, "index": "F", "solvedCount": 231}, {"contestId": 1082, "index": "E", "solvedCount": 2033}, {"contestId": 1082, "index": "D", "solvedCount": 2515}, {"contestId": 1082, "index": "C", "solvedCount": 3957}, {"contestId": 1082, "index": "B", "solvedCount": 5178}, {"contestId": 1082, "index": "A", "solvedCount": 6294}, {"contestId": 1081, "index": "H", "solvedCount": 52}, {"contestId": 1081, "index": "G", "solvedCount": 113}, {"contestId": 1081, "index": "F", "solvedCount": 281}, {"contestId": 1081, "index": "E", "solvedCount": 1714}, {"contestId": 1081, "index": "D", "solvedCount": 2272}, {"contestId": 1081, "index": "C", "solvedCount": 4330}, {"contestId": 1081, "index": "B", "solvedCount": 3483}, {"contestId": 1081, "index": "A", "solvedCount": 8218}, {"contestId": 1080, "index": "F", "solvedCount": 360}, {"contestId": 1080, "index": "E", "solvedCount": 489}, {"contestId": 1080, "index": "D", "solvedCount": 1152}, {"contestId": 1080, "index": "C", "solvedCount": 3293}, {"contestId": 1080, "index": "B", "solvedCount": 8296}, {"contestId": 1080, "index": "A", "solvedCount": 12280}, {"contestId": 1078, "index": "E", "solvedCount": 47}, {"contestId": 1077, "index": "F2", "solvedCount": 1147}, {"contestId": 1077, "index": "F1", "solvedCount": 1778}, {"contestId": 1077, "index": "E", "solvedCount": 2773}, {"contestId": 1077, "index": "D", "solvedCount": 4458}, {"contestId": 1077, "index": "C", "solvedCount": 8310}, {"contestId": 1077, "index": "B", "solvedCount": 11055}, {"contestId": 1077, "index": "A", "solvedCount": 17066}, {"contestId": 1076, "index": "G", "solvedCount": 153}, {"contestId": 1076, "index": "F", "solvedCount": 393}, {"contestId": 1076, "index": "E", "solvedCount": 2242}, {"contestId": 1076, "index": "D", "solvedCount": 2816}, {"contestId": 1076, "index": "C", "solvedCount": 7587}, {"contestId": 1076, "index": "B", "solvedCount": 7957}, {"contestId": 1076, "index": "A", "solvedCount": 7943}, {"contestId": 1075, "index": "B", "solvedCount": 3245}, {"contestId": 1075, "index": "A", "solvedCount": 5691}, {"contestId": 1073, "index": "G", "solvedCount": 308}, {"contestId": 1073, "index": "F", "solvedCount": 271}, {"contestId": 1073, "index": "E", "solvedCount": 1208}, {"contestId": 1073, "index": "D", "solvedCount": 4627}, {"contestId": 1073, "index": "C", "solvedCount": 3069}, {"contestId": 1073, "index": "B", "solvedCount": 7947}, {"contestId": 1073, "index": "A", "solvedCount": 9692}, {"contestId": 1071, "index": "E", "solvedCount": 54}, {"contestId": 1070, "index": "M", "solvedCount": 40}, {"contestId": 1070, "index": "L", "solvedCount": 119}, {"contestId": 1070, "index": "K", "solvedCount": 3384}, {"contestId": 1070, "index": "J", "solvedCount": 450}, {"contestId": 1070, "index": "I", "solvedCount": 319}, {"contestId": 1070, "index": "H", "solvedCount": 2736}, {"contestId": 1070, "index": "G", "solvedCount": 626}, {"contestId": 1070, "index": "F", "solvedCount": 2668}, {"contestId": 1070, "index": "E", "solvedCount": 886}, {"contestId": 1070, "index": "D", "solvedCount": 3492}, {"contestId": 1070, "index": "C", "solvedCount": 1435}, {"contestId": 1070, "index": "B", "solvedCount": 368}, {"contestId": 1070, "index": "A", "solvedCount": 1468}, {"contestId": 1068, "index": "C", "solvedCount": 2266}, {"contestId": 1068, "index": "B", "solvedCount": 6403}, {"contestId": 1068, "index": "A", "solvedCount": 4815}, {"contestId": 1067, "index": "E", "solvedCount": 172}, {"contestId": 1067, "index": "D", "solvedCount": 104}, {"contestId": 1067, "index": "C", "solvedCount": 401}, {"contestId": 1067, "index": "B", "solvedCount": 1557}, {"contestId": 1067, "index": "A", "solvedCount": 1742}, {"contestId": 1066, "index": "F", "solvedCount": 1005}, {"contestId": 1066, "index": "E", "solvedCount": 3611}, {"contestId": 1066, "index": "D", "solvedCount": 3336}, {"contestId": 1066, "index": "C", "solvedCount": 5839}, {"contestId": 1066, "index": "B", "solvedCount": 5169}, {"contestId": 1066, "index": "A", "solvedCount": 9585}, {"contestId": 1065, "index": "G", "solvedCount": 108}, {"contestId": 1065, "index": "F", "solvedCount": 626}, {"contestId": 1065, "index": "E", "solvedCount": 647}, {"contestId": 1065, "index": "D", "solvedCount": 924}, {"contestId": 1065, "index": "C", "solvedCount": 5033}, {"contestId": 1065, "index": "B", "solvedCount": 7385}, {"contestId": 1065, "index": "A", "solvedCount": 11205}, {"contestId": 1064, "index": "B", "solvedCount": 6047}, {"contestId": 1064, "index": "A", "solvedCount": 13081}, {"contestId": 1063, "index": "F", "solvedCount": 274}, {"contestId": 1063, "index": "E", "solvedCount": 157}, {"contestId": 1063, "index": "D", "solvedCount": 292}, {"contestId": 1063, "index": "C", "solvedCount": 1999}, {"contestId": 1063, "index": "B", "solvedCount": 3893}, {"contestId": 1063, "index": "A", "solvedCount": 7219}, {"contestId": 1062, "index": "F", "solvedCount": 194}, {"contestId": 1062, "index": "E", "solvedCount": 933}, {"contestId": 1062, "index": "D", "solvedCount": 2805}, {"contestId": 1062, "index": "C", "solvedCount": 4026}, {"contestId": 1062, "index": "B", "solvedCount": 5154}, {"contestId": 1062, "index": "A", "solvedCount": 6169}, {"contestId": 1061, "index": "F", "solvedCount": 376}, {"contestId": 1061, "index": "E", "solvedCount": 272}, {"contestId": 1061, "index": "D", "solvedCount": 1656}, {"contestId": 1061, "index": "C", "solvedCount": 4132}, {"contestId": 1061, "index": "B", "solvedCount": 5501}, {"contestId": 1061, "index": "A", "solvedCount": 12816}, {"contestId": 1060, "index": "H", "solvedCount": 76}, {"contestId": 1060, "index": "G", "solvedCount": 41}, {"contestId": 1060, "index": "F", "solvedCount": 217}, {"contestId": 1060, "index": "E", "solvedCount": 1811}, {"contestId": 1060, "index": "D", "solvedCount": 2740}, {"contestId": 1060, "index": "C", "solvedCount": 3467}, {"contestId": 1060, "index": "B", "solvedCount": 6439}, {"contestId": 1060, "index": "A", "solvedCount": 8807}, {"contestId": 1059, "index": "E", "solvedCount": 819}, {"contestId": 1059, "index": "D", "solvedCount": 1818}, {"contestId": 1059, "index": "C", "solvedCount": 5076}, {"contestId": 1059, "index": "B", "solvedCount": 5541}, {"contestId": 1059, "index": "A", "solvedCount": 8679}, {"contestId": 1057, "index": "C", "solvedCount": 377}, {"contestId": 1057, "index": "B", "solvedCount": 1212}, {"contestId": 1057, "index": "A", "solvedCount": 2433}, {"contestId": 1056, "index": "H", "solvedCount": 70}, {"contestId": 1056, "index": "G", "solvedCount": 133}, {"contestId": 1056, "index": "F", "solvedCount": 340}, {"contestId": 1056, "index": "E", "solvedCount": 1112}, {"contestId": 1056, "index": "D", "solvedCount": 3300}, {"contestId": 1056, "index": "C", "solvedCount": 1736}, {"contestId": 1056, "index": "B", "solvedCount": 3001}, {"contestId": 1056, "index": "A", "solvedCount": 4786}, {"contestId": 1055, "index": "G", "solvedCount": 39}, {"contestId": 1055, "index": "F", "solvedCount": 234}, {"contestId": 1055, "index": "E", "solvedCount": 453}, {"contestId": 1055, "index": "D", "solvedCount": 502}, {"contestId": 1055, "index": "C", "solvedCount": 1421}, {"contestId": 1055, "index": "B", "solvedCount": 3440}, {"contestId": 1055, "index": "A", "solvedCount": 5724}, {"contestId": 1054, "index": "H", "solvedCount": 81}, {"contestId": 1054, "index": "G", "solvedCount": 80}, {"contestId": 1054, "index": "F", "solvedCount": 191}, {"contestId": 1054, "index": "E", "solvedCount": 370}, {"contestId": 1054, "index": "D", "solvedCount": 1641}, {"contestId": 1054, "index": "C", "solvedCount": 3383}, {"contestId": 1054, "index": "B", "solvedCount": 4916}, {"contestId": 1054, "index": "A", "solvedCount": 6794}, {"contestId": 1053, "index": "E", "solvedCount": 93}, {"contestId": 1051, "index": "G", "solvedCount": 118}, {"contestId": 1051, "index": "F", "solvedCount": 1193}, {"contestId": 1051, "index": "E", "solvedCount": 421}, {"contestId": 1051, "index": "D", "solvedCount": 4289}, {"contestId": 1051, "index": "C", "solvedCount": 6343}, {"contestId": 1051, "index": "B", "solvedCount": 9322}, {"contestId": 1051, "index": "A", "solvedCount": 6650}, {"contestId": 1047, "index": "B", "solvedCount": 11245}, {"contestId": 1047, "index": "A", "solvedCount": 12686}, {"contestId": 1046, "index": "I", "solvedCount": 193}, {"contestId": 1046, "index": "F", "solvedCount": 1765}, {"contestId": 1046, "index": "C", "solvedCount": 1899}, {"contestId": 1045, "index": "J", "solvedCount": 89}, {"contestId": 1045, "index": "I", "solvedCount": 1901}, {"contestId": 1045, "index": "H", "solvedCount": 259}, {"contestId": 1045, "index": "G", "solvedCount": 745}, {"contestId": 1045, "index": "F", "solvedCount": 64}, {"contestId": 1045, "index": "E", "solvedCount": 47}, {"contestId": 1045, "index": "D", "solvedCount": 357}, {"contestId": 1045, "index": "C", "solvedCount": 409}, {"contestId": 1045, "index": "B", "solvedCount": 331}, {"contestId": 1045, "index": "A", "solvedCount": 171}, {"contestId": 1044, "index": "F", "solvedCount": 257}, {"contestId": 1044, "index": "E", "solvedCount": 53}, {"contestId": 1044, "index": "D", "solvedCount": 543}, {"contestId": 1044, "index": "C", "solvedCount": 874}, {"contestId": 1044, "index": "B", "solvedCount": 1160}, {"contestId": 1044, "index": "A", "solvedCount": 2174}, {"contestId": 1043, "index": "G", "solvedCount": 67}, {"contestId": 1043, "index": "F", "solvedCount": 1024}, {"contestId": 1043, "index": "E", "solvedCount": 2124}, {"contestId": 1043, "index": "D", "solvedCount": 3308}, {"contestId": 1043, "index": "C", "solvedCount": 4866}, {"contestId": 1043, "index": "B", "solvedCount": 5179}, {"contestId": 1043, "index": "A", "solvedCount": 8679}, {"contestId": 1042, "index": "F", "solvedCount": 813}, {"contestId": 1042, "index": "E", "solvedCount": 836}, {"contestId": 1042, "index": "D", "solvedCount": 3040}, {"contestId": 1042, "index": "C", "solvedCount": 3401}, {"contestId": 1042, "index": "B", "solvedCount": 7245}, {"contestId": 1042, "index": "A", "solvedCount": 7975}, {"contestId": 1041, "index": "F", "solvedCount": 950}, {"contestId": 1041, "index": "E", "solvedCount": 2396}, {"contestId": 1041, "index": "D", "solvedCount": 4130}, {"contestId": 1041, "index": "C", "solvedCount": 5972}, {"contestId": 1041, "index": "B", "solvedCount": 9344}, {"contestId": 1041, "index": "A", "solvedCount": 14949}, {"contestId": 1040, "index": "B", "solvedCount": 5496}, {"contestId": 1040, "index": "A", "solvedCount": 7118}, {"contestId": 1039, "index": "E", "solvedCount": 116}, {"contestId": 1039, "index": "D", "solvedCount": 529}, {"contestId": 1039, "index": "C", "solvedCount": 918}, {"contestId": 1039, "index": "B", "solvedCount": 1542}, {"contestId": 1039, "index": "A", "solvedCount": 579}, {"contestId": 1038, "index": "F", "solvedCount": 181}, {"contestId": 1038, "index": "E", "solvedCount": 698}, {"contestId": 1038, "index": "D", "solvedCount": 5222}, {"contestId": 1038, "index": "C", "solvedCount": 7069}, {"contestId": 1038, "index": "B", "solvedCount": 8863}, {"contestId": 1038, "index": "A", "solvedCount": 10707}, {"contestId": 1037, "index": "H", "solvedCount": 285}, {"contestId": 1037, "index": "G", "solvedCount": 149}, {"contestId": 1037, "index": "F", "solvedCount": 671}, {"contestId": 1037, "index": "E", "solvedCount": 1919}, {"contestId": 1037, "index": "D", "solvedCount": 6963}, {"contestId": 1037, "index": "C", "solvedCount": 10323}, {"contestId": 1037, "index": "B", "solvedCount": 7579}, {"contestId": 1037, "index": "A", "solvedCount": 7964}, {"contestId": 1036, "index": "G", "solvedCount": 227}, {"contestId": 1036, "index": "F", "solvedCount": 807}, {"contestId": 1036, "index": "E", "solvedCount": 992}, {"contestId": 1036, "index": "D", "solvedCount": 5508}, {"contestId": 1036, "index": "C", "solvedCount": 3906}, {"contestId": 1036, "index": "B", "solvedCount": 4561}, {"contestId": 1036, "index": "A", "solvedCount": 7841}, {"contestId": 1034, "index": "E", "solvedCount": 130}, {"contestId": 1034, "index": "D", "solvedCount": 127}, {"contestId": 1034, "index": "C", "solvedCount": 376}, {"contestId": 1034, "index": "B", "solvedCount": 1594}, {"contestId": 1034, "index": "A", "solvedCount": 4860}, {"contestId": 1033, "index": "G", "solvedCount": 67}, {"contestId": 1033, "index": "F", "solvedCount": 225}, {"contestId": 1033, "index": "E", "solvedCount": 273}, {"contestId": 1033, "index": "D", "solvedCount": 1561}, {"contestId": 1033, "index": "C", "solvedCount": 3514}, {"contestId": 1033, "index": "B", "solvedCount": 5472}, {"contestId": 1033, "index": "A", "solvedCount": 6692}, {"contestId": 1032, "index": "G", "solvedCount": 248}, {"contestId": 1032, "index": "F", "solvedCount": 438}, {"contestId": 1032, "index": "E", "solvedCount": 1029}, {"contestId": 1032, "index": "D", "solvedCount": 2011}, {"contestId": 1032, "index": "C", "solvedCount": 2438}, {"contestId": 1032, "index": "B", "solvedCount": 4182}, {"contestId": 1032, "index": "A", "solvedCount": 5501}, {"contestId": 1031, "index": "F", "solvedCount": 160}, {"contestId": 1031, "index": "E", "solvedCount": 289}, {"contestId": 1031, "index": "D", "solvedCount": 1877}, {"contestId": 1031, "index": "C", "solvedCount": 4006}, {"contestId": 1031, "index": "B", "solvedCount": 3249}, {"contestId": 1031, "index": "A", "solvedCount": 9838}, {"contestId": 1030, "index": "G", "solvedCount": 231}, {"contestId": 1030, "index": "F", "solvedCount": 539}, {"contestId": 1030, "index": "E", "solvedCount": 2013}, {"contestId": 1030, "index": "D", "solvedCount": 4409}, {"contestId": 1030, "index": "C", "solvedCount": 6980}, {"contestId": 1030, "index": "B", "solvedCount": 8556}, {"contestId": 1030, "index": "A", "solvedCount": 38061}, {"contestId": 1029, "index": "F", "solvedCount": 1619}, {"contestId": 1029, "index": "E", "solvedCount": 1473}, {"contestId": 1029, "index": "D", "solvedCount": 2382}, {"contestId": 1029, "index": "C", "solvedCount": 4671}, {"contestId": 1029, "index": "B", "solvedCount": 9857}, {"contestId": 1029, "index": "A", "solvedCount": 7848}, {"contestId": 1028, "index": "H", "solvedCount": 290}, {"contestId": 1028, "index": "G", "solvedCount": 262}, {"contestId": 1028, "index": "F", "solvedCount": 359}, {"contestId": 1028, "index": "E", "solvedCount": 868}, {"contestId": 1028, "index": "D", "solvedCount": 1341}, {"contestId": 1028, "index": "C", "solvedCount": 3423}, {"contestId": 1028, "index": "B", "solvedCount": 5841}, {"contestId": 1028, "index": "A", "solvedCount": 8109}, {"contestId": 1027, "index": "G", "solvedCount": 177}, {"contestId": 1027, "index": "F", "solvedCount": 746}, {"contestId": 1027, "index": "E", "solvedCount": 1162}, {"contestId": 1027, "index": "D", "solvedCount": 4356}, {"contestId": 1027, "index": "C", "solvedCount": 5093}, {"contestId": 1027, "index": "B", "solvedCount": 6710}, {"contestId": 1027, "index": "A", "solvedCount": 10055}, {"contestId": 1025, "index": "G", "solvedCount": 169}, {"contestId": 1025, "index": "F", "solvedCount": 397}, {"contestId": 1025, "index": "E", "solvedCount": 393}, {"contestId": 1025, "index": "D", "solvedCount": 2214}, {"contestId": 1025, "index": "C", "solvedCount": 4489}, {"contestId": 1025, "index": "B", "solvedCount": 5410}, {"contestId": 1025, "index": "A", "solvedCount": 9246}, {"contestId": 1023, "index": "G", "solvedCount": 33}, {"contestId": 1023, "index": "F", "solvedCount": 501}, {"contestId": 1023, "index": "E", "solvedCount": 1402}, {"contestId": 1023, "index": "D", "solvedCount": 3103}, {"contestId": 1023, "index": "C", "solvedCount": 6636}, {"contestId": 1023, "index": "B", "solvedCount": 7410}, {"contestId": 1023, "index": "A", "solvedCount": 6384}, {"contestId": 1020, "index": "B", "solvedCount": 11349}, {"contestId": 1020, "index": "A", "solvedCount": 7341}, {"contestId": 1019, "index": "E", "solvedCount": 152}, {"contestId": 1019, "index": "D", "solvedCount": 371}, {"contestId": 1019, "index": "C", "solvedCount": 557}, {"contestId": 1019, "index": "B", "solvedCount": 1317}, {"contestId": 1019, "index": "A", "solvedCount": 3547}, {"contestId": 1017, "index": "H", "solvedCount": 45}, {"contestId": 1017, "index": "G", "solvedCount": 271}, {"contestId": 1017, "index": "F", "solvedCount": 566}, {"contestId": 1017, "index": "E", "solvedCount": 586}, {"contestId": 1017, "index": "D", "solvedCount": 2464}, {"contestId": 1017, "index": "C", "solvedCount": 4536}, {"contestId": 1017, "index": "B", "solvedCount": 7315}, {"contestId": 1017, "index": "A", "solvedCount": 12997}, {"contestId": 1016, "index": "G", "solvedCount": 148}, {"contestId": 1016, "index": "F", "solvedCount": 428}, {"contestId": 1016, "index": "E", "solvedCount": 656}, {"contestId": 1016, "index": "D", "solvedCount": 3261}, {"contestId": 1016, "index": "C", "solvedCount": 2742}, {"contestId": 1016, "index": "B", "solvedCount": 6660}, {"contestId": 1016, "index": "A", "solvedCount": 10183}, {"contestId": 1015, "index": "F", "solvedCount": 512}, {"contestId": 1015, "index": "E2", "solvedCount": 2117}, {"contestId": 1015, "index": "E1", "solvedCount": 3002}, {"contestId": 1015, "index": "D", "solvedCount": 4728}, {"contestId": 1015, "index": "C", "solvedCount": 9782}, {"contestId": 1015, "index": "B", "solvedCount": 7876}, {"contestId": 1015, "index": "A", "solvedCount": 13904}, {"contestId": 1013, "index": "B", "solvedCount": 5430}, {"contestId": 1013, "index": "A", "solvedCount": 8355}, {"contestId": 1012, "index": "F", "solvedCount": 77}, {"contestId": 1012, "index": "E", "solvedCount": 127}, {"contestId": 1012, "index": "D", "solvedCount": 177}, {"contestId": 1012, "index": "C", "solvedCount": 1924}, {"contestId": 1012, "index": "B", "solvedCount": 2549}, {"contestId": 1012, "index": "A", "solvedCount": 4803}, {"contestId": 1011, "index": "B", "solvedCount": 7108}, {"contestId": 1011, "index": "A", "solvedCount": 8730}, {"contestId": 1010, "index": "F", "solvedCount": 97}, {"contestId": 1010, "index": "E", "solvedCount": 218}, {"contestId": 1010, "index": "D", "solvedCount": 1698}, {"contestId": 1010, "index": "C", "solvedCount": 3407}, {"contestId": 1010, "index": "B", "solvedCount": 3521}, {"contestId": 1010, "index": "A", "solvedCount": 6206}, {"contestId": 1009, "index": "G", "solvedCount": 388}, {"contestId": 1009, "index": "F", "solvedCount": 1536}, {"contestId": 1009, "index": "E", "solvedCount": 1971}, {"contestId": 1009, "index": "D", "solvedCount": 4334}, {"contestId": 1009, "index": "C", "solvedCount": 4089}, {"contestId": 1009, "index": "B", "solvedCount": 6433}, {"contestId": 1009, "index": "A", "solvedCount": 9504}, {"contestId": 1008, "index": "B", "solvedCount": 8137}, {"contestId": 1008, "index": "A", "solvedCount": 9626}, {"contestId": 1007, "index": "E", "solvedCount": 67}, {"contestId": 1007, "index": "D", "solvedCount": 99}, {"contestId": 1007, "index": "C", "solvedCount": 189}, {"contestId": 1007, "index": "B", "solvedCount": 692}, {"contestId": 1007, "index": "A", "solvedCount": 8225}, {"contestId": 1006, "index": "F", "solvedCount": 1979}, {"contestId": 1006, "index": "E", "solvedCount": 5093}, {"contestId": 1006, "index": "D", "solvedCount": 3956}, {"contestId": 1006, "index": "C", "solvedCount": 10036}, {"contestId": 1006, "index": "B", "solvedCount": 8143}, {"contestId": 1006, "index": "A", "solvedCount": 14679}, {"contestId": 1005, "index": "F", "solvedCount": 788}, {"contestId": 1005, "index": "E2", "solvedCount": 662}, {"contestId": 1005, "index": "E1", "solvedCount": 2272}, {"contestId": 1005, "index": "D", "solvedCount": 5858}, {"contestId": 1005, "index": "C", "solvedCount": 6659}, {"contestId": 1005, "index": "B", "solvedCount": 10976}, {"contestId": 1005, "index": "A", "solvedCount": 14483}, {"contestId": 1004, "index": "F", "solvedCount": 234}, {"contestId": 1004, "index": "E", "solvedCount": 592}, {"contestId": 1004, "index": "D", "solvedCount": 983}, {"contestId": 1004, "index": "C", "solvedCount": 5512}, {"contestId": 1004, "index": "B", "solvedCount": 6721}, {"contestId": 1004, "index": "A", "solvedCount": 8296}, {"contestId": 1003, "index": "F", "solvedCount": 622}, {"contestId": 1003, "index": "E", "solvedCount": 1507}, {"contestId": 1003, "index": "D", "solvedCount": 4558}, {"contestId": 1003, "index": "C", "solvedCount": 6497}, {"contestId": 1003, "index": "B", "solvedCount": 6803}, {"contestId": 1003, "index": "A", "solvedCount": 15435}, {"contestId": 1002, "index": "E2", "solvedCount": 180}, {"contestId": 1002, "index": "E1", "solvedCount": 292}, {"contestId": 1002, "index": "D3", "solvedCount": 301}, {"contestId": 1002, "index": "D2", "solvedCount": 337}, {"contestId": 1002, "index": "D1", "solvedCount": 357}, {"contestId": 1002, "index": "C2", "solvedCount": 239}, {"contestId": 1002, "index": "C1", "solvedCount": 269}, {"contestId": 1002, "index": "B4", "solvedCount": 277}, {"contestId": 1002, "index": "B3", "solvedCount": 377}, {"contestId": 1002, "index": "B2", "solvedCount": 407}, {"contestId": 1002, "index": "B1", "solvedCount": 434}, {"contestId": 1002, "index": "A4", "solvedCount": 236}, {"contestId": 1002, "index": "A3", "solvedCount": 431}, {"contestId": 1002, "index": "A2", "solvedCount": 504}, {"contestId": 1002, "index": "A1", "solvedCount": 595}, {"contestId": 1001, "index": "I", "solvedCount": 366}, {"contestId": 1001, "index": "H", "solvedCount": 470}, {"contestId": 1001, "index": "G", "solvedCount": 489}, {"contestId": 1001, "index": "F", "solvedCount": 486}, {"contestId": 1001, "index": "E", "solvedCount": 509}, {"contestId": 1001, "index": "D", "solvedCount": 628}, {"contestId": 1001, "index": "C", "solvedCount": 597}, {"contestId": 1001, "index": "B", "solvedCount": 652}, {"contestId": 1001, "index": "A", "solvedCount": 889}, {"contestId": 1000, "index": "G", "solvedCount": 203}, {"contestId": 1000, "index": "F", "solvedCount": 1176}, {"contestId": 1000, "index": "E", "solvedCount": 1548}, {"contestId": 1000, "index": "D", "solvedCount": 2351}, {"contestId": 1000, "index": "C", "solvedCount": 3815}, {"contestId": 1000, "index": "B", "solvedCount": 3675}, {"contestId": 1000, "index": "A", "solvedCount": 6455}, {"contestId": 999, "index": "F", "solvedCount": 1311}, {"contestId": 999, "index": "E", "solvedCount": 3376}, {"contestId": 999, "index": "D", "solvedCount": 2445}, {"contestId": 999, "index": "C", "solvedCount": 8442}, {"contestId": 999, "index": "B", "solvedCount": 10289}, {"contestId": 999, "index": "A", "solvedCount": 13376}, {"contestId": 998, "index": "B", "solvedCount": 7856}, {"contestId": 998, "index": "A", "solvedCount": 6943}, {"contestId": 997, "index": "E", "solvedCount": 249}, {"contestId": 997, "index": "D", "solvedCount": 227}, {"contestId": 997, "index": "C", "solvedCount": 759}, {"contestId": 997, "index": "B", "solvedCount": 2264}, {"contestId": 997, "index": "A", "solvedCount": 6053}, {"contestId": 996, "index": "B", "solvedCount": 5778}, {"contestId": 996, "index": "A", "solvedCount": 27053}, {"contestId": 995, "index": "F", "solvedCount": 417}, {"contestId": 995, "index": "E", "solvedCount": 330}, {"contestId": 995, "index": "D", "solvedCount": 512}, {"contestId": 995, "index": "C", "solvedCount": 1137}, {"contestId": 995, "index": "B", "solvedCount": 5338}, {"contestId": 995, "index": "A", "solvedCount": 1157}, {"contestId": 994, "index": "B", "solvedCount": 4177}, {"contestId": 994, "index": "A", "solvedCount": 10115}, {"contestId": 993, "index": "F", "solvedCount": 28}, {"contestId": 993, "index": "E", "solvedCount": 764}, {"contestId": 993, "index": "D", "solvedCount": 432}, {"contestId": 993, "index": "C", "solvedCount": 1116}, {"contestId": 993, "index": "B", "solvedCount": 1601}, {"contestId": 993, "index": "A", "solvedCount": 3017}, {"contestId": 992, "index": "E", "solvedCount": 618}, {"contestId": 992, "index": "D", "solvedCount": 1249}, {"contestId": 992, "index": "C", "solvedCount": 3670}, {"contestId": 992, "index": "B", "solvedCount": 4447}, {"contestId": 992, "index": "A", "solvedCount": 8887}, {"contestId": 991, "index": "F", "solvedCount": 202}, {"contestId": 991, "index": "E", "solvedCount": 2265}, {"contestId": 991, "index": "D", "solvedCount": 4988}, {"contestId": 991, "index": "C", "solvedCount": 6153}, {"contestId": 991, "index": "B", "solvedCount": 7974}, {"contestId": 991, "index": "A", "solvedCount": 7986}, {"contestId": 990, "index": "G", "solvedCount": 792}, {"contestId": 990, "index": "F", "solvedCount": 548}, {"contestId": 990, "index": "E", "solvedCount": 1473}, {"contestId": 990, "index": "D", "solvedCount": 2760}, {"contestId": 990, "index": "C", "solvedCount": 4480}, {"contestId": 990, "index": "B", "solvedCount": 6235}, {"contestId": 990, "index": "A", "solvedCount": 8123}, {"contestId": 989, "index": "E", "solvedCount": 167}, {"contestId": 989, "index": "D", "solvedCount": 374}, {"contestId": 989, "index": "C", "solvedCount": 2753}, {"contestId": 989, "index": "B", "solvedCount": 5346}, {"contestId": 989, "index": "A", "solvedCount": 7604}, {"contestId": 988, "index": "F", "solvedCount": 1250}, {"contestId": 988, "index": "E", "solvedCount": 2213}, {"contestId": 988, "index": "D", "solvedCount": 3909}, {"contestId": 988, "index": "C", "solvedCount": 5993}, {"contestId": 988, "index": "B", "solvedCount": 9986}, {"contestId": 988, "index": "A", "solvedCount": 13623}, {"contestId": 987, "index": "C", "solvedCount": 7353}, {"contestId": 987, "index": "B", "solvedCount": 8417}, {"contestId": 987, "index": "A", "solvedCount": 11588}, {"contestId": 986, "index": "F", "solvedCount": 169}, {"contestId": 986, "index": "E", "solvedCount": 361}, {"contestId": 986, "index": "D", "solvedCount": 194}, {"contestId": 986, "index": "C", "solvedCount": 1296}, {"contestId": 986, "index": "B", "solvedCount": 3282}, {"contestId": 986, "index": "A", "solvedCount": 4198}, {"contestId": 985, "index": "G", "solvedCount": 193}, {"contestId": 985, "index": "F", "solvedCount": 846}, {"contestId": 985, "index": "E", "solvedCount": 1922}, {"contestId": 985, "index": "D", "solvedCount": 1561}, {"contestId": 985, "index": "C", "solvedCount": 4516}, {"contestId": 985, "index": "B", "solvedCount": 5952}, {"contestId": 985, "index": "A", "solvedCount": 6801}, {"contestId": 984, "index": "B", "solvedCount": 5902}, {"contestId": 984, "index": "A", "solvedCount": 11994}, {"contestId": 983, "index": "E", "solvedCount": 376}, {"contestId": 983, "index": "D", "solvedCount": 139}, {"contestId": 983, "index": "C", "solvedCount": 669}, {"contestId": 983, "index": "B", "solvedCount": 3421}, {"contestId": 983, "index": "A", "solvedCount": 3748}, {"contestId": 982, "index": "F", "solvedCount": 120}, {"contestId": 982, "index": "E", "solvedCount": 383}, {"contestId": 982, "index": "D", "solvedCount": 1625}, {"contestId": 982, "index": "C", "solvedCount": 5915}, {"contestId": 982, "index": "B", "solvedCount": 5778}, {"contestId": 982, "index": "A", "solvedCount": 6877}, {"contestId": 981, "index": "H", "solvedCount": 149}, {"contestId": 981, "index": "G", "solvedCount": 411}, {"contestId": 981, "index": "F", "solvedCount": 371}, {"contestId": 981, "index": "E", "solvedCount": 1181}, {"contestId": 981, "index": "D", "solvedCount": 2205}, {"contestId": 981, "index": "C", "solvedCount": 3507}, {"contestId": 981, "index": "B", "solvedCount": 4873}, {"contestId": 981, "index": "A", "solvedCount": 6207}, {"contestId": 980, "index": "F", "solvedCount": 83}, {"contestId": 980, "index": "E", "solvedCount": 1158}, {"contestId": 980, "index": "D", "solvedCount": 1326}, {"contestId": 980, "index": "C", "solvedCount": 3103}, {"contestId": 980, "index": "B", "solvedCount": 3787}, {"contestId": 980, "index": "A", "solvedCount": 8366}, {"contestId": 979, "index": "E", "solvedCount": 271}, {"contestId": 979, "index": "D", "solvedCount": 1028}, {"contestId": 979, "index": "C", "solvedCount": 3925}, {"contestId": 979, "index": "B", "solvedCount": 3352}, {"contestId": 979, "index": "A", "solvedCount": 9258}, {"contestId": 978, "index": "G", "solvedCount": 2563}, {"contestId": 978, "index": "F", "solvedCount": 4634}, {"contestId": 978, "index": "E", "solvedCount": 5405}, {"contestId": 978, "index": "D", "solvedCount": 4813}, {"contestId": 978, "index": "C", "solvedCount": 11012}, {"contestId": 978, "index": "B", "solvedCount": 16790}, {"contestId": 978, "index": "A", "solvedCount": 13020}, {"contestId": 977, "index": "F", "solvedCount": 6765}, {"contestId": 977, "index": "E", "solvedCount": 8119}, {"contestId": 977, "index": "D", "solvedCount": 9321}, {"contestId": 977, "index": "C", "solvedCount": 13314}, {"contestId": 977, "index": "B", "solvedCount": 15625}, {"contestId": 977, "index": "A", "solvedCount": 46677}, {"contestId": 976, "index": "F", "solvedCount": 298}, {"contestId": 976, "index": "E", "solvedCount": 1490}, {"contestId": 976, "index": "D", "solvedCount": 452}, {"contestId": 976, "index": "C", "solvedCount": 4601}, {"contestId": 976, "index": "B", "solvedCount": 4684}, {"contestId": 976, "index": "A", "solvedCount": 8118}, {"contestId": 975, "index": "E", "solvedCount": 242}, {"contestId": 975, "index": "D", "solvedCount": 1482}, {"contestId": 975, "index": "C", "solvedCount": 5319}, {"contestId": 975, "index": "B", "solvedCount": 5428}, {"contestId": 975, "index": "A", "solvedCount": 6568}, {"contestId": 967, "index": "B", "solvedCount": 4009}, {"contestId": 967, "index": "A", "solvedCount": 3448}, {"contestId": 965, "index": "E", "solvedCount": 693}, {"contestId": 965, "index": "D", "solvedCount": 2032}, {"contestId": 965, "index": "C", "solvedCount": 1639}, {"contestId": 965, "index": "B", "solvedCount": 3522}, {"contestId": 965, "index": "A", "solvedCount": 6684}, {"contestId": 964, "index": "B", "solvedCount": 3533}, {"contestId": 964, "index": "A", "solvedCount": 6761}, {"contestId": 963, "index": "E", "solvedCount": 167}, {"contestId": 963, "index": "D", "solvedCount": 718}, {"contestId": 963, "index": "C", "solvedCount": 402}, {"contestId": 963, "index": "B", "solvedCount": 1788}, {"contestId": 963, "index": "A", "solvedCount": 2425}, {"contestId": 962, "index": "G", "solvedCount": 70}, {"contestId": 962, "index": "F", "solvedCount": 505}, {"contestId": 962, "index": "E", "solvedCount": 789}, {"contestId": 962, "index": "D", "solvedCount": 4395}, {"contestId": 962, "index": "C", "solvedCount": 5587}, {"contestId": 962, "index": "B", "solvedCount": 5898}, {"contestId": 962, "index": "A", "solvedCount": 9195}, {"contestId": 961, "index": "G", "solvedCount": 439}, {"contestId": 961, "index": "F", "solvedCount": 274}, {"contestId": 961, "index": "E", "solvedCount": 2228}, {"contestId": 961, "index": "D", "solvedCount": 2560}, {"contestId": 961, "index": "C", "solvedCount": 4045}, {"contestId": 961, "index": "B", "solvedCount": 7788}, {"contestId": 961, "index": "A", "solvedCount": 7722}, {"contestId": 960, "index": "H", "solvedCount": 97}, {"contestId": 960, "index": "G", "solvedCount": 483}, {"contestId": 960, "index": "F", "solvedCount": 1568}, {"contestId": 960, "index": "E", "solvedCount": 906}, {"contestId": 960, "index": "D", "solvedCount": 1245}, {"contestId": 960, "index": "C", "solvedCount": 2891}, {"contestId": 960, "index": "B", "solvedCount": 4711}, {"contestId": 960, "index": "A", "solvedCount": 5995}, {"contestId": 959, "index": "F", "solvedCount": 762}, {"contestId": 959, "index": "E", "solvedCount": 2389}, {"contestId": 959, "index": "D", "solvedCount": 2112}, {"contestId": 959, "index": "C", "solvedCount": 4041}, {"contestId": 959, "index": "B", "solvedCount": 6224}, {"contestId": 959, "index": "A", "solvedCount": 20184}, {"contestId": 958, "index": "F3", "solvedCount": 301}, {"contestId": 958, "index": "F2", "solvedCount": 840}, {"contestId": 958, "index": "F1", "solvedCount": 1187}, {"contestId": 958, "index": "E3", "solvedCount": 115}, {"contestId": 958, "index": "E2", "solvedCount": 413}, {"contestId": 958, "index": "E1", "solvedCount": 1073}, {"contestId": 958, "index": "D2", "solvedCount": 55}, {"contestId": 958, "index": "D1", "solvedCount": 1438}, {"contestId": 958, "index": "C3", "solvedCount": 211}, {"contestId": 958, "index": "C2", "solvedCount": 712}, {"contestId": 958, "index": "C1", "solvedCount": 1730}, {"contestId": 958, "index": "B2", "solvedCount": 391}, {"contestId": 958, "index": "B1", "solvedCount": 1961}, {"contestId": 958, "index": "A3", "solvedCount": 29}, {"contestId": 958, "index": "A2", "solvedCount": 650}, {"contestId": 958, "index": "A1", "solvedCount": 1328}, {"contestId": 957, "index": "A", "solvedCount": 4353}, {"contestId": 955, "index": "F", "solvedCount": 112}, {"contestId": 955, "index": "E", "solvedCount": 49}, {"contestId": 955, "index": "D", "solvedCount": 244}, {"contestId": 955, "index": "C", "solvedCount": 1558}, {"contestId": 955, "index": "B", "solvedCount": 3561}, {"contestId": 955, "index": "A", "solvedCount": 5065}, {"contestId": 954, "index": "I", "solvedCount": 445}, {"contestId": 954, "index": "H", "solvedCount": 253}, {"contestId": 954, "index": "G", "solvedCount": 1096}, {"contestId": 954, "index": "F", "solvedCount": 583}, {"contestId": 954, "index": "E", "solvedCount": 1223}, {"contestId": 954, "index": "D", "solvedCount": 3574}, {"contestId": 954, "index": "C", "solvedCount": 2751}, {"contestId": 954, "index": "B", "solvedCount": 4745}, {"contestId": 954, "index": "A", "solvedCount": 7226}, {"contestId": 952, "index": "G", "solvedCount": 162}, {"contestId": 952, "index": "F", "solvedCount": 195}, {"contestId": 952, "index": "E", "solvedCount": 437}, {"contestId": 952, "index": "D", "solvedCount": 1831}, {"contestId": 952, "index": "C", "solvedCount": 2299}, {"contestId": 952, "index": "B", "solvedCount": 1580}, {"contestId": 952, "index": "A", "solvedCount": 8342}, {"contestId": 950, "index": "B", "solvedCount": 5932}, {"contestId": 950, "index": "A", "solvedCount": 9756}, {"contestId": 949, "index": "F", "solvedCount": 31}, {"contestId": 949, "index": "E", "solvedCount": 307}, {"contestId": 949, "index": "D", "solvedCount": 606}, {"contestId": 949, "index": "C", "solvedCount": 1357}, {"contestId": 949, "index": "B", "solvedCount": 2931}, {"contestId": 949, "index": "A", "solvedCount": 4076}, {"contestId": 948, "index": "A", "solvedCount": 7807}, {"contestId": 946, "index": "G", "solvedCount": 289}, {"contestId": 946, "index": "F", "solvedCount": 304}, {"contestId": 946, "index": "E", "solvedCount": 725}, {"contestId": 946, "index": "D", "solvedCount": 2753}, {"contestId": 946, "index": "C", "solvedCount": 6295}, {"contestId": 946, "index": "B", "solvedCount": 7668}, {"contestId": 946, "index": "A", "solvedCount": 10544}, {"contestId": 940, "index": "F", "solvedCount": 694}, {"contestId": 940, "index": "E", "solvedCount": 1867}, {"contestId": 940, "index": "D", "solvedCount": 2815}, {"contestId": 940, "index": "C", "solvedCount": 4102}, {"contestId": 940, "index": "B", "solvedCount": 5959}, {"contestId": 940, "index": "A", "solvedCount": 5928}, {"contestId": 939, "index": "F", "solvedCount": 344}, {"contestId": 939, "index": "E", "solvedCount": 2032}, {"contestId": 939, "index": "D", "solvedCount": 4329}, {"contestId": 939, "index": "C", "solvedCount": 3675}, {"contestId": 939, "index": "B", "solvedCount": 7508}, {"contestId": 939, "index": "A", "solvedCount": 12224}, {"contestId": 938, "index": "G", "solvedCount": 262}, {"contestId": 938, "index": "F", "solvedCount": 268}, {"contestId": 938, "index": "E", "solvedCount": 721}, {"contestId": 938, "index": "D", "solvedCount": 2469}, {"contestId": 938, "index": "C", "solvedCount": 2514}, {"contestId": 938, "index": "B", "solvedCount": 6819}, {"contestId": 938, "index": "A", "solvedCount": 8583}, {"contestId": 937, "index": "B", "solvedCount": 5255}, {"contestId": 937, "index": "A", "solvedCount": 10067}, {"contestId": 936, "index": "E", "solvedCount": 115}, {"contestId": 936, "index": "D", "solvedCount": 133}, {"contestId": 936, "index": "C", "solvedCount": 819}, {"contestId": 936, "index": "B", "solvedCount": 2219}, {"contestId": 936, "index": "A", "solvedCount": 3622}, {"contestId": 935, "index": "F", "solvedCount": 208}, {"contestId": 935, "index": "E", "solvedCount": 628}, {"contestId": 935, "index": "D", "solvedCount": 1858}, {"contestId": 935, "index": "C", "solvedCount": 3874}, {"contestId": 935, "index": "B", "solvedCount": 8241}, {"contestId": 935, "index": "A", "solvedCount": 20994}, {"contestId": 934, "index": "B", "solvedCount": 6543}, {"contestId": 934, "index": "A", "solvedCount": 5011}, {"contestId": 933, "index": "E", "solvedCount": 101}, {"contestId": 933, "index": "D", "solvedCount": 168}, {"contestId": 933, "index": "C", "solvedCount": 403}, {"contestId": 933, "index": "B", "solvedCount": 1546}, {"contestId": 933, "index": "A", "solvedCount": 3248}, {"contestId": 932, "index": "G", "solvedCount": 283}, {"contestId": 932, "index": "F", "solvedCount": 774}, {"contestId": 932, "index": "E", "solvedCount": 1309}, {"contestId": 932, "index": "D", "solvedCount": 1120}, {"contestId": 932, "index": "C", "solvedCount": 3268}, {"contestId": 932, "index": "B", "solvedCount": 5565}, {"contestId": 932, "index": "A", "solvedCount": 8004}, {"contestId": 931, "index": "C", "solvedCount": 2726}, {"contestId": 931, "index": "B", "solvedCount": 5376}, {"contestId": 931, "index": "A", "solvedCount": 8436}, {"contestId": 930, "index": "E", "solvedCount": 172}, {"contestId": 930, "index": "D", "solvedCount": 268}, {"contestId": 930, "index": "C", "solvedCount": 1350}, {"contestId": 930, "index": "B", "solvedCount": 1965}, {"contestId": 930, "index": "A", "solvedCount": 4610}, {"contestId": 929, "index": "D", "solvedCount": 134}, {"contestId": 929, "index": "C", "solvedCount": 1043}, {"contestId": 929, "index": "B", "solvedCount": 1981}, {"contestId": 929, "index": "A", "solvedCount": 2342}, {"contestId": 928, "index": "D", "solvedCount": 720}, {"contestId": 928, "index": "C", "solvedCount": 829}, {"contestId": 928, "index": "B", "solvedCount": 1896}, {"contestId": 928, "index": "A", "solvedCount": 2667}, {"contestId": 927, "index": "A", "solvedCount": 1}, {"contestId": 926, "index": "J", "solvedCount": 143}, {"contestId": 926, "index": "I", "solvedCount": 546}, {"contestId": 926, "index": "H", "solvedCount": 135}, {"contestId": 926, "index": "G", "solvedCount": 1055}, {"contestId": 926, "index": "F", "solvedCount": 79}, {"contestId": 926, "index": "E", "solvedCount": 561}, {"contestId": 926, "index": "D", "solvedCount": 728}, {"contestId": 926, "index": "C", "solvedCount": 1450}, {"contestId": 926, "index": "B", "solvedCount": 1142}, {"contestId": 926, "index": "A", "solvedCount": 2348}, {"contestId": 925, "index": "F", "solvedCount": 51}, {"contestId": 925, "index": "E", "solvedCount": 182}, {"contestId": 925, "index": "D", "solvedCount": 358}, {"contestId": 925, "index": "C", "solvedCount": 936}, {"contestId": 925, "index": "B", "solvedCount": 1738}, {"contestId": 925, "index": "A", "solvedCount": 2603}, {"contestId": 924, "index": "F", "solvedCount": 46}, {"contestId": 924, "index": "E", "solvedCount": 377}, {"contestId": 924, "index": "D", "solvedCount": 679}, {"contestId": 924, "index": "C", "solvedCount": 2884}, {"contestId": 924, "index": "B", "solvedCount": 4237}, {"contestId": 924, "index": "A", "solvedCount": 4240}, {"contestId": 923, "index": "F", "solvedCount": 38}, {"contestId": 923, "index": "E", "solvedCount": 185}, {"contestId": 923, "index": "D", "solvedCount": 863}, {"contestId": 923, "index": "C", "solvedCount": 3100}, {"contestId": 923, "index": "B", "solvedCount": 5269}, {"contestId": 923, "index": "A", "solvedCount": 4082}, {"contestId": 922, "index": "F", "solvedCount": 421}, {"contestId": 922, "index": "E", "solvedCount": 1187}, {"contestId": 922, "index": "D", "solvedCount": 3042}, {"contestId": 922, "index": "C", "solvedCount": 5166}, {"contestId": 922, "index": "B", "solvedCount": 6413}, {"contestId": 922, "index": "A", "solvedCount": 7674}, {"contestId": 921, "index": "14", "solvedCount": 0}, {"contestId": 921, "index": "13", "solvedCount": 0}, {"contestId": 921, "index": "12", "solvedCount": 0}, {"contestId": 921, "index": "11", "solvedCount": 0}, {"contestId": 921, "index": "10", "solvedCount": 0}, {"contestId": 921, "index": "09", "solvedCount": 0}, {"contestId": 921, "index": "08", "solvedCount": 0}, {"contestId": 921, "index": "07", "solvedCount": 0}, {"contestId": 921, "index": "06", "solvedCount": 0}, {"contestId": 921, "index": "05", "solvedCount": 0}, {"contestId": 921, "index": "04", "solvedCount": 0}, {"contestId": 921, "index": "03", "solvedCount": 0}, {"contestId": 921, "index": "02", "solvedCount": 0}, {"contestId": 921, "index": "01", "solvedCount": 0}, {"contestId": 920, "index": "G", "solvedCount": 996}, {"contestId": 920, "index": "F", "solvedCount": 2705}, {"contestId": 920, "index": "E", "solvedCount": 2630}, {"contestId": 920, "index": "D", "solvedCount": 424}, {"contestId": 920, "index": "C", "solvedCount": 5543}, {"contestId": 920, "index": "B", "solvedCount": 5239}, {"contestId": 920, "index": "A", "solvedCount": 6194}, {"contestId": 919, "index": "F", "solvedCount": 173}, {"contestId": 919, "index": "E", "solvedCount": 1211}, {"contestId": 919, "index": "D", "solvedCount": 4273}, {"contestId": 919, "index": "C", "solvedCount": 6745}, {"contestId": 919, "index": "B", "solvedCount": 14723}, {"contestId": 919, "index": "A", "solvedCount": 11544}, {"contestId": 918, "index": "B", "solvedCount": 8721}, {"contestId": 918, "index": "A", "solvedCount": 11512}, {"contestId": 917, "index": "E", "solvedCount": 66}, {"contestId": 917, "index": "D", "solvedCount": 365}, {"contestId": 917, "index": "C", "solvedCount": 187}, {"contestId": 917, "index": "B", "solvedCount": 2528}, {"contestId": 917, "index": "A", "solvedCount": 2815}, {"contestId": 916, "index": "E", "solvedCount": 617}, {"contestId": 916, "index": "D", "solvedCount": 275}, {"contestId": 916, "index": "C", "solvedCount": 3549}, {"contestId": 916, "index": "B", "solvedCount": 1283}, {"contestId": 916, "index": "A", "solvedCount": 6879}, {"contestId": 915, "index": "G", "solvedCount": 588}, {"contestId": 915, "index": "F", "solvedCount": 972}, {"contestId": 915, "index": "E", "solvedCount": 1446}, {"contestId": 915, "index": "D", "solvedCount": 1919}, {"contestId": 915, "index": "C", "solvedCount": 4752}, {"contestId": 915, "index": "B", "solvedCount": 6300}, {"contestId": 915, "index": "A", "solvedCount": 10232}, {"contestId": 914, "index": "H", "solvedCount": 65}, {"contestId": 914, "index": "G", "solvedCount": 449}, {"contestId": 914, "index": "F", "solvedCount": 456}, {"contestId": 914, "index": "E", "solvedCount": 672}, {"contestId": 914, "index": "D", "solvedCount": 2813}, {"contestId": 914, "index": "C", "solvedCount": 2598}, {"contestId": 914, "index": "B", "solvedCount": 6493}, {"contestId": 914, "index": "A", "solvedCount": 9469}, {"contestId": 913, "index": "H", "solvedCount": 67}, {"contestId": 913, "index": "G", "solvedCount": 113}, {"contestId": 913, "index": "F", "solvedCount": 318}, {"contestId": 913, "index": "E", "solvedCount": 565}, {"contestId": 913, "index": "D", "solvedCount": 3394}, {"contestId": 913, "index": "C", "solvedCount": 5605}, {"contestId": 913, "index": "B", "solvedCount": 9531}, {"contestId": 913, "index": "A", "solvedCount": 13419}, {"contestId": 912, "index": "E", "solvedCount": 810}, {"contestId": 912, "index": "D", "solvedCount": 1358}, {"contestId": 912, "index": "C", "solvedCount": 426}, {"contestId": 912, "index": "B", "solvedCount": 6637}, {"contestId": 912, "index": "A", "solvedCount": 9716}, {"contestId": 911, "index": "G", "solvedCount": 768}, {"contestId": 911, "index": "F", "solvedCount": 712}, {"contestId": 911, "index": "E", "solvedCount": 1687}, {"contestId": 911, "index": "D", "solvedCount": 3032}, {"contestId": 911, "index": "C", "solvedCount": 5265}, {"contestId": 911, "index": "B", "solvedCount": 7437}, {"contestId": 911, "index": "A", "solvedCount": 8245}, {"contestId": 910, "index": "C", "solvedCount": 1151}, {"contestId": 910, "index": "B", "solvedCount": 1231}, {"contestId": 910, "index": "A", "solvedCount": 5020}, {"contestId": 909, "index": "F", "solvedCount": 343}, {"contestId": 909, "index": "E", "solvedCount": 1112}, {"contestId": 909, "index": "D", "solvedCount": 1244}, {"contestId": 909, "index": "C", "solvedCount": 3111}, {"contestId": 909, "index": "B", "solvedCount": 4996}, {"contestId": 909, "index": "A", "solvedCount": 6787}, {"contestId": 908, "index": "H", "solvedCount": 184}, {"contestId": 908, "index": "G", "solvedCount": 538}, {"contestId": 908, "index": "F", "solvedCount": 986}, {"contestId": 908, "index": "E", "solvedCount": 533}, {"contestId": 908, "index": "D", "solvedCount": 1429}, {"contestId": 908, "index": "C", "solvedCount": 5503}, {"contestId": 908, "index": "B", "solvedCount": 6672}, {"contestId": 908, "index": "A", "solvedCount": 11746}, {"contestId": 907, "index": "B", "solvedCount": 3479}, {"contestId": 907, "index": "A", "solvedCount": 4734}, {"contestId": 906, "index": "E", "solvedCount": 148}, {"contestId": 906, "index": "D", "solvedCount": 673}, {"contestId": 906, "index": "C", "solvedCount": 821}, {"contestId": 906, "index": "B", "solvedCount": 865}, {"contestId": 906, "index": "A", "solvedCount": 3495}, {"contestId": 903, "index": "G", "solvedCount": 253}, {"contestId": 903, "index": "F", "solvedCount": 380}, {"contestId": 903, "index": "E", "solvedCount": 878}, {"contestId": 903, "index": "D", "solvedCount": 2467}, {"contestId": 903, "index": "C", "solvedCount": 7220}, {"contestId": 903, "index": "B", "solvedCount": 5932}, {"contestId": 903, "index": "A", "solvedCount": 10047}, {"contestId": 902, "index": "B", "solvedCount": 6627}, {"contestId": 902, "index": "A", "solvedCount": 7070}, {"contestId": 901, "index": "E", "solvedCount": 47}, {"contestId": 901, "index": "D", "solvedCount": 250}, {"contestId": 901, "index": "C", "solvedCount": 796}, {"contestId": 901, "index": "B", "solvedCount": 1171}, {"contestId": 901, "index": "A", "solvedCount": 4142}, {"contestId": 900, "index": "E", "solvedCount": 700}, {"contestId": 900, "index": "D", "solvedCount": 1630}, {"contestId": 900, "index": "C", "solvedCount": 3058}, {"contestId": 900, "index": "B", "solvedCount": 5751}, {"contestId": 900, "index": "A", "solvedCount": 9264}, {"contestId": 899, "index": "F", "solvedCount": 1047}, {"contestId": 899, "index": "E", "solvedCount": 1467}, {"contestId": 899, "index": "D", "solvedCount": 1875}, {"contestId": 899, "index": "C", "solvedCount": 5498}, {"contestId": 899, "index": "B", "solvedCount": 4539}, {"contestId": 899, "index": "A", "solvedCount": 7465}, {"contestId": 898, "index": "F", "solvedCount": 681}, {"contestId": 898, "index": "E", "solvedCount": 3251}, {"contestId": 898, "index": "D", "solvedCount": 2678}, {"contestId": 898, "index": "C", "solvedCount": 3840}, {"contestId": 898, "index": "B", "solvedCount": 6642}, {"contestId": 898, "index": "A", "solvedCount": 10466}, {"contestId": 897, "index": "B", "solvedCount": 5662}, {"contestId": 897, "index": "A", "solvedCount": 10168}, {"contestId": 896, "index": "E", "solvedCount": 343}, {"contestId": 896, "index": "D", "solvedCount": 199}, {"contestId": 896, "index": "C", "solvedCount": 835}, {"contestId": 896, "index": "B", "solvedCount": 1461}, {"contestId": 896, "index": "A", "solvedCount": 2795}, {"contestId": 895, "index": "E", "solvedCount": 516}, {"contestId": 895, "index": "D", "solvedCount": 757}, {"contestId": 895, "index": "C", "solvedCount": 2160}, {"contestId": 895, "index": "B", "solvedCount": 2637}, {"contestId": 895, "index": "A", "solvedCount": 5117}, {"contestId": 894, "index": "E", "solvedCount": 1066}, {"contestId": 894, "index": "D", "solvedCount": 832}, {"contestId": 894, "index": "C", "solvedCount": 3144}, {"contestId": 894, "index": "B", "solvedCount": 3350}, {"contestId": 894, "index": "A", "solvedCount": 15856}, {"contestId": 893, "index": "F", "solvedCount": 797}, {"contestId": 893, "index": "E", "solvedCount": 1673}, {"contestId": 893, "index": "D", "solvedCount": 2013}, {"contestId": 893, "index": "C", "solvedCount": 9363}, {"contestId": 893, "index": "B", "solvedCount": 6880}, {"contestId": 893, "index": "A", "solvedCount": 7423}, {"contestId": 892, "index": "B", "solvedCount": 6058}, {"contestId": 892, "index": "A", "solvedCount": 9169}, {"contestId": 891, "index": "E", "solvedCount": 285}, {"contestId": 891, "index": "D", "solvedCount": 79}, {"contestId": 891, "index": "C", "solvedCount": 1045}, {"contestId": 891, "index": "B", "solvedCount": 2116}, {"contestId": 891, "index": "A", "solvedCount": 6097}, {"contestId": 889, "index": "E", "solvedCount": 171}, {"contestId": 888, "index": "G", "solvedCount": 1030}, {"contestId": 888, "index": "F", "solvedCount": 319}, {"contestId": 888, "index": "E", "solvedCount": 2840}, {"contestId": 888, "index": "D", "solvedCount": 3283}, {"contestId": 888, "index": "C", "solvedCount": 4582}, {"contestId": 888, "index": "B", "solvedCount": 6372}, {"contestId": 888, "index": "A", "solvedCount": 7509}, {"contestId": 887, "index": "F", "solvedCount": 80}, {"contestId": 887, "index": "E", "solvedCount": 90}, {"contestId": 887, "index": "D", "solvedCount": 385}, {"contestId": 887, "index": "C", "solvedCount": 2415}, {"contestId": 887, "index": "B", "solvedCount": 4248}, {"contestId": 887, "index": "A", "solvedCount": 7983}, {"contestId": 886, "index": "F", "solvedCount": 203}, {"contestId": 886, "index": "E", "solvedCount": 584}, {"contestId": 886, "index": "D", "solvedCount": 1420}, {"contestId": 886, "index": "C", "solvedCount": 4474}, {"contestId": 886, "index": "B", "solvedCount": 5952}, {"contestId": 886, "index": "A", "solvedCount": 7419}, {"contestId": 884, "index": "F", "solvedCount": 452}, {"contestId": 884, "index": "E", "solvedCount": 368}, {"contestId": 884, "index": "D", "solvedCount": 1231}, {"contestId": 884, "index": "C", "solvedCount": 3248}, {"contestId": 884, "index": "B", "solvedCount": 5211}, {"contestId": 884, "index": "A", "solvedCount": 7338}, {"contestId": 883, "index": "M", "solvedCount": 2183}, {"contestId": 883, "index": "L", "solvedCount": 145}, {"contestId": 883, "index": "K", "solvedCount": 694}, {"contestId": 883, "index": "J", "solvedCount": 375}, {"contestId": 883, "index": "I", "solvedCount": 913}, {"contestId": 883, "index": "H", "solvedCount": 1049}, {"contestId": 883, "index": "G", "solvedCount": 880}, {"contestId": 883, "index": "F", "solvedCount": 1502}, {"contestId": 883, "index": "E", "solvedCount": 1243}, {"contestId": 883, "index": "D", "solvedCount": 170}, {"contestId": 883, "index": "C", "solvedCount": 427}, {"contestId": 883, "index": "B", "solvedCount": 213}, {"contestId": 883, "index": "A", "solvedCount": 392}, {"contestId": 879, "index": "B", "solvedCount": 7552}, {"contestId": 879, "index": "A", "solvedCount": 7494}, {"contestId": 878, "index": "E", "solvedCount": 200}, {"contestId": 878, "index": "D", "solvedCount": 282}, {"contestId": 878, "index": "C", "solvedCount": 583}, {"contestId": 878, "index": "B", "solvedCount": 814}, {"contestId": 878, "index": "A", "solvedCount": 4058}, {"contestId": 877, "index": "F", "solvedCount": 592}, {"contestId": 877, "index": "E", "solvedCount": 2434}, {"contestId": 877, "index": "D", "solvedCount": 2329}, {"contestId": 877, "index": "C", "solvedCount": 4395}, {"contestId": 877, "index": "B", "solvedCount": 5998}, {"contestId": 877, "index": "A", "solvedCount": 8308}, {"contestId": 876, "index": "B", "solvedCount": 6038}, {"contestId": 876, "index": "A", "solvedCount": 7339}, {"contestId": 875, "index": "F", "solvedCount": 660}, {"contestId": 875, "index": "E", "solvedCount": 445}, {"contestId": 875, "index": "D", "solvedCount": 1312}, {"contestId": 875, "index": "C", "solvedCount": 1403}, {"contestId": 875, "index": "B", "solvedCount": 4229}, {"contestId": 875, "index": "A", "solvedCount": 7582}, {"contestId": 873, "index": "F", "solvedCount": 544}, {"contestId": 873, "index": "E", "solvedCount": 244}, {"contestId": 873, "index": "D", "solvedCount": 1740}, {"contestId": 873, "index": "C", "solvedCount": 2320}, {"contestId": 873, "index": "B", "solvedCount": 4469}, {"contestId": 873, "index": "A", "solvedCount": 5491}, {"contestId": 871, "index": "E", "solvedCount": 67}, {"contestId": 870, "index": "F", "solvedCount": 297}, {"contestId": 870, "index": "E", "solvedCount": 684}, {"contestId": 870, "index": "D", "solvedCount": 937}, {"contestId": 870, "index": "C", "solvedCount": 6572}, {"contestId": 870, "index": "B", "solvedCount": 6059}, {"contestId": 870, "index": "A", "solvedCount": 7698}, {"contestId": 869, "index": "E", "solvedCount": 921}, {"contestId": 869, "index": "D", "solvedCount": 117}, {"contestId": 869, "index": "C", "solvedCount": 3091}, {"contestId": 869, "index": "B", "solvedCount": 8590}, {"contestId": 869, "index": "A", "solvedCount": 7624}, {"contestId": 868, "index": "G", "solvedCount": 61}, {"contestId": 868, "index": "F", "solvedCount": 893}, {"contestId": 868, "index": "E", "solvedCount": 230}, {"contestId": 868, "index": "D", "solvedCount": 724}, {"contestId": 868, "index": "C", "solvedCount": 3096}, {"contestId": 868, "index": "B", "solvedCount": 2981}, {"contestId": 868, "index": "A", "solvedCount": 5849}, {"contestId": 867, "index": "A", "solvedCount": 13546}, {"contestId": 865, "index": "G", "solvedCount": 76}, {"contestId": 865, "index": "F", "solvedCount": 32}, {"contestId": 865, "index": "E", "solvedCount": 47}, {"contestId": 865, "index": "D", "solvedCount": 1529}, {"contestId": 865, "index": "C", "solvedCount": 501}, {"contestId": 865, "index": "B", "solvedCount": 1425}, {"contestId": 865, "index": "A", "solvedCount": 3540}, {"contestId": 864, "index": "F", "solvedCount": 417}, {"contestId": 864, "index": "E", "solvedCount": 2638}, {"contestId": 864, "index": "D", "solvedCount": 4610}, {"contestId": 864, "index": "C", "solvedCount": 4930}, {"contestId": 864, "index": "B", "solvedCount": 6830}, {"contestId": 864, "index": "A", "solvedCount": 8777}, {"contestId": 863, "index": "G", "solvedCount": 31}, {"contestId": 863, "index": "F", "solvedCount": 582}, {"contestId": 863, "index": "E", "solvedCount": 1415}, {"contestId": 863, "index": "D", "solvedCount": 1919}, {"contestId": 863, "index": "C", "solvedCount": 1721}, {"contestId": 863, "index": "B", "solvedCount": 3167}, {"contestId": 863, "index": "A", "solvedCount": 6597}, {"contestId": 862, "index": "F", "solvedCount": 100}, {"contestId": 862, "index": "E", "solvedCount": 855}, {"contestId": 862, "index": "D", "solvedCount": 1247}, {"contestId": 862, "index": "C", "solvedCount": 2882}, {"contestId": 862, "index": "B", "solvedCount": 7414}, {"contestId": 862, "index": "A", "solvedCount": 7534}, {"contestId": 860, "index": "E", "solvedCount": 274}, {"contestId": 859, "index": "G", "solvedCount": 90}, {"contestId": 859, "index": "F", "solvedCount": 101}, {"contestId": 859, "index": "E", "solvedCount": 1119}, {"contestId": 859, "index": "D", "solvedCount": 662}, {"contestId": 859, "index": "C", "solvedCount": 3316}, {"contestId": 859, "index": "B", "solvedCount": 4719}, {"contestId": 859, "index": "A", "solvedCount": 5779}, {"contestId": 858, "index": "F", "solvedCount": 706}, {"contestId": 858, "index": "E", "solvedCount": 410}, {"contestId": 858, "index": "D", "solvedCount": 2653}, {"contestId": 858, "index": "C", "solvedCount": 4214}, {"contestId": 858, "index": "B", "solvedCount": 2972}, {"contestId": 858, "index": "A", "solvedCount": 5564}, {"contestId": 856, "index": "F", "solvedCount": 40}, {"contestId": 856, "index": "E", "solvedCount": 44}, {"contestId": 856, "index": "D", "solvedCount": 230}, {"contestId": 856, "index": "C", "solvedCount": 258}, {"contestId": 856, "index": "B", "solvedCount": 328}, {"contestId": 856, "index": "A", "solvedCount": 862}, {"contestId": 855, "index": "G", "solvedCount": 86}, {"contestId": 855, "index": "F", "solvedCount": 146}, {"contestId": 855, "index": "E", "solvedCount": 755}, {"contestId": 855, "index": "D", "solvedCount": 383}, {"contestId": 855, "index": "C", "solvedCount": 1185}, {"contestId": 855, "index": "B", "solvedCount": 4822}, {"contestId": 855, "index": "A", "solvedCount": 9745}, {"contestId": 854, "index": "B", "solvedCount": 6714}, {"contestId": 854, "index": "A", "solvedCount": 9834}, {"contestId": 853, "index": "E", "solvedCount": 38}, {"contestId": 853, "index": "D", "solvedCount": 425}, {"contestId": 853, "index": "C", "solvedCount": 1120}, {"contestId": 853, "index": "B", "solvedCount": 2128}, {"contestId": 853, "index": "A", "solvedCount": 4859}, {"contestId": 852, "index": "I", "solvedCount": 335}, {"contestId": 852, "index": "H", "solvedCount": 67}, {"contestId": 852, "index": "G", "solvedCount": 977}, {"contestId": 852, "index": "F", "solvedCount": 403}, {"contestId": 852, "index": "E", "solvedCount": 593}, {"contestId": 852, "index": "D", "solvedCount": 532}, {"contestId": 852, "index": "C", "solvedCount": 245}, {"contestId": 852, "index": "B", "solvedCount": 708}, {"contestId": 852, "index": "A", "solvedCount": 255}, {"contestId": 851, "index": "B", "solvedCount": 4164}, {"contestId": 851, "index": "A", "solvedCount": 7387}, {"contestId": 850, "index": "F", "solvedCount": 147}, {"contestId": 850, "index": "E", "solvedCount": 209}, {"contestId": 850, "index": "D", "solvedCount": 210}, {"contestId": 850, "index": "C", "solvedCount": 849}, {"contestId": 850, "index": "B", "solvedCount": 1469}, {"contestId": 850, "index": "A", "solvedCount": 2580}, {"contestId": 849, "index": "B", "solvedCount": 2904}, {"contestId": 849, "index": "A", "solvedCount": 6981}, {"contestId": 848, "index": "E", "solvedCount": 85}, {"contestId": 848, "index": "D", "solvedCount": 134}, {"contestId": 848, "index": "C", "solvedCount": 597}, {"contestId": 848, "index": "B", "solvedCount": 1361}, {"contestId": 848, "index": "A", "solvedCount": 4097}, {"contestId": 847, "index": "M", "solvedCount": 4073}, {"contestId": 847, "index": "L", "solvedCount": 231}, {"contestId": 847, "index": "K", "solvedCount": 1081}, {"contestId": 847, "index": "J", "solvedCount": 420}, {"contestId": 847, "index": "I", "solvedCount": 1198}, {"contestId": 847, "index": "H", "solvedCount": 1847}, {"contestId": 847, "index": "G", "solvedCount": 4191}, {"contestId": 847, "index": "F", "solvedCount": 653}, {"contestId": 847, "index": "E", "solvedCount": 1230}, {"contestId": 847, "index": "D", "solvedCount": 700}, {"contestId": 847, "index": "C", "solvedCount": 1725}, {"contestId": 847, "index": "B", "solvedCount": 2385}, {"contestId": 847, "index": "A", "solvedCount": 2554}, {"contestId": 846, "index": "F", "solvedCount": 1232}, {"contestId": 846, "index": "E", "solvedCount": 429}, {"contestId": 846, "index": "D", "solvedCount": 1440}, {"contestId": 846, "index": "C", "solvedCount": 1559}, {"contestId": 846, "index": "B", "solvedCount": 1808}, {"contestId": 846, "index": "A", "solvedCount": 2964}, {"contestId": 845, "index": "G", "solvedCount": 603}, {"contestId": 845, "index": "F", "solvedCount": 182}, {"contestId": 845, "index": "E", "solvedCount": 299}, {"contestId": 845, "index": "D", "solvedCount": 1664}, {"contestId": 845, "index": "C", "solvedCount": 4422}, {"contestId": 845, "index": "B", "solvedCount": 3547}, {"contestId": 845, "index": "A", "solvedCount": 5503}, {"contestId": 844, "index": "B", "solvedCount": 4505}, {"contestId": 844, "index": "A", "solvedCount": 6725}, {"contestId": 843, "index": "E", "solvedCount": 82}, {"contestId": 843, "index": "D", "solvedCount": 236}, {"contestId": 843, "index": "C", "solvedCount": 233}, {"contestId": 843, "index": "B", "solvedCount": 1506}, {"contestId": 843, "index": "A", "solvedCount": 4311}, {"contestId": 842, "index": "E", "solvedCount": 152}, {"contestId": 842, "index": "D", "solvedCount": 1794}, {"contestId": 842, "index": "C", "solvedCount": 2599}, {"contestId": 842, "index": "B", "solvedCount": 7773}, {"contestId": 842, "index": "A", "solvedCount": 6941}, {"contestId": 841, "index": "B", "solvedCount": 8586}, {"contestId": 841, "index": "A", "solvedCount": 9823}, {"contestId": 840, "index": "E", "solvedCount": 171}, {"contestId": 840, "index": "D", "solvedCount": 827}, {"contestId": 840, "index": "C", "solvedCount": 780}, {"contestId": 840, "index": "B", "solvedCount": 1575}, {"contestId": 840, "index": "A", "solvedCount": 6118}, {"contestId": 839, "index": "E", "solvedCount": 494}, {"contestId": 839, "index": "D", "solvedCount": 1872}, {"contestId": 839, "index": "C", "solvedCount": 8391}, {"contestId": 839, "index": "B", "solvedCount": 2833}, {"contestId": 839, "index": "A", "solvedCount": 10709}, {"contestId": 838, "index": "F", "solvedCount": 30}, {"contestId": 838, "index": "E", "solvedCount": 198}, {"contestId": 838, "index": "D", "solvedCount": 130}, {"contestId": 838, "index": "C", "solvedCount": 57}, {"contestId": 838, "index": "B", "solvedCount": 262}, {"contestId": 838, "index": "A", "solvedCount": 599}, {"contestId": 837, "index": "G", "solvedCount": 283}, {"contestId": 837, "index": "F", "solvedCount": 426}, {"contestId": 837, "index": "E", "solvedCount": 1024}, {"contestId": 837, "index": "D", "solvedCount": 1880}, {"contestId": 837, "index": "C", "solvedCount": 2950}, {"contestId": 837, "index": "B", "solvedCount": 2899}, {"contestId": 837, "index": "A", "solvedCount": 6527}, {"contestId": 835, "index": "F", "solvedCount": 426}, {"contestId": 835, "index": "E", "solvedCount": 655}, {"contestId": 835, "index": "D", "solvedCount": 2381}, {"contestId": 835, "index": "C", "solvedCount": 5221}, {"contestId": 835, "index": "B", "solvedCount": 8511}, {"contestId": 835, "index": "A", "solvedCount": 14479}, {"contestId": 834, "index": "B", "solvedCount": 6386}, {"contestId": 834, "index": "A", "solvedCount": 6855}, {"contestId": 833, "index": "E", "solvedCount": 85}, {"contestId": 833, "index": "D", "solvedCount": 188}, {"contestId": 833, "index": "C", "solvedCount": 295}, {"contestId": 833, "index": "B", "solvedCount": 1870}, {"contestId": 833, "index": "A", "solvedCount": 4583}, {"contestId": 832, "index": "E", "solvedCount": 179}, {"contestId": 832, "index": "D", "solvedCount": 2284}, {"contestId": 832, "index": "C", "solvedCount": 330}, {"contestId": 832, "index": "B", "solvedCount": 3675}, {"contestId": 832, "index": "A", "solvedCount": 13668}, {"contestId": 831, "index": "C", "solvedCount": 2872}, {"contestId": 831, "index": "B", "solvedCount": 9769}, {"contestId": 831, "index": "A", "solvedCount": 7433}, {"contestId": 830, "index": "E", "solvedCount": 104}, {"contestId": 830, "index": "D", "solvedCount": 340}, {"contestId": 830, "index": "C", "solvedCount": 803}, {"contestId": 830, "index": "B", "solvedCount": 2171}, {"contestId": 830, "index": "A", "solvedCount": 3362}, {"contestId": 828, "index": "B", "solvedCount": 4723}, {"contestId": 828, "index": "A", "solvedCount": 5807}, {"contestId": 827, "index": "F", "solvedCount": 115}, {"contestId": 827, "index": "E", "solvedCount": 471}, {"contestId": 827, "index": "D", "solvedCount": 583}, {"contestId": 827, "index": "C", "solvedCount": 1197}, {"contestId": 827, "index": "B", "solvedCount": 2716}, {"contestId": 827, "index": "A", "solvedCount": 3116}, {"contestId": 825, "index": "G", "solvedCount": 456}, {"contestId": 825, "index": "F", "solvedCount": 635}, {"contestId": 825, "index": "E", "solvedCount": 1557}, {"contestId": 825, "index": "D", "solvedCount": 2214}, {"contestId": 825, "index": "C", "solvedCount": 3262}, {"contestId": 825, "index": "B", "solvedCount": 2972}, {"contestId": 825, "index": "A", "solvedCount": 5379}, {"contestId": 822, "index": "F", "solvedCount": 186}, {"contestId": 822, "index": "E", "solvedCount": 399}, {"contestId": 822, "index": "D", "solvedCount": 2449}, {"contestId": 822, "index": "C", "solvedCount": 3464}, {"contestId": 822, "index": "B", "solvedCount": 7296}, {"contestId": 822, "index": "A", "solvedCount": 17049}, {"contestId": 821, "index": "E", "solvedCount": 1058}, {"contestId": 821, "index": "D", "solvedCount": 871}, {"contestId": 821, "index": "C", "solvedCount": 4526}, {"contestId": 821, "index": "B", "solvedCount": 4837}, {"contestId": 821, "index": "A", "solvedCount": 6737}, {"contestId": 820, "index": "B", "solvedCount": 4301}, {"contestId": 820, "index": "A", "solvedCount": 6665}, {"contestId": 819, "index": "E", "solvedCount": 218}, {"contestId": 819, "index": "D", "solvedCount": 119}, {"contestId": 819, "index": "C", "solvedCount": 154}, {"contestId": 819, "index": "B", "solvedCount": 1311}, {"contestId": 819, "index": "A", "solvedCount": 221}, {"contestId": 818, "index": "G", "solvedCount": 224}, {"contestId": 818, "index": "F", "solvedCount": 635}, {"contestId": 818, "index": "E", "solvedCount": 1185}, {"contestId": 818, "index": "D", "solvedCount": 2400}, {"contestId": 818, "index": "C", "solvedCount": 862}, {"contestId": 818, "index": "B", "solvedCount": 2217}, {"contestId": 818, "index": "A", "solvedCount": 4595}, {"contestId": 817, "index": "F", "solvedCount": 823}, {"contestId": 817, "index": "E", "solvedCount": 1100}, {"contestId": 817, "index": "D", "solvedCount": 2025}, {"contestId": 817, "index": "C", "solvedCount": 3760}, {"contestId": 817, "index": "B", "solvedCount": 3532}, {"contestId": 817, "index": "A", "solvedCount": 4244}, {"contestId": 816, "index": "B", "solvedCount": 6783}, {"contestId": 816, "index": "A", "solvedCount": 7034}, {"contestId": 815, "index": "E", "solvedCount": 154}, {"contestId": 815, "index": "D", "solvedCount": 322}, {"contestId": 815, "index": "C", "solvedCount": 1280}, {"contestId": 815, "index": "B", "solvedCount": 1101}, {"contestId": 815, "index": "A", "solvedCount": 4668}, {"contestId": 814, "index": "E", "solvedCount": 421}, {"contestId": 814, "index": "D", "solvedCount": 1572}, {"contestId": 814, "index": "C", "solvedCount": 3963}, {"contestId": 814, "index": "B", "solvedCount": 4691}, {"contestId": 814, "index": "A", "solvedCount": 8050}, {"contestId": 813, "index": "F", "solvedCount": 345}, {"contestId": 813, "index": "E", "solvedCount": 1133}, {"contestId": 813, "index": "D", "solvedCount": 515}, {"contestId": 813, "index": "C", "solvedCount": 3244}, {"contestId": 813, "index": "B", "solvedCount": 2519}, {"contestId": 813, "index": "A", "solvedCount": 3735}, {"contestId": 812, "index": "E", "solvedCount": 733}, {"contestId": 812, "index": "D", "solvedCount": 255}, {"contestId": 812, "index": "C", "solvedCount": 6918}, {"contestId": 812, "index": "B", "solvedCount": 3891}, {"contestId": 812, "index": "A", "solvedCount": 5422}, {"contestId": 811, "index": "E", "solvedCount": 454}, {"contestId": 811, "index": "D", "solvedCount": 1110}, {"contestId": 811, "index": "C", "solvedCount": 2504}, {"contestId": 811, "index": "B", "solvedCount": 5347}, {"contestId": 811, "index": "A", "solvedCount": 8837}, {"contestId": 810, "index": "B", "solvedCount": 5978}, {"contestId": 810, "index": "A", "solvedCount": 6892}, {"contestId": 809, "index": "E", "solvedCount": 320}, {"contestId": 809, "index": "D", "solvedCount": 331}, {"contestId": 809, "index": "C", "solvedCount": 464}, {"contestId": 809, "index": "B", "solvedCount": 1092}, {"contestId": 809, "index": "A", "solvedCount": 3946}, {"contestId": 808, "index": "G", "solvedCount": 685}, {"contestId": 808, "index": "F", "solvedCount": 454}, {"contestId": 808, "index": "E", "solvedCount": 1039}, {"contestId": 808, "index": "D", "solvedCount": 3681}, {"contestId": 808, "index": "C", "solvedCount": 3850}, {"contestId": 808, "index": "B", "solvedCount": 4319}, {"contestId": 808, "index": "A", "solvedCount": 5975}, {"contestId": 807, "index": "B", "solvedCount": 3207}, {"contestId": 807, "index": "A", "solvedCount": 9009}, {"contestId": 805, "index": "B", "solvedCount": 9725}, {"contestId": 805, "index": "A", "solvedCount": 11383}, {"contestId": 804, "index": "F", "solvedCount": 82}, {"contestId": 804, "index": "E", "solvedCount": 206}, {"contestId": 804, "index": "D", "solvedCount": 772}, {"contestId": 804, "index": "C", "solvedCount": 1351}, {"contestId": 804, "index": "B", "solvedCount": 6998}, {"contestId": 804, "index": "A", "solvedCount": 11081}, {"contestId": 803, "index": "G", "solvedCount": 505}, {"contestId": 803, "index": "F", "solvedCount": 1250}, {"contestId": 803, "index": "E", "solvedCount": 1167}, {"contestId": 803, "index": "D", "solvedCount": 1793}, {"contestId": 803, "index": "C", "solvedCount": 2812}, {"contestId": 803, "index": "B", "solvedCount": 4180}, {"contestId": 803, "index": "A", "solvedCount": 3090}, {"contestId": 802, "index": "O", "solvedCount": 97}, {"contestId": 802, "index": "N", "solvedCount": 267}, {"contestId": 802, "index": "M", "solvedCount": 1692}, {"contestId": 802, "index": "L", "solvedCount": 119}, {"contestId": 802, "index": "K", "solvedCount": 397}, {"contestId": 802, "index": "J", "solvedCount": 1504}, {"contestId": 802, "index": "I", "solvedCount": 427}, {"contestId": 802, "index": "H", "solvedCount": 266}, {"contestId": 802, "index": "G", "solvedCount": 2644}, {"contestId": 802, "index": "F", "solvedCount": 86}, {"contestId": 802, "index": "E", "solvedCount": 176}, {"contestId": 802, "index": "D", "solvedCount": 326}, {"contestId": 802, "index": "C", "solvedCount": 230}, {"contestId": 802, "index": "B", "solvedCount": 688}, {"contestId": 802, "index": "A", "solvedCount": 896}, {"contestId": 801, "index": "B", "solvedCount": 6828}, {"contestId": 801, "index": "A", "solvedCount": 5865}, {"contestId": 799, "index": "G", "solvedCount": 67}, {"contestId": 799, "index": "F", "solvedCount": 147}, {"contestId": 799, "index": "E", "solvedCount": 615}, {"contestId": 799, "index": "D", "solvedCount": 1527}, {"contestId": 799, "index": "C", "solvedCount": 2661}, {"contestId": 799, "index": "B", "solvedCount": 4769}, {"contestId": 799, "index": "A", "solvedCount": 7871}, {"contestId": 798, "index": "E", "solvedCount": 192}, {"contestId": 798, "index": "D", "solvedCount": 1300}, {"contestId": 798, "index": "C", "solvedCount": 3985}, {"contestId": 798, "index": "B", "solvedCount": 6236}, {"contestId": 798, "index": "A", "solvedCount": 12321}, {"contestId": 797, "index": "F", "solvedCount": 419}, {"contestId": 797, "index": "E", "solvedCount": 1692}, {"contestId": 797, "index": "D", "solvedCount": 1053}, {"contestId": 797, "index": "C", "solvedCount": 3410}, {"contestId": 797, "index": "B", "solvedCount": 5751}, {"contestId": 797, "index": "A", "solvedCount": 6011}, {"contestId": 796, "index": "F", "solvedCount": 102}, {"contestId": 796, "index": "E", "solvedCount": 399}, {"contestId": 796, "index": "D", "solvedCount": 2394}, {"contestId": 796, "index": "C", "solvedCount": 2346}, {"contestId": 796, "index": "B", "solvedCount": 6882}, {"contestId": 796, "index": "A", "solvedCount": 9575}, {"contestId": 794, "index": "G", "solvedCount": 125}, {"contestId": 794, "index": "F", "solvedCount": 429}, {"contestId": 794, "index": "E", "solvedCount": 342}, {"contestId": 794, "index": "D", "solvedCount": 589}, {"contestId": 794, "index": "C", "solvedCount": 2446}, {"contestId": 794, "index": "B", "solvedCount": 4593}, {"contestId": 794, "index": "A", "solvedCount": 5351}, {"contestId": 793, "index": "G", "solvedCount": 124}, {"contestId": 793, "index": "F", "solvedCount": 169}, {"contestId": 793, "index": "E", "solvedCount": 157}, {"contestId": 793, "index": "D", "solvedCount": 1071}, {"contestId": 793, "index": "C", "solvedCount": 987}, {"contestId": 793, "index": "B", "solvedCount": 2967}, {"contestId": 793, "index": "A", "solvedCount": 4652}, {"contestId": 792, "index": "F", "solvedCount": 97}, {"contestId": 792, "index": "E", "solvedCount": 646}, {"contestId": 792, "index": "D", "solvedCount": 2051}, {"contestId": 792, "index": "C", "solvedCount": 2443}, {"contestId": 792, "index": "B", "solvedCount": 4365}, {"contestId": 792, "index": "A", "solvedCount": 6214}, {"contestId": 791, "index": "A", "solvedCount": 47853}, {"contestId": 789, "index": "B", "solvedCount": 3864}, {"contestId": 789, "index": "A", "solvedCount": 7161}, {"contestId": 788, "index": "E", "solvedCount": 174}, {"contestId": 788, "index": "D", "solvedCount": 158}, {"contestId": 788, "index": "C", "solvedCount": 1426}, {"contestId": 788, "index": "B", "solvedCount": 1692}, {"contestId": 788, "index": "A", "solvedCount": 6535}, {"contestId": 787, "index": "B", "solvedCount": 4806}, {"contestId": 787, "index": "A", "solvedCount": 7755}, {"contestId": 786, "index": "E", "solvedCount": 222}, {"contestId": 786, "index": "D", "solvedCount": 58}, {"contestId": 786, "index": "C", "solvedCount": 1156}, {"contestId": 786, "index": "B", "solvedCount": 1786}, {"contestId": 786, "index": "A", "solvedCount": 1659}, {"contestId": 785, "index": "E", "solvedCount": 1000}, {"contestId": 785, "index": "D", "solvedCount": 1663}, {"contestId": 785, "index": "C", "solvedCount": 5556}, {"contestId": 785, "index": "B", "solvedCount": 8184}, {"contestId": 785, "index": "A", "solvedCount": 31174}, {"contestId": 784, "index": "G", "solvedCount": 616}, {"contestId": 784, "index": "F", "solvedCount": 713}, {"contestId": 784, "index": "E", "solvedCount": 1520}, {"contestId": 784, "index": "D", "solvedCount": 283}, {"contestId": 784, "index": "C", "solvedCount": 490}, {"contestId": 784, "index": "B", "solvedCount": 585}, {"contestId": 784, "index": "A", "solvedCount": 2523}, {"contestId": 780, "index": "H", "solvedCount": 82}, {"contestId": 780, "index": "G", "solvedCount": 316}, {"contestId": 780, "index": "F", "solvedCount": 698}, {"contestId": 780, "index": "E", "solvedCount": 1650}, {"contestId": 780, "index": "D", "solvedCount": 2371}, {"contestId": 780, "index": "C", "solvedCount": 6070}, {"contestId": 780, "index": "B", "solvedCount": 4793}, {"contestId": 780, "index": "A", "solvedCount": 9980}, {"contestId": 779, "index": "C", "solvedCount": 8236}, {"contestId": 779, "index": "B", "solvedCount": 7696}, {"contestId": 779, "index": "A", "solvedCount": 7385}, {"contestId": 778, "index": "E", "solvedCount": 179}, {"contestId": 778, "index": "D", "solvedCount": 303}, {"contestId": 778, "index": "C", "solvedCount": 622}, {"contestId": 778, "index": "B", "solvedCount": 1785}, {"contestId": 778, "index": "A", "solvedCount": 6735}, {"contestId": 777, "index": "E", "solvedCount": 2363}, {"contestId": 777, "index": "D", "solvedCount": 3617}, {"contestId": 777, "index": "C", "solvedCount": 4721}, {"contestId": 777, "index": "B", "solvedCount": 6966}, {"contestId": 777, "index": "A", "solvedCount": 7578}, {"contestId": 776, "index": "G", "solvedCount": 210}, {"contestId": 776, "index": "F", "solvedCount": 253}, {"contestId": 776, "index": "E", "solvedCount": 1457}, {"contestId": 776, "index": "D", "solvedCount": 2719}, {"contestId": 776, "index": "C", "solvedCount": 4080}, {"contestId": 776, "index": "B", "solvedCount": 8753}, {"contestId": 776, "index": "A", "solvedCount": 8325}, {"contestId": 775, "index": "A", "solvedCount": 0}, {"contestId": 774, "index": "L", "solvedCount": 175}, {"contestId": 774, "index": "K", "solvedCount": 1028}, {"contestId": 774, "index": "J", "solvedCount": 257}, {"contestId": 774, "index": "I", "solvedCount": 67}, {"contestId": 774, "index": "H", "solvedCount": 149}, {"contestId": 774, "index": "G", "solvedCount": 56}, {"contestId": 774, "index": "F", "solvedCount": 54}, {"contestId": 774, "index": "E", "solvedCount": 138}, {"contestId": 774, "index": "D", "solvedCount": 1533}, {"contestId": 774, "index": "C", "solvedCount": 2409}, {"contestId": 774, "index": "B", "solvedCount": 165}, {"contestId": 774, "index": "A", "solvedCount": 251}, {"contestId": 773, "index": "F", "solvedCount": 75}, {"contestId": 773, "index": "E", "solvedCount": 146}, {"contestId": 773, "index": "D", "solvedCount": 347}, {"contestId": 773, "index": "C", "solvedCount": 750}, {"contestId": 773, "index": "B", "solvedCount": 999}, {"contestId": 773, "index": "A", "solvedCount": 3331}, {"contestId": 772, "index": "E", "solvedCount": 70}, {"contestId": 772, "index": "D", "solvedCount": 330}, {"contestId": 772, "index": "C", "solvedCount": 898}, {"contestId": 772, "index": "B", "solvedCount": 2515}, {"contestId": 772, "index": "A", "solvedCount": 3422}, {"contestId": 771, "index": "F", "solvedCount": 53}, {"contestId": 771, "index": "E", "solvedCount": 197}, {"contestId": 771, "index": "D", "solvedCount": 764}, {"contestId": 771, "index": "C", "solvedCount": 1942}, {"contestId": 771, "index": "B", "solvedCount": 5575}, {"contestId": 771, "index": "A", "solvedCount": 7979}, {"contestId": 770, "index": "D", "solvedCount": 1449}, {"contestId": 770, "index": "C", "solvedCount": 1791}, {"contestId": 770, "index": "B", "solvedCount": 2042}, {"contestId": 770, "index": "A", "solvedCount": 7591}, {"contestId": 769, "index": "D", "solvedCount": 1667}, {"contestId": 769, "index": "C", "solvedCount": 1216}, {"contestId": 769, "index": "B", "solvedCount": 2745}, {"contestId": 769, "index": "A", "solvedCount": 3807}, {"contestId": 768, "index": "G", "solvedCount": 161}, {"contestId": 768, "index": "F", "solvedCount": 711}, {"contestId": 768, "index": "E", "solvedCount": 1782}, {"contestId": 768, "index": "D", "solvedCount": 1556}, {"contestId": 768, "index": "C", "solvedCount": 3028}, {"contestId": 768, "index": "B", "solvedCount": 4103}, {"contestId": 768, "index": "A", "solvedCount": 12312}, {"contestId": 767, "index": "E", "solvedCount": 632}, {"contestId": 767, "index": "D", "solvedCount": 1594}, {"contestId": 767, "index": "C", "solvedCount": 2597}, {"contestId": 767, "index": "B", "solvedCount": 1857}, {"contestId": 767, "index": "A", "solvedCount": 9097}, {"contestId": 766, "index": "E", "solvedCount": 1626}, {"contestId": 766, "index": "D", "solvedCount": 2115}, {"contestId": 766, "index": "C", "solvedCount": 3410}, {"contestId": 766, "index": "B", "solvedCount": 14568}, {"contestId": 766, "index": "A", "solvedCount": 13704}, {"contestId": 765, "index": "G", "solvedCount": 30}, {"contestId": 765, "index": "F", "solvedCount": 550}, {"contestId": 765, "index": "E", "solvedCount": 1028}, {"contestId": 765, "index": "D", "solvedCount": 2109}, {"contestId": 765, "index": "C", "solvedCount": 5393}, {"contestId": 765, "index": "B", "solvedCount": 5625}, {"contestId": 765, "index": "A", "solvedCount": 6592}, {"contestId": 764, "index": "B", "solvedCount": 8572}, {"contestId": 764, "index": "A", "solvedCount": 11937}, {"contestId": 763, "index": "E", "solvedCount": 266}, {"contestId": 763, "index": "D", "solvedCount": 252}, {"contestId": 763, "index": "C", "solvedCount": 540}, {"contestId": 763, "index": "B", "solvedCount": 2093}, {"contestId": 763, "index": "A", "solvedCount": 6615}, {"contestId": 762, "index": "F", "solvedCount": 126}, {"contestId": 762, "index": "E", "solvedCount": 683}, {"contestId": 762, "index": "D", "solvedCount": 773}, {"contestId": 762, "index": "C", "solvedCount": 1620}, {"contestId": 762, "index": "B", "solvedCount": 4472}, {"contestId": 762, "index": "A", "solvedCount": 8852}, {"contestId": 761, "index": "F", "solvedCount": 273}, {"contestId": 761, "index": "E", "solvedCount": 1421}, {"contestId": 761, "index": "D", "solvedCount": 2988}, {"contestId": 761, "index": "C", "solvedCount": 4375}, {"contestId": 761, "index": "B", "solvedCount": 5638}, {"contestId": 761, "index": "A", "solvedCount": 10805}, {"contestId": 760, "index": "B", "solvedCount": 3690}, {"contestId": 760, "index": "A", "solvedCount": 6217}, {"contestId": 758, "index": "F", "solvedCount": 437}, {"contestId": 758, "index": "E", "solvedCount": 301}, {"contestId": 758, "index": "D", "solvedCount": 2213}, {"contestId": 758, "index": "C", "solvedCount": 3165}, {"contestId": 758, "index": "B", "solvedCount": 7733}, {"contestId": 758, "index": "A", "solvedCount": 24261}, {"contestId": 757, "index": "G", "solvedCount": 153}, {"contestId": 757, "index": "F", "solvedCount": 521}, {"contestId": 757, "index": "E", "solvedCount": 752}, {"contestId": 757, "index": "D", "solvedCount": 1011}, {"contestId": 757, "index": "C", "solvedCount": 2013}, {"contestId": 757, "index": "B", "solvedCount": 6221}, {"contestId": 757, "index": "A", "solvedCount": 8687}, {"contestId": 756, "index": "F", "solvedCount": 54}, {"contestId": 756, "index": "E", "solvedCount": 82}, {"contestId": 756, "index": "D", "solvedCount": 625}, {"contestId": 756, "index": "C", "solvedCount": 964}, {"contestId": 756, "index": "B", "solvedCount": 2320}, {"contestId": 756, "index": "A", "solvedCount": 2592}, {"contestId": 755, "index": "G", "solvedCount": 300}, {"contestId": 755, "index": "F", "solvedCount": 655}, {"contestId": 755, "index": "E", "solvedCount": 610}, {"contestId": 755, "index": "D", "solvedCount": 2110}, {"contestId": 755, "index": "C", "solvedCount": 6273}, {"contestId": 755, "index": "B", "solvedCount": 6771}, {"contestId": 755, "index": "A", "solvedCount": 10398}, {"contestId": 754, "index": "E", "solvedCount": 294}, {"contestId": 754, "index": "D", "solvedCount": 1701}, {"contestId": 754, "index": "C", "solvedCount": 761}, {"contestId": 754, "index": "B", "solvedCount": 5954}, {"contestId": 754, "index": "A", "solvedCount": 6009}, {"contestId": 753, "index": "C", "solvedCount": 204}, {"contestId": 753, "index": "B", "solvedCount": 931}, {"contestId": 753, "index": "A", "solvedCount": 4713}, {"contestId": 750, "index": "H", "solvedCount": 63}, {"contestId": 750, "index": "G", "solvedCount": 190}, {"contestId": 750, "index": "F", "solvedCount": 303}, {"contestId": 750, "index": "E", "solvedCount": 840}, {"contestId": 750, "index": "D", "solvedCount": 2751}, {"contestId": 750, "index": "C", "solvedCount": 5316}, {"contestId": 750, "index": "B", "solvedCount": 7796}, {"contestId": 750, "index": "A", "solvedCount": 25094}, {"contestId": 749, "index": "E", "solvedCount": 577}, {"contestId": 749, "index": "D", "solvedCount": 1976}, {"contestId": 749, "index": "C", "solvedCount": 4841}, {"contestId": 749, "index": "B", "solvedCount": 6555}, {"contestId": 749, "index": "A", "solvedCount": 21735}, {"contestId": 748, "index": "F", "solvedCount": 424}, {"contestId": 748, "index": "E", "solvedCount": 1197}, {"contestId": 748, "index": "D", "solvedCount": 1368}, {"contestId": 748, "index": "C", "solvedCount": 3889}, {"contestId": 748, "index": "B", "solvedCount": 4367}, {"contestId": 748, "index": "A", "solvedCount": 6826}, {"contestId": 747, "index": "F", "solvedCount": 299}, {"contestId": 747, "index": "E", "solvedCount": 1584}, {"contestId": 747, "index": "D", "solvedCount": 2170}, {"contestId": 747, "index": "C", "solvedCount": 3498}, {"contestId": 747, "index": "B", "solvedCount": 5900}, {"contestId": 747, "index": "A", "solvedCount": 6885}, {"contestId": 746, "index": "G", "solvedCount": 919}, {"contestId": 746, "index": "F", "solvedCount": 459}, {"contestId": 746, "index": "E", "solvedCount": 1375}, {"contestId": 746, "index": "D", "solvedCount": 3756}, {"contestId": 746, "index": "C", "solvedCount": 3076}, {"contestId": 746, "index": "B", "solvedCount": 12191}, {"contestId": 746, "index": "A", "solvedCount": 12739}, {"contestId": 745, "index": "B", "solvedCount": 3209}, {"contestId": 745, "index": "A", "solvedCount": 7694}, {"contestId": 744, "index": "E", "solvedCount": 70}, {"contestId": 744, "index": "D", "solvedCount": 82}, {"contestId": 744, "index": "C", "solvedCount": 683}, {"contestId": 744, "index": "B", "solvedCount": 1368}, {"contestId": 744, "index": "A", "solvedCount": 5255}, {"contestId": 743, "index": "E", "solvedCount": 1030}, {"contestId": 743, "index": "D", "solvedCount": 3099}, {"contestId": 743, "index": "C", "solvedCount": 7155}, {"contestId": 743, "index": "B", "solvedCount": 8881}, {"contestId": 743, "index": "A", "solvedCount": 8347}, {"contestId": 742, "index": "B", "solvedCount": 6737}, {"contestId": 742, "index": "A", "solvedCount": 16852}, {"contestId": 741, "index": "E", "solvedCount": 100}, {"contestId": 741, "index": "D", "solvedCount": 870}, {"contestId": 741, "index": "C", "solvedCount": 1320}, {"contestId": 741, "index": "B", "solvedCount": 3846}, {"contestId": 741, "index": "A", "solvedCount": 4647}, {"contestId": 740, "index": "B", "solvedCount": 5864}, {"contestId": 740, "index": "A", "solvedCount": 6860}, {"contestId": 739, "index": "E", "solvedCount": 742}, {"contestId": 739, "index": "D", "solvedCount": 93}, {"contestId": 739, "index": "C", "solvedCount": 770}, {"contestId": 739, "index": "B", "solvedCount": 3077}, {"contestId": 739, "index": "A", "solvedCount": 5218}, {"contestId": 737, "index": "F", "solvedCount": 39}, {"contestId": 737, "index": "E", "solvedCount": 46}, {"contestId": 736, "index": "E", "solvedCount": 134}, {"contestId": 736, "index": "D", "solvedCount": 276}, {"contestId": 735, "index": "E", "solvedCount": 515}, {"contestId": 735, "index": "D", "solvedCount": 7604}, {"contestId": 735, "index": "C", "solvedCount": 5545}, {"contestId": 735, "index": "B", "solvedCount": 6467}, {"contestId": 735, "index": "A", "solvedCount": 8973}, {"contestId": 734, "index": "F", "solvedCount": 827}, {"contestId": 734, "index": "E", "solvedCount": 1978}, {"contestId": 734, "index": "D", "solvedCount": 3212}, {"contestId": 734, "index": "C", "solvedCount": 4258}, {"contestId": 734, "index": "B", "solvedCount": 17923}, {"contestId": 734, "index": "A", "solvedCount": 41234}, {"contestId": 733, "index": "F", "solvedCount": 737}, {"contestId": 733, "index": "E", "solvedCount": 518}, {"contestId": 733, "index": "D", "solvedCount": 3497}, {"contestId": 733, "index": "C", "solvedCount": 2731}, {"contestId": 733, "index": "B", "solvedCount": 8879}, {"contestId": 733, "index": "A", "solvedCount": 12460}, {"contestId": 732, "index": "F", "solvedCount": 1019}, {"contestId": 732, "index": "E", "solvedCount": 1390}, {"contestId": 732, "index": "D", "solvedCount": 4104}, {"contestId": 732, "index": "C", "solvedCount": 7301}, {"contestId": 732, "index": "B", "solvedCount": 15439}, {"contestId": 732, "index": "A", "solvedCount": 24833}, {"contestId": 731, "index": "F", "solvedCount": 2187}, {"contestId": 731, "index": "E", "solvedCount": 967}, {"contestId": 731, "index": "D", "solvedCount": 896}, {"contestId": 731, "index": "C", "solvedCount": 4666}, {"contestId": 731, "index": "B", "solvedCount": 6229}, {"contestId": 731, "index": "A", "solvedCount": 18150}, {"contestId": 730, "index": "L", "solvedCount": 41}, {"contestId": 730, "index": "K", "solvedCount": 59}, {"contestId": 730, "index": "J", "solvedCount": 1635}, {"contestId": 730, "index": "I", "solvedCount": 962}, {"contestId": 730, "index": "H", "solvedCount": 2315}, {"contestId": 730, "index": "G", "solvedCount": 1750}, {"contestId": 730, "index": "F", "solvedCount": 59}, {"contestId": 730, "index": "E", "solvedCount": 563}, {"contestId": 730, "index": "D", "solvedCount": 531}, {"contestId": 730, "index": "C", "solvedCount": 825}, {"contestId": 730, "index": "B", "solvedCount": 1755}, {"contestId": 730, "index": "A", "solvedCount": 1271}, {"contestId": 729, "index": "F", "solvedCount": 623}, {"contestId": 729, "index": "E", "solvedCount": 1652}, {"contestId": 729, "index": "D", "solvedCount": 2674}, {"contestId": 729, "index": "C", "solvedCount": 3001}, {"contestId": 729, "index": "B", "solvedCount": 5069}, {"contestId": 729, "index": "A", "solvedCount": 5530}, {"contestId": 727, "index": "F", "solvedCount": 440}, {"contestId": 727, "index": "E", "solvedCount": 477}, {"contestId": 727, "index": "D", "solvedCount": 1317}, {"contestId": 727, "index": "C", "solvedCount": 3162}, {"contestId": 727, "index": "B", "solvedCount": 1587}, {"contestId": 727, "index": "A", "solvedCount": 6304}, {"contestId": 725, "index": "G", "solvedCount": 74}, {"contestId": 725, "index": "F", "solvedCount": 229}, {"contestId": 725, "index": "E", "solvedCount": 502}, {"contestId": 725, "index": "D", "solvedCount": 2107}, {"contestId": 725, "index": "C", "solvedCount": 2259}, {"contestId": 725, "index": "B", "solvedCount": 4376}, {"contestId": 725, "index": "A", "solvedCount": 5512}, {"contestId": 724, "index": "G", "solvedCount": 520}, {"contestId": 724, "index": "F", "solvedCount": 178}, {"contestId": 724, "index": "E", "solvedCount": 643}, {"contestId": 724, "index": "D", "solvedCount": 1901}, {"contestId": 724, "index": "C", "solvedCount": 1722}, {"contestId": 724, "index": "B", "solvedCount": 3380}, {"contestId": 724, "index": "A", "solvedCount": 5612}, {"contestId": 723, "index": "F", "solvedCount": 1045}, {"contestId": 723, "index": "E", "solvedCount": 1255}, {"contestId": 723, "index": "D", "solvedCount": 4918}, {"contestId": 723, "index": "C", "solvedCount": 3854}, {"contestId": 723, "index": "B", "solvedCount": 7906}, {"contestId": 723, "index": "A", "solvedCount": 23990}, {"contestId": 722, "index": "F", "solvedCount": 284}, {"contestId": 722, "index": "E", "solvedCount": 435}, {"contestId": 722, "index": "D", "solvedCount": 2533}, {"contestId": 722, "index": "C", "solvedCount": 4996}, {"contestId": 722, "index": "B", "solvedCount": 5369}, {"contestId": 722, "index": "A", "solvedCount": 5395}, {"contestId": 721, "index": "E", "solvedCount": 240}, {"contestId": 721, "index": "D", "solvedCount": 1846}, {"contestId": 721, "index": "C", "solvedCount": 3564}, {"contestId": 721, "index": "B", "solvedCount": 9166}, {"contestId": 721, "index": "A", "solvedCount": 14102}, {"contestId": 720, "index": "F", "solvedCount": 48}, {"contestId": 720, "index": "E", "solvedCount": 30}, {"contestId": 720, "index": "D", "solvedCount": 82}, {"contestId": 720, "index": "C", "solvedCount": 47}, {"contestId": 720, "index": "B", "solvedCount": 201}, {"contestId": 720, "index": "A", "solvedCount": 534}, {"contestId": 719, "index": "B", "solvedCount": 6414}, {"contestId": 719, "index": "A", "solvedCount": 11967}, {"contestId": 718, "index": "E", "solvedCount": 152}, {"contestId": 718, "index": "D", "solvedCount": 239}, {"contestId": 718, "index": "C", "solvedCount": 1691}, {"contestId": 718, "index": "A", "solvedCount": 3742}, {"contestId": 717, "index": "I", "solvedCount": 179}, {"contestId": 717, "index": "H", "solvedCount": 331}, {"contestId": 717, "index": "G", "solvedCount": 432}, {"contestId": 717, "index": "F", "solvedCount": 210}, {"contestId": 717, "index": "E", "solvedCount": 1043}, {"contestId": 717, "index": "D", "solvedCount": 976}, {"contestId": 717, "index": "C", "solvedCount": 2661}, {"contestId": 717, "index": "B", "solvedCount": 80}, {"contestId": 717, "index": "A", "solvedCount": 152}, {"contestId": 716, "index": "B", "solvedCount": 7942}, {"contestId": 716, "index": "A", "solvedCount": 15437}, {"contestId": 715, "index": "E", "solvedCount": 146}, {"contestId": 715, "index": "D", "solvedCount": 135}, {"contestId": 715, "index": "C", "solvedCount": 975}, {"contestId": 715, "index": "B", "solvedCount": 1620}, {"contestId": 715, "index": "A", "solvedCount": 4799}, {"contestId": 714, "index": "B", "solvedCount": 8454}, {"contestId": 714, "index": "A", "solvedCount": 8366}, {"contestId": 713, "index": "E", "solvedCount": 109}, {"contestId": 713, "index": "D", "solvedCount": 620}, {"contestId": 713, "index": "C", "solvedCount": 1686}, {"contestId": 713, "index": "B", "solvedCount": 1177}, {"contestId": 713, "index": "A", "solvedCount": 6466}, {"contestId": 712, "index": "E", "solvedCount": 406}, {"contestId": 712, "index": "D", "solvedCount": 1203}, {"contestId": 712, "index": "C", "solvedCount": 4579}, {"contestId": 712, "index": "B", "solvedCount": 7107}, {"contestId": 712, "index": "A", "solvedCount": 9075}, {"contestId": 711, "index": "E", "solvedCount": 1032}, {"contestId": 711, "index": "D", "solvedCount": 3068}, {"contestId": 711, "index": "C", "solvedCount": 5082}, {"contestId": 711, "index": "B", "solvedCount": 6891}, {"contestId": 711, "index": "A", "solvedCount": 20098}, {"contestId": 710, "index": "F", "solvedCount": 589}, {"contestId": 710, "index": "E", "solvedCount": 2999}, {"contestId": 710, "index": "D", "solvedCount": 559}, {"contestId": 710, "index": "C", "solvedCount": 3723}, {"contestId": 710, "index": "B", "solvedCount": 5929}, {"contestId": 710, "index": "A", "solvedCount": 9318}, {"contestId": 709, "index": "B", "solvedCount": 3951}, {"contestId": 709, "index": "A", "solvedCount": 12345}, {"contestId": 708, "index": "E", "solvedCount": 285}, {"contestId": 708, "index": "D", "solvedCount": 352}, {"contestId": 708, "index": "C", "solvedCount": 1231}, {"contestId": 708, "index": "B", "solvedCount": 2579}, {"contestId": 708, "index": "A", "solvedCount": 6849}, {"contestId": 707, "index": "E", "solvedCount": 671}, {"contestId": 707, "index": "D", "solvedCount": 1798}, {"contestId": 707, "index": "C", "solvedCount": 7924}, {"contestId": 707, "index": "B", "solvedCount": 9271}, {"contestId": 707, "index": "A", "solvedCount": 21047}, {"contestId": 706, "index": "E", "solvedCount": 780}, {"contestId": 706, "index": "D", "solvedCount": 4723}, {"contestId": 706, "index": "C", "solvedCount": 9086}, {"contestId": 706, "index": "B", "solvedCount": 20847}, {"contestId": 706, "index": "A", "solvedCount": 10768}, {"contestId": 705, "index": "B", "solvedCount": 7015}, {"contestId": 705, "index": "A", "solvedCount": 37937}, {"contestId": 704, "index": "E", "solvedCount": 137}, {"contestId": 704, "index": "D", "solvedCount": 320}, {"contestId": 704, "index": "C", "solvedCount": 283}, {"contestId": 704, "index": "B", "solvedCount": 891}, {"contestId": 704, "index": "A", "solvedCount": 5822}, {"contestId": 703, "index": "E", "solvedCount": 406}, {"contestId": 703, "index": "D", "solvedCount": 2146}, {"contestId": 703, "index": "C", "solvedCount": 1353}, {"contestId": 703, "index": "B", "solvedCount": 5035}, {"contestId": 703, "index": "A", "solvedCount": 22837}, {"contestId": 702, "index": "F", "solvedCount": 279}, {"contestId": 702, "index": "E", "solvedCount": 1273}, {"contestId": 702, "index": "D", "solvedCount": 2322}, {"contestId": 702, "index": "C", "solvedCount": 4578}, {"contestId": 702, "index": "B", "solvedCount": 6061}, {"contestId": 702, "index": "A", "solvedCount": 17017}, {"contestId": 701, "index": "C", "solvedCount": 7112}, {"contestId": 701, "index": "B", "solvedCount": 8295}, {"contestId": 701, "index": "A", "solvedCount": 13839}, {"contestId": 700, "index": "E", "solvedCount": 515}, {"contestId": 700, "index": "D", "solvedCount": 259}, {"contestId": 700, "index": "C", "solvedCount": 712}, {"contestId": 700, "index": "B", "solvedCount": 2467}, {"contestId": 700, "index": "A", "solvedCount": 2618}, {"contestId": 699, "index": "B", "solvedCount": 5873}, {"contestId": 699, "index": "A", "solvedCount": 8619}, {"contestId": 698, "index": "F", "solvedCount": 121}, {"contestId": 698, "index": "E", "solvedCount": 84}, {"contestId": 698, "index": "D", "solvedCount": 326}, {"contestId": 698, "index": "C", "solvedCount": 862}, {"contestId": 698, "index": "B", "solvedCount": 4014}, {"contestId": 698, "index": "A", "solvedCount": 13743}, {"contestId": 697, "index": "B", "solvedCount": 4728}, {"contestId": 697, "index": "A", "solvedCount": 9804}, {"contestId": 696, "index": "F", "solvedCount": 74}, {"contestId": 696, "index": "E", "solvedCount": 261}, {"contestId": 696, "index": "D", "solvedCount": 638}, {"contestId": 696, "index": "C", "solvedCount": 1451}, {"contestId": 696, "index": "B", "solvedCount": 2559}, {"contestId": 696, "index": "A", "solvedCount": 4765}, {"contestId": 691, "index": "F", "solvedCount": 794}, {"contestId": 691, "index": "E", "solvedCount": 1148}, {"contestId": 691, "index": "D", "solvedCount": 2631}, {"contestId": 691, "index": "C", "solvedCount": 1618}, {"contestId": 691, "index": "B", "solvedCount": 3329}, {"contestId": 691, "index": "A", "solvedCount": 6906}, {"contestId": 690, "index": "F3", "solvedCount": 28}, {"contestId": 690, "index": "F2", "solvedCount": 47}, {"contestId": 690, "index": "F1", "solvedCount": 1522}, {"contestId": 690, "index": "E2", "solvedCount": 102}, {"contestId": 690, "index": "E1", "solvedCount": 545}, {"contestId": 690, "index": "D3", "solvedCount": 361}, {"contestId": 690, "index": "D2", "solvedCount": 898}, {"contestId": 690, "index": "D1", "solvedCount": 1649}, {"contestId": 690, "index": "C3", "solvedCount": 634}, {"contestId": 690, "index": "C2", "solvedCount": 1825}, {"contestId": 690, "index": "C1", "solvedCount": 1749}, {"contestId": 690, "index": "B3", "solvedCount": 65}, {"contestId": 690, "index": "B2", "solvedCount": 138}, {"contestId": 690, "index": "B1", "solvedCount": 746}, {"contestId": 690, "index": "A3", "solvedCount": 201}, {"contestId": 690, "index": "A2", "solvedCount": 349}, {"contestId": 690, "index": "A1", "solvedCount": 1968}, {"contestId": 689, "index": "E", "solvedCount": 1052}, {"contestId": 689, "index": "D", "solvedCount": 1837}, {"contestId": 689, "index": "C", "solvedCount": 3146}, {"contestId": 689, "index": "B", "solvedCount": 3916}, {"contestId": 689, "index": "A", "solvedCount": 4355}, {"contestId": 688, "index": "B", "solvedCount": 15371}, {"contestId": 688, "index": "A", "solvedCount": 10879}, {"contestId": 687, "index": "E", "solvedCount": 214}, {"contestId": 687, "index": "D", "solvedCount": 558}, {"contestId": 687, "index": "C", "solvedCount": 3357}, {"contestId": 687, "index": "B", "solvedCount": 3568}, {"contestId": 687, "index": "A", "solvedCount": 8457}, {"contestId": 686, "index": "B", "solvedCount": 6092}, {"contestId": 686, "index": "A", "solvedCount": 16095}, {"contestId": 685, "index": "E", "solvedCount": 268}, {"contestId": 685, "index": "D", "solvedCount": 352}, {"contestId": 685, "index": "C", "solvedCount": 342}, {"contestId": 685, "index": "B", "solvedCount": 2363}, {"contestId": 685, "index": "A", "solvedCount": 3620}, {"contestId": 683, "index": "J", "solvedCount": 26}, {"contestId": 683, "index": "I", "solvedCount": 25}, {"contestId": 683, "index": "H", "solvedCount": 76}, {"contestId": 683, "index": "G", "solvedCount": 110}, {"contestId": 683, "index": "F", "solvedCount": 122}, {"contestId": 683, "index": "E", "solvedCount": 163}, {"contestId": 683, "index": "D", "solvedCount": 253}, {"contestId": 683, "index": "C", "solvedCount": 282}, {"contestId": 683, "index": "B", "solvedCount": 287}, {"contestId": 683, "index": "A", "solvedCount": 591}, {"contestId": 682, "index": "E", "solvedCount": 468}, {"contestId": 682, "index": "D", "solvedCount": 2351}, {"contestId": 682, "index": "C", "solvedCount": 4749}, {"contestId": 682, "index": "B", "solvedCount": 7374}, {"contestId": 682, "index": "A", "solvedCount": 10808}, {"contestId": 681, "index": "E", "solvedCount": 353}, {"contestId": 681, "index": "D", "solvedCount": 1409}, {"contestId": 681, "index": "C", "solvedCount": 4320}, {"contestId": 681, "index": "B", "solvedCount": 6631}, {"contestId": 681, "index": "A", "solvedCount": 10969}, {"contestId": 680, "index": "B", "solvedCount": 12256}, {"contestId": 680, "index": "A", "solvedCount": 9414}, {"contestId": 679, "index": "E", "solvedCount": 280}, {"contestId": 679, "index": "D", "solvedCount": 231}, {"contestId": 679, "index": "C", "solvedCount": 939}, {"contestId": 679, "index": "B", "solvedCount": 1773}, {"contestId": 679, "index": "A", "solvedCount": 7010}, {"contestId": 678, "index": "F", "solvedCount": 333}, {"contestId": 678, "index": "E", "solvedCount": 1114}, {"contestId": 678, "index": "D", "solvedCount": 2816}, {"contestId": 678, "index": "C", "solvedCount": 5418}, {"contestId": 678, "index": "B", "solvedCount": 2978}, {"contestId": 678, "index": "A", "solvedCount": 7706}, {"contestId": 677, "index": "E", "solvedCount": 464}, {"contestId": 677, "index": "D", "solvedCount": 1078}, {"contestId": 677, "index": "C", "solvedCount": 4706}, {"contestId": 677, "index": "B", "solvedCount": 5777}, {"contestId": 677, "index": "A", "solvedCount": 39120}, {"contestId": 676, "index": "E", "solvedCount": 766}, {"contestId": 676, "index": "D", "solvedCount": 1489}, {"contestId": 676, "index": "C", "solvedCount": 9335}, {"contestId": 676, "index": "B", "solvedCount": 4303}, {"contestId": 676, "index": "A", "solvedCount": 10070}, {"contestId": 675, "index": "E", "solvedCount": 1462}, {"contestId": 675, "index": "D", "solvedCount": 2802}, {"contestId": 675, "index": "C", "solvedCount": 2826}, {"contestId": 675, "index": "B", "solvedCount": 5766}, {"contestId": 675, "index": "A", "solvedCount": 10953}, {"contestId": 673, "index": "B", "solvedCount": 3033}, {"contestId": 673, "index": "A", "solvedCount": 6970}, {"contestId": 672, "index": "B", "solvedCount": 10955}, {"contestId": 672, "index": "A", "solvedCount": 10832}, {"contestId": 671, "index": "E", "solvedCount": 131}, {"contestId": 671, "index": "D", "solvedCount": 564}, {"contestId": 671, "index": "C", "solvedCount": 456}, {"contestId": 671, "index": "B", "solvedCount": 2355}, {"contestId": 671, "index": "A", "solvedCount": 3547}, {"contestId": 670, "index": "F", "solvedCount": 721}, {"contestId": 670, "index": "E", "solvedCount": 2506}, {"contestId": 670, "index": "D2", "solvedCount": 5798}, {"contestId": 670, "index": "D1", "solvedCount": 6782}, {"contestId": 670, "index": "C", "solvedCount": 6073}, {"contestId": 670, "index": "B", "solvedCount": 7778}, {"contestId": 670, "index": "A", "solvedCount": 11073}, {"contestId": 669, "index": "A", "solvedCount": 7197}, {"contestId": 667, "index": "B", "solvedCount": 4304}, {"contestId": 667, "index": "A", "solvedCount": 5525}, {"contestId": 666, "index": "E", "solvedCount": 573}, {"contestId": 666, "index": "D", "solvedCount": 164}, {"contestId": 666, "index": "C", "solvedCount": 501}, {"contestId": 666, "index": "B", "solvedCount": 1456}, {"contestId": 666, "index": "A", "solvedCount": 2825}, {"contestId": 665, "index": "F", "solvedCount": 289}, {"contestId": 665, "index": "E", "solvedCount": 1243}, {"contestId": 665, "index": "D", "solvedCount": 1868}, {"contestId": 665, "index": "C", "solvedCount": 5534}, {"contestId": 665, "index": "B", "solvedCount": 2464}, {"contestId": 665, "index": "A", "solvedCount": 2026}, {"contestId": 664, "index": "A", "solvedCount": 9619}, {"contestId": 663, "index": "A", "solvedCount": 2538}, {"contestId": 662, "index": "E", "solvedCount": 82}, {"contestId": 662, "index": "D", "solvedCount": 1401}, {"contestId": 662, "index": "C", "solvedCount": 966}, {"contestId": 662, "index": "B", "solvedCount": 1007}, {"contestId": 662, "index": "A", "solvedCount": 235}, {"contestId": 661, "index": "H", "solvedCount": 36}, {"contestId": 661, "index": "G", "solvedCount": 35}, {"contestId": 661, "index": "F", "solvedCount": 74}, {"contestId": 661, "index": "E", "solvedCount": 60}, {"contestId": 661, "index": "D", "solvedCount": 111}, {"contestId": 661, "index": "C", "solvedCount": 106}, {"contestId": 661, "index": "B", "solvedCount": 194}, {"contestId": 661, "index": "A", "solvedCount": 473}, {"contestId": 660, "index": "F", "solvedCount": 666}, {"contestId": 660, "index": "E", "solvedCount": 479}, {"contestId": 660, "index": "D", "solvedCount": 2314}, {"contestId": 660, "index": "C", "solvedCount": 4898}, {"contestId": 660, "index": "B", "solvedCount": 3709}, {"contestId": 660, "index": "A", "solvedCount": 4843}, {"contestId": 659, "index": "G", "solvedCount": 704}, {"contestId": 659, "index": "F", "solvedCount": 1326}, {"contestId": 659, "index": "E", "solvedCount": 5041}, {"contestId": 659, "index": "D", "solvedCount": 4803}, {"contestId": 659, "index": "C", "solvedCount": 8809}, {"contestId": 659, "index": "B", "solvedCount": 5145}, {"contestId": 659, "index": "A", "solvedCount": 11398}, {"contestId": 658, "index": "A", "solvedCount": 5673}, {"contestId": 656, "index": "G", "solvedCount": 406}, {"contestId": 656, "index": "F", "solvedCount": 505}, {"contestId": 656, "index": "E", "solvedCount": 581}, {"contestId": 656, "index": "D", "solvedCount": 589}, {"contestId": 656, "index": "C", "solvedCount": 483}, {"contestId": 656, "index": "B", "solvedCount": 1471}, {"contestId": 656, "index": "A", "solvedCount": 2877}, {"contestId": 653, "index": "G", "solvedCount": 221}, {"contestId": 653, "index": "F", "solvedCount": 475}, {"contestId": 653, "index": "E", "solvedCount": 895}, {"contestId": 653, "index": "D", "solvedCount": 1468}, {"contestId": 653, "index": "C", "solvedCount": 1354}, {"contestId": 653, "index": "B", "solvedCount": 3807}, {"contestId": 653, "index": "A", "solvedCount": 5524}, {"contestId": 652, "index": "F", "solvedCount": 195}, {"contestId": 652, "index": "E", "solvedCount": 882}, {"contestId": 652, "index": "D", "solvedCount": 2054}, {"contestId": 652, "index": "C", "solvedCount": 1935}, {"contestId": 652, "index": "B", "solvedCount": 5523}, {"contestId": 652, "index": "A", "solvedCount": 3182}, {"contestId": 651, "index": "B", "solvedCount": 8037}, {"contestId": 651, "index": "A", "solvedCount": 14767}, {"contestId": 650, "index": "E", "solvedCount": 323}, {"contestId": 650, "index": "D", "solvedCount": 772}, {"contestId": 650, "index": "C", "solvedCount": 1425}, {"contestId": 650, "index": "B", "solvedCount": 2730}, {"contestId": 650, "index": "A", "solvedCount": 9418}, {"contestId": 645, "index": "G", "solvedCount": 83}, {"contestId": 645, "index": "F", "solvedCount": 437}, {"contestId": 645, "index": "E", "solvedCount": 974}, {"contestId": 645, "index": "D", "solvedCount": 1987}, {"contestId": 645, "index": "C", "solvedCount": 2283}, {"contestId": 645, "index": "B", "solvedCount": 2542}, {"contestId": 645, "index": "A", "solvedCount": 2515}, {"contestId": 644, "index": "C", "solvedCount": 822}, {"contestId": 644, "index": "B", "solvedCount": 2193}, {"contestId": 644, "index": "A", "solvedCount": 3679}, {"contestId": 643, "index": "G", "solvedCount": 270}, {"contestId": 643, "index": "F", "solvedCount": 262}, {"contestId": 643, "index": "E", "solvedCount": 327}, {"contestId": 643, "index": "D", "solvedCount": 211}, {"contestId": 643, "index": "C", "solvedCount": 785}, {"contestId": 643, "index": "B", "solvedCount": 2575}, {"contestId": 643, "index": "A", "solvedCount": 3414}, {"contestId": 641, "index": "G", "solvedCount": 63}, {"contestId": 641, "index": "F", "solvedCount": 101}, {"contestId": 641, "index": "E", "solvedCount": 1827}, {"contestId": 641, "index": "D", "solvedCount": 710}, {"contestId": 641, "index": "C", "solvedCount": 2416}, {"contestId": 641, "index": "B", "solvedCount": 3376}, {"contestId": 641, "index": "A", "solvedCount": 4807}, {"contestId": 639, "index": "F", "solvedCount": 177}, {"contestId": 639, "index": "E", "solvedCount": 348}, {"contestId": 639, "index": "D", "solvedCount": 622}, {"contestId": 639, "index": "C", "solvedCount": 1049}, {"contestId": 639, "index": "B", "solvedCount": 4962}, {"contestId": 639, "index": "A", "solvedCount": 4824}, {"contestId": 638, "index": "D", "solvedCount": 573}, {"contestId": 638, "index": "C", "solvedCount": 916}, {"contestId": 638, "index": "B", "solvedCount": 1415}, {"contestId": 638, "index": "A", "solvedCount": 2862}, {"contestId": 637, "index": "D", "solvedCount": 1635}, {"contestId": 637, "index": "C", "solvedCount": 2206}, {"contestId": 637, "index": "B", "solvedCount": 6150}, {"contestId": 637, "index": "A", "solvedCount": 3960}, {"contestId": 635, "index": "A", "solvedCount": 2247}, {"contestId": 634, "index": "A", "solvedCount": 2419}, {"contestId": 633, "index": "H", "solvedCount": 265}, {"contestId": 633, "index": "G", "solvedCount": 422}, {"contestId": 633, "index": "F", "solvedCount": 476}, {"contestId": 633, "index": "E", "solvedCount": 462}, {"contestId": 633, "index": "D", "solvedCount": 1855}, {"contestId": 633, "index": "C", "solvedCount": 1764}, {"contestId": 633, "index": "B", "solvedCount": 4822}, {"contestId": 633, "index": "A", "solvedCount": 7239}, {"contestId": 632, "index": "F", "solvedCount": 421}, {"contestId": 632, "index": "E", "solvedCount": 1175}, {"contestId": 632, "index": "D", "solvedCount": 1701}, {"contestId": 632, "index": "C", "solvedCount": 3332}, {"contestId": 632, "index": "B", "solvedCount": 2791}, {"contestId": 632, "index": "A", "solvedCount": 3328}, {"contestId": 631, "index": "E", "solvedCount": 975}, {"contestId": 631, "index": "D", "solvedCount": 1447}, {"contestId": 631, "index": "C", "solvedCount": 2927}, {"contestId": 631, "index": "B", "solvedCount": 5425}, {"contestId": 631, "index": "A", "solvedCount": 6796}, {"contestId": 630, "index": "R", "solvedCount": 5190}, {"contestId": 630, "index": "Q", "solvedCount": 842}, {"contestId": 630, "index": "P", "solvedCount": 626}, {"contestId": 630, "index": "O", "solvedCount": 517}, {"contestId": 630, "index": "N", "solvedCount": 3223}, {"contestId": 630, "index": "M", "solvedCount": 805}, {"contestId": 630, "index": "L", "solvedCount": 2443}, {"contestId": 630, "index": "K", "solvedCount": 2811}, {"contestId": 630, "index": "J", "solvedCount": 6505}, {"contestId": 630, "index": "I", "solvedCount": 2318}, {"contestId": 630, "index": "H", "solvedCount": 2645}, {"contestId": 630, "index": "G", "solvedCount": 1600}, {"contestId": 630, "index": "F", "solvedCount": 4032}, {"contestId": 630, "index": "E", "solvedCount": 1475}, {"contestId": 630, "index": "D", "solvedCount": 5913}, {"contestId": 630, "index": "C", "solvedCount": 10083}, {"contestId": 630, "index": "B", "solvedCount": 4752}, {"contestId": 630, "index": "A", "solvedCount": 18479}, {"contestId": 629, "index": "E", "solvedCount": 616}, {"contestId": 629, "index": "D", "solvedCount": 2606}, {"contestId": 629, "index": "C", "solvedCount": 2089}, {"contestId": 629, "index": "B", "solvedCount": 6128}, {"contestId": 629, "index": "A", "solvedCount": 8739}, {"contestId": 628, "index": "F", "solvedCount": 368}, {"contestId": 628, "index": "E", "solvedCount": 473}, {"contestId": 628, "index": "D", "solvedCount": 2022}, {"contestId": 628, "index": "C", "solvedCount": 3711}, {"contestId": 628, "index": "B", "solvedCount": 6027}, {"contestId": 628, "index": "A", "solvedCount": 4320}, {"contestId": 627, "index": "F", "solvedCount": 102}, {"contestId": 627, "index": "E", "solvedCount": 242}, {"contestId": 627, "index": "D", "solvedCount": 493}, {"contestId": 627, "index": "C", "solvedCount": 871}, {"contestId": 627, "index": "B", "solvedCount": 1909}, {"contestId": 627, "index": "A", "solvedCount": 2667}, {"contestId": 626, "index": "G", "solvedCount": 264}, {"contestId": 626, "index": "F", "solvedCount": 1303}, {"contestId": 626, "index": "E", "solvedCount": 882}, {"contestId": 626, "index": "D", "solvedCount": 2131}, {"contestId": 626, "index": "C", "solvedCount": 3460}, {"contestId": 626, "index": "B", "solvedCount": 5043}, {"contestId": 626, "index": "A", "solvedCount": 4952}, {"contestId": 625, "index": "E", "solvedCount": 146}, {"contestId": 625, "index": "D", "solvedCount": 501}, {"contestId": 625, "index": "C", "solvedCount": 5257}, {"contestId": 625, "index": "B", "solvedCount": 7038}, {"contestId": 625, "index": "A", "solvedCount": 4368}, {"contestId": 624, "index": "B", "solvedCount": 6032}, {"contestId": 624, "index": "A", "solvedCount": 7389}, {"contestId": 623, "index": "E", "solvedCount": 247}, {"contestId": 623, "index": "D", "solvedCount": 298}, {"contestId": 623, "index": "C", "solvedCount": 347}, {"contestId": 623, "index": "B", "solvedCount": 1350}, {"contestId": 623, "index": "A", "solvedCount": 3458}, {"contestId": 622, "index": "F", "solvedCount": 979}, {"contestId": 622, "index": "E", "solvedCount": 1158}, {"contestId": 622, "index": "D", "solvedCount": 1882}, {"contestId": 622, "index": "C", "solvedCount": 3896}, {"contestId": 622, "index": "B", "solvedCount": 5935}, {"contestId": 622, "index": "A", "solvedCount": 6366}, {"contestId": 621, "index": "E", "solvedCount": 1698}, {"contestId": 621, "index": "D", "solvedCount": 834}, {"contestId": 621, "index": "C", "solvedCount": 3660}, {"contestId": 621, "index": "B", "solvedCount": 7461}, {"contestId": 621, "index": "A", "solvedCount": 13381}, {"contestId": 620, "index": "F", "solvedCount": 371}, {"contestId": 620, "index": "E", "solvedCount": 2233}, {"contestId": 620, "index": "D", "solvedCount": 1022}, {"contestId": 620, "index": "C", "solvedCount": 3989}, {"contestId": 620, "index": "B", "solvedCount": 6498}, {"contestId": 620, "index": "A", "solvedCount": 8524}, {"contestId": 618, "index": "G", "solvedCount": 103}, {"contestId": 618, "index": "F", "solvedCount": 479}, {"contestId": 618, "index": "E", "solvedCount": 448}, {"contestId": 618, "index": "D", "solvedCount": 1330}, {"contestId": 618, "index": "C", "solvedCount": 3371}, {"contestId": 618, "index": "B", "solvedCount": 5858}, {"contestId": 618, "index": "A", "solvedCount": 6727}, {"contestId": 617, "index": "E", "solvedCount": 3155}, {"contestId": 617, "index": "D", "solvedCount": 3424}, {"contestId": 617, "index": "C", "solvedCount": 3855}, {"contestId": 617, "index": "B", "solvedCount": 9991}, {"contestId": 617, "index": "A", "solvedCount": 45413}, {"contestId": 616, "index": "F", "solvedCount": 300}, {"contestId": 616, "index": "E", "solvedCount": 1278}, {"contestId": 616, "index": "D", "solvedCount": 4124}, {"contestId": 616, "index": "C", "solvedCount": 3390}, {"contestId": 616, "index": "B", "solvedCount": 6903}, {"contestId": 616, "index": "A", "solvedCount": 6030}, {"contestId": 615, "index": "E", "solvedCount": 808}, {"contestId": 615, "index": "D", "solvedCount": 2579}, {"contestId": 615, "index": "C", "solvedCount": 1846}, {"contestId": 615, "index": "B", "solvedCount": 3729}, {"contestId": 615, "index": "A", "solvedCount": 12048}, {"contestId": 614, "index": "B", "solvedCount": 4930}, {"contestId": 614, "index": "A", "solvedCount": 5979}, {"contestId": 613, "index": "E", "solvedCount": 204}, {"contestId": 613, "index": "D", "solvedCount": 898}, {"contestId": 613, "index": "C", "solvedCount": 720}, {"contestId": 613, "index": "B", "solvedCount": 1643}, {"contestId": 613, "index": "A", "solvedCount": 2674}, {"contestId": 612, "index": "F", "solvedCount": 153}, {"contestId": 612, "index": "E", "solvedCount": 837}, {"contestId": 612, "index": "D", "solvedCount": 2242}, {"contestId": 612, "index": "C", "solvedCount": 4633}, {"contestId": 612, "index": "B", "solvedCount": 4695}, {"contestId": 612, "index": "A", "solvedCount": 4961}, {"contestId": 611, "index": "H", "solvedCount": 257}, {"contestId": 611, "index": "G", "solvedCount": 274}, {"contestId": 611, "index": "F", "solvedCount": 349}, {"contestId": 611, "index": "E", "solvedCount": 715}, {"contestId": 611, "index": "D", "solvedCount": 2005}, {"contestId": 611, "index": "C", "solvedCount": 6621}, {"contestId": 611, "index": "B", "solvedCount": 6461}, {"contestId": 611, "index": "A", "solvedCount": 9524}, {"contestId": 610, "index": "E", "solvedCount": 418}, {"contestId": 610, "index": "D", "solvedCount": 876}, {"contestId": 610, "index": "C", "solvedCount": 2430}, {"contestId": 610, "index": "B", "solvedCount": 4941}, {"contestId": 610, "index": "A", "solvedCount": 10772}, {"contestId": 609, "index": "F", "solvedCount": 522}, {"contestId": 609, "index": "E", "solvedCount": 2794}, {"contestId": 609, "index": "D", "solvedCount": 1552}, {"contestId": 609, "index": "C", "solvedCount": 4150}, {"contestId": 609, "index": "B", "solvedCount": 6028}, {"contestId": 609, "index": "A", "solvedCount": 11120}, {"contestId": 608, "index": "B", "solvedCount": 4451}, {"contestId": 608, "index": "A", "solvedCount": 6850}, {"contestId": 607, "index": "E", "solvedCount": 163}, {"contestId": 607, "index": "D", "solvedCount": 385}, {"contestId": 607, "index": "C", "solvedCount": 648}, {"contestId": 607, "index": "B", "solvedCount": 4505}, {"contestId": 607, "index": "A", "solvedCount": 6183}, {"contestId": 606, "index": "B", "solvedCount": 2504}, {"contestId": 606, "index": "A", "solvedCount": 6399}, {"contestId": 605, "index": "E", "solvedCount": 532}, {"contestId": 605, "index": "D", "solvedCount": 563}, {"contestId": 605, "index": "C", "solvedCount": 859}, {"contestId": 605, "index": "B", "solvedCount": 2729}, {"contestId": 605, "index": "A", "solvedCount": 5316}, {"contestId": 604, "index": "B", "solvedCount": 6131}, {"contestId": 604, "index": "A", "solvedCount": 6851}, {"contestId": 603, "index": "E", "solvedCount": 364}, {"contestId": 603, "index": "D", "solvedCount": 241}, {"contestId": 603, "index": "C", "solvedCount": 1415}, {"contestId": 603, "index": "B", "solvedCount": 2047}, {"contestId": 603, "index": "A", "solvedCount": 5445}, {"contestId": 602, "index": "B", "solvedCount": 6514}, {"contestId": 602, "index": "A", "solvedCount": 6619}, {"contestId": 601, "index": "E", "solvedCount": 356}, {"contestId": 601, "index": "D", "solvedCount": 732}, {"contestId": 601, "index": "C", "solvedCount": 917}, {"contestId": 601, "index": "B", "solvedCount": 1575}, {"contestId": 601, "index": "A", "solvedCount": 7152}, {"contestId": 600, "index": "F", "solvedCount": 255}, {"contestId": 600, "index": "E", "solvedCount": 3935}, {"contestId": 600, "index": "D", "solvedCount": 1294}, {"contestId": 600, "index": "C", "solvedCount": 3241}, {"contestId": 600, "index": "B", "solvedCount": 11134}, {"contestId": 600, "index": "A", "solvedCount": 3299}, {"contestId": 599, "index": "E", "solvedCount": 347}, {"contestId": 599, "index": "D", "solvedCount": 2167}, {"contestId": 599, "index": "C", "solvedCount": 3730}, {"contestId": 599, "index": "B", "solvedCount": 3712}, {"contestId": 599, "index": "A", "solvedCount": 18337}, {"contestId": 598, "index": "F", "solvedCount": 200}, {"contestId": 598, "index": "E", "solvedCount": 2525}, {"contestId": 598, "index": "D", "solvedCount": 5563}, {"contestId": 598, "index": "C", "solvedCount": 2225}, {"contestId": 598, "index": "B", "solvedCount": 6721}, {"contestId": 598, "index": "A", "solvedCount": 13149}, {"contestId": 597, "index": "C", "solvedCount": 1832}, {"contestId": 597, "index": "B", "solvedCount": 2567}, {"contestId": 597, "index": "A", "solvedCount": 3073}, {"contestId": 596, "index": "E", "solvedCount": 289}, {"contestId": 596, "index": "D", "solvedCount": 563}, {"contestId": 596, "index": "C", "solvedCount": 2041}, {"contestId": 596, "index": "B", "solvedCount": 7565}, {"contestId": 596, "index": "A", "solvedCount": 5868}, {"contestId": 595, "index": "B", "solvedCount": 2580}, {"contestId": 595, "index": "A", "solvedCount": 10950}, {"contestId": 594, "index": "E", "solvedCount": 82}, {"contestId": 594, "index": "D", "solvedCount": 744}, {"contestId": 594, "index": "C", "solvedCount": 569}, {"contestId": 594, "index": "B", "solvedCount": 393}, {"contestId": 594, "index": "A", "solvedCount": 1144}, {"contestId": 593, "index": "E", "solvedCount": 283}, {"contestId": 593, "index": "D", "solvedCount": 809}, {"contestId": 593, "index": "C", "solvedCount": 213}, {"contestId": 593, "index": "B", "solvedCount": 3399}, {"contestId": 593, "index": "A", "solvedCount": 4839}, {"contestId": 592, "index": "E", "solvedCount": 157}, {"contestId": 592, "index": "D", "solvedCount": 1720}, {"contestId": 592, "index": "C", "solvedCount": 2597}, {"contestId": 592, "index": "B", "solvedCount": 6821}, {"contestId": 592, "index": "A", "solvedCount": 5319}, {"contestId": 591, "index": "B", "solvedCount": 6175}, {"contestId": 591, "index": "A", "solvedCount": 9763}, {"contestId": 590, "index": "E", "solvedCount": 339}, {"contestId": 590, "index": "D", "solvedCount": 854}, {"contestId": 590, "index": "C", "solvedCount": 1731}, {"contestId": 590, "index": "B", "solvedCount": 1475}, {"contestId": 590, "index": "A", "solvedCount": 3267}, {"contestId": 588, "index": "B", "solvedCount": 8959}, {"contestId": 588, "index": "A", "solvedCount": 16340}, {"contestId": 587, "index": "F", "solvedCount": 316}, {"contestId": 587, "index": "E", "solvedCount": 362}, {"contestId": 587, "index": "D", "solvedCount": 306}, {"contestId": 587, "index": "C", "solvedCount": 2008}, {"contestId": 587, "index": "B", "solvedCount": 1152}, {"contestId": 587, "index": "A", "solvedCount": 5833}, {"contestId": 586, "index": "B", "solvedCount": 4719}, {"contestId": 586, "index": "A", "solvedCount": 7483}, {"contestId": 585, "index": "F", "solvedCount": 253}, {"contestId": 585, "index": "E", "solvedCount": 519}, {"contestId": 585, "index": "D", "solvedCount": 977}, {"contestId": 585, "index": "C", "solvedCount": 767}, {"contestId": 585, "index": "B", "solvedCount": 2835}, {"contestId": 585, "index": "A", "solvedCount": 3602}, {"contestId": 584, "index": "E", "solvedCount": 1087}, {"contestId": 584, "index": "D", "solvedCount": 5467}, {"contestId": 584, "index": "C", "solvedCount": 4421}, {"contestId": 584, "index": "B", "solvedCount": 7442}, {"contestId": 584, "index": "A", "solvedCount": 20743}, {"contestId": 583, "index": "B", "solvedCount": 7244}, {"contestId": 583, "index": "A", "solvedCount": 9713}, {"contestId": 582, "index": "E", "solvedCount": 232}, {"contestId": 582, "index": "D", "solvedCount": 227}, {"contestId": 582, "index": "C", "solvedCount": 573}, {"contestId": 582, "index": "B", "solvedCount": 2567}, {"contestId": 582, "index": "A", "solvedCount": 5182}, {"contestId": 581, "index": "F", "solvedCount": 467}, {"contestId": 581, "index": "E", "solvedCount": 134}, {"contestId": 581, "index": "D", "solvedCount": 2600}, {"contestId": 581, "index": "C", "solvedCount": 6009}, {"contestId": 581, "index": "B", "solvedCount": 9396}, {"contestId": 581, "index": "A", "solvedCount": 26299}, {"contestId": 580, "index": "E", "solvedCount": 1068}, {"contestId": 580, "index": "D", "solvedCount": 5158}, {"contestId": 580, "index": "C", "solvedCount": 16858}, {"contestId": 580, "index": "B", "solvedCount": 11872}, {"contestId": 580, "index": "A", "solvedCount": 40076}, {"contestId": 579, "index": "B", "solvedCount": 4590}, {"contestId": 579, "index": "A", "solvedCount": 21934}, {"contestId": 578, "index": "F", "solvedCount": 191}, {"contestId": 578, "index": "E", "solvedCount": 344}, {"contestId": 578, "index": "D", "solvedCount": 412}, {"contestId": 578, "index": "C", "solvedCount": 2674}, {"contestId": 578, "index": "B", "solvedCount": 4056}, {"contestId": 578, "index": "A", "solvedCount": 4030}, {"contestId": 577, "index": "B", "solvedCount": 6046}, {"contestId": 577, "index": "A", "solvedCount": 20267}, {"contestId": 576, "index": "E", "solvedCount": 339}, {"contestId": 576, "index": "D", "solvedCount": 583}, {"contestId": 576, "index": "C", "solvedCount": 1813}, {"contestId": 576, "index": "B", "solvedCount": 1305}, {"contestId": 576, "index": "A", "solvedCount": 8225}, {"contestId": 575, "index": "I", "solvedCount": 196}, {"contestId": 575, "index": "H", "solvedCount": 1296}, {"contestId": 575, "index": "G", "solvedCount": 591}, {"contestId": 575, "index": "F", "solvedCount": 831}, {"contestId": 575, "index": "E", "solvedCount": 146}, {"contestId": 575, "index": "D", "solvedCount": 1647}, {"contestId": 575, "index": "C", "solvedCount": 162}, {"contestId": 575, "index": "B", "solvedCount": 728}, {"contestId": 575, "index": "A", "solvedCount": 354}, {"contestId": 574, "index": "B", "solvedCount": 5452}, {"contestId": 574, "index": "A", "solvedCount": 6949}, {"contestId": 573, "index": "E", "solvedCount": 236}, {"contestId": 573, "index": "D", "solvedCount": 189}, {"contestId": 573, "index": "C", "solvedCount": 790}, {"contestId": 573, "index": "B", "solvedCount": 4221}, {"contestId": 573, "index": "A", "solvedCount": 10964}, {"contestId": 572, "index": "B", "solvedCount": 4636}, {"contestId": 572, "index": "A", "solvedCount": 11086}, {"contestId": 571, "index": "E", "solvedCount": 124}, {"contestId": 571, "index": "D", "solvedCount": 292}, {"contestId": 571, "index": "C", "solvedCount": 447}, {"contestId": 571, "index": "B", "solvedCount": 1871}, {"contestId": 571, "index": "A", "solvedCount": 1538}, {"contestId": 570, "index": "E", "solvedCount": 1258}, {"contestId": 570, "index": "D", "solvedCount": 2990}, {"contestId": 570, "index": "C", "solvedCount": 6921}, {"contestId": 570, "index": "B", "solvedCount": 10888}, {"contestId": 570, "index": "A", "solvedCount": 11221}, {"contestId": 569, "index": "B", "solvedCount": 5571}, {"contestId": 569, "index": "A", "solvedCount": 3968}, {"contestId": 568, "index": "E", "solvedCount": 262}, {"contestId": 568, "index": "D", "solvedCount": 227}, {"contestId": 568, "index": "C", "solvedCount": 512}, {"contestId": 568, "index": "B", "solvedCount": 1830}, {"contestId": 568, "index": "A", "solvedCount": 3910}, {"contestId": 567, "index": "F", "solvedCount": 386}, {"contestId": 567, "index": "E", "solvedCount": 1052}, {"contestId": 567, "index": "D", "solvedCount": 3298}, {"contestId": 567, "index": "C", "solvedCount": 6485}, {"contestId": 567, "index": "B", "solvedCount": 6659}, {"contestId": 567, "index": "A", "solvedCount": 15544}, {"contestId": 566, "index": "G", "solvedCount": 246}, {"contestId": 566, "index": "F", "solvedCount": 2384}, {"contestId": 566, "index": "E", "solvedCount": 219}, {"contestId": 566, "index": "D", "solvedCount": 1626}, {"contestId": 566, "index": "C", "solvedCount": 266}, {"contestId": 566, "index": "B", "solvedCount": 208}, {"contestId": 566, "index": "A", "solvedCount": 593}, {"contestId": 560, "index": "B", "solvedCount": 6234}, {"contestId": 560, "index": "A", "solvedCount": 11740}, {"contestId": 559, "index": "E", "solvedCount": 405}, {"contestId": 559, "index": "D", "solvedCount": 281}, {"contestId": 559, "index": "C", "solvedCount": 3287}, {"contestId": 559, "index": "B", "solvedCount": 7007}, {"contestId": 559, "index": "A", "solvedCount": 7745}, {"contestId": 558, "index": "E", "solvedCount": 2318}, {"contestId": 558, "index": "D", "solvedCount": 943}, {"contestId": 558, "index": "C", "solvedCount": 3125}, {"contestId": 558, "index": "B", "solvedCount": 5822}, {"contestId": 558, "index": "A", "solvedCount": 7482}, {"contestId": 557, "index": "E", "solvedCount": 827}, {"contestId": 557, "index": "D", "solvedCount": 1688}, {"contestId": 557, "index": "C", "solvedCount": 3228}, {"contestId": 557, "index": "B", "solvedCount": 5930}, {"contestId": 557, "index": "A", "solvedCount": 7027}, {"contestId": 556, "index": "B", "solvedCount": 6497}, {"contestId": 556, "index": "A", "solvedCount": 20287}, {"contestId": 555, "index": "E", "solvedCount": 980}, {"contestId": 555, "index": "D", "solvedCount": 716}, {"contestId": 555, "index": "C", "solvedCount": 1613}, {"contestId": 555, "index": "B", "solvedCount": 2757}, {"contestId": 555, "index": "A", "solvedCount": 5479}, {"contestId": 554, "index": "B", "solvedCount": 6818}, {"contestId": 554, "index": "A", "solvedCount": 9158}, {"contestId": 553, "index": "E", "solvedCount": 275}, {"contestId": 553, "index": "D", "solvedCount": 784}, {"contestId": 553, "index": "C", "solvedCount": 1334}, {"contestId": 553, "index": "B", "solvedCount": 1805}, {"contestId": 553, "index": "A", "solvedCount": 5846}, {"contestId": 552, "index": "E", "solvedCount": 1175}, {"contestId": 552, "index": "D", "solvedCount": 3295}, {"contestId": 552, "index": "C", "solvedCount": 4214}, {"contestId": 552, "index": "B", "solvedCount": 11348}, {"contestId": 552, "index": "A", "solvedCount": 7787}, {"contestId": 551, "index": "E", "solvedCount": 1133}, {"contestId": 551, "index": "D", "solvedCount": 1375}, {"contestId": 551, "index": "C", "solvedCount": 2413}, {"contestId": 551, "index": "B", "solvedCount": 3138}, {"contestId": 551, "index": "A", "solvedCount": 11837}, {"contestId": 550, "index": "E", "solvedCount": 1163}, {"contestId": 550, "index": "D", "solvedCount": 2424}, {"contestId": 550, "index": "C", "solvedCount": 14074}, {"contestId": 550, "index": "B", "solvedCount": 9125}, {"contestId": 550, "index": "A", "solvedCount": 18118}, {"contestId": 549, "index": "H", "solvedCount": 1603}, {"contestId": 549, "index": "G", "solvedCount": 1844}, {"contestId": 549, "index": "F", "solvedCount": 517}, {"contestId": 549, "index": "E", "solvedCount": 91}, {"contestId": 549, "index": "D", "solvedCount": 1994}, {"contestId": 549, "index": "C", "solvedCount": 1467}, {"contestId": 549, "index": "B", "solvedCount": 1242}, {"contestId": 549, "index": "A", "solvedCount": 7286}, {"contestId": 548, "index": "B", "solvedCount": 5784}, {"contestId": 548, "index": "A", "solvedCount": 7709}, {"contestId": 547, "index": "E", "solvedCount": 764}, {"contestId": 547, "index": "D", "solvedCount": 1010}, {"contestId": 547, "index": "C", "solvedCount": 1664}, {"contestId": 547, "index": "B", "solvedCount": 4654}, {"contestId": 547, "index": "A", "solvedCount": 2031}, {"contestId": 546, "index": "E", "solvedCount": 2212}, {"contestId": 546, "index": "D", "solvedCount": 6844}, {"contestId": 546, "index": "C", "solvedCount": 10286}, {"contestId": 546, "index": "B", "solvedCount": 11846}, {"contestId": 546, "index": "A", "solvedCount": 49745}, {"contestId": 545, "index": "E", "solvedCount": 2626}, {"contestId": 545, "index": "D", "solvedCount": 13944}, {"contestId": 545, "index": "C", "solvedCount": 13193}, {"contestId": 545, "index": "B", "solvedCount": 8606}, {"contestId": 545, "index": "A", "solvedCount": 8860}, {"contestId": 544, "index": "B", "solvedCount": 5265}, {"contestId": 544, "index": "A", "solvedCount": 5728}, {"contestId": 543, "index": "E", "solvedCount": 132}, {"contestId": 543, "index": "D", "solvedCount": 1305}, {"contestId": 543, "index": "C", "solvedCount": 968}, {"contestId": 543, "index": "B", "solvedCount": 2687}, {"contestId": 543, "index": "A", "solvedCount": 5077}, {"contestId": 542, "index": "F", "solvedCount": 643}, {"contestId": 542, "index": "E", "solvedCount": 471}, {"contestId": 542, "index": "D", "solvedCount": 376}, {"contestId": 542, "index": "C", "solvedCount": 955}, {"contestId": 542, "index": "B", "solvedCount": 63}, {"contestId": 542, "index": "A", "solvedCount": 428}, {"contestId": 540, "index": "E", "solvedCount": 1324}, {"contestId": 540, "index": "D", "solvedCount": 3182}, {"contestId": 540, "index": "C", "solvedCount": 4811}, {"contestId": 540, "index": "B", "solvedCount": 3827}, {"contestId": 540, "index": "A", "solvedCount": 19592}, {"contestId": 538, "index": "H", "solvedCount": 247}, {"contestId": 538, "index": "G", "solvedCount": 218}, {"contestId": 538, "index": "F", "solvedCount": 1186}, {"contestId": 538, "index": "E", "solvedCount": 1241}, {"contestId": 538, "index": "D", "solvedCount": 2190}, {"contestId": 538, "index": "C", "solvedCount": 4888}, {"contestId": 538, "index": "B", "solvedCount": 11169}, {"contestId": 538, "index": "A", "solvedCount": 5754}, {"contestId": 536, "index": "E", "solvedCount": 210}, {"contestId": 536, "index": "D", "solvedCount": 355}, {"contestId": 535, "index": "E", "solvedCount": 619}, {"contestId": 535, "index": "D", "solvedCount": 2549}, {"contestId": 535, "index": "C", "solvedCount": 3046}, {"contestId": 535, "index": "B", "solvedCount": 12117}, {"contestId": 535, "index": "A", "solvedCount": 8882}, {"contestId": 534, "index": "F", "solvedCount": 309}, {"contestId": 534, "index": "E", "solvedCount": 287}, {"contestId": 534, "index": "D", "solvedCount": 1814}, {"contestId": 534, "index": "C", "solvedCount": 3565}, {"contestId": 534, "index": "B", "solvedCount": 6091}, {"contestId": 534, "index": "A", "solvedCount": 8786}, {"contestId": 533, "index": "F", "solvedCount": 627}, {"contestId": 533, "index": "E", "solvedCount": 1616}, {"contestId": 533, "index": "D", "solvedCount": 90}, {"contestId": 533, "index": "C", "solvedCount": 1650}, {"contestId": 533, "index": "B", "solvedCount": 1390}, {"contestId": 533, "index": "A", "solvedCount": 173}, {"contestId": 530, "index": "I", "solvedCount": 35}, {"contestId": 530, "index": "H", "solvedCount": 110}, {"contestId": 530, "index": "G", "solvedCount": 80}, {"contestId": 530, "index": "F", "solvedCount": 85}, {"contestId": 530, "index": "E", "solvedCount": 275}, {"contestId": 530, "index": "D", "solvedCount": 421}, {"contestId": 530, "index": "C", "solvedCount": 417}, {"contestId": 530, "index": "B", "solvedCount": 508}, {"contestId": 530, "index": "A", "solvedCount": 638}, {"contestId": 529, "index": "B", "solvedCount": 688}, {"contestId": 528, "index": "E", "solvedCount": 167}, {"contestId": 528, "index": "D", "solvedCount": 1220}, {"contestId": 527, "index": "E", "solvedCount": 910}, {"contestId": 527, "index": "D", "solvedCount": 3313}, {"contestId": 527, "index": "C", "solvedCount": 4858}, {"contestId": 527, "index": "B", "solvedCount": 3297}, {"contestId": 527, "index": "A", "solvedCount": 10900}, {"contestId": 526, "index": "G", "solvedCount": 218}, {"contestId": 526, "index": "F", "solvedCount": 641}, {"contestId": 526, "index": "E", "solvedCount": 746}, {"contestId": 526, "index": "D", "solvedCount": 1288}, {"contestId": 526, "index": "C", "solvedCount": 1947}, {"contestId": 526, "index": "B", "solvedCount": 3889}, {"contestId": 526, "index": "A", "solvedCount": 4208}, {"contestId": 525, "index": "E", "solvedCount": 1524}, {"contestId": 525, "index": "D", "solvedCount": 1101}, {"contestId": 525, "index": "C", "solvedCount": 4625}, {"contestId": 525, "index": "B", "solvedCount": 6493}, {"contestId": 525, "index": "A", "solvedCount": 8024}, {"contestId": 524, "index": "F", "solvedCount": 323}, {"contestId": 524, "index": "E", "solvedCount": 803}, {"contestId": 524, "index": "D", "solvedCount": 842}, {"contestId": 524, "index": "C", "solvedCount": 1739}, {"contestId": 524, "index": "B", "solvedCount": 1318}, {"contestId": 524, "index": "A", "solvedCount": 1310}, {"contestId": 523, "index": "D", "solvedCount": 1489}, {"contestId": 523, "index": "C", "solvedCount": 1973}, {"contestId": 523, "index": "B", "solvedCount": 891}, {"contestId": 523, "index": "A", "solvedCount": 2228}, {"contestId": 522, "index": "D", "solvedCount": 1417}, {"contestId": 522, "index": "C", "solvedCount": 651}, {"contestId": 522, "index": "B", "solvedCount": 5652}, {"contestId": 522, "index": "A", "solvedCount": 8553}, {"contestId": 521, "index": "E", "solvedCount": 344}, {"contestId": 521, "index": "D", "solvedCount": 633}, {"contestId": 520, "index": "E", "solvedCount": 1363}, {"contestId": 520, "index": "D", "solvedCount": 1318}, {"contestId": 520, "index": "C", "solvedCount": 3454}, {"contestId": 520, "index": "B", "solvedCount": 21509}, {"contestId": 520, "index": "A", "solvedCount": 30216}, {"contestId": 519, "index": "E", "solvedCount": 3137}, {"contestId": 519, "index": "D", "solvedCount": 4448}, {"contestId": 519, "index": "C", "solvedCount": 13268}, {"contestId": 519, "index": "B", "solvedCount": 20887}, {"contestId": 519, "index": "A", "solvedCount": 14105}, {"contestId": 518, "index": "F", "solvedCount": 276}, {"contestId": 518, "index": "E", "solvedCount": 775}, {"contestId": 518, "index": "D", "solvedCount": 4182}, {"contestId": 518, "index": "C", "solvedCount": 4927}, {"contestId": 518, "index": "B", "solvedCount": 5599}, {"contestId": 518, "index": "A", "solvedCount": 6641}, {"contestId": 516, "index": "E", "solvedCount": 197}, {"contestId": 516, "index": "D", "solvedCount": 569}, {"contestId": 515, "index": "E", "solvedCount": 1216}, {"contestId": 515, "index": "D", "solvedCount": 2262}, {"contestId": 515, "index": "C", "solvedCount": 13906}, {"contestId": 515, "index": "B", "solvedCount": 5870}, {"contestId": 515, "index": "A", "solvedCount": 13008}, {"contestId": 514, "index": "E", "solvedCount": 898}, {"contestId": 514, "index": "D", "solvedCount": 2329}, {"contestId": 514, "index": "C", "solvedCount": 3965}, {"contestId": 514, "index": "B", "solvedCount": 11468}, {"contestId": 514, "index": "A", "solvedCount": 14835}, {"contestId": 513, "index": "G3", "solvedCount": 113}, {"contestId": 513, "index": "G2", "solvedCount": 439}, {"contestId": 513, "index": "G1", "solvedCount": 1542}, {"contestId": 513, "index": "F2", "solvedCount": 196}, {"contestId": 513, "index": "F1", "solvedCount": 190}, {"contestId": 513, "index": "E2", "solvedCount": 334}, {"contestId": 513, "index": "E1", "solvedCount": 331}, {"contestId": 513, "index": "D2", "solvedCount": 298}, {"contestId": 513, "index": "D1", "solvedCount": 372}, {"contestId": 513, "index": "C", "solvedCount": 1275}, {"contestId": 513, "index": "B2", "solvedCount": 2305}, {"contestId": 513, "index": "B1", "solvedCount": 3261}, {"contestId": 513, "index": "A", "solvedCount": 14737}, {"contestId": 512, "index": "E", "solvedCount": 205}, {"contestId": 512, "index": "D", "solvedCount": 431}, {"contestId": 510, "index": "E", "solvedCount": 1453}, {"contestId": 510, "index": "D", "solvedCount": 3156}, {"contestId": 510, "index": "C", "solvedCount": 7763}, {"contestId": 510, "index": "B", "solvedCount": 8012}, {"contestId": 510, "index": "A", "solvedCount": 27182}, {"contestId": 509, "index": "F", "solvedCount": 568}, {"contestId": 509, "index": "E", "solvedCount": 1513}, {"contestId": 509, "index": "D", "solvedCount": 615}, {"contestId": 509, "index": "C", "solvedCount": 1514}, {"contestId": 509, "index": "B", "solvedCount": 6481}, {"contestId": 509, "index": "A", "solvedCount": 22086}, {"contestId": 508, "index": "E", "solvedCount": 1170}, {"contestId": 508, "index": "D", "solvedCount": 1606}, {"contestId": 508, "index": "C", "solvedCount": 3577}, {"contestId": 508, "index": "B", "solvedCount": 12319}, {"contestId": 508, "index": "A", "solvedCount": 6175}, {"contestId": 507, "index": "E", "solvedCount": 1852}, {"contestId": 507, "index": "D", "solvedCount": 1144}, {"contestId": 507, "index": "C", "solvedCount": 3291}, {"contestId": 507, "index": "B", "solvedCount": 13270}, {"contestId": 507, "index": "A", "solvedCount": 10848}, {"contestId": 506, "index": "E", "solvedCount": 278}, {"contestId": 506, "index": "D", "solvedCount": 1127}, {"contestId": 505, "index": "E", "solvedCount": 486}, {"contestId": 505, "index": "D", "solvedCount": 1587}, {"contestId": 505, "index": "C", "solvedCount": 3639}, {"contestId": 505, "index": "B", "solvedCount": 6766}, {"contestId": 505, "index": "A", "solvedCount": 5472}, {"contestId": 504, "index": "E", "solvedCount": 306}, {"contestId": 504, "index": "D", "solvedCount": 236}, {"contestId": 501, "index": "E", "solvedCount": 563}, {"contestId": 501, "index": "D", "solvedCount": 1709}, {"contestId": 501, "index": "C", "solvedCount": 4225}, {"contestId": 501, "index": "B", "solvedCount": 8923}, {"contestId": 501, "index": "A", "solvedCount": 12297}, {"contestId": 500, "index": "G", "solvedCount": 70}, {"contestId": 500, "index": "F", "solvedCount": 394}, {"contestId": 500, "index": "E", "solvedCount": 1012}, {"contestId": 500, "index": "D", "solvedCount": 2524}, {"contestId": 500, "index": "C", "solvedCount": 4857}, {"contestId": 500, "index": "B", "solvedCount": 6428}, {"contestId": 500, "index": "A", "solvedCount": 24689}, {"contestId": 499, "index": "B", "solvedCount": 17809}, {"contestId": 499, "index": "A", "solvedCount": 9151}, {"contestId": 498, "index": "E", "solvedCount": 281}, {"contestId": 498, "index": "D", "solvedCount": 732}, {"contestId": 498, "index": "C", "solvedCount": 1965}, {"contestId": 498, "index": "B", "solvedCount": 883}, {"contestId": 498, "index": "A", "solvedCount": 4862}, {"contestId": 497, "index": "E", "solvedCount": 167}, {"contestId": 497, "index": "D", "solvedCount": 176}, {"contestId": 496, "index": "E", "solvedCount": 1292}, {"contestId": 496, "index": "D", "solvedCount": 2395}, {"contestId": 496, "index": "C", "solvedCount": 5617}, {"contestId": 496, "index": "B", "solvedCount": 4232}, {"contestId": 496, "index": "A", "solvedCount": 10621}, {"contestId": 495, "index": "B", "solvedCount": 4286}, {"contestId": 495, "index": "A", "solvedCount": 6308}, {"contestId": 494, "index": "E", "solvedCount": 138}, {"contestId": 494, "index": "D", "solvedCount": 391}, {"contestId": 494, "index": "C", "solvedCount": 444}, {"contestId": 494, "index": "B", "solvedCount": 1949}, {"contestId": 494, "index": "A", "solvedCount": 4621}, {"contestId": 493, "index": "E", "solvedCount": 348}, {"contestId": 493, "index": "D", "solvedCount": 6280}, {"contestId": 493, "index": "C", "solvedCount": 4610}, {"contestId": 493, "index": "B", "solvedCount": 7515}, {"contestId": 493, "index": "A", "solvedCount": 5121}, {"contestId": 492, "index": "E", "solvedCount": 1323}, {"contestId": 492, "index": "D", "solvedCount": 2611}, {"contestId": 492, "index": "C", "solvedCount": 7980}, {"contestId": 492, "index": "B", "solvedCount": 28960}, {"contestId": 492, "index": "A", "solvedCount": 20963}, {"contestId": 491, "index": "C", "solvedCount": 232}, {"contestId": 491, "index": "B", "solvedCount": 346}, {"contestId": 491, "index": "A", "solvedCount": 1242}, {"contestId": 490, "index": "F", "solvedCount": 850}, {"contestId": 490, "index": "E", "solvedCount": 1197}, {"contestId": 490, "index": "D", "solvedCount": 1759}, {"contestId": 490, "index": "C", "solvedCount": 6020}, {"contestId": 490, "index": "B", "solvedCount": 4474}, {"contestId": 490, "index": "A", "solvedCount": 22054}, {"contestId": 489, "index": "F", "solvedCount": 1285}, {"contestId": 489, "index": "E", "solvedCount": 712}, {"contestId": 489, "index": "D", "solvedCount": 5012}, {"contestId": 489, "index": "C", "solvedCount": 22727}, {"contestId": 489, "index": "B", "solvedCount": 21738}, {"contestId": 489, "index": "A", "solvedCount": 6533}, {"contestId": 488, "index": "B", "solvedCount": 1796}, {"contestId": 488, "index": "A", "solvedCount": 9181}, {"contestId": 487, "index": "E", "solvedCount": 616}, {"contestId": 487, "index": "D", "solvedCount": 576}, {"contestId": 487, "index": "C", "solvedCount": 1445}, {"contestId": 487, "index": "B", "solvedCount": 2200}, {"contestId": 487, "index": "A", "solvedCount": 2961}, {"contestId": 486, "index": "E", "solvedCount": 1245}, {"contestId": 486, "index": "D", "solvedCount": 2507}, {"contestId": 486, "index": "C", "solvedCount": 7261}, {"contestId": 486, "index": "B", "solvedCount": 8678}, {"contestId": 486, "index": "A", "solvedCount": 36115}, {"contestId": 485, "index": "B", "solvedCount": 5326}, {"contestId": 485, "index": "A", "solvedCount": 5769}, {"contestId": 484, "index": "E", "solvedCount": 1036}, {"contestId": 484, "index": "D", "solvedCount": 1428}, {"contestId": 484, "index": "C", "solvedCount": 399}, {"contestId": 484, "index": "B", "solvedCount": 4281}, {"contestId": 484, "index": "A", "solvedCount": 6548}, {"contestId": 483, "index": "B", "solvedCount": 3077}, {"contestId": 483, "index": "A", "solvedCount": 11257}, {"contestId": 482, "index": "E", "solvedCount": 120}, {"contestId": 482, "index": "D", "solvedCount": 261}, {"contestId": 482, "index": "C", "solvedCount": 573}, {"contestId": 482, "index": "B", "solvedCount": 3911}, {"contestId": 482, "index": "A", "solvedCount": 7025}, {"contestId": 480, "index": "E", "solvedCount": 315}, {"contestId": 480, "index": "D", "solvedCount": 365}, {"contestId": 479, "index": "E", "solvedCount": 3592}, {"contestId": 479, "index": "D", "solvedCount": 3841}, {"contestId": 479, "index": "C", "solvedCount": 15022}, {"contestId": 479, "index": "B", "solvedCount": 5213}, {"contestId": 479, "index": "A", "solvedCount": 37772}, {"contestId": 478, "index": "E", "solvedCount": 122}, {"contestId": 478, "index": "D", "solvedCount": 3450}, {"contestId": 478, "index": "C", "solvedCount": 9855}, {"contestId": 478, "index": "B", "solvedCount": 17324}, {"contestId": 478, "index": "A", "solvedCount": 16957}, {"contestId": 477, "index": "E", "solvedCount": 62}, {"contestId": 477, "index": "D", "solvedCount": 301}, {"contestId": 476, "index": "E", "solvedCount": 1361}, {"contestId": 476, "index": "D", "solvedCount": 2913}, {"contestId": 476, "index": "C", "solvedCount": 4457}, {"contestId": 476, "index": "B", "solvedCount": 14777}, {"contestId": 476, "index": "A", "solvedCount": 19429}, {"contestId": 475, "index": "F", "solvedCount": 130}, {"contestId": 475, "index": "E", "solvedCount": 227}, {"contestId": 475, "index": "D", "solvedCount": 2088}, {"contestId": 475, "index": "C", "solvedCount": 698}, {"contestId": 475, "index": "B", "solvedCount": 5737}, {"contestId": 475, "index": "A", "solvedCount": 4152}, {"contestId": 474, "index": "F", "solvedCount": 3346}, {"contestId": 474, "index": "E", "solvedCount": 1785}, {"contestId": 474, "index": "D", "solvedCount": 12479}, {"contestId": 474, "index": "C", "solvedCount": 2447}, {"contestId": 474, "index": "B", "solvedCount": 19461}, {"contestId": 474, "index": "A", "solvedCount": 19448}, {"contestId": 472, "index": "G", "solvedCount": 214}, {"contestId": 472, "index": "F", "solvedCount": 196}, {"contestId": 472, "index": "E", "solvedCount": 98}, {"contestId": 472, "index": "D", "solvedCount": 2959}, {"contestId": 472, "index": "C", "solvedCount": 5604}, {"contestId": 472, "index": "B", "solvedCount": 6401}, {"contestId": 472, "index": "A", "solvedCount": 26684}, {"contestId": 471, "index": "E", "solvedCount": 55}, {"contestId": 471, "index": "D", "solvedCount": 3627}, {"contestId": 471, "index": "C", "solvedCount": 3145}, {"contestId": 471, "index": "B", "solvedCount": 5049}, {"contestId": 471, "index": "A", "solvedCount": 10860}, {"contestId": 470, "index": "H", "solvedCount": 132}, {"contestId": 470, "index": "G", "solvedCount": 81}, {"contestId": 470, "index": "F", "solvedCount": 87}, {"contestId": 470, "index": "E", "solvedCount": 175}, {"contestId": 470, "index": "D", "solvedCount": 131}, {"contestId": 470, "index": "C", "solvedCount": 156}, {"contestId": 470, "index": "B", "solvedCount": 237}, {"contestId": 470, "index": "A", "solvedCount": 476}, {"contestId": 469, "index": "B", "solvedCount": 7355}, {"contestId": 469, "index": "A", "solvedCount": 33493}, {"contestId": 468, "index": "E", "solvedCount": 98}, {"contestId": 468, "index": "D", "solvedCount": 186}, {"contestId": 468, "index": "C", "solvedCount": 781}, {"contestId": 468, "index": "B", "solvedCount": 2699}, {"contestId": 468, "index": "A", "solvedCount": 5888}, {"contestId": 467, "index": "E", "solvedCount": 511}, {"contestId": 467, "index": "D", "solvedCount": 1270}, {"contestId": 467, "index": "C", "solvedCount": 8161}, {"contestId": 467, "index": "B", "solvedCount": 18103}, {"contestId": 467, "index": "A", "solvedCount": 41517}, {"contestId": 466, "index": "E", "solvedCount": 1263}, {"contestId": 466, "index": "D", "solvedCount": 1813}, {"contestId": 466, "index": "C", "solvedCount": 18306}, {"contestId": 466, "index": "B", "solvedCount": 3339}, {"contestId": 466, "index": "A", "solvedCount": 23809}, {"contestId": 465, "index": "B", "solvedCount": 7813}, {"contestId": 465, "index": "A", "solvedCount": 7906}, {"contestId": 464, "index": "E", "solvedCount": 401}, {"contestId": 464, "index": "D", "solvedCount": 391}, {"contestId": 464, "index": "C", "solvedCount": 1332}, {"contestId": 464, "index": "B", "solvedCount": 1455}, {"contestId": 464, "index": "A", "solvedCount": 4504}, {"contestId": 463, "index": "E", "solvedCount": 1020}, {"contestId": 463, "index": "D", "solvedCount": 3912}, {"contestId": 463, "index": "C", "solvedCount": 5653}, {"contestId": 463, "index": "B", "solvedCount": 13417}, {"contestId": 463, "index": "A", "solvedCount": 7256}, {"contestId": 462, "index": "B", "solvedCount": 7552}, {"contestId": 462, "index": "A", "solvedCount": 10609}, {"contestId": 461, "index": "E", "solvedCount": 208}, {"contestId": 461, "index": "D", "solvedCount": 237}, {"contestId": 461, "index": "C", "solvedCount": 1084}, {"contestId": 461, "index": "B", "solvedCount": 3113}, {"contestId": 461, "index": "A", "solvedCount": 11208}, {"contestId": 460, "index": "E", "solvedCount": 262}, {"contestId": 460, "index": "D", "solvedCount": 764}, {"contestId": 460, "index": "C", "solvedCount": 3939}, {"contestId": 460, "index": "B", "solvedCount": 7509}, {"contestId": 460, "index": "A", "solvedCount": 24416}, {"contestId": 459, "index": "E", "solvedCount": 3389}, {"contestId": 459, "index": "D", "solvedCount": 5149}, {"contestId": 459, "index": "C", "solvedCount": 4499}, {"contestId": 459, "index": "B", "solvedCount": 17988}, {"contestId": 459, "index": "A", "solvedCount": 16134}, {"contestId": 457, "index": "F", "solvedCount": 54}, {"contestId": 457, "index": "E", "solvedCount": 36}, {"contestId": 457, "index": "D", "solvedCount": 173}, {"contestId": 457, "index": "C", "solvedCount": 653}, {"contestId": 457, "index": "B", "solvedCount": 858}, {"contestId": 457, "index": "A", "solvedCount": 1054}, {"contestId": 456, "index": "B", "solvedCount": 10154}, {"contestId": 456, "index": "A", "solvedCount": 18805}, {"contestId": 455, "index": "E", "solvedCount": 376}, {"contestId": 455, "index": "D", "solvedCount": 1465}, {"contestId": 455, "index": "C", "solvedCount": 3399}, {"contestId": 455, "index": "B", "solvedCount": 3540}, {"contestId": 455, "index": "A", "solvedCount": 25842}, {"contestId": 454, "index": "B", "solvedCount": 10377}, {"contestId": 454, "index": "A", "solvedCount": 10581}, {"contestId": 453, "index": "E", "solvedCount": 245}, {"contestId": 453, "index": "D", "solvedCount": 256}, {"contestId": 453, "index": "C", "solvedCount": 1105}, {"contestId": 453, "index": "B", "solvedCount": 2840}, {"contestId": 453, "index": "A", "solvedCount": 6189}, {"contestId": 452, "index": "F", "solvedCount": 481}, {"contestId": 452, "index": "E", "solvedCount": 556}, {"contestId": 452, "index": "D", "solvedCount": 1199}, {"contestId": 452, "index": "C", "solvedCount": 1092}, {"contestId": 452, "index": "B", "solvedCount": 1777}, {"contestId": 452, "index": "A", "solvedCount": 5861}, {"contestId": 451, "index": "E", "solvedCount": 1549}, {"contestId": 451, "index": "D", "solvedCount": 3253}, {"contestId": 451, "index": "C", "solvedCount": 2689}, {"contestId": 451, "index": "B", "solvedCount": 17402}, {"contestId": 451, "index": "A", "solvedCount": 29664}, {"contestId": 450, "index": "B", "solvedCount": 12304}, {"contestId": 450, "index": "A", "solvedCount": 12867}, {"contestId": 449, "index": "E", "solvedCount": 174}, {"contestId": 449, "index": "D", "solvedCount": 1754}, {"contestId": 449, "index": "C", "solvedCount": 1524}, {"contestId": 449, "index": "B", "solvedCount": 3737}, {"contestId": 449, "index": "A", "solvedCount": 3362}, {"contestId": 448, "index": "E", "solvedCount": 1060}, {"contestId": 448, "index": "D", "solvedCount": 6798}, {"contestId": 448, "index": "C", "solvedCount": 4567}, {"contestId": 448, "index": "B", "solvedCount": 8873}, {"contestId": 448, "index": "A", "solvedCount": 16865}, {"contestId": 447, "index": "B", "solvedCount": 11392}, {"contestId": 447, "index": "A", "solvedCount": 6601}, {"contestId": 446, "index": "E", "solvedCount": 72}, {"contestId": 446, "index": "D", "solvedCount": 199}, {"contestId": 446, "index": "C", "solvedCount": 1584}, {"contestId": 446, "index": "B", "solvedCount": 2645}, {"contestId": 446, "index": "A", "solvedCount": 8226}, {"contestId": 445, "index": "B", "solvedCount": 6646}, {"contestId": 445, "index": "A", "solvedCount": 12646}, {"contestId": 444, "index": "E", "solvedCount": 391}, {"contestId": 444, "index": "D", "solvedCount": 431}, {"contestId": 444, "index": "C", "solvedCount": 1469}, {"contestId": 444, "index": "B", "solvedCount": 800}, {"contestId": 444, "index": "A", "solvedCount": 2634}, {"contestId": 443, "index": "B", "solvedCount": 3200}, {"contestId": 443, "index": "A", "solvedCount": 31234}, {"contestId": 442, "index": "E", "solvedCount": 120}, {"contestId": 442, "index": "D", "solvedCount": 519}, {"contestId": 442, "index": "C", "solvedCount": 1078}, {"contestId": 442, "index": "B", "solvedCount": 3651}, {"contestId": 442, "index": "A", "solvedCount": 1755}, {"contestId": 441, "index": "E", "solvedCount": 309}, {"contestId": 441, "index": "D", "solvedCount": 816}, {"contestId": 441, "index": "C", "solvedCount": 7122}, {"contestId": 441, "index": "B", "solvedCount": 4923}, {"contestId": 441, "index": "A", "solvedCount": 11740}, {"contestId": 440, "index": "D", "solvedCount": 287}, {"contestId": 440, "index": "C", "solvedCount": 614}, {"contestId": 440, "index": "B", "solvedCount": 1462}, {"contestId": 440, "index": "A", "solvedCount": 3470}, {"contestId": 439, "index": "E", "solvedCount": 981}, {"contestId": 439, "index": "D", "solvedCount": 3396}, {"contestId": 439, "index": "C", "solvedCount": 2932}, {"contestId": 439, "index": "B", "solvedCount": 9885}, {"contestId": 439, "index": "A", "solvedCount": 15238}, {"contestId": 438, "index": "E", "solvedCount": 823}, {"contestId": 438, "index": "D", "solvedCount": 2676}, {"contestId": 437, "index": "E", "solvedCount": 407}, {"contestId": 437, "index": "D", "solvedCount": 2299}, {"contestId": 437, "index": "C", "solvedCount": 8669}, {"contestId": 437, "index": "B", "solvedCount": 5139}, {"contestId": 437, "index": "A", "solvedCount": 6364}, {"contestId": 436, "index": "F", "solvedCount": 180}, {"contestId": 436, "index": "E", "solvedCount": 405}, {"contestId": 436, "index": "D", "solvedCount": 221}, {"contestId": 436, "index": "C", "solvedCount": 2111}, {"contestId": 436, "index": "B", "solvedCount": 2715}, {"contestId": 436, "index": "A", "solvedCount": 2717}, {"contestId": 435, "index": "E", "solvedCount": 174}, {"contestId": 435, "index": "D", "solvedCount": 628}, {"contestId": 435, "index": "C", "solvedCount": 2243}, {"contestId": 435, "index": "B", "solvedCount": 4206}, {"contestId": 435, "index": "A", "solvedCount": 7172}, {"contestId": 434, "index": "E", "solvedCount": 151}, {"contestId": 434, "index": "D", "solvedCount": 231}, {"contestId": 433, "index": "E", "solvedCount": 320}, {"contestId": 433, "index": "D", "solvedCount": 824}, {"contestId": 433, "index": "C", "solvedCount": 1900}, {"contestId": 433, "index": "B", "solvedCount": 13111}, {"contestId": 433, "index": "A", "solvedCount": 7762}, {"contestId": 432, "index": "E", "solvedCount": 491}, {"contestId": 432, "index": "D", "solvedCount": 3660}, {"contestId": 432, "index": "C", "solvedCount": 1935}, {"contestId": 432, "index": "B", "solvedCount": 7408}, {"contestId": 432, "index": "A", "solvedCount": 23028}, {"contestId": 431, "index": "E", "solvedCount": 333}, {"contestId": 431, "index": "D", "solvedCount": 1457}, {"contestId": 431, "index": "C", "solvedCount": 12854}, {"contestId": 431, "index": "B", "solvedCount": 6309}, {"contestId": 431, "index": "A", "solvedCount": 20092}, {"contestId": 430, "index": "B", "solvedCount": 2554}, {"contestId": 430, "index": "A", "solvedCount": 1795}, {"contestId": 429, "index": "E", "solvedCount": 408}, {"contestId": 429, "index": "D", "solvedCount": 1675}, {"contestId": 429, "index": "C", "solvedCount": 649}, {"contestId": 429, "index": "B", "solvedCount": 5275}, {"contestId": 429, "index": "A", "solvedCount": 6066}, {"contestId": 427, "index": "E", "solvedCount": 1173}, {"contestId": 427, "index": "D", "solvedCount": 1286}, {"contestId": 427, "index": "C", "solvedCount": 6486}, {"contestId": 427, "index": "B", "solvedCount": 9289}, {"contestId": 427, "index": "A", "solvedCount": 24133}, {"contestId": 426, "index": "B", "solvedCount": 3066}, {"contestId": 426, "index": "A", "solvedCount": 6376}, {"contestId": 425, "index": "E", "solvedCount": 352}, {"contestId": 425, "index": "D", "solvedCount": 899}, {"contestId": 425, "index": "C", "solvedCount": 752}, {"contestId": 425, "index": "B", "solvedCount": 973}, {"contestId": 425, "index": "A", "solvedCount": 2989}, {"contestId": 424, "index": "E", "solvedCount": 77}, {"contestId": 424, "index": "D", "solvedCount": 443}, {"contestId": 424, "index": "C", "solvedCount": 3254}, {"contestId": 424, "index": "B", "solvedCount": 4740}, {"contestId": 424, "index": "A", "solvedCount": 5312}, {"contestId": 421, "index": "D", "solvedCount": 331}, {"contestId": 421, "index": "A", "solvedCount": 3456}, {"contestId": 420, "index": "E", "solvedCount": 145}, {"contestId": 420, "index": "D", "solvedCount": 440}, {"contestId": 420, "index": "C", "solvedCount": 792}, {"contestId": 420, "index": "B", "solvedCount": 896}, {"contestId": 420, "index": "A", "solvedCount": 3818}, {"contestId": 418, "index": "E", "solvedCount": 112}, {"contestId": 418, "index": "D", "solvedCount": 274}, {"contestId": 417, "index": "E", "solvedCount": 595}, {"contestId": 417, "index": "D", "solvedCount": 1483}, {"contestId": 417, "index": "C", "solvedCount": 3429}, {"contestId": 417, "index": "B", "solvedCount": 1400}, {"contestId": 417, "index": "A", "solvedCount": 1849}, {"contestId": 416, "index": "E", "solvedCount": 767}, {"contestId": 416, "index": "D", "solvedCount": 600}, {"contestId": 416, "index": "C", "solvedCount": 4564}, {"contestId": 416, "index": "B", "solvedCount": 5453}, {"contestId": 416, "index": "A", "solvedCount": 5506}, {"contestId": 415, "index": "B", "solvedCount": 4008}, {"contestId": 415, "index": "A", "solvedCount": 6194}, {"contestId": 414, "index": "E", "solvedCount": 110}, {"contestId": 414, "index": "D", "solvedCount": 498}, {"contestId": 414, "index": "C", "solvedCount": 1576}, {"contestId": 414, "index": "B", "solvedCount": 10829}, {"contestId": 414, "index": "A", "solvedCount": 6624}, {"contestId": 413, "index": "E", "solvedCount": 320}, {"contestId": 413, "index": "D", "solvedCount": 463}, {"contestId": 413, "index": "C", "solvedCount": 1486}, {"contestId": 413, "index": "B", "solvedCount": 1295}, {"contestId": 413, "index": "A", "solvedCount": 1853}, {"contestId": 412, "index": "E", "solvedCount": 671}, {"contestId": 412, "index": "D", "solvedCount": 1227}, {"contestId": 412, "index": "C", "solvedCount": 2409}, {"contestId": 412, "index": "B", "solvedCount": 3083}, {"contestId": 412, "index": "A", "solvedCount": 2679}, {"contestId": 411, "index": "C", "solvedCount": 891}, {"contestId": 411, "index": "B", "solvedCount": 1112}, {"contestId": 411, "index": "A", "solvedCount": 3924}, {"contestId": 409, "index": "I", "solvedCount": 72}, {"contestId": 409, "index": "H", "solvedCount": 5050}, {"contestId": 409, "index": "G", "solvedCount": 313}, {"contestId": 409, "index": "F", "solvedCount": 1505}, {"contestId": 409, "index": "E", "solvedCount": 445}, {"contestId": 409, "index": "D", "solvedCount": 1160}, {"contestId": 409, "index": "C", "solvedCount": 1601}, {"contestId": 409, "index": "B", "solvedCount": 1116}, {"contestId": 409, "index": "A", "solvedCount": 1986}, {"contestId": 408, "index": "B", "solvedCount": 4799}, {"contestId": 408, "index": "A", "solvedCount": 6865}, {"contestId": 407, "index": "E", "solvedCount": 297}, {"contestId": 407, "index": "D", "solvedCount": 371}, {"contestId": 407, "index": "C", "solvedCount": 607}, {"contestId": 407, "index": "B", "solvedCount": 4501}, {"contestId": 407, "index": "A", "solvedCount": 3607}, {"contestId": 406, "index": "E", "solvedCount": 160}, {"contestId": 406, "index": "D", "solvedCount": 887}, {"contestId": 405, "index": "E", "solvedCount": 937}, {"contestId": 405, "index": "D", "solvedCount": 2581}, {"contestId": 405, "index": "C", "solvedCount": 3714}, {"contestId": 405, "index": "B", "solvedCount": 4445}, {"contestId": 405, "index": "A", "solvedCount": 35497}, {"contestId": 404, "index": "E", "solvedCount": 381}, {"contestId": 404, "index": "D", "solvedCount": 1436}, {"contestId": 404, "index": "C", "solvedCount": 3348}, {"contestId": 404, "index": "B", "solvedCount": 2613}, {"contestId": 404, "index": "A", "solvedCount": 11229}, {"contestId": 403, "index": "E", "solvedCount": 118}, {"contestId": 403, "index": "D", "solvedCount": 780}, {"contestId": 402, "index": "E", "solvedCount": 1423}, {"contestId": 402, "index": "D", "solvedCount": 1811}, {"contestId": 402, "index": "C", "solvedCount": 3678}, {"contestId": 402, "index": "B", "solvedCount": 2722}, {"contestId": 402, "index": "A", "solvedCount": 3793}, {"contestId": 401, "index": "E", "solvedCount": 146}, {"contestId": 401, "index": "D", "solvedCount": 2401}, {"contestId": 401, "index": "C", "solvedCount": 10855}, {"contestId": 401, "index": "B", "solvedCount": 3812}, {"contestId": 401, "index": "A", "solvedCount": 11205}, {"contestId": 400, "index": "E", "solvedCount": 708}, {"contestId": 400, "index": "D", "solvedCount": 1968}, {"contestId": 400, "index": "C", "solvedCount": 2502}, {"contestId": 400, "index": "B", "solvedCount": 4201}, {"contestId": 400, "index": "A", "solvedCount": 5557}, {"contestId": 399, "index": "B", "solvedCount": 1581}, {"contestId": 399, "index": "A", "solvedCount": 3575}, {"contestId": 398, "index": "E", "solvedCount": 53}, {"contestId": 398, "index": "D", "solvedCount": 436}, {"contestId": 398, "index": "C", "solvedCount": 179}, {"contestId": 398, "index": "B", "solvedCount": 712}, {"contestId": 398, "index": "A", "solvedCount": 829}, {"contestId": 397, "index": "B", "solvedCount": 663}, {"contestId": 397, "index": "A", "solvedCount": 1879}, {"contestId": 396, "index": "E", "solvedCount": 94}, {"contestId": 396, "index": "D", "solvedCount": 298}, {"contestId": 396, "index": "C", "solvedCount": 1146}, {"contestId": 396, "index": "B", "solvedCount": 824}, {"contestId": 396, "index": "A", "solvedCount": 1113}, {"contestId": 394, "index": "E", "solvedCount": 97}, {"contestId": 394, "index": "D", "solvedCount": 231}, {"contestId": 394, "index": "C", "solvedCount": 453}, {"contestId": 394, "index": "B", "solvedCount": 491}, {"contestId": 394, "index": "A", "solvedCount": 2417}, {"contestId": 393, "index": "B", "solvedCount": 1170}, {"contestId": 393, "index": "A", "solvedCount": 4820}, {"contestId": 392, "index": "E", "solvedCount": 129}, {"contestId": 392, "index": "D", "solvedCount": 168}, {"contestId": 392, "index": "C", "solvedCount": 340}, {"contestId": 392, "index": "B", "solvedCount": 670}, {"contestId": 392, "index": "A", "solvedCount": 775}, {"contestId": 391, "index": "F3", "solvedCount": 54}, {"contestId": 391, "index": "F2", "solvedCount": 51}, {"contestId": 391, "index": "F1", "solvedCount": 107}, {"contestId": 391, "index": "E2", "solvedCount": 106}, {"contestId": 391, "index": "E1", "solvedCount": 87}, {"contestId": 391, "index": "D2", "solvedCount": 152}, {"contestId": 391, "index": "D1", "solvedCount": 184}, {"contestId": 391, "index": "C3", "solvedCount": 126}, {"contestId": 391, "index": "C2", "solvedCount": 111}, {"contestId": 391, "index": "C1", "solvedCount": 165}, {"contestId": 391, "index": "B", "solvedCount": 297}, {"contestId": 391, "index": "A", "solvedCount": 1126}, {"contestId": 390, "index": "E", "solvedCount": 213}, {"contestId": 390, "index": "D", "solvedCount": 411}, {"contestId": 390, "index": "C", "solvedCount": 564}, {"contestId": 390, "index": "B", "solvedCount": 1084}, {"contestId": 390, "index": "A", "solvedCount": 2637}, {"contestId": 389, "index": "B", "solvedCount": 5108}, {"contestId": 389, "index": "A", "solvedCount": 8618}, {"contestId": 388, "index": "E", "solvedCount": 77}, {"contestId": 388, "index": "D", "solvedCount": 244}, {"contestId": 388, "index": "C", "solvedCount": 2029}, {"contestId": 388, "index": "B", "solvedCount": 1790}, {"contestId": 388, "index": "A", "solvedCount": 7728}, {"contestId": 387, "index": "E", "solvedCount": 624}, {"contestId": 387, "index": "D", "solvedCount": 502}, {"contestId": 387, "index": "C", "solvedCount": 1849}, {"contestId": 387, "index": "B", "solvedCount": 7604}, {"contestId": 387, "index": "A", "solvedCount": 6715}, {"contestId": 386, "index": "D", "solvedCount": 267}, {"contestId": 386, "index": "C", "solvedCount": 368}, {"contestId": 386, "index": "B", "solvedCount": 1293}, {"contestId": 386, "index": "A", "solvedCount": 2171}, {"contestId": 385, "index": "E", "solvedCount": 399}, {"contestId": 385, "index": "D", "solvedCount": 547}, {"contestId": 385, "index": "C", "solvedCount": 5919}, {"contestId": 385, "index": "B", "solvedCount": 5871}, {"contestId": 385, "index": "A", "solvedCount": 10191}, {"contestId": 384, "index": "B", "solvedCount": 2652}, {"contestId": 384, "index": "A", "solvedCount": 11329}, {"contestId": 383, "index": "E", "solvedCount": 929}, {"contestId": 383, "index": "D", "solvedCount": 1921}, {"contestId": 383, "index": "C", "solvedCount": 3445}, {"contestId": 383, "index": "B", "solvedCount": 505}, {"contestId": 383, "index": "A", "solvedCount": 4131}, {"contestId": 382, "index": "E", "solvedCount": 223}, {"contestId": 382, "index": "D", "solvedCount": 552}, {"contestId": 382, "index": "C", "solvedCount": 5287}, {"contestId": 382, "index": "B", "solvedCount": 1087}, {"contestId": 382, "index": "A", "solvedCount": 6048}, {"contestId": 381, "index": "B", "solvedCount": 4662}, {"contestId": 381, "index": "A", "solvedCount": 17967}, {"contestId": 380, "index": "E", "solvedCount": 191}, {"contestId": 380, "index": "D", "solvedCount": 341}, {"contestId": 380, "index": "C", "solvedCount": 6432}, {"contestId": 380, "index": "B", "solvedCount": 447}, {"contestId": 380, "index": "A", "solvedCount": 2153}, {"contestId": 379, "index": "G", "solvedCount": 82}, {"contestId": 379, "index": "F", "solvedCount": 1181}, {"contestId": 379, "index": "E", "solvedCount": 278}, {"contestId": 379, "index": "D", "solvedCount": 1212}, {"contestId": 379, "index": "C", "solvedCount": 5343}, {"contestId": 379, "index": "B", "solvedCount": 5845}, {"contestId": 379, "index": "A", "solvedCount": 23282}, {"contestId": 378, "index": "B", "solvedCount": 3470}, {"contestId": 378, "index": "A", "solvedCount": 13241}, {"contestId": 377, "index": "E", "solvedCount": 205}, {"contestId": 377, "index": "D", "solvedCount": 644}, {"contestId": 377, "index": "C", "solvedCount": 834}, {"contestId": 377, "index": "B", "solvedCount": 1584}, {"contestId": 377, "index": "A", "solvedCount": 11018}, {"contestId": 376, "index": "B", "solvedCount": 3587}, {"contestId": 376, "index": "A", "solvedCount": 5767}, {"contestId": 375, "index": "E", "solvedCount": 240}, {"contestId": 375, "index": "D", "solvedCount": 2711}, {"contestId": 375, "index": "C", "solvedCount": 339}, {"contestId": 375, "index": "B", "solvedCount": 3713}, {"contestId": 375, "index": "A", "solvedCount": 3244}, {"contestId": 374, "index": "E", "solvedCount": 149}, {"contestId": 374, "index": "D", "solvedCount": 628}, {"contestId": 374, "index": "C", "solvedCount": 1899}, {"contestId": 374, "index": "B", "solvedCount": 2413}, {"contestId": 374, "index": "A", "solvedCount": 2185}, {"contestId": 373, "index": "B", "solvedCount": 1973}, {"contestId": 373, "index": "A", "solvedCount": 6660}, {"contestId": 372, "index": "E", "solvedCount": 117}, {"contestId": 372, "index": "D", "solvedCount": 486}, {"contestId": 372, "index": "C", "solvedCount": 1517}, {"contestId": 372, "index": "B", "solvedCount": 1827}, {"contestId": 372, "index": "A", "solvedCount": 6810}, {"contestId": 371, "index": "E", "solvedCount": 861}, {"contestId": 371, "index": "D", "solvedCount": 3191}, {"contestId": 371, "index": "C", "solvedCount": 8347}, {"contestId": 371, "index": "B", "solvedCount": 5810}, {"contestId": 371, "index": "A", "solvedCount": 4026}, {"contestId": 370, "index": "E", "solvedCount": 162}, {"contestId": 370, "index": "D", "solvedCount": 482}, {"contestId": 370, "index": "C", "solvedCount": 1240}, {"contestId": 370, "index": "B", "solvedCount": 2154}, {"contestId": 370, "index": "A", "solvedCount": 4914}, {"contestId": 369, "index": "E", "solvedCount": 1169}, {"contestId": 369, "index": "D", "solvedCount": 810}, {"contestId": 369, "index": "C", "solvedCount": 5737}, {"contestId": 369, "index": "B", "solvedCount": 4198}, {"contestId": 369, "index": "A", "solvedCount": 7534}, {"contestId": 368, "index": "B", "solvedCount": 18619}, {"contestId": 368, "index": "A", "solvedCount": 5499}, {"contestId": 367, "index": "E", "solvedCount": 584}, {"contestId": 367, "index": "D", "solvedCount": 467}, {"contestId": 367, "index": "C", "solvedCount": 1380}, {"contestId": 367, "index": "B", "solvedCount": 1961}, {"contestId": 367, "index": "A", "solvedCount": 3629}, {"contestId": 366, "index": "E", "solvedCount": 561}, {"contestId": 366, "index": "D", "solvedCount": 904}, {"contestId": 366, "index": "C", "solvedCount": 2691}, {"contestId": 366, "index": "B", "solvedCount": 4464}, {"contestId": 366, "index": "A", "solvedCount": 3619}, {"contestId": 365, "index": "B", "solvedCount": 7687}, {"contestId": 365, "index": "A", "solvedCount": 6995}, {"contestId": 364, "index": "E", "solvedCount": 186}, {"contestId": 364, "index": "D", "solvedCount": 830}, {"contestId": 364, "index": "C", "solvedCount": 477}, {"contestId": 364, "index": "B", "solvedCount": 877}, {"contestId": 364, "index": "A", "solvedCount": 3490}, {"contestId": 363, "index": "E", "solvedCount": 149}, {"contestId": 363, "index": "D", "solvedCount": 2276}, {"contestId": 363, "index": "C", "solvedCount": 7818}, {"contestId": 363, "index": "B", "solvedCount": 18343}, {"contestId": 363, "index": "A", "solvedCount": 6137}, {"contestId": 362, "index": "E", "solvedCount": 486}, {"contestId": 362, "index": "D", "solvedCount": 651}, {"contestId": 362, "index": "C", "solvedCount": 1031}, {"contestId": 362, "index": "B", "solvedCount": 7511}, {"contestId": 362, "index": "A", "solvedCount": 2345}, {"contestId": 361, "index": "B", "solvedCount": 4631}, {"contestId": 361, "index": "A", "solvedCount": 8916}, {"contestId": 360, "index": "E", "solvedCount": 288}, {"contestId": 360, "index": "D", "solvedCount": 270}, {"contestId": 360, "index": "C", "solvedCount": 664}, {"contestId": 360, "index": "B", "solvedCount": 1785}, {"contestId": 360, "index": "A", "solvedCount": 1779}, {"contestId": 359, "index": "E", "solvedCount": 338}, {"contestId": 359, "index": "D", "solvedCount": 2948}, {"contestId": 359, "index": "C", "solvedCount": 2042}, {"contestId": 359, "index": "B", "solvedCount": 4308}, {"contestId": 359, "index": "A", "solvedCount": 5410}, {"contestId": 358, "index": "E", "solvedCount": 317}, {"contestId": 358, "index": "D", "solvedCount": 2522}, {"contestId": 358, "index": "C", "solvedCount": 1424}, {"contestId": 358, "index": "B", "solvedCount": 3130}, {"contestId": 358, "index": "A", "solvedCount": 5270}, {"contestId": 357, "index": "B", "solvedCount": 4853}, {"contestId": 357, "index": "A", "solvedCount": 4894}, {"contestId": 356, "index": "E", "solvedCount": 183}, {"contestId": 356, "index": "D", "solvedCount": 522}, {"contestId": 356, "index": "C", "solvedCount": 1011}, {"contestId": 356, "index": "B", "solvedCount": 1552}, {"contestId": 356, "index": "A", "solvedCount": 6766}, {"contestId": 355, "index": "B", "solvedCount": 3512}, {"contestId": 355, "index": "A", "solvedCount": 6019}, {"contestId": 354, "index": "E", "solvedCount": 708}, {"contestId": 354, "index": "D", "solvedCount": 198}, {"contestId": 354, "index": "C", "solvedCount": 2014}, {"contestId": 354, "index": "B", "solvedCount": 353}, {"contestId": 354, "index": "A", "solvedCount": 4008}, {"contestId": 353, "index": "E", "solvedCount": 449}, {"contestId": 353, "index": "D", "solvedCount": 1765}, {"contestId": 353, "index": "C", "solvedCount": 3272}, {"contestId": 353, "index": "B", "solvedCount": 1854}, {"contestId": 353, "index": "A", "solvedCount": 9556}, {"contestId": 352, "index": "B", "solvedCount": 7193}, {"contestId": 352, "index": "A", "solvedCount": 11566}, {"contestId": 351, "index": "E", "solvedCount": 1005}, {"contestId": 351, "index": "D", "solvedCount": 552}, {"contestId": 351, "index": "C", "solvedCount": 389}, {"contestId": 351, "index": "B", "solvedCount": 1678}, {"contestId": 351, "index": "A", "solvedCount": 2219}, {"contestId": 350, "index": "E", "solvedCount": 606}, {"contestId": 350, "index": "D", "solvedCount": 176}, {"contestId": 350, "index": "C", "solvedCount": 4608}, {"contestId": 350, "index": "B", "solvedCount": 2428}, {"contestId": 350, "index": "A", "solvedCount": 8652}, {"contestId": 349, "index": "B", "solvedCount": 8046}, {"contestId": 349, "index": "A", "solvedCount": 15361}, {"contestId": 348, "index": "E", "solvedCount": 268}, {"contestId": 348, "index": "D", "solvedCount": 592}, {"contestId": 348, "index": "C", "solvedCount": 1081}, {"contestId": 348, "index": "B", "solvedCount": 1512}, {"contestId": 348, "index": "A", "solvedCount": 7733}, {"contestId": 347, "index": "B", "solvedCount": 6264}, {"contestId": 347, "index": "A", "solvedCount": 5537}, {"contestId": 346, "index": "E", "solvedCount": 142}, {"contestId": 346, "index": "D", "solvedCount": 437}, {"contestId": 346, "index": "C", "solvedCount": 1146}, {"contestId": 346, "index": "B", "solvedCount": 2130}, {"contestId": 346, "index": "A", "solvedCount": 5631}, {"contestId": 345, "index": "G", "solvedCount": 38}, {"contestId": 345, "index": "F", "solvedCount": 34}, {"contestId": 345, "index": "E", "solvedCount": 33}, {"contestId": 345, "index": "D", "solvedCount": 67}, {"contestId": 345, "index": "C", "solvedCount": 110}, {"contestId": 345, "index": "B", "solvedCount": 112}, {"contestId": 345, "index": "A", "solvedCount": 366}, {"contestId": 344, "index": "B", "solvedCount": 5799}, {"contestId": 344, "index": "A", "solvedCount": 37908}, {"contestId": 343, "index": "E", "solvedCount": 295}, {"contestId": 343, "index": "D", "solvedCount": 2540}, {"contestId": 343, "index": "C", "solvedCount": 2015}, {"contestId": 343, "index": "B", "solvedCount": 6172}, {"contestId": 343, "index": "A", "solvedCount": 5767}, {"contestId": 342, "index": "E", "solvedCount": 3599}, {"contestId": 342, "index": "D", "solvedCount": 369}, {"contestId": 342, "index": "C", "solvedCount": 1511}, {"contestId": 342, "index": "B", "solvedCount": 2920}, {"contestId": 342, "index": "A", "solvedCount": 6423}, {"contestId": 341, "index": "E", "solvedCount": 219}, {"contestId": 341, "index": "D", "solvedCount": 656}, {"contestId": 340, "index": "E", "solvedCount": 1638}, {"contestId": 340, "index": "D", "solvedCount": 4566}, {"contestId": 340, "index": "C", "solvedCount": 2984}, {"contestId": 340, "index": "B", "solvedCount": 1528}, {"contestId": 340, "index": "A", "solvedCount": 5687}, {"contestId": 339, "index": "E", "solvedCount": 424}, {"contestId": 339, "index": "D", "solvedCount": 11482}, {"contestId": 339, "index": "C", "solvedCount": 5637}, {"contestId": 339, "index": "B", "solvedCount": 28506}, {"contestId": 339, "index": "A", "solvedCount": 63558}, {"contestId": 338, "index": "E", "solvedCount": 531}, {"contestId": 338, "index": "D", "solvedCount": 500}, {"contestId": 337, "index": "E", "solvedCount": 797}, {"contestId": 337, "index": "D", "solvedCount": 3257}, {"contestId": 337, "index": "C", "solvedCount": 3655}, {"contestId": 337, "index": "B", "solvedCount": 5163}, {"contestId": 337, "index": "A", "solvedCount": 36156}, {"contestId": 336, "index": "E", "solvedCount": 80}, {"contestId": 336, "index": "D", "solvedCount": 683}, {"contestId": 336, "index": "C", "solvedCount": 1868}, {"contestId": 336, "index": "B", "solvedCount": 1058}, {"contestId": 336, "index": "A", "solvedCount": 6328}, {"contestId": 335, "index": "F", "solvedCount": 148}, {"contestId": 335, "index": "E", "solvedCount": 129}, {"contestId": 335, "index": "D", "solvedCount": 217}, {"contestId": 335, "index": "C", "solvedCount": 388}, {"contestId": 335, "index": "B", "solvedCount": 1179}, {"contestId": 335, "index": "A", "solvedCount": 1378}, {"contestId": 334, "index": "B", "solvedCount": 2854}, {"contestId": 334, "index": "A", "solvedCount": 11148}, {"contestId": 333, "index": "E", "solvedCount": 525}, {"contestId": 333, "index": "D", "solvedCount": 1356}, {"contestId": 333, "index": "C", "solvedCount": 279}, {"contestId": 333, "index": "B", "solvedCount": 2184}, {"contestId": 333, "index": "A", "solvedCount": 3337}, {"contestId": 332, "index": "E", "solvedCount": 226}, {"contestId": 332, "index": "D", "solvedCount": 293}, {"contestId": 332, "index": "C", "solvedCount": 686}, {"contestId": 332, "index": "B", "solvedCount": 5133}, {"contestId": 332, "index": "A", "solvedCount": 3048}, {"contestId": 331, "index": "E2", "solvedCount": 78}, {"contestId": 331, "index": "E1", "solvedCount": 66}, {"contestId": 331, "index": "D3", "solvedCount": 114}, {"contestId": 331, "index": "D2", "solvedCount": 93}, {"contestId": 331, "index": "D1", "solvedCount": 146}, {"contestId": 331, "index": "C3", "solvedCount": 306}, {"contestId": 331, "index": "C2", "solvedCount": 246}, {"contestId": 331, "index": "C1", "solvedCount": 2860}, {"contestId": 331, "index": "B2", "solvedCount": 537}, {"contestId": 331, "index": "B1", "solvedCount": 639}, {"contestId": 331, "index": "A2", "solvedCount": 1078}, {"contestId": 331, "index": "A1", "solvedCount": 1069}, {"contestId": 330, "index": "B", "solvedCount": 9249}, {"contestId": 330, "index": "A", "solvedCount": 14281}, {"contestId": 329, "index": "E", "solvedCount": 105}, {"contestId": 329, "index": "D", "solvedCount": 293}, {"contestId": 329, "index": "C", "solvedCount": 670}, {"contestId": 329, "index": "B", "solvedCount": 3876}, {"contestId": 329, "index": "A", "solvedCount": 3659}, {"contestId": 328, "index": "B", "solvedCount": 716}, {"contestId": 328, "index": "A", "solvedCount": 981}, {"contestId": 327, "index": "E", "solvedCount": 810}, {"contestId": 327, "index": "D", "solvedCount": 1697}, {"contestId": 327, "index": "C", "solvedCount": 2340}, {"contestId": 327, "index": "B", "solvedCount": 9652}, {"contestId": 327, "index": "A", "solvedCount": 20276}, {"contestId": 325, "index": "E", "solvedCount": 324}, {"contestId": 325, "index": "D", "solvedCount": 263}, {"contestId": 325, "index": "C", "solvedCount": 229}, {"contestId": 325, "index": "B", "solvedCount": 976}, {"contestId": 325, "index": "A", "solvedCount": 1529}, {"contestId": 323, "index": "C", "solvedCount": 299}, {"contestId": 323, "index": "B", "solvedCount": 257}, {"contestId": 323, "index": "A", "solvedCount": 456}, {"contestId": 322, "index": "B", "solvedCount": 6881}, {"contestId": 322, "index": "A", "solvedCount": 5897}, {"contestId": 321, "index": "E", "solvedCount": 1936}, {"contestId": 321, "index": "D", "solvedCount": 257}, {"contestId": 321, "index": "C", "solvedCount": 3258}, {"contestId": 321, "index": "B", "solvedCount": 1923}, {"contestId": 321, "index": "A", "solvedCount": 2920}, {"contestId": 320, "index": "B", "solvedCount": 4560}, {"contestId": 320, "index": "A", "solvedCount": 14395}, {"contestId": 319, "index": "E", "solvedCount": 258}, {"contestId": 319, "index": "D", "solvedCount": 310}, {"contestId": 319, "index": "C", "solvedCount": 2529}, {"contestId": 319, "index": "B", "solvedCount": 2772}, {"contestId": 319, "index": "A", "solvedCount": 2187}, {"contestId": 318, "index": "B", "solvedCount": 5217}, {"contestId": 318, "index": "A", "solvedCount": 37575}, {"contestId": 317, "index": "E", "solvedCount": 99}, {"contestId": 317, "index": "D", "solvedCount": 726}, {"contestId": 317, "index": "C", "solvedCount": 345}, {"contestId": 317, "index": "B", "solvedCount": 1380}, {"contestId": 317, "index": "A", "solvedCount": 3636}, {"contestId": 316, "index": "G3", "solvedCount": 301}, {"contestId": 316, "index": "G2", "solvedCount": 350}, {"contestId": 316, "index": "G1", "solvedCount": 765}, {"contestId": 316, "index": "F3", "solvedCount": 137}, {"contestId": 316, "index": "F2", "solvedCount": 131}, {"contestId": 316, "index": "F1", "solvedCount": 143}, {"contestId": 316, "index": "E3", "solvedCount": 409}, {"contestId": 316, "index": "E2", "solvedCount": 318}, {"contestId": 316, "index": "E1", "solvedCount": 1250}, {"contestId": 316, "index": "D3", "solvedCount": 305}, {"contestId": 316, "index": "D2", "solvedCount": 270}, {"contestId": 316, "index": "D1", "solvedCount": 295}, {"contestId": 316, "index": "C2", "solvedCount": 445}, {"contestId": 316, "index": "C1", "solvedCount": 438}, {"contestId": 316, "index": "B2", "solvedCount": 1326}, {"contestId": 316, "index": "B1", "solvedCount": 1221}, {"contestId": 316, "index": "A2", "solvedCount": 1806}, {"contestId": 316, "index": "A1", "solvedCount": 2103}, {"contestId": 315, "index": "B", "solvedCount": 4602}, {"contestId": 315, "index": "A", "solvedCount": 5393}, {"contestId": 314, "index": "E", "solvedCount": 221}, {"contestId": 314, "index": "D", "solvedCount": 405}, {"contestId": 314, "index": "C", "solvedCount": 1388}, {"contestId": 314, "index": "B", "solvedCount": 1193}, {"contestId": 314, "index": "A", "solvedCount": 1732}, {"contestId": 313, "index": "E", "solvedCount": 403}, {"contestId": 313, "index": "D", "solvedCount": 1015}, {"contestId": 313, "index": "C", "solvedCount": 3917}, {"contestId": 313, "index": "B", "solvedCount": 19462}, {"contestId": 313, "index": "A", "solvedCount": 23241}, {"contestId": 312, "index": "B", "solvedCount": 6040}, {"contestId": 312, "index": "A", "solvedCount": 3692}, {"contestId": 311, "index": "E", "solvedCount": 396}, {"contestId": 311, "index": "D", "solvedCount": 469}, {"contestId": 311, "index": "C", "solvedCount": 318}, {"contestId": 311, "index": "B", "solvedCount": 1248}, {"contestId": 311, "index": "A", "solvedCount": 3219}, {"contestId": 309, "index": "E", "solvedCount": 96}, {"contestId": 309, "index": "D", "solvedCount": 144}, {"contestId": 309, "index": "C", "solvedCount": 691}, {"contestId": 309, "index": "B", "solvedCount": 345}, {"contestId": 309, "index": "A", "solvedCount": 357}, {"contestId": 306, "index": "D", "solvedCount": 169}, {"contestId": 306, "index": "C", "solvedCount": 296}, {"contestId": 306, "index": "B", "solvedCount": 305}, {"contestId": 306, "index": "A", "solvedCount": 2173}, {"contestId": 305, "index": "E", "solvedCount": 447}, {"contestId": 305, "index": "D", "solvedCount": 383}, {"contestId": 305, "index": "C", "solvedCount": 1879}, {"contestId": 305, "index": "B", "solvedCount": 1692}, {"contestId": 305, "index": "A", "solvedCount": 3000}, {"contestId": 304, "index": "B", "solvedCount": 2222}, {"contestId": 304, "index": "A", "solvedCount": 5468}, {"contestId": 303, "index": "E", "solvedCount": 153}, {"contestId": 303, "index": "D", "solvedCount": 188}, {"contestId": 303, "index": "C", "solvedCount": 646}, {"contestId": 303, "index": "B", "solvedCount": 1152}, {"contestId": 303, "index": "A", "solvedCount": 4316}, {"contestId": 302, "index": "B", "solvedCount": 4328}, {"contestId": 302, "index": "A", "solvedCount": 5375}, {"contestId": 301, "index": "E", "solvedCount": 222}, {"contestId": 301, "index": "D", "solvedCount": 1282}, {"contestId": 301, "index": "C", "solvedCount": 345}, {"contestId": 301, "index": "B", "solvedCount": 1683}, {"contestId": 301, "index": "A", "solvedCount": 2329}, {"contestId": 300, "index": "E", "solvedCount": 702}, {"contestId": 300, "index": "D", "solvedCount": 540}, {"contestId": 300, "index": "C", "solvedCount": 4290}, {"contestId": 300, "index": "B", "solvedCount": 3872}, {"contestId": 300, "index": "A", "solvedCount": 10570}, {"contestId": 299, "index": "B", "solvedCount": 2582}, {"contestId": 299, "index": "A", "solvedCount": 4009}, {"contestId": 298, "index": "B", "solvedCount": 6185}, {"contestId": 298, "index": "A", "solvedCount": 5302}, {"contestId": 297, "index": "E", "solvedCount": 176}, {"contestId": 297, "index": "D", "solvedCount": 340}, {"contestId": 297, "index": "C", "solvedCount": 723}, {"contestId": 297, "index": "B", "solvedCount": 2672}, {"contestId": 297, "index": "A", "solvedCount": 2881}, {"contestId": 296, "index": "B", "solvedCount": 919}, {"contestId": 296, "index": "A", "solvedCount": 9114}, {"contestId": 295, "index": "E", "solvedCount": 427}, {"contestId": 295, "index": "D", "solvedCount": 420}, {"contestId": 295, "index": "C", "solvedCount": 1279}, {"contestId": 295, "index": "B", "solvedCount": 6021}, {"contestId": 295, "index": "A", "solvedCount": 7469}, {"contestId": 294, "index": "E", "solvedCount": 599}, {"contestId": 294, "index": "D", "solvedCount": 228}, {"contestId": 294, "index": "C", "solvedCount": 2278}, {"contestId": 294, "index": "B", "solvedCount": 2838}, {"contestId": 294, "index": "A", "solvedCount": 9897}, {"contestId": 293, "index": "E", "solvedCount": 632}, {"contestId": 293, "index": "D", "solvedCount": 185}, {"contestId": 293, "index": "C", "solvedCount": 452}, {"contestId": 293, "index": "B", "solvedCount": 487}, {"contestId": 293, "index": "A", "solvedCount": 1874}, {"contestId": 292, "index": "E", "solvedCount": 2447}, {"contestId": 292, "index": "D", "solvedCount": 1588}, {"contestId": 292, "index": "C", "solvedCount": 804}, {"contestId": 292, "index": "B", "solvedCount": 4138}, {"contestId": 292, "index": "A", "solvedCount": 2181}, {"contestId": 291, "index": "E", "solvedCount": 978}, {"contestId": 291, "index": "D", "solvedCount": 1387}, {"contestId": 291, "index": "C", "solvedCount": 1572}, {"contestId": 291, "index": "B", "solvedCount": 2675}, {"contestId": 291, "index": "A", "solvedCount": 4459}, {"contestId": 290, "index": "F", "solvedCount": 75}, {"contestId": 290, "index": "E", "solvedCount": 127}, {"contestId": 290, "index": "D", "solvedCount": 1514}, {"contestId": 290, "index": "C", "solvedCount": 1103}, {"contestId": 290, "index": "B", "solvedCount": 1964}, {"contestId": 290, "index": "A", "solvedCount": 2420}, {"contestId": 289, "index": "B", "solvedCount": 8457}, {"contestId": 289, "index": "A", "solvedCount": 4466}, {"contestId": 288, "index": "E", "solvedCount": 178}, {"contestId": 288, "index": "D", "solvedCount": 526}, {"contestId": 288, "index": "C", "solvedCount": 1715}, {"contestId": 288, "index": "B", "solvedCount": 2132}, {"contestId": 288, "index": "A", "solvedCount": 5113}, {"contestId": 287, "index": "B", "solvedCount": 3460}, {"contestId": 287, "index": "A", "solvedCount": 8483}, {"contestId": 286, "index": "E", "solvedCount": 532}, {"contestId": 286, "index": "D", "solvedCount": 273}, {"contestId": 286, "index": "C", "solvedCount": 1082}, {"contestId": 286, "index": "B", "solvedCount": 917}, {"contestId": 286, "index": "A", "solvedCount": 2520}, {"contestId": 285, "index": "E", "solvedCount": 438}, {"contestId": 285, "index": "D", "solvedCount": 1228}, {"contestId": 285, "index": "C", "solvedCount": 11831}, {"contestId": 285, "index": "B", "solvedCount": 8414}, {"contestId": 285, "index": "A", "solvedCount": 8157}, {"contestId": 284, "index": "B", "solvedCount": 4554}, {"contestId": 284, "index": "A", "solvedCount": 4322}, {"contestId": 283, "index": "E", "solvedCount": 399}, {"contestId": 283, "index": "D", "solvedCount": 378}, {"contestId": 283, "index": "C", "solvedCount": 980}, {"contestId": 283, "index": "B", "solvedCount": 2797}, {"contestId": 283, "index": "A", "solvedCount": 4784}, {"contestId": 282, "index": "E", "solvedCount": 1923}, {"contestId": 282, "index": "D", "solvedCount": 1006}, {"contestId": 282, "index": "C", "solvedCount": 5673}, {"contestId": 282, "index": "B", "solvedCount": 6743}, {"contestId": 282, "index": "A", "solvedCount": 69271}, {"contestId": 281, "index": "B", "solvedCount": 2189}, {"contestId": 281, "index": "A", "solvedCount": 61345}, {"contestId": 280, "index": "E", "solvedCount": 107}, {"contestId": 280, "index": "D", "solvedCount": 491}, {"contestId": 280, "index": "C", "solvedCount": 1539}, {"contestId": 280, "index": "B", "solvedCount": 2801}, {"contestId": 280, "index": "A", "solvedCount": 1185}, {"contestId": 279, "index": "E", "solvedCount": 1052}, {"contestId": 279, "index": "D", "solvedCount": 510}, {"contestId": 279, "index": "C", "solvedCount": 5277}, {"contestId": 279, "index": "B", "solvedCount": 16571}, {"contestId": 279, "index": "A", "solvedCount": 3930}, {"contestId": 278, "index": "B", "solvedCount": 2782}, {"contestId": 278, "index": "A", "solvedCount": 7827}, {"contestId": 277, "index": "E", "solvedCount": 666}, {"contestId": 277, "index": "D", "solvedCount": 211}, {"contestId": 277, "index": "C", "solvedCount": 392}, {"contestId": 277, "index": "B", "solvedCount": 620}, {"contestId": 277, "index": "A", "solvedCount": 10099}, {"contestId": 276, "index": "E", "solvedCount": 1025}, {"contestId": 276, "index": "D", "solvedCount": 6715}, {"contestId": 276, "index": "C", "solvedCount": 10283}, {"contestId": 276, "index": "B", "solvedCount": 11629}, {"contestId": 276, "index": "A", "solvedCount": 13621}, {"contestId": 275, "index": "B", "solvedCount": 2001}, {"contestId": 275, "index": "A", "solvedCount": 10716}, {"contestId": 274, "index": "E", "solvedCount": 174}, {"contestId": 274, "index": "D", "solvedCount": 784}, {"contestId": 274, "index": "C", "solvedCount": 279}, {"contestId": 274, "index": "B", "solvedCount": 3211}, {"contestId": 274, "index": "A", "solvedCount": 6022}, {"contestId": 273, "index": "E", "solvedCount": 190}, {"contestId": 273, "index": "D", "solvedCount": 288}, {"contestId": 272, "index": "E", "solvedCount": 864}, {"contestId": 272, "index": "D", "solvedCount": 2025}, {"contestId": 272, "index": "C", "solvedCount": 4748}, {"contestId": 272, "index": "B", "solvedCount": 3106}, {"contestId": 272, "index": "A", "solvedCount": 9683}, {"contestId": 271, "index": "E", "solvedCount": 377}, {"contestId": 271, "index": "D", "solvedCount": 4895}, {"contestId": 271, "index": "C", "solvedCount": 2346}, {"contestId": 271, "index": "B", "solvedCount": 6807}, {"contestId": 271, "index": "A", "solvedCount": 40901}, {"contestId": 270, "index": "B", "solvedCount": 3354}, {"contestId": 270, "index": "A", "solvedCount": 21608}, {"contestId": 269, "index": "E", "solvedCount": 58}, {"contestId": 269, "index": "D", "solvedCount": 326}, {"contestId": 269, "index": "C", "solvedCount": 1285}, {"contestId": 269, "index": "B", "solvedCount": 4149}, {"contestId": 269, "index": "A", "solvedCount": 2767}, {"contestId": 268, "index": "E", "solvedCount": 775}, {"contestId": 268, "index": "D", "solvedCount": 351}, {"contestId": 268, "index": "C", "solvedCount": 8475}, {"contestId": 268, "index": "B", "solvedCount": 18049}, {"contestId": 268, "index": "A", "solvedCount": 30493}, {"contestId": 267, "index": "C", "solvedCount": 111}, {"contestId": 267, "index": "B", "solvedCount": 424}, {"contestId": 267, "index": "A", "solvedCount": 3175}, {"contestId": 266, "index": "E", "solvedCount": 464}, {"contestId": 266, "index": "D", "solvedCount": 441}, {"contestId": 266, "index": "C", "solvedCount": 1134}, {"contestId": 266, "index": "B", "solvedCount": 44601}, {"contestId": 266, "index": "A", "solvedCount": 58318}, {"contestId": 265, "index": "B", "solvedCount": 9556}, {"contestId": 265, "index": "A", "solvedCount": 13249}, {"contestId": 264, "index": "E", "solvedCount": 231}, {"contestId": 264, "index": "D", "solvedCount": 299}, {"contestId": 264, "index": "C", "solvedCount": 1890}, {"contestId": 264, "index": "B", "solvedCount": 5875}, {"contestId": 264, "index": "A", "solvedCount": 7226}, {"contestId": 263, "index": "E", "solvedCount": 279}, {"contestId": 263, "index": "D", "solvedCount": 2031}, {"contestId": 263, "index": "C", "solvedCount": 917}, {"contestId": 263, "index": "B", "solvedCount": 6171}, {"contestId": 263, "index": "A", "solvedCount": 66243}, {"contestId": 262, "index": "B", "solvedCount": 5691}, {"contestId": 262, "index": "A", "solvedCount": 10465}, {"contestId": 261, "index": "E", "solvedCount": 295}, {"contestId": 261, "index": "D", "solvedCount": 364}, {"contestId": 261, "index": "C", "solvedCount": 634}, {"contestId": 261, "index": "B", "solvedCount": 1092}, {"contestId": 261, "index": "A", "solvedCount": 3695}, {"contestId": 260, "index": "E", "solvedCount": 333}, {"contestId": 260, "index": "D", "solvedCount": 947}, {"contestId": 260, "index": "C", "solvedCount": 2097}, {"contestId": 260, "index": "B", "solvedCount": 2712}, {"contestId": 260, "index": "A", "solvedCount": 6421}, {"contestId": 259, "index": "B", "solvedCount": 7925}, {"contestId": 259, "index": "A", "solvedCount": 6191}, {"contestId": 258, "index": "E", "solvedCount": 615}, {"contestId": 258, "index": "D", "solvedCount": 655}, {"contestId": 258, "index": "C", "solvedCount": 1246}, {"contestId": 258, "index": "B", "solvedCount": 1175}, {"contestId": 258, "index": "A", "solvedCount": 11662}, {"contestId": 257, "index": "E", "solvedCount": 209}, {"contestId": 257, "index": "D", "solvedCount": 1268}, {"contestId": 257, "index": "C", "solvedCount": 2985}, {"contestId": 257, "index": "B", "solvedCount": 4124}, {"contestId": 257, "index": "A", "solvedCount": 4392}, {"contestId": 256, "index": "E", "solvedCount": 451}, {"contestId": 256, "index": "D", "solvedCount": 209}, {"contestId": 255, "index": "E", "solvedCount": 704}, {"contestId": 255, "index": "D", "solvedCount": 1379}, {"contestId": 255, "index": "C", "solvedCount": 3169}, {"contestId": 255, "index": "B", "solvedCount": 3584}, {"contestId": 255, "index": "A", "solvedCount": 14404}, {"contestId": 254, "index": "E", "solvedCount": 339}, {"contestId": 254, "index": "D", "solvedCount": 326}, {"contestId": 254, "index": "C", "solvedCount": 1094}, {"contestId": 254, "index": "B", "solvedCount": 1717}, {"contestId": 254, "index": "A", "solvedCount": 3797}, {"contestId": 253, "index": "E", "solvedCount": 415}, {"contestId": 253, "index": "D", "solvedCount": 611}, {"contestId": 253, "index": "C", "solvedCount": 1684}, {"contestId": 253, "index": "B", "solvedCount": 5798}, {"contestId": 253, "index": "A", "solvedCount": 5919}, {"contestId": 252, "index": "B", "solvedCount": 1349}, {"contestId": 252, "index": "A", "solvedCount": 3471}, {"contestId": 251, "index": "E", "solvedCount": 85}, {"contestId": 251, "index": "D", "solvedCount": 298}, {"contestId": 251, "index": "C", "solvedCount": 844}, {"contestId": 251, "index": "B", "solvedCount": 1066}, {"contestId": 251, "index": "A", "solvedCount": 7989}, {"contestId": 250, "index": "E", "solvedCount": 354}, {"contestId": 250, "index": "D", "solvedCount": 677}, {"contestId": 250, "index": "C", "solvedCount": 1415}, {"contestId": 250, "index": "B", "solvedCount": 1439}, {"contestId": 250, "index": "A", "solvedCount": 2400}, {"contestId": 249, "index": "E", "solvedCount": 169}, {"contestId": 249, "index": "D", "solvedCount": 223}, {"contestId": 248, "index": "E", "solvedCount": 291}, {"contestId": 248, "index": "D", "solvedCount": 360}, {"contestId": 248, "index": "C", "solvedCount": 653}, {"contestId": 248, "index": "B", "solvedCount": 3428}, {"contestId": 248, "index": "A", "solvedCount": 8893}, {"contestId": 246, "index": "E", "solvedCount": 1060}, {"contestId": 246, "index": "D", "solvedCount": 5952}, {"contestId": 246, "index": "C", "solvedCount": 2081}, {"contestId": 246, "index": "B", "solvedCount": 5892}, {"contestId": 246, "index": "A", "solvedCount": 6153}, {"contestId": 245, "index": "H", "solvedCount": 2713}, {"contestId": 245, "index": "G", "solvedCount": 372}, {"contestId": 245, "index": "F", "solvedCount": 658}, {"contestId": 245, "index": "E", "solvedCount": 2430}, {"contestId": 245, "index": "D", "solvedCount": 1604}, {"contestId": 245, "index": "C", "solvedCount": 1264}, {"contestId": 245, "index": "B", "solvedCount": 3998}, {"contestId": 245, "index": "A", "solvedCount": 5829}, {"contestId": 244, "index": "B", "solvedCount": 2923}, {"contestId": 244, "index": "A", "solvedCount": 5140}, {"contestId": 243, "index": "E", "solvedCount": 102}, {"contestId": 243, "index": "D", "solvedCount": 142}, {"contestId": 243, "index": "C", "solvedCount": 406}, {"contestId": 243, "index": "B", "solvedCount": 945}, {"contestId": 243, "index": "A", "solvedCount": 2650}, {"contestId": 242, "index": "E", "solvedCount": 3491}, {"contestId": 242, "index": "D", "solvedCount": 1267}, {"contestId": 242, "index": "C", "solvedCount": 3818}, {"contestId": 242, "index": "B", "solvedCount": 7911}, {"contestId": 242, "index": "A", "solvedCount": 4748}, {"contestId": 241, "index": "G", "solvedCount": 483}, {"contestId": 241, "index": "F", "solvedCount": 227}, {"contestId": 241, "index": "E", "solvedCount": 482}, {"contestId": 241, "index": "D", "solvedCount": 157}, {"contestId": 241, "index": "C", "solvedCount": 450}, {"contestId": 241, "index": "B", "solvedCount": 294}, {"contestId": 241, "index": "A", "solvedCount": 1932}, {"contestId": 240, "index": "F", "solvedCount": 647}, {"contestId": 240, "index": "E", "solvedCount": 249}, {"contestId": 239, "index": "B", "solvedCount": 1140}, {"contestId": 239, "index": "A", "solvedCount": 8859}, {"contestId": 238, "index": "E", "solvedCount": 247}, {"contestId": 238, "index": "D", "solvedCount": 166}, {"contestId": 238, "index": "C", "solvedCount": 791}, {"contestId": 238, "index": "B", "solvedCount": 977}, {"contestId": 238, "index": "A", "solvedCount": 1661}, {"contestId": 237, "index": "E", "solvedCount": 1059}, {"contestId": 237, "index": "D", "solvedCount": 427}, {"contestId": 237, "index": "C", "solvedCount": 3526}, {"contestId": 237, "index": "B", "solvedCount": 1965}, {"contestId": 237, "index": "A", "solvedCount": 14454}, {"contestId": 236, "index": "B", "solvedCount": 6080}, {"contestId": 236, "index": "A", "solvedCount": 55776}, {"contestId": 235, "index": "E", "solvedCount": 463}, {"contestId": 235, "index": "D", "solvedCount": 263}, {"contestId": 235, "index": "C", "solvedCount": 855}, {"contestId": 235, "index": "B", "solvedCount": 1685}, {"contestId": 235, "index": "A", "solvedCount": 8644}, {"contestId": 234, "index": "H", "solvedCount": 487}, {"contestId": 234, "index": "G", "solvedCount": 1098}, {"contestId": 234, "index": "F", "solvedCount": 1291}, {"contestId": 234, "index": "E", "solvedCount": 823}, {"contestId": 234, "index": "D", "solvedCount": 1345}, {"contestId": 234, "index": "C", "solvedCount": 3615}, {"contestId": 234, "index": "B", "solvedCount": 4124}, {"contestId": 234, "index": "A", "solvedCount": 3053}, {"contestId": 233, "index": "B", "solvedCount": 4346}, {"contestId": 233, "index": "A", "solvedCount": 15015}, {"contestId": 232, "index": "E", "solvedCount": 266}, {"contestId": 232, "index": "D", "solvedCount": 286}, {"contestId": 232, "index": "C", "solvedCount": 169}, {"contestId": 232, "index": "B", "solvedCount": 1032}, {"contestId": 232, "index": "A", "solvedCount": 1840}, {"contestId": 231, "index": "E", "solvedCount": 851}, {"contestId": 231, "index": "D", "solvedCount": 3232}, {"contestId": 231, "index": "C", "solvedCount": 4597}, {"contestId": 231, "index": "B", "solvedCount": 2573}, {"contestId": 231, "index": "A", "solvedCount": 81474}, {"contestId": 230, "index": "B", "solvedCount": 26695}, {"contestId": 230, "index": "A", "solvedCount": 28545}, {"contestId": 229, "index": "E", "solvedCount": 344}, {"contestId": 229, "index": "D", "solvedCount": 1139}, {"contestId": 229, "index": "C", "solvedCount": 1286}, {"contestId": 229, "index": "B", "solvedCount": 2738}, {"contestId": 229, "index": "A", "solvedCount": 2828}, {"contestId": 228, "index": "E", "solvedCount": 1490}, {"contestId": 228, "index": "D", "solvedCount": 304}, {"contestId": 228, "index": "C", "solvedCount": 375}, {"contestId": 228, "index": "B", "solvedCount": 2662}, {"contestId": 228, "index": "A", "solvedCount": 31717}, {"contestId": 227, "index": "B", "solvedCount": 8888}, {"contestId": 227, "index": "A", "solvedCount": 2981}, {"contestId": 226, "index": "E", "solvedCount": 303}, {"contestId": 226, "index": "D", "solvedCount": 741}, {"contestId": 226, "index": "C", "solvedCount": 594}, {"contestId": 226, "index": "B", "solvedCount": 1216}, {"contestId": 226, "index": "A", "solvedCount": 2720}, {"contestId": 225, "index": "E", "solvedCount": 556}, {"contestId": 225, "index": "D", "solvedCount": 690}, {"contestId": 225, "index": "C", "solvedCount": 5345}, {"contestId": 225, "index": "B", "solvedCount": 2359}, {"contestId": 225, "index": "A", "solvedCount": 5178}, {"contestId": 224, "index": "B", "solvedCount": 4381}, {"contestId": 224, "index": "A", "solvedCount": 10767}, {"contestId": 223, "index": "E", "solvedCount": 101}, {"contestId": 223, "index": "D", "solvedCount": 41}, {"contestId": 223, "index": "C", "solvedCount": 1067}, {"contestId": 223, "index": "B", "solvedCount": 1148}, {"contestId": 223, "index": "A", "solvedCount": 1820}, {"contestId": 222, "index": "E", "solvedCount": 1379}, {"contestId": 222, "index": "D", "solvedCount": 1682}, {"contestId": 222, "index": "C", "solvedCount": 1352}, {"contestId": 222, "index": "B", "solvedCount": 4010}, {"contestId": 222, "index": "A", "solvedCount": 5541}, {"contestId": 221, "index": "B", "solvedCount": 3314}, {"contestId": 221, "index": "A", "solvedCount": 7410}, {"contestId": 220, "index": "E", "solvedCount": 807}, {"contestId": 220, "index": "D", "solvedCount": 228}, {"contestId": 220, "index": "C", "solvedCount": 770}, {"contestId": 220, "index": "B", "solvedCount": 4537}, {"contestId": 220, "index": "A", "solvedCount": 7541}, {"contestId": 219, "index": "E", "solvedCount": 509}, {"contestId": 219, "index": "D", "solvedCount": 4150}, {"contestId": 219, "index": "C", "solvedCount": 4390}, {"contestId": 219, "index": "B", "solvedCount": 3419}, {"contestId": 219, "index": "A", "solvedCount": 11250}, {"contestId": 218, "index": "B", "solvedCount": 6971}, {"contestId": 218, "index": "A", "solvedCount": 4051}, {"contestId": 217, "index": "E", "solvedCount": 212}, {"contestId": 217, "index": "D", "solvedCount": 205}, {"contestId": 217, "index": "C", "solvedCount": 252}, {"contestId": 217, "index": "B", "solvedCount": 703}, {"contestId": 217, "index": "A", "solvedCount": 11422}, {"contestId": 216, "index": "E", "solvedCount": 431}, {"contestId": 216, "index": "D", "solvedCount": 880}, {"contestId": 216, "index": "C", "solvedCount": 1296}, {"contestId": 216, "index": "B", "solvedCount": 3275}, {"contestId": 216, "index": "A", "solvedCount": 3692}, {"contestId": 215, "index": "E", "solvedCount": 389}, {"contestId": 215, "index": "D", "solvedCount": 1197}, {"contestId": 215, "index": "C", "solvedCount": 391}, {"contestId": 215, "index": "B", "solvedCount": 3159}, {"contestId": 215, "index": "A", "solvedCount": 6399}, {"contestId": 214, "index": "B", "solvedCount": 3251}, {"contestId": 214, "index": "A", "solvedCount": 14641}, {"contestId": 213, "index": "E", "solvedCount": 397}, {"contestId": 213, "index": "D", "solvedCount": 276}, {"contestId": 213, "index": "C", "solvedCount": 1338}, {"contestId": 213, "index": "B", "solvedCount": 1279}, {"contestId": 213, "index": "A", "solvedCount": 1392}, {"contestId": 212, "index": "E", "solvedCount": 765}, {"contestId": 212, "index": "D", "solvedCount": 301}, {"contestId": 212, "index": "C", "solvedCount": 304}, {"contestId": 212, "index": "B", "solvedCount": 284}, {"contestId": 212, "index": "A", "solvedCount": 95}, {"contestId": 209, "index": "C", "solvedCount": 409}, {"contestId": 209, "index": "B", "solvedCount": 227}, {"contestId": 209, "index": "A", "solvedCount": 885}, {"contestId": 208, "index": "E", "solvedCount": 2382}, {"contestId": 208, "index": "D", "solvedCount": 5797}, {"contestId": 208, "index": "C", "solvedCount": 1268}, {"contestId": 208, "index": "B", "solvedCount": 1056}, {"contestId": 208, "index": "A", "solvedCount": 34764}, {"contestId": 207, "index": "D9", "solvedCount": 37}, {"contestId": 207, "index": "D8", "solvedCount": 41}, {"contestId": 207, "index": "D7", "solvedCount": 41}, {"contestId": 207, "index": "D6", "solvedCount": 40}, {"contestId": 207, "index": "D5", "solvedCount": 41}, {"contestId": 207, "index": "D4", "solvedCount": 40}, {"contestId": 207, "index": "D3", "solvedCount": 47}, {"contestId": 207, "index": "D2", "solvedCount": 55}, {"contestId": 207, "index": "D10", "solvedCount": 39}, {"contestId": 207, "index": "D1", "solvedCount": 64}, {"contestId": 207, "index": "C3", "solvedCount": 37}, {"contestId": 207, "index": "C2", "solvedCount": 40}, {"contestId": 207, "index": "C1", "solvedCount": 51}, {"contestId": 207, "index": "B3", "solvedCount": 114}, {"contestId": 207, "index": "B2", "solvedCount": 121}, {"contestId": 207, "index": "B1", "solvedCount": 171}, {"contestId": 207, "index": "A3", "solvedCount": 170}, {"contestId": 207, "index": "A2", "solvedCount": 175}, {"contestId": 207, "index": "A1", "solvedCount": 213}, {"contestId": 205, "index": "B", "solvedCount": 3662}, {"contestId": 205, "index": "A", "solvedCount": 9097}, {"contestId": 204, "index": "E", "solvedCount": 539}, {"contestId": 204, "index": "D", "solvedCount": 298}, {"contestId": 204, "index": "C", "solvedCount": 852}, {"contestId": 204, "index": "B", "solvedCount": 3466}, {"contestId": 204, "index": "A", "solvedCount": 3757}, {"contestId": 203, "index": "E", "solvedCount": 217}, {"contestId": 203, "index": "D", "solvedCount": 1190}, {"contestId": 203, "index": "C", "solvedCount": 3551}, {"contestId": 203, "index": "B", "solvedCount": 2130}, {"contestId": 203, "index": "A", "solvedCount": 3383}, {"contestId": 202, "index": "B", "solvedCount": 715}, {"contestId": 202, "index": "A", "solvedCount": 6681}, {"contestId": 201, "index": "E", "solvedCount": 271}, {"contestId": 201, "index": "D", "solvedCount": 293}, {"contestId": 201, "index": "C", "solvedCount": 984}, {"contestId": 201, "index": "B", "solvedCount": 1009}, {"contestId": 201, "index": "A", "solvedCount": 2280}, {"contestId": 200, "index": "E", "solvedCount": 248}, {"contestId": 200, "index": "D", "solvedCount": 716}, {"contestId": 200, "index": "C", "solvedCount": 822}, {"contestId": 200, "index": "B", "solvedCount": 34356}, {"contestId": 200, "index": "A", "solvedCount": 461}, {"contestId": 199, "index": "B", "solvedCount": 573}, {"contestId": 199, "index": "A", "solvedCount": 10371}, {"contestId": 198, "index": "E", "solvedCount": 320}, {"contestId": 198, "index": "D", "solvedCount": 63}, {"contestId": 198, "index": "C", "solvedCount": 311}, {"contestId": 198, "index": "B", "solvedCount": 2437}, {"contestId": 198, "index": "A", "solvedCount": 2399}, {"contestId": 197, "index": "B", "solvedCount": 2885}, {"contestId": 197, "index": "A", "solvedCount": 3687}, {"contestId": 196, "index": "E", "solvedCount": 440}, {"contestId": 196, "index": "D", "solvedCount": 294}, {"contestId": 196, "index": "C", "solvedCount": 631}, {"contestId": 196, "index": "B", "solvedCount": 1637}, {"contestId": 196, "index": "A", "solvedCount": 3991}, {"contestId": 195, "index": "E", "solvedCount": 551}, {"contestId": 195, "index": "D", "solvedCount": 797}, {"contestId": 195, "index": "C", "solvedCount": 830}, {"contestId": 195, "index": "B", "solvedCount": 3248}, {"contestId": 195, "index": "A", "solvedCount": 4150}, {"contestId": 194, "index": "B", "solvedCount": 2429}, {"contestId": 194, "index": "A", "solvedCount": 5091}, {"contestId": 193, "index": "E", "solvedCount": 206}, {"contestId": 193, "index": "D", "solvedCount": 270}, {"contestId": 193, "index": "C", "solvedCount": 370}, {"contestId": 193, "index": "B", "solvedCount": 721}, {"contestId": 193, "index": "A", "solvedCount": 2101}, {"contestId": 192, "index": "B", "solvedCount": 3614}, {"contestId": 192, "index": "A", "solvedCount": 5796}, {"contestId": 191, "index": "E", "solvedCount": 583}, {"contestId": 191, "index": "D", "solvedCount": 172}, {"contestId": 191, "index": "C", "solvedCount": 3491}, {"contestId": 191, "index": "B", "solvedCount": 861}, {"contestId": 191, "index": "A", "solvedCount": 2340}, {"contestId": 190, "index": "E", "solvedCount": 804}, {"contestId": 190, "index": "D", "solvedCount": 1386}, {"contestId": 190, "index": "C", "solvedCount": 1717}, {"contestId": 190, "index": "B", "solvedCount": 2126}, {"contestId": 190, "index": "A", "solvedCount": 4024}, {"contestId": 189, "index": "B", "solvedCount": 2475}, {"contestId": 189, "index": "A", "solvedCount": 27170}, {"contestId": 188, "index": "H", "solvedCount": 179}, {"contestId": 188, "index": "G", "solvedCount": 167}, {"contestId": 188, "index": "F", "solvedCount": 224}, {"contestId": 188, "index": "E", "solvedCount": 254}, {"contestId": 188, "index": "D", "solvedCount": 303}, {"contestId": 188, "index": "C", "solvedCount": 311}, {"contestId": 188, "index": "B", "solvedCount": 351}, {"contestId": 188, "index": "A", "solvedCount": 451}, {"contestId": 187, "index": "E", "solvedCount": 59}, {"contestId": 187, "index": "D", "solvedCount": 249}, {"contestId": 187, "index": "C", "solvedCount": 858}, {"contestId": 187, "index": "B", "solvedCount": 1250}, {"contestId": 187, "index": "A", "solvedCount": 1979}, {"contestId": 186, "index": "B", "solvedCount": 2790}, {"contestId": 186, "index": "A", "solvedCount": 7636}, {"contestId": 185, "index": "E", "solvedCount": 68}, {"contestId": 185, "index": "D", "solvedCount": 264}, {"contestId": 185, "index": "C", "solvedCount": 75}, {"contestId": 185, "index": "B", "solvedCount": 1277}, {"contestId": 185, "index": "A", "solvedCount": 3924}, {"contestId": 183, "index": "E", "solvedCount": 87}, {"contestId": 183, "index": "D", "solvedCount": 252}, {"contestId": 183, "index": "C", "solvedCount": 408}, {"contestId": 183, "index": "B", "solvedCount": 469}, {"contestId": 183, "index": "A", "solvedCount": 402}, {"contestId": 182, "index": "E", "solvedCount": 982}, {"contestId": 182, "index": "D", "solvedCount": 5045}, {"contestId": 182, "index": "C", "solvedCount": 510}, {"contestId": 182, "index": "B", "solvedCount": 3971}, {"contestId": 182, "index": "A", "solvedCount": 225}, {"contestId": 181, "index": "B", "solvedCount": 1534}, {"contestId": 181, "index": "A", "solvedCount": 3271}, {"contestId": 180, "index": "F", "solvedCount": 1497}, {"contestId": 180, "index": "E", "solvedCount": 1106}, {"contestId": 180, "index": "D", "solvedCount": 561}, {"contestId": 180, "index": "C", "solvedCount": 3895}, {"contestId": 180, "index": "B", "solvedCount": 264}, {"contestId": 180, "index": "A", "solvedCount": 443}, {"contestId": 178, "index": "F3", "solvedCount": 199}, {"contestId": 178, "index": "F2", "solvedCount": 192}, {"contestId": 178, "index": "F1", "solvedCount": 276}, {"contestId": 178, "index": "E3", "solvedCount": 167}, {"contestId": 178, "index": "E2", "solvedCount": 194}, {"contestId": 178, "index": "E1", "solvedCount": 253}, {"contestId": 178, "index": "D3", "solvedCount": 194}, {"contestId": 178, "index": "D2", "solvedCount": 215}, {"contestId": 178, "index": "D1", "solvedCount": 509}, {"contestId": 178, "index": "C3", "solvedCount": 256}, {"contestId": 178, "index": "C2", "solvedCount": 248}, {"contestId": 178, "index": "C1", "solvedCount": 405}, {"contestId": 178, "index": "B3", "solvedCount": 683}, {"contestId": 178, "index": "B2", "solvedCount": 499}, {"contestId": 178, "index": "B1", "solvedCount": 545}, {"contestId": 178, "index": "A3", "solvedCount": 888}, {"contestId": 178, "index": "A2", "solvedCount": 966}, {"contestId": 178, "index": "A1", "solvedCount": 960}, {"contestId": 177, "index": "G2", "solvedCount": 84}, {"contestId": 177, "index": "G1", "solvedCount": 89}, {"contestId": 177, "index": "F2", "solvedCount": 131}, {"contestId": 177, "index": "F1", "solvedCount": 246}, {"contestId": 177, "index": "E2", "solvedCount": 306}, {"contestId": 177, "index": "E1", "solvedCount": 464}, {"contestId": 177, "index": "D2", "solvedCount": 1040}, {"contestId": 177, "index": "D1", "solvedCount": 1375}, {"contestId": 177, "index": "C2", "solvedCount": 1442}, {"contestId": 177, "index": "C1", "solvedCount": 1394}, {"contestId": 177, "index": "B2", "solvedCount": 1901}, {"contestId": 177, "index": "B1", "solvedCount": 2482}, {"contestId": 177, "index": "A2", "solvedCount": 4241}, {"contestId": 177, "index": "A1", "solvedCount": 4425}, {"contestId": 176, "index": "E", "solvedCount": 457}, {"contestId": 176, "index": "D", "solvedCount": 229}, {"contestId": 176, "index": "C", "solvedCount": 372}, {"contestId": 176, "index": "B", "solvedCount": 939}, {"contestId": 176, "index": "A", "solvedCount": 1032}, {"contestId": 175, "index": "F", "solvedCount": 48}, {"contestId": 175, "index": "E", "solvedCount": 202}, {"contestId": 175, "index": "D", "solvedCount": 237}, {"contestId": 175, "index": "C", "solvedCount": 934}, {"contestId": 175, "index": "B", "solvedCount": 1100}, {"contestId": 175, "index": "A", "solvedCount": 1970}, {"contestId": 174, "index": "C", "solvedCount": 708}, {"contestId": 174, "index": "B", "solvedCount": 1284}, {"contestId": 174, "index": "A", "solvedCount": 1539}, {"contestId": 173, "index": "E", "solvedCount": 361}, {"contestId": 173, "index": "D", "solvedCount": 190}, {"contestId": 173, "index": "C", "solvedCount": 757}, {"contestId": 173, "index": "B", "solvedCount": 1428}, {"contestId": 173, "index": "A", "solvedCount": 1744}, {"contestId": 172, "index": "E", "solvedCount": 242}, {"contestId": 172, "index": "D", "solvedCount": 1095}, {"contestId": 172, "index": "C", "solvedCount": 997}, {"contestId": 172, "index": "B", "solvedCount": 2005}, {"contestId": 172, "index": "A", "solvedCount": 3536}, {"contestId": 171, "index": "H", "solvedCount": 170}, {"contestId": 171, "index": "G", "solvedCount": 506}, {"contestId": 171, "index": "F", "solvedCount": 892}, {"contestId": 171, "index": "E", "solvedCount": 723}, {"contestId": 171, "index": "D", "solvedCount": 1747}, {"contestId": 171, "index": "C", "solvedCount": 613}, {"contestId": 171, "index": "B", "solvedCount": 2506}, {"contestId": 171, "index": "A", "solvedCount": 2770}, {"contestId": 169, "index": "B", "solvedCount": 2079}, {"contestId": 169, "index": "A", "solvedCount": 3539}, {"contestId": 168, "index": "B", "solvedCount": 1068}, {"contestId": 168, "index": "A", "solvedCount": 6662}, {"contestId": 167, "index": "E", "solvedCount": 266}, {"contestId": 167, "index": "D", "solvedCount": 131}, {"contestId": 167, "index": "C", "solvedCount": 448}, {"contestId": 167, "index": "B", "solvedCount": 1513}, {"contestId": 167, "index": "A", "solvedCount": 1803}, {"contestId": 166, "index": "E", "solvedCount": 10642}, {"contestId": 166, "index": "D", "solvedCount": 259}, {"contestId": 166, "index": "C", "solvedCount": 3866}, {"contestId": 166, "index": "B", "solvedCount": 1217}, {"contestId": 166, "index": "A", "solvedCount": 8485}, {"contestId": 165, "index": "E", "solvedCount": 2522}, {"contestId": 165, "index": "D", "solvedCount": 911}, {"contestId": 165, "index": "C", "solvedCount": 7378}, {"contestId": 165, "index": "B", "solvedCount": 7341}, {"contestId": 165, "index": "A", "solvedCount": 10279}, {"contestId": 164, "index": "E", "solvedCount": 44}, {"contestId": 164, "index": "D", "solvedCount": 176}, {"contestId": 164, "index": "C", "solvedCount": 585}, {"contestId": 164, "index": "B", "solvedCount": 362}, {"contestId": 164, "index": "A", "solvedCount": 728}, {"contestId": 163, "index": "E", "solvedCount": 632}, {"contestId": 163, "index": "D", "solvedCount": 290}, {"contestId": 163, "index": "C", "solvedCount": 455}, {"contestId": 163, "index": "B", "solvedCount": 811}, {"contestId": 163, "index": "A", "solvedCount": 1822}, {"contestId": 162, "index": "J", "solvedCount": 60}, {"contestId": 162, "index": "I", "solvedCount": 45}, {"contestId": 162, "index": "H", "solvedCount": 58}, {"contestId": 162, "index": "G", "solvedCount": 35}, {"contestId": 162, "index": "F", "solvedCount": 113}, {"contestId": 162, "index": "E", "solvedCount": 151}, {"contestId": 162, "index": "D", "solvedCount": 194}, {"contestId": 162, "index": "C", "solvedCount": 122}, {"contestId": 162, "index": "B", "solvedCount": 280}, {"contestId": 162, "index": "A", "solvedCount": 543}, {"contestId": 161, "index": "E", "solvedCount": 351}, {"contestId": 161, "index": "D", "solvedCount": 5836}, {"contestId": 161, "index": "C", "solvedCount": 432}, {"contestId": 161, "index": "B", "solvedCount": 1623}, {"contestId": 161, "index": "A", "solvedCount": 3483}, {"contestId": 160, "index": "E", "solvedCount": 368}, {"contestId": 160, "index": "D", "solvedCount": 1179}, {"contestId": 160, "index": "C", "solvedCount": 2476}, {"contestId": 160, "index": "B", "solvedCount": 7635}, {"contestId": 160, "index": "A", "solvedCount": 46176}, {"contestId": 159, "index": "E", "solvedCount": 852}, {"contestId": 159, "index": "D", "solvedCount": 3371}, {"contestId": 159, "index": "C", "solvedCount": 2188}, {"contestId": 159, "index": "B", "solvedCount": 2875}, {"contestId": 159, "index": "A", "solvedCount": 2098}, {"contestId": 158, "index": "E", "solvedCount": 1297}, {"contestId": 158, "index": "D", "solvedCount": 5483}, {"contestId": 158, "index": "C", "solvedCount": 6018}, {"contestId": 158, "index": "B", "solvedCount": 43436}, {"contestId": 158, "index": "A", "solvedCount": 80524}, {"contestId": 157, "index": "B", "solvedCount": 7532}, {"contestId": 157, "index": "A", "solvedCount": 5119}, {"contestId": 156, "index": "E", "solvedCount": 125}, {"contestId": 156, "index": "D", "solvedCount": 540}, {"contestId": 156, "index": "C", "solvedCount": 1480}, {"contestId": 156, "index": "B", "solvedCount": 1688}, {"contestId": 156, "index": "A", "solvedCount": 2512}, {"contestId": 155, "index": "B", "solvedCount": 5826}, {"contestId": 155, "index": "A", "solvedCount": 25124}, {"contestId": 154, "index": "E", "solvedCount": 69}, {"contestId": 154, "index": "D", "solvedCount": 345}, {"contestId": 154, "index": "C", "solvedCount": 1447}, {"contestId": 154, "index": "B", "solvedCount": 2455}, {"contestId": 154, "index": "A", "solvedCount": 2893}, {"contestId": 153, "index": "E", "solvedCount": 53}, {"contestId": 153, "index": "D", "solvedCount": 60}, {"contestId": 153, "index": "C", "solvedCount": 73}, {"contestId": 153, "index": "B", "solvedCount": 128}, {"contestId": 153, "index": "A", "solvedCount": 257}, {"contestId": 152, "index": "E", "solvedCount": 284}, {"contestId": 152, "index": "D", "solvedCount": 206}, {"contestId": 152, "index": "C", "solvedCount": 6224}, {"contestId": 152, "index": "B", "solvedCount": 3471}, {"contestId": 152, "index": "A", "solvedCount": 9064}, {"contestId": 151, "index": "B", "solvedCount": 3931}, {"contestId": 151, "index": "A", "solvedCount": 18472}, {"contestId": 150, "index": "E", "solvedCount": 286}, {"contestId": 150, "index": "D", "solvedCount": 314}, {"contestId": 150, "index": "C", "solvedCount": 503}, {"contestId": 150, "index": "B", "solvedCount": 2663}, {"contestId": 150, "index": "A", "solvedCount": 4722}, {"contestId": 149, "index": "E", "solvedCount": 1288}, {"contestId": 149, "index": "D", "solvedCount": 1292}, {"contestId": 149, "index": "C", "solvedCount": 3738}, {"contestId": 149, "index": "B", "solvedCount": 1808}, {"contestId": 149, "index": "A", "solvedCount": 17996}, {"contestId": 148, "index": "E", "solvedCount": 2160}, {"contestId": 148, "index": "D", "solvedCount": 3567}, {"contestId": 148, "index": "C", "solvedCount": 2221}, {"contestId": 148, "index": "B", "solvedCount": 3120}, {"contestId": 148, "index": "A", "solvedCount": 33948}, {"contestId": 147, "index": "B", "solvedCount": 491}, {"contestId": 147, "index": "A", "solvedCount": 2186}, {"contestId": 146, "index": "B", "solvedCount": 2963}, {"contestId": 146, "index": "A", "solvedCount": 8657}, {"contestId": 145, "index": "E", "solvedCount": 1424}, {"contestId": 145, "index": "D", "solvedCount": 188}, {"contestId": 145, "index": "C", "solvedCount": 1383}, {"contestId": 145, "index": "B", "solvedCount": 1645}, {"contestId": 145, "index": "A", "solvedCount": 5176}, {"contestId": 144, "index": "E", "solvedCount": 388}, {"contestId": 144, "index": "D", "solvedCount": 2315}, {"contestId": 144, "index": "C", "solvedCount": 2919}, {"contestId": 144, "index": "B", "solvedCount": 3111}, {"contestId": 144, "index": "A", "solvedCount": 32045}, {"contestId": 143, "index": "B", "solvedCount": 3385}, {"contestId": 143, "index": "A", "solvedCount": 6267}, {"contestId": 142, "index": "E", "solvedCount": 44}, {"contestId": 142, "index": "D", "solvedCount": 238}, {"contestId": 142, "index": "C", "solvedCount": 636}, {"contestId": 142, "index": "B", "solvedCount": 1658}, {"contestId": 142, "index": "A", "solvedCount": 2026}, {"contestId": 141, "index": "E", "solvedCount": 464}, {"contestId": 141, "index": "D", "solvedCount": 505}, {"contestId": 141, "index": "C", "solvedCount": 1716}, {"contestId": 141, "index": "B", "solvedCount": 3403}, {"contestId": 141, "index": "A", "solvedCount": 29006}, {"contestId": 140, "index": "F", "solvedCount": 307}, {"contestId": 140, "index": "E", "solvedCount": 400}, {"contestId": 140, "index": "D", "solvedCount": 1942}, {"contestId": 140, "index": "C", "solvedCount": 3010}, {"contestId": 140, "index": "B", "solvedCount": 1266}, {"contestId": 140, "index": "A", "solvedCount": 3414}, {"contestId": 139, "index": "B", "solvedCount": 1094}, {"contestId": 139, "index": "A", "solvedCount": 10211}, {"contestId": 138, "index": "E", "solvedCount": 105}, {"contestId": 138, "index": "D", "solvedCount": 330}, {"contestId": 138, "index": "C", "solvedCount": 661}, {"contestId": 138, "index": "B", "solvedCount": 782}, {"contestId": 138, "index": "A", "solvedCount": 1862}, {"contestId": 137, "index": "E", "solvedCount": 915}, {"contestId": 137, "index": "D", "solvedCount": 1156}, {"contestId": 137, "index": "C", "solvedCount": 4704}, {"contestId": 137, "index": "B", "solvedCount": 7206}, {"contestId": 137, "index": "A", "solvedCount": 4755}, {"contestId": 136, "index": "B", "solvedCount": 3284}, {"contestId": 136, "index": "A", "solvedCount": 40270}, {"contestId": 135, "index": "E", "solvedCount": 165}, {"contestId": 135, "index": "D", "solvedCount": 252}, {"contestId": 135, "index": "C", "solvedCount": 1073}, {"contestId": 135, "index": "B", "solvedCount": 1858}, {"contestId": 135, "index": "A", "solvedCount": 5117}, {"contestId": 134, "index": "C", "solvedCount": 342}, {"contestId": 134, "index": "B", "solvedCount": 1046}, {"contestId": 134, "index": "A", "solvedCount": 2093}, {"contestId": 133, "index": "B", "solvedCount": 5334}, {"contestId": 133, "index": "A", "solvedCount": 43984}, {"contestId": 132, "index": "E", "solvedCount": 319}, {"contestId": 132, "index": "D", "solvedCount": 497}, {"contestId": 132, "index": "C", "solvedCount": 1643}, {"contestId": 132, "index": "B", "solvedCount": 412}, {"contestId": 132, "index": "A", "solvedCount": 2369}, {"contestId": 131, "index": "F", "solvedCount": 474}, {"contestId": 131, "index": "E", "solvedCount": 1473}, {"contestId": 131, "index": "D", "solvedCount": 3264}, {"contestId": 131, "index": "C", "solvedCount": 6101}, {"contestId": 131, "index": "B", "solvedCount": 4979}, {"contestId": 131, "index": "A", "solvedCount": 40390}, {"contestId": 130, "index": "J", "solvedCount": 94}, {"contestId": 130, "index": "I", "solvedCount": 116}, {"contestId": 130, "index": "H", "solvedCount": 223}, {"contestId": 130, "index": "G", "solvedCount": 192}, {"contestId": 130, "index": "F", "solvedCount": 181}, {"contestId": 130, "index": "E", "solvedCount": 207}, {"contestId": 130, "index": "D", "solvedCount": 282}, {"contestId": 130, "index": "C", "solvedCount": 382}, {"contestId": 130, "index": "B", "solvedCount": 379}, {"contestId": 130, "index": "A", "solvedCount": 669}, {"contestId": 129, "index": "B", "solvedCount": 6057}, {"contestId": 129, "index": "A", "solvedCount": 10817}, {"contestId": 128, "index": "E", "solvedCount": 70}, {"contestId": 128, "index": "D", "solvedCount": 821}, {"contestId": 128, "index": "C", "solvedCount": 1651}, {"contestId": 128, "index": "B", "solvedCount": 1633}, {"contestId": 128, "index": "A", "solvedCount": 2350}, {"contestId": 127, "index": "B", "solvedCount": 4488}, {"contestId": 127, "index": "A", "solvedCount": 6449}, {"contestId": 126, "index": "E", "solvedCount": 52}, {"contestId": 126, "index": "D", "solvedCount": 585}, {"contestId": 126, "index": "C", "solvedCount": 556}, {"contestId": 126, "index": "B", "solvedCount": 8375}, {"contestId": 126, "index": "A", "solvedCount": 1129}, {"contestId": 125, "index": "E", "solvedCount": 528}, {"contestId": 125, "index": "D", "solvedCount": 267}, {"contestId": 125, "index": "C", "solvedCount": 642}, {"contestId": 125, "index": "B", "solvedCount": 1376}, {"contestId": 125, "index": "A", "solvedCount": 1816}, {"contestId": 124, "index": "B", "solvedCount": 2328}, {"contestId": 124, "index": "A", "solvedCount": 16422}, {"contestId": 123, "index": "E", "solvedCount": 340}, {"contestId": 123, "index": "D", "solvedCount": 655}, {"contestId": 123, "index": "C", "solvedCount": 444}, {"contestId": 123, "index": "B", "solvedCount": 811}, {"contestId": 123, "index": "A", "solvedCount": 2222}, {"contestId": 122, "index": "B", "solvedCount": 6650}, {"contestId": 122, "index": "A", "solvedCount": 49121}, {"contestId": 121, "index": "E", "solvedCount": 819}, {"contestId": 121, "index": "D", "solvedCount": 202}, {"contestId": 121, "index": "C", "solvedCount": 967}, {"contestId": 121, "index": "B", "solvedCount": 1914}, {"contestId": 121, "index": "A", "solvedCount": 4907}, {"contestId": 120, "index": "J", "solvedCount": 664}, {"contestId": 120, "index": "I", "solvedCount": 263}, {"contestId": 120, "index": "H", "solvedCount": 920}, {"contestId": 120, "index": "G", "solvedCount": 612}, {"contestId": 120, "index": "F", "solvedCount": 2271}, {"contestId": 120, "index": "E", "solvedCount": 1972}, {"contestId": 120, "index": "D", "solvedCount": 1551}, {"contestId": 120, "index": "C", "solvedCount": 2551}, {"contestId": 120, "index": "B", "solvedCount": 2347}, {"contestId": 120, "index": "A", "solvedCount": 3046}, {"contestId": 119, "index": "E", "solvedCount": 71}, {"contestId": 119, "index": "D", "solvedCount": 308}, {"contestId": 119, "index": "C", "solvedCount": 624}, {"contestId": 119, "index": "B", "solvedCount": 900}, {"contestId": 119, "index": "A", "solvedCount": 18845}, {"contestId": 118, "index": "E", "solvedCount": 1884}, {"contestId": 118, "index": "D", "solvedCount": 8904}, {"contestId": 118, "index": "C", "solvedCount": 1720}, {"contestId": 118, "index": "B", "solvedCount": 14160}, {"contestId": 118, "index": "A", "solvedCount": 77408}, {"contestId": 117, "index": "E", "solvedCount": 151}, {"contestId": 117, "index": "D", "solvedCount": 284}, {"contestId": 117, "index": "C", "solvedCount": 1707}, {"contestId": 117, "index": "B", "solvedCount": 1291}, {"contestId": 117, "index": "A", "solvedCount": 1698}, {"contestId": 116, "index": "B", "solvedCount": 7595}, {"contestId": 116, "index": "A", "solvedCount": 48467}, {"contestId": 115, "index": "E", "solvedCount": 550}, {"contestId": 115, "index": "D", "solvedCount": 219}, {"contestId": 115, "index": "C", "solvedCount": 498}, {"contestId": 115, "index": "B", "solvedCount": 1871}, {"contestId": 115, "index": "A", "solvedCount": 16879}, {"contestId": 114, "index": "B", "solvedCount": 2144}, {"contestId": 114, "index": "A", "solvedCount": 8282}, {"contestId": 113, "index": "E", "solvedCount": 84}, {"contestId": 113, "index": "D", "solvedCount": 334}, {"contestId": 113, "index": "C", "solvedCount": 846}, {"contestId": 113, "index": "B", "solvedCount": 1662}, {"contestId": 113, "index": "A", "solvedCount": 1649}, {"contestId": 112, "index": "B", "solvedCount": 2879}, {"contestId": 112, "index": "A", "solvedCount": 66867}, {"contestId": 111, "index": "E", "solvedCount": 44}, {"contestId": 111, "index": "D", "solvedCount": 414}, {"contestId": 111, "index": "C", "solvedCount": 901}, {"contestId": 111, "index": "B", "solvedCount": 2506}, {"contestId": 111, "index": "A", "solvedCount": 3340}, {"contestId": 110, "index": "B", "solvedCount": 5587}, {"contestId": 110, "index": "A", "solvedCount": 43778}, {"contestId": 109, "index": "E", "solvedCount": 62}, {"contestId": 109, "index": "D", "solvedCount": 485}, {"contestId": 109, "index": "C", "solvedCount": 1870}, {"contestId": 109, "index": "B", "solvedCount": 998}, {"contestId": 109, "index": "A", "solvedCount": 8949}, {"contestId": 108, "index": "B", "solvedCount": 1695}, {"contestId": 108, "index": "A", "solvedCount": 5399}, {"contestId": 107, "index": "E", "solvedCount": 94}, {"contestId": 107, "index": "D", "solvedCount": 280}, {"contestId": 107, "index": "C", "solvedCount": 259}, {"contestId": 107, "index": "B", "solvedCount": 2101}, {"contestId": 107, "index": "A", "solvedCount": 2924}, {"contestId": 106, "index": "E", "solvedCount": 531}, {"contestId": 106, "index": "D", "solvedCount": 998}, {"contestId": 106, "index": "C", "solvedCount": 3118}, {"contestId": 106, "index": "B", "solvedCount": 3431}, {"contestId": 106, "index": "A", "solvedCount": 4562}, {"contestId": 105, "index": "E", "solvedCount": 146}, {"contestId": 105, "index": "D", "solvedCount": 107}, {"contestId": 105, "index": "C", "solvedCount": 220}, {"contestId": 105, "index": "B", "solvedCount": 686}, {"contestId": 105, "index": "A", "solvedCount": 1479}, {"contestId": 104, "index": "A", "solvedCount": 7498}, {"contestId": 103, "index": "E", "solvedCount": 333}, {"contestId": 103, "index": "D", "solvedCount": 1158}, {"contestId": 103, "index": "C", "solvedCount": 733}, {"contestId": 103, "index": "B", "solvedCount": 5165}, {"contestId": 103, "index": "A", "solvedCount": 3852}, {"contestId": 102, "index": "B", "solvedCount": 9140}, {"contestId": 102, "index": "A", "solvedCount": 2081}, {"contestId": 101, "index": "E", "solvedCount": 286}, {"contestId": 101, "index": "D", "solvedCount": 368}, {"contestId": 101, "index": "C", "solvedCount": 486}, {"contestId": 101, "index": "B", "solvedCount": 1434}, {"contestId": 101, "index": "A", "solvedCount": 2513}, {"contestId": 100, "index": "J", "solvedCount": 39}, {"contestId": 100, "index": "I", "solvedCount": 182}, {"contestId": 100, "index": "H", "solvedCount": 54}, {"contestId": 100, "index": "G", "solvedCount": 77}, {"contestId": 100, "index": "F", "solvedCount": 107}, {"contestId": 100, "index": "E", "solvedCount": 131}, {"contestId": 100, "index": "D", "solvedCount": 242}, {"contestId": 100, "index": "C", "solvedCount": 340}, {"contestId": 100, "index": "B", "solvedCount": 209}, {"contestId": 100, "index": "A", "solvedCount": 439}, {"contestId": 99, "index": "B", "solvedCount": 1889}, {"contestId": 99, "index": "A", "solvedCount": 3723}, {"contestId": 98, "index": "E", "solvedCount": 170}, {"contestId": 98, "index": "D", "solvedCount": 145}, {"contestId": 98, "index": "C", "solvedCount": 232}, {"contestId": 98, "index": "B", "solvedCount": 68}, {"contestId": 98, "index": "A", "solvedCount": 973}, {"contestId": 97, "index": "E", "solvedCount": 170}, {"contestId": 97, "index": "D", "solvedCount": 139}, {"contestId": 97, "index": "C", "solvedCount": 233}, {"contestId": 97, "index": "B", "solvedCount": 502}, {"contestId": 97, "index": "A", "solvedCount": 186}, {"contestId": 96, "index": "B", "solvedCount": 6814}, {"contestId": 96, "index": "A", "solvedCount": 60119}, {"contestId": 95, "index": "E", "solvedCount": 711}, {"contestId": 95, "index": "D", "solvedCount": 250}, {"contestId": 95, "index": "C", "solvedCount": 1750}, {"contestId": 95, "index": "B", "solvedCount": 824}, {"contestId": 95, "index": "A", "solvedCount": 1300}, {"contestId": 94, "index": "B", "solvedCount": 2510}, {"contestId": 94, "index": "A", "solvedCount": 6237}, {"contestId": 93, "index": "E", "solvedCount": 289}, {"contestId": 93, "index": "D", "solvedCount": 256}, {"contestId": 93, "index": "C", "solvedCount": 250}, {"contestId": 93, "index": "B", "solvedCount": 704}, {"contestId": 93, "index": "A", "solvedCount": 1559}, {"contestId": 92, "index": "B", "solvedCount": 3077}, {"contestId": 92, "index": "A", "solvedCount": 10318}, {"contestId": 91, "index": "E", "solvedCount": 438}, {"contestId": 91, "index": "D", "solvedCount": 211}, {"contestId": 91, "index": "C", "solvedCount": 643}, {"contestId": 91, "index": "B", "solvedCount": 3593}, {"contestId": 91, "index": "A", "solvedCount": 2287}, {"contestId": 90, "index": "B", "solvedCount": 3124}, {"contestId": 90, "index": "A", "solvedCount": 2827}, {"contestId": 89, "index": "E", "solvedCount": 52}, {"contestId": 89, "index": "D", "solvedCount": 193}, {"contestId": 89, "index": "C", "solvedCount": 468}, {"contestId": 89, "index": "B", "solvedCount": 459}, {"contestId": 89, "index": "A", "solvedCount": 1169}, {"contestId": 88, "index": "B", "solvedCount": 1768}, {"contestId": 88, "index": "A", "solvedCount": 2543}, {"contestId": 87, "index": "E", "solvedCount": 148}, {"contestId": 87, "index": "D", "solvedCount": 567}, {"contestId": 87, "index": "C", "solvedCount": 1029}, {"contestId": 87, "index": "B", "solvedCount": 916}, {"contestId": 87, "index": "A", "solvedCount": 2947}, {"contestId": 86, "index": "E", "solvedCount": 143}, {"contestId": 86, "index": "D", "solvedCount": 6030}, {"contestId": 86, "index": "C", "solvedCount": 413}, {"contestId": 86, "index": "B", "solvedCount": 285}, {"contestId": 86, "index": "A", "solvedCount": 845}, {"contestId": 85, "index": "E", "solvedCount": 484}, {"contestId": 85, "index": "D", "solvedCount": 1192}, {"contestId": 85, "index": "C", "solvedCount": 458}, {"contestId": 85, "index": "B", "solvedCount": 835}, {"contestId": 85, "index": "A", "solvedCount": 1393}, {"contestId": 84, "index": "C", "solvedCount": 1013}, {"contestId": 84, "index": "A", "solvedCount": 8640}, {"contestId": 83, "index": "E", "solvedCount": 264}, {"contestId": 83, "index": "D", "solvedCount": 530}, {"contestId": 83, "index": "C", "solvedCount": 332}, {"contestId": 83, "index": "B", "solvedCount": 1263}, {"contestId": 83, "index": "A", "solvedCount": 3632}, {"contestId": 82, "index": "E", "solvedCount": 184}, {"contestId": 82, "index": "D", "solvedCount": 1167}, {"contestId": 82, "index": "C", "solvedCount": 698}, {"contestId": 82, "index": "B", "solvedCount": 1525}, {"contestId": 82, "index": "A", "solvedCount": 20594}, {"contestId": 81, "index": "E", "solvedCount": 188}, {"contestId": 81, "index": "D", "solvedCount": 536}, {"contestId": 81, "index": "C", "solvedCount": 1278}, {"contestId": 81, "index": "B", "solvedCount": 1579}, {"contestId": 81, "index": "A", "solvedCount": 5130}, {"contestId": 80, "index": "B", "solvedCount": 2857}, {"contestId": 80, "index": "A", "solvedCount": 15042}, {"contestId": 79, "index": "E", "solvedCount": 61}, {"contestId": 79, "index": "D", "solvedCount": 470}, {"contestId": 79, "index": "C", "solvedCount": 1214}, {"contestId": 79, "index": "B", "solvedCount": 2979}, {"contestId": 79, "index": "A", "solvedCount": 2709}, {"contestId": 78, "index": "E", "solvedCount": 331}, {"contestId": 78, "index": "D", "solvedCount": 214}, {"contestId": 78, "index": "C", "solvedCount": 1198}, {"contestId": 78, "index": "B", "solvedCount": 5126}, {"contestId": 78, "index": "A", "solvedCount": 5452}, {"contestId": 77, "index": "E", "solvedCount": 222}, {"contestId": 77, "index": "D", "solvedCount": 229}, {"contestId": 77, "index": "C", "solvedCount": 688}, {"contestId": 77, "index": "B", "solvedCount": 1844}, {"contestId": 77, "index": "A", "solvedCount": 1397}, {"contestId": 76, "index": "F", "solvedCount": 399}, {"contestId": 76, "index": "E", "solvedCount": 1171}, {"contestId": 76, "index": "D", "solvedCount": 1228}, {"contestId": 76, "index": "C", "solvedCount": 124}, {"contestId": 76, "index": "B", "solvedCount": 299}, {"contestId": 76, "index": "A", "solvedCount": 662}, {"contestId": 75, "index": "E", "solvedCount": 213}, {"contestId": 75, "index": "D", "solvedCount": 1036}, {"contestId": 75, "index": "C", "solvedCount": 5325}, {"contestId": 75, "index": "B", "solvedCount": 1839}, {"contestId": 75, "index": "A", "solvedCount": 11368}, {"contestId": 74, "index": "E", "solvedCount": 95}, {"contestId": 74, "index": "D", "solvedCount": 294}, {"contestId": 74, "index": "C", "solvedCount": 671}, {"contestId": 74, "index": "B", "solvedCount": 1133}, {"contestId": 74, "index": "A", "solvedCount": 3249}, {"contestId": 73, "index": "F", "solvedCount": 51}, {"contestId": 73, "index": "E", "solvedCount": 236}, {"contestId": 73, "index": "D", "solvedCount": 405}, {"contestId": 73, "index": "C", "solvedCount": 1213}, {"contestId": 73, "index": "B", "solvedCount": 385}, {"contestId": 73, "index": "A", "solvedCount": 1016}, {"contestId": 72, "index": "I", "solvedCount": 256}, {"contestId": 72, "index": "H", "solvedCount": 200}, {"contestId": 72, "index": "G", "solvedCount": 622}, {"contestId": 72, "index": "F", "solvedCount": 81}, {"contestId": 72, "index": "E", "solvedCount": 118}, {"contestId": 72, "index": "D", "solvedCount": 50}, {"contestId": 72, "index": "C", "solvedCount": 323}, {"contestId": 72, "index": "B", "solvedCount": 47}, {"contestId": 72, "index": "A", "solvedCount": 127}, {"contestId": 71, "index": "E", "solvedCount": 343}, {"contestId": 71, "index": "D", "solvedCount": 384}, {"contestId": 71, "index": "C", "solvedCount": 3498}, {"contestId": 71, "index": "B", "solvedCount": 2913}, {"contestId": 71, "index": "A", "solvedCount": 106692}, {"contestId": 70, "index": "E", "solvedCount": 267}, {"contestId": 70, "index": "D", "solvedCount": 479}, {"contestId": 70, "index": "C", "solvedCount": 436}, {"contestId": 70, "index": "B", "solvedCount": 1332}, {"contestId": 70, "index": "A", "solvedCount": 2497}, {"contestId": 69, "index": "E", "solvedCount": 2373}, {"contestId": 69, "index": "D", "solvedCount": 592}, {"contestId": 69, "index": "C", "solvedCount": 469}, {"contestId": 69, "index": "B", "solvedCount": 2047}, {"contestId": 69, "index": "A", "solvedCount": 52992}, {"contestId": 68, "index": "E", "solvedCount": 44}, {"contestId": 68, "index": "D", "solvedCount": 283}, {"contestId": 68, "index": "C", "solvedCount": 264}, {"contestId": 68, "index": "B", "solvedCount": 2023}, {"contestId": 68, "index": "A", "solvedCount": 3144}, {"contestId": 67, "index": "E", "solvedCount": 229}, {"contestId": 67, "index": "D", "solvedCount": 918}, {"contestId": 67, "index": "C", "solvedCount": 319}, {"contestId": 67, "index": "B", "solvedCount": 605}, {"contestId": 67, "index": "A", "solvedCount": 1389}, {"contestId": 66, "index": "E", "solvedCount": 478}, {"contestId": 66, "index": "D", "solvedCount": 1854}, {"contestId": 66, "index": "C", "solvedCount": 787}, {"contestId": 66, "index": "B", "solvedCount": 7975}, {"contestId": 66, "index": "A", "solvedCount": 4223}, {"contestId": 65, "index": "E", "solvedCount": 51}, {"contestId": 65, "index": "D", "solvedCount": 351}, {"contestId": 65, "index": "C", "solvedCount": 670}, {"contestId": 65, "index": "B", "solvedCount": 1050}, {"contestId": 65, "index": "A", "solvedCount": 1344}, {"contestId": 64, "index": "I", "solvedCount": 61}, {"contestId": 64, "index": "H", "solvedCount": 79}, {"contestId": 64, "index": "G", "solvedCount": 91}, {"contestId": 64, "index": "F", "solvedCount": 138}, {"contestId": 64, "index": "E", "solvedCount": 178}, {"contestId": 64, "index": "D", "solvedCount": 223}, {"contestId": 64, "index": "C", "solvedCount": 249}, {"contestId": 64, "index": "B", "solvedCount": 370}, {"contestId": 64, "index": "A", "solvedCount": 574}, {"contestId": 63, "index": "E", "solvedCount": 402}, {"contestId": 63, "index": "D", "solvedCount": 713}, {"contestId": 63, "index": "C", "solvedCount": 1093}, {"contestId": 63, "index": "B", "solvedCount": 2778}, {"contestId": 63, "index": "A", "solvedCount": 6330}, {"contestId": 62, "index": "E", "solvedCount": 135}, {"contestId": 62, "index": "D", "solvedCount": 266}, {"contestId": 62, "index": "C", "solvedCount": 211}, {"contestId": 62, "index": "B", "solvedCount": 1003}, {"contestId": 62, "index": "A", "solvedCount": 2385}, {"contestId": 61, "index": "E", "solvedCount": 4386}, {"contestId": 61, "index": "D", "solvedCount": 3154}, {"contestId": 61, "index": "C", "solvedCount": 534}, {"contestId": 61, "index": "B", "solvedCount": 2572}, {"contestId": 61, "index": "A", "solvedCount": 34843}, {"contestId": 60, "index": "E", "solvedCount": 219}, {"contestId": 60, "index": "D", "solvedCount": 230}, {"contestId": 60, "index": "C", "solvedCount": 420}, {"contestId": 60, "index": "B", "solvedCount": 2827}, {"contestId": 60, "index": "A", "solvedCount": 2390}, {"contestId": 59, "index": "E", "solvedCount": 1096}, {"contestId": 59, "index": "D", "solvedCount": 419}, {"contestId": 59, "index": "C", "solvedCount": 1306}, {"contestId": 59, "index": "B", "solvedCount": 3672}, {"contestId": 59, "index": "A", "solvedCount": 42796}, {"contestId": 58, "index": "E", "solvedCount": 178}, {"contestId": 58, "index": "D", "solvedCount": 488}, {"contestId": 58, "index": "C", "solvedCount": 1279}, {"contestId": 58, "index": "B", "solvedCount": 6337}, {"contestId": 58, "index": "A", "solvedCount": 49046}, {"contestId": 57, "index": "E", "solvedCount": 136}, {"contestId": 57, "index": "D", "solvedCount": 246}, {"contestId": 57, "index": "C", "solvedCount": 1227}, {"contestId": 57, "index": "B", "solvedCount": 810}, {"contestId": 57, "index": "A", "solvedCount": 1930}, {"contestId": 56, "index": "E", "solvedCount": 1089}, {"contestId": 56, "index": "D", "solvedCount": 771}, {"contestId": 56, "index": "C", "solvedCount": 809}, {"contestId": 56, "index": "B", "solvedCount": 2118}, {"contestId": 56, "index": "A", "solvedCount": 4374}, {"contestId": 55, "index": "E", "solvedCount": 392}, {"contestId": 55, "index": "D", "solvedCount": 1622}, {"contestId": 55, "index": "C", "solvedCount": 1026}, {"contestId": 55, "index": "B", "solvedCount": 1402}, {"contestId": 55, "index": "A", "solvedCount": 2097}, {"contestId": 54, "index": "E", "solvedCount": 131}, {"contestId": 54, "index": "D", "solvedCount": 309}, {"contestId": 54, "index": "C", "solvedCount": 699}, {"contestId": 54, "index": "B", "solvedCount": 557}, {"contestId": 54, "index": "A", "solvedCount": 1420}, {"contestId": 53, "index": "E", "solvedCount": 517}, {"contestId": 53, "index": "D", "solvedCount": 1114}, {"contestId": 53, "index": "C", "solvedCount": 3568}, {"contestId": 53, "index": "B", "solvedCount": 831}, {"contestId": 53, "index": "A", "solvedCount": 2761}, {"contestId": 52, "index": "C", "solvedCount": 3677}, {"contestId": 52, "index": "B", "solvedCount": 1153}, {"contestId": 52, "index": "A", "solvedCount": 3143}, {"contestId": 51, "index": "F", "solvedCount": 269}, {"contestId": 51, "index": "E", "solvedCount": 239}, {"contestId": 51, "index": "D", "solvedCount": 317}, {"contestId": 51, "index": "C", "solvedCount": 940}, {"contestId": 51, "index": "B", "solvedCount": 697}, {"contestId": 51, "index": "A", "solvedCount": 1318}, {"contestId": 50, "index": "E", "solvedCount": 258}, {"contestId": 50, "index": "D", "solvedCount": 442}, {"contestId": 50, "index": "C", "solvedCount": 541}, {"contestId": 50, "index": "B", "solvedCount": 3491}, {"contestId": 50, "index": "A", "solvedCount": 71623}, {"contestId": 49, "index": "E", "solvedCount": 400}, {"contestId": 49, "index": "D", "solvedCount": 1201}, {"contestId": 49, "index": "C", "solvedCount": 1050}, {"contestId": 49, "index": "B", "solvedCount": 1608}, {"contestId": 49, "index": "A", "solvedCount": 6437}, {"contestId": 48, "index": "H", "solvedCount": 79}, {"contestId": 48, "index": "G", "solvedCount": 117}, {"contestId": 48, "index": "F", "solvedCount": 69}, {"contestId": 48, "index": "E", "solvedCount": 351}, {"contestId": 48, "index": "D", "solvedCount": 1405}, {"contestId": 48, "index": "C", "solvedCount": 558}, {"contestId": 48, "index": "B", "solvedCount": 1457}, {"contestId": 48, "index": "A", "solvedCount": 3058}, {"contestId": 47, "index": "E", "solvedCount": 252}, {"contestId": 47, "index": "D", "solvedCount": 451}, {"contestId": 47, "index": "C", "solvedCount": 443}, {"contestId": 47, "index": "B", "solvedCount": 4580}, {"contestId": 47, "index": "A", "solvedCount": 7103}, {"contestId": 46, "index": "G", "solvedCount": 63}, {"contestId": 46, "index": "F", "solvedCount": 237}, {"contestId": 46, "index": "E", "solvedCount": 632}, {"contestId": 46, "index": "D", "solvedCount": 765}, {"contestId": 46, "index": "C", "solvedCount": 1468}, {"contestId": 46, "index": "B", "solvedCount": 2065}, {"contestId": 46, "index": "A", "solvedCount": 4865}, {"contestId": 45, "index": "J", "solvedCount": 565}, {"contestId": 45, "index": "I", "solvedCount": 1078}, {"contestId": 45, "index": "H", "solvedCount": 103}, {"contestId": 45, "index": "G", "solvedCount": 458}, {"contestId": 45, "index": "F", "solvedCount": 68}, {"contestId": 45, "index": "E", "solvedCount": 390}, {"contestId": 45, "index": "D", "solvedCount": 935}, {"contestId": 45, "index": "C", "solvedCount": 561}, {"contestId": 45, "index": "B", "solvedCount": 165}, {"contestId": 45, "index": "A", "solvedCount": 2415}, {"contestId": 44, "index": "J", "solvedCount": 414}, {"contestId": 44, "index": "I", "solvedCount": 139}, {"contestId": 44, "index": "H", "solvedCount": 933}, {"contestId": 44, "index": "G", "solvedCount": 121}, {"contestId": 44, "index": "F", "solvedCount": 43}, {"contestId": 44, "index": "E", "solvedCount": 2262}, {"contestId": 44, "index": "D", "solvedCount": 525}, {"contestId": 44, "index": "C", "solvedCount": 1447}, {"contestId": 44, "index": "B", "solvedCount": 1188}, {"contestId": 44, "index": "A", "solvedCount": 2937}, {"contestId": 43, "index": "E", "solvedCount": 271}, {"contestId": 43, "index": "D", "solvedCount": 830}, {"contestId": 43, "index": "C", "solvedCount": 2828}, {"contestId": 43, "index": "B", "solvedCount": 5851}, {"contestId": 43, "index": "A", "solvedCount": 16390}, {"contestId": 42, "index": "E", "solvedCount": 142}, {"contestId": 42, "index": "D", "solvedCount": 284}, {"contestId": 42, "index": "C", "solvedCount": 346}, {"contestId": 42, "index": "B", "solvedCount": 685}, {"contestId": 42, "index": "A", "solvedCount": 1844}, {"contestId": 41, "index": "E", "solvedCount": 1215}, {"contestId": 41, "index": "D", "solvedCount": 1017}, {"contestId": 41, "index": "C", "solvedCount": 2294}, {"contestId": 41, "index": "B", "solvedCount": 2139}, {"contestId": 41, "index": "A", "solvedCount": 42682}, {"contestId": 40, "index": "E", "solvedCount": 350}, {"contestId": 40, "index": "D", "solvedCount": 86}, {"contestId": 40, "index": "C", "solvedCount": 188}, {"contestId": 40, "index": "B", "solvedCount": 765}, {"contestId": 40, "index": "A", "solvedCount": 1933}, {"contestId": 39, "index": "K", "solvedCount": 52}, {"contestId": 39, "index": "J", "solvedCount": 1467}, {"contestId": 39, "index": "I", "solvedCount": 85}, {"contestId": 39, "index": "H", "solvedCount": 1432}, {"contestId": 39, "index": "G", "solvedCount": 82}, {"contestId": 39, "index": "F", "solvedCount": 951}, {"contestId": 39, "index": "E", "solvedCount": 603}, {"contestId": 39, "index": "D", "solvedCount": 2010}, {"contestId": 39, "index": "C", "solvedCount": 377}, {"contestId": 39, "index": "B", "solvedCount": 1557}, {"contestId": 39, "index": "A", "solvedCount": 505}, {"contestId": 38, "index": "H", "solvedCount": 150}, {"contestId": 38, "index": "G", "solvedCount": 423}, {"contestId": 38, "index": "F", "solvedCount": 261}, {"contestId": 38, "index": "E", "solvedCount": 1372}, {"contestId": 38, "index": "D", "solvedCount": 373}, {"contestId": 38, "index": "C", "solvedCount": 1457}, {"contestId": 38, "index": "B", "solvedCount": 2210}, {"contestId": 38, "index": "A", "solvedCount": 10981}, {"contestId": 37, "index": "E", "solvedCount": 349}, {"contestId": 37, "index": "D", "solvedCount": 285}, {"contestId": 37, "index": "C", "solvedCount": 838}, {"contestId": 37, "index": "B", "solvedCount": 692}, {"contestId": 37, "index": "A", "solvedCount": 13680}, {"contestId": 36, "index": "E", "solvedCount": 246}, {"contestId": 36, "index": "D", "solvedCount": 393}, {"contestId": 36, "index": "C", "solvedCount": 215}, {"contestId": 36, "index": "B", "solvedCount": 969}, {"contestId": 36, "index": "A", "solvedCount": 1781}, {"contestId": 35, "index": "E", "solvedCount": 502}, {"contestId": 35, "index": "D", "solvedCount": 1743}, {"contestId": 35, "index": "C", "solvedCount": 3074}, {"contestId": 35, "index": "B", "solvedCount": 777}, {"contestId": 35, "index": "A", "solvedCount": 3514}, {"contestId": 34, "index": "E", "solvedCount": 450}, {"contestId": 34, "index": "D", "solvedCount": 2748}, {"contestId": 34, "index": "C", "solvedCount": 2623}, {"contestId": 34, "index": "B", "solvedCount": 16437}, {"contestId": 34, "index": "A", "solvedCount": 10085}, {"contestId": 33, "index": "E", "solvedCount": 87}, {"contestId": 33, "index": "D", "solvedCount": 662}, {"contestId": 33, "index": "C", "solvedCount": 1615}, {"contestId": 33, "index": "B", "solvedCount": 1663}, {"contestId": 33, "index": "A", "solvedCount": 2331}, {"contestId": 32, "index": "E", "solvedCount": 242}, {"contestId": 32, "index": "D", "solvedCount": 825}, {"contestId": 32, "index": "C", "solvedCount": 1183}, {"contestId": 32, "index": "B", "solvedCount": 14503}, {"contestId": 32, "index": "A", "solvedCount": 5029}, {"contestId": 31, "index": "E", "solvedCount": 679}, {"contestId": 31, "index": "D", "solvedCount": 626}, {"contestId": 31, "index": "C", "solvedCount": 1162}, {"contestId": 31, "index": "B", "solvedCount": 2350}, {"contestId": 31, "index": "A", "solvedCount": 4901}, {"contestId": 30, "index": "E", "solvedCount": 376}, {"contestId": 30, "index": "D", "solvedCount": 301}, {"contestId": 30, "index": "C", "solvedCount": 1182}, {"contestId": 30, "index": "B", "solvedCount": 806}, {"contestId": 30, "index": "A", "solvedCount": 1972}, {"contestId": 29, "index": "E", "solvedCount": 459}, {"contestId": 29, "index": "D", "solvedCount": 1236}, {"contestId": 29, "index": "C", "solvedCount": 2343}, {"contestId": 29, "index": "B", "solvedCount": 1634}, {"contestId": 29, "index": "A", "solvedCount": 3750}, {"contestId": 28, "index": "E", "solvedCount": 52}, {"contestId": 28, "index": "D", "solvedCount": 372}, {"contestId": 28, "index": "C", "solvedCount": 566}, {"contestId": 28, "index": "B", "solvedCount": 2215}, {"contestId": 28, "index": "A", "solvedCount": 575}, {"contestId": 27, "index": "E", "solvedCount": 1975}, {"contestId": 27, "index": "D", "solvedCount": 1386}, {"contestId": 27, "index": "C", "solvedCount": 1736}, {"contestId": 27, "index": "B", "solvedCount": 2604}, {"contestId": 27, "index": "A", "solvedCount": 8654}, {"contestId": 26, "index": "E", "solvedCount": 280}, {"contestId": 26, "index": "D", "solvedCount": 442}, {"contestId": 26, "index": "C", "solvedCount": 519}, {"contestId": 26, "index": "B", "solvedCount": 6044}, {"contestId": 26, "index": "A", "solvedCount": 10174}, {"contestId": 25, "index": "E", "solvedCount": 1152}, {"contestId": 25, "index": "D", "solvedCount": 4166}, {"contestId": 25, "index": "C", "solvedCount": 3023}, {"contestId": 25, "index": "B", "solvedCount": 4909}, {"contestId": 25, "index": "A", "solvedCount": 32082}, {"contestId": 24, "index": "E", "solvedCount": 558}, {"contestId": 24, "index": "D", "solvedCount": 636}, {"contestId": 24, "index": "C", "solvedCount": 896}, {"contestId": 24, "index": "B", "solvedCount": 1130}, {"contestId": 24, "index": "A", "solvedCount": 2744}, {"contestId": 23, "index": "E", "solvedCount": 390}, {"contestId": 23, "index": "D", "solvedCount": 258}, {"contestId": 23, "index": "C", "solvedCount": 699}, {"contestId": 23, "index": "B", "solvedCount": 1625}, {"contestId": 23, "index": "A", "solvedCount": 2650}, {"contestId": 22, "index": "E", "solvedCount": 675}, {"contestId": 22, "index": "D", "solvedCount": 1354}, {"contestId": 22, "index": "C", "solvedCount": 1643}, {"contestId": 22, "index": "B", "solvedCount": 2530}, {"contestId": 22, "index": "A", "solvedCount": 7666}, {"contestId": 21, "index": "D", "solvedCount": 422}, {"contestId": 21, "index": "C", "solvedCount": 1197}, {"contestId": 21, "index": "B", "solvedCount": 889}, {"contestId": 21, "index": "A", "solvedCount": 1022}, {"contestId": 20, "index": "C", "solvedCount": 11485}, {"contestId": 20, "index": "B", "solvedCount": 1903}, {"contestId": 20, "index": "A", "solvedCount": 3174}, {"contestId": 19, "index": "E", "solvedCount": 737}, {"contestId": 19, "index": "D", "solvedCount": 962}, {"contestId": 19, "index": "C", "solvedCount": 647}, {"contestId": 19, "index": "B", "solvedCount": 1879}, {"contestId": 19, "index": "A", "solvedCount": 1637}, {"contestId": 18, "index": "E", "solvedCount": 584}, {"contestId": 18, "index": "D", "solvedCount": 741}, {"contestId": 18, "index": "C", "solvedCount": 6172}, {"contestId": 18, "index": "B", "solvedCount": 1346}, {"contestId": 18, "index": "A", "solvedCount": 3340}, {"contestId": 17, "index": "E", "solvedCount": 700}, {"contestId": 17, "index": "D", "solvedCount": 553}, {"contestId": 17, "index": "C", "solvedCount": 530}, {"contestId": 17, "index": "B", "solvedCount": 2155}, {"contestId": 17, "index": "A", "solvedCount": 6253}, {"contestId": 16, "index": "E", "solvedCount": 1705}, {"contestId": 16, "index": "D", "solvedCount": 1030}, {"contestId": 16, "index": "C", "solvedCount": 2658}, {"contestId": 16, "index": "B", "solvedCount": 6512}, {"contestId": 16, "index": "A", "solvedCount": 6593}, {"contestId": 15, "index": "E", "solvedCount": 342}, {"contestId": 15, "index": "D", "solvedCount": 402}, {"contestId": 15, "index": "C", "solvedCount": 1406}, {"contestId": 15, "index": "B", "solvedCount": 858}, {"contestId": 15, "index": "A", "solvedCount": 2081}, {"contestId": 14, "index": "E", "solvedCount": 754}, {"contestId": 14, "index": "D", "solvedCount": 2444}, {"contestId": 14, "index": "C", "solvedCount": 1974}, {"contestId": 14, "index": "B", "solvedCount": 3200}, {"contestId": 14, "index": "A", "solvedCount": 5168}, {"contestId": 13, "index": "E", "solvedCount": 1954}, {"contestId": 13, "index": "D", "solvedCount": 418}, {"contestId": 13, "index": "C", "solvedCount": 1704}, {"contestId": 13, "index": "B", "solvedCount": 576}, {"contestId": 13, "index": "A", "solvedCount": 4102}, {"contestId": 12, "index": "E", "solvedCount": 615}, {"contestId": 12, "index": "D", "solvedCount": 1104}, {"contestId": 12, "index": "C", "solvedCount": 3074}, {"contestId": 12, "index": "B", "solvedCount": 4371}, {"contestId": 12, "index": "A", "solvedCount": 5255}, {"contestId": 11, "index": "E", "solvedCount": 144}, {"contestId": 11, "index": "D", "solvedCount": 2005}, {"contestId": 11, "index": "C", "solvedCount": 409}, {"contestId": 11, "index": "B", "solvedCount": 2317}, {"contestId": 11, "index": "A", "solvedCount": 5462}, {"contestId": 10, "index": "E", "solvedCount": 388}, {"contestId": 10, "index": "D", "solvedCount": 1709}, {"contestId": 10, "index": "C", "solvedCount": 919}, {"contestId": 10, "index": "B", "solvedCount": 1141}, {"contestId": 10, "index": "A", "solvedCount": 2957}, {"contestId": 9, "index": "E", "solvedCount": 480}, {"contestId": 9, "index": "D", "solvedCount": 1792}, {"contestId": 9, "index": "C", "solvedCount": 7049}, {"contestId": 9, "index": "B", "solvedCount": 2834}, {"contestId": 9, "index": "A", "solvedCount": 17692}, {"contestId": 8, "index": "E", "solvedCount": 417}, {"contestId": 8, "index": "D", "solvedCount": 385}, {"contestId": 8, "index": "C", "solvedCount": 1792}, {"contestId": 8, "index": "B", "solvedCount": 2267}, {"contestId": 8, "index": "A", "solvedCount": 3259}, {"contestId": 7, "index": "E", "solvedCount": 438}, {"contestId": 7, "index": "D", "solvedCount": 2000}, {"contestId": 7, "index": "C", "solvedCount": 2288}, {"contestId": 7, "index": "B", "solvedCount": 1594}, {"contestId": 7, "index": "A", "solvedCount": 4190}, {"contestId": 6, "index": "E", "solvedCount": 1847}, {"contestId": 6, "index": "D", "solvedCount": 1124}, {"contestId": 6, "index": "C", "solvedCount": 6258}, {"contestId": 6, "index": "B", "solvedCount": 5443}, {"contestId": 6, "index": "A", "solvedCount": 9775}, {"contestId": 5, "index": "E", "solvedCount": 1001}, {"contestId": 5, "index": "D", "solvedCount": 953}, {"contestId": 5, "index": "C", "solvedCount": 5628}, {"contestId": 5, "index": "B", "solvedCount": 3351}, {"contestId": 5, "index": "A", "solvedCount": 5487}, {"contestId": 4, "index": "D", "solvedCount": 5498}, {"contestId": 4, "index": "C", "solvedCount": 27946}, {"contestId": 4, "index": "B", "solvedCount": 11375}, {"contestId": 4, "index": "A", "solvedCount": 148528}, {"contestId": 3, "index": "D", "solvedCount": 1777}, {"contestId": 3, "index": "C", "solvedCount": 4218}, {"contestId": 3, "index": "B", "solvedCount": 2551}, {"contestId": 3, "index": "A", "solvedCount": 10866}, {"contestId": 2, "index": "C", "solvedCount": 998}, {"contestId": 2, "index": "B", "solvedCount": 5494}, {"contestId": 2, "index": "A", "solvedCount": 11694}, {"contestId": 1, "index": "C", "solvedCount": 3575}, {"contestId": 1, "index": "B", "solvedCount": 12901}, {"contestId": 1, "index": "A", "solvedCount": 113424}]}}